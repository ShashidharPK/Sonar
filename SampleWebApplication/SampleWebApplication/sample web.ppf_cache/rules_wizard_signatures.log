<?xml version="1.0" encoding="UTF-8"?>
<api_info>
	<package name="System">
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Attribute&gt;" uniqueID="System.Comparison&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Attribute;System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Attribute&gt;.BeginInvoke(System.Attribute;System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Attribute&gt;" uniqueID="Comparison&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Attribute&gt;.Comparison&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Attribute&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Attribute;System.Attribute):System.Int32">
				<signature>System.Comparison&lt;System.Attribute&gt;.Invoke(System.Attribute;System.Attribute):System.Int32</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Comparison&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.SqlClient.SqlParameter;System.Data.SqlClient.SqlParameter;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Data.SqlClient.SqlParameter&gt;.BeginInvoke(System.Data.SqlClient.SqlParameter;System.Data.SqlClient.SqlParameter;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="Comparison&lt;System.Data.SqlClient.SqlParameter&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Data.SqlClient.SqlParameter&gt;.Comparison&lt;System.Data.SqlClient.SqlParameter&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Data.SqlClient.SqlParameter&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.SqlClient.SqlParameter;System.Data.SqlClient.SqlParameter):System.Int32">
				<signature>System.Comparison&lt;System.Data.SqlClient.SqlParameter&gt;.Invoke(System.Data.SqlClient.SqlParameter;System.Data.SqlClient.SqlParameter):System.Int32</signature>
			</method>
		</class>
		<class name="IFormattable" uniqueID="System.IFormattable">
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.IFormattable.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;,System.Object&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;,System.Object&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;,System.Object&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;,System.Object&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.IAsyncResult,System.Xml.XmlReader&gt;" uniqueID="System.Func&lt;System.IAsyncResult,System.Xml.XmlReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.IAsyncResult,System.Xml.XmlReader&gt;.BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Xml.XmlReader">
				<signature>System.Func&lt;System.IAsyncResult,System.Xml.XmlReader&gt;.EndInvoke(System.IAsyncResult):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.IAsyncResult,System.Xml.XmlReader&gt;" uniqueID="Func&lt;System.IAsyncResult,System.Xml.XmlReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.IAsyncResult,System.Xml.XmlReader&gt;.Func&lt;System.IAsyncResult,System.Xml.XmlReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IAsyncResult):System.Xml.XmlReader">
				<signature>System.Func&lt;System.IAsyncResult,System.Xml.XmlReader&gt;.Invoke(System.IAsyncResult):System.Xml.XmlReader</signature>
			</method>
		</class>
		<class name="Action&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Action&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="Action&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Web.UI.ScriptManagerProxy&gt;.Action&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.UI.ScriptManagerProxy;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Web.UI.ScriptManagerProxy&gt;.BeginInvoke(System.Web.UI.ScriptManagerProxy;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Web.UI.ScriptManagerProxy&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Action&lt;System.Web.UI.ScriptManagerProxy&gt;.Invoke(System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
		</class>
		<class name="MulticastDelegate" uniqueID="System.MulticastDelegate">
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean">
				<signature>System.MulticastDelegate.op_Equality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean">
				<signature>System.MulticastDelegate.op_Inequality(System.MulticastDelegate;System.MulticastDelegate):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CombineImpl" uniqueID="CombineImpl(System.Delegate):System.Delegate">
				<signature>System.MulticastDelegate.CombineImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorClosed" uniqueID="CtorClosed(System.Object;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorClosed(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorClosedStatic" uniqueID="CtorClosedStatic(System.Object;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorClosedStatic(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCollectibleClosedStatic" uniqueID="CtorCollectibleClosedStatic(System.Object;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorCollectibleClosedStatic(System.Object;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCollectibleOpened" uniqueID="CtorCollectibleOpened(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorCollectibleOpened(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCollectibleVirtualDispatch" uniqueID="CtorCollectibleVirtualDispatch(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorCollectibleVirtualDispatch(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorOpened" uniqueID="CtorOpened(System.Object;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorOpened(System.Object;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorRTClosed" uniqueID="CtorRTClosed(System.Object;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorRTClosed(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureClosed" uniqueID="CtorSecureClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureClosedStatic" uniqueID="CtorSecureClosedStatic(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureClosedStatic(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureOpened" uniqueID="CtorSecureOpened(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureOpened(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureRTClosed" uniqueID="CtorSecureRTClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureRTClosed(System.Object;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorSecureVirtualDispatch" uniqueID="CtorSecureVirtualDispatch(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorSecureVirtualDispatch(System.Object;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorVirtualDispatch" uniqueID="CtorVirtualDispatch(System.Object;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.MulticastDelegate.CtorVirtualDispatch(System.Object;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DeleteFromInvocationList" uniqueID="DeleteFromInvocationList(System.Object[];System.Int32;System.Int32;System.Int32):System.Object[]">
				<signature>System.MulticastDelegate.DeleteFromInvocationList(System.Object[];System.Int32;System.Int32;System.Int32):System.Object[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EqualInvocationLists" uniqueID="EqualInvocationLists(System.Object[];System.Object[];System.Int32;System.Int32):System.Boolean">
				<signature>System.MulticastDelegate.EqualInvocationLists(System.Object[];System.Object[];System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.MulticastDelegate.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.MulticastDelegate.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInvocationList" uniqueID="GetInvocationList():System.Delegate[]">
				<signature>System.MulticastDelegate.GetInvocationList():System.Delegate[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMethodImpl" uniqueID="GetMethodImpl():System.Reflection.MethodInfo">
				<signature>System.MulticastDelegate.GetMethodImpl():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.MulticastDelegate.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTarget" uniqueID="GetTarget():System.Object">
				<signature>System.MulticastDelegate.GetTarget():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InvocationListEquals" uniqueID="InvocationListEquals(System.MulticastDelegate):System.Boolean">
				<signature>System.MulticastDelegate.InvocationListEquals(System.MulticastDelegate):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InvocationListLogicallyNull" uniqueID="InvocationListLogicallyNull():System.Boolean">
				<signature>System.MulticastDelegate.InvocationListLogicallyNull():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsUnmanagedFunctionPtr" uniqueID="IsUnmanagedFunctionPtr():System.Boolean">
				<signature>System.MulticastDelegate.IsUnmanagedFunctionPtr():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MulticastDelegate" uniqueID="MulticastDelegate(System.Object;System.String):System.Void">
				<signature>System.MulticastDelegate.MulticastDelegate(System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MulticastDelegate" uniqueID="MulticastDelegate(System.Type;System.String):System.Void">
				<signature>System.MulticastDelegate.MulticastDelegate(System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NewMulticastDelegate" uniqueID="NewMulticastDelegate(System.Object[];System.Int32):System.MulticastDelegate">
				<signature>System.MulticastDelegate.NewMulticastDelegate(System.Object[];System.Int32):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="NewMulticastDelegate" uniqueID="NewMulticastDelegate(System.Object[];System.Int32;System.Boolean):System.MulticastDelegate">
				<signature>System.MulticastDelegate.NewMulticastDelegate(System.Object[];System.Int32;System.Boolean):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveImpl" uniqueID="RemoveImpl(System.Delegate):System.Delegate">
				<signature>System.MulticastDelegate.RemoveImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StoreDynamicMethod" uniqueID="StoreDynamicMethod(System.Reflection.MethodInfo):System.Void">
				<signature>System.MulticastDelegate.StoreDynamicMethod(System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ThrowNullThisInDelegateToInstance" uniqueID="ThrowNullThisInDelegateToInstance():System.Void">
				<signature>System.MulticastDelegate.ThrowNullThisInDelegateToInstance():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TrySetSlot" uniqueID="TrySetSlot(System.Object[];System.Int32;System.Object):System.Boolean">
				<signature>System.MulticastDelegate.TrySetSlot(System.Object[];System.Int32;System.Object):System.Boolean</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&gt;.Action&lt;System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&gt;.Invoke(System.Threading.Tasks.Task):System.Void</signature>
			</method>
		</class>
		<class name="IAsyncResult" uniqueID="System.IAsyncResult">
			<method accessibility="Public" methodKind="Member" name="get_AsyncState" uniqueID="get_AsyncState():System.Object">
				<signature>System.IAsyncResult.get_AsyncState():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AsyncWaitHandle" uniqueID="get_AsyncWaitHandle():System.Threading.WaitHandle">
				<signature>System.IAsyncResult.get_AsyncWaitHandle():System.Threading.WaitHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CompletedSynchronously" uniqueID="get_CompletedSynchronously():System.Boolean">
				<signature>System.IAsyncResult.get_CompletedSynchronously():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.IAsyncResult.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="Object" uniqueID="System.Object">
			<method accessibility="Public" methodKind="Static" name="Equals" uniqueID="Equals(System.Object;System.Object):System.Boolean">
				<signature>System.Object.Equals(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReferenceEquals" uniqueID="ReferenceEquals(System.Object;System.Object):System.Boolean">
				<signature>System.Object.ReferenceEquals(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Object.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FieldGetter" uniqueID="FieldGetter(System.String;System.String;System.Object):System.Void">
				<signature>System.Object.FieldGetter(System.String;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FieldSetter" uniqueID="FieldSetter(System.String;System.String;System.Object):System.Void">
				<signature>System.Object.FieldSetter(System.String;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Finalize" uniqueID="Finalize():System.Void">
				<signature>System.Object.Finalize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetFieldInfo" uniqueID="GetFieldInfo(System.String;System.String):System.Reflection.FieldInfo">
				<signature>System.Object.GetFieldInfo(System.String;System.String):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Object.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Object.GetType():System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MemberwiseClone" uniqueID="MemberwiseClone():System.Object">
				<signature>System.Object.MemberwiseClone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Object" uniqueID="Object():System.Void">
				<signature>System.Object.Object():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Object.ToString():System.String</signature>
			</method>
		</class>
		<class name="ValueType" uniqueID="System.ValueType">
			<method accessibility="Private" methodKind="Static" name="CanCompareBits" uniqueID="CanCompareBits(System.Object):System.Boolean">
				<signature>System.ValueType.CanCompareBits(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FastEqualsCheck" uniqueID="FastEqualsCheck(System.Object;System.Object):System.Boolean">
				<signature>System.ValueType.FastEqualsCheck(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetHashCodeOfPtr" uniqueID="GetHashCodeOfPtr(System.IntPtr):System.Int32">
				<signature>System.ValueType.GetHashCodeOfPtr(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.ValueType.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.ValueType.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.ValueType.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValueType" uniqueID="ValueType():System.Void">
				<signature>System.ValueType.ValueType():System.Void</signature>
			</method>
		</class>
		<class name="IComparable" uniqueID="System.IComparable">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.IComparable.CompareTo(System.Object):System.Int32</signature>
			</method>
		</class>
		<class name="Action&lt;System.Data.DataViewListener&gt;" uniqueID="System.Action&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Data.DataViewListener&gt;" uniqueID="Action&lt;System.Data.DataViewListener&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Data.DataViewListener&gt;.Action&lt;System.Data.DataViewListener&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataViewListener;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Data.DataViewListener&gt;.BeginInvoke(System.Data.DataViewListener;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Data.DataViewListener&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataViewListener):System.Void">
				<signature>System.Action&lt;System.Data.DataViewListener&gt;.Invoke(System.Data.DataViewListener):System.Void</signature>
			</method>
		</class>
		<class name="Delegate" uniqueID="System.Delegate">
			<method accessibility="Public" methodKind="Static" name="Combine" uniqueID="Combine(System.Delegate;System.Delegate):System.Delegate">
				<signature>System.Delegate.Combine(System.Delegate;System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Combine" uniqueID="Combine(System.Delegate[]):System.Delegate">
				<signature>System.Delegate.Combine(System.Delegate[]):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CompareUnmanagedFunctionPtrs" uniqueID="CompareUnmanagedFunctionPtrs(System.Delegate;System.Delegate):System.Boolean">
				<signature>System.Delegate.CompareUnmanagedFunctionPtrs(System.Delegate;System.Delegate):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.Reflection.MethodInfo;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.String):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.String):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.String;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.String;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Object;System.String;System.Boolean;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Object;System.String;System.Boolean;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Reflection.MethodInfo):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Reflection.MethodInfo):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Reflection.MethodInfo;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Reflection.MethodInfo;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Type;System.String):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Type;System.String):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Type;System.String;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Type;System.String;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateDelegate" uniqueID="CreateDelegate(System.Type;System.Type;System.String;System.Boolean;System.Boolean):System.Delegate">
				<signature>System.Delegate.CreateDelegate(System.Type;System.Type;System.String;System.Boolean;System.Boolean):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateDelegateInternal" uniqueID="CreateDelegateInternal(System.RuntimeType;System.Reflection.RuntimeMethodInfo;System.Object;System.DelegateBindingFlags;System.Threading.StackCrawlMark):System.Delegate">
				<signature>System.Delegate.CreateDelegateInternal(System.RuntimeType;System.Reflection.RuntimeMethodInfo;System.Object;System.DelegateBindingFlags;System.Threading.StackCrawlMark):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateDelegateNoSecurityCheck" uniqueID="CreateDelegateNoSecurityCheck(System.RuntimeType;System.Object;System.Reflection.MethodInfo):System.Delegate">
				<signature>System.Delegate.CreateDelegateNoSecurityCheck(System.RuntimeType;System.Object;System.Reflection.MethodInfo):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateDelegateNoSecurityCheck" uniqueID="CreateDelegateNoSecurityCheck(System.Type;System.Object;System.RuntimeMethodHandle):System.Delegate">
				<signature>System.Delegate.CreateDelegateNoSecurityCheck(System.Type;System.Object;System.RuntimeMethodHandle):System.Delegate</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalAlloc" uniqueID="InternalAlloc(System.RuntimeType):System.MulticastDelegate">
				<signature>System.Delegate.InternalAlloc(System.RuntimeType):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalAllocLike" uniqueID="InternalAllocLike(System.Delegate):System.MulticastDelegate">
				<signature>System.Delegate.InternalAllocLike(System.Delegate):System.MulticastDelegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalEqualMethodHandles" uniqueID="InternalEqualMethodHandles(System.Delegate;System.Delegate):System.Boolean">
				<signature>System.Delegate.InternalEqualMethodHandles(System.Delegate;System.Delegate):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalEqualTypes" uniqueID="InternalEqualTypes(System.Object;System.Object):System.Boolean">
				<signature>System.Delegate.InternalEqualTypes(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Remove" uniqueID="Remove(System.Delegate;System.Delegate):System.Delegate">
				<signature>System.Delegate.Remove(System.Delegate;System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RemoveAll" uniqueID="RemoveAll(System.Delegate;System.Delegate):System.Delegate">
				<signature>System.Delegate.RemoveAll(System.Delegate;System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateDelegate" uniqueID="UnsafeCreateDelegate(System.RuntimeType;System.Reflection.RuntimeMethodInfo;System.Object;System.DelegateBindingFlags):System.Delegate">
				<signature>System.Delegate.UnsafeCreateDelegate(System.RuntimeType;System.Reflection.RuntimeMethodInfo;System.Object;System.DelegateBindingFlags):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Delegate;System.Delegate):System.Boolean">
				<signature>System.Delegate.op_Equality(System.Delegate;System.Delegate):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Delegate;System.Delegate):System.Boolean">
				<signature>System.Delegate.op_Inequality(System.Delegate;System.Delegate):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AdjustTarget" uniqueID="AdjustTarget(System.Object;System.IntPtr):System.IntPtr">
				<signature>System.Delegate.AdjustTarget(System.Object;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BindToMethodInfo" uniqueID="BindToMethodInfo(System.Object;System.IRuntimeMethodInfo;System.RuntimeType;System.DelegateBindingFlags):System.Boolean">
				<signature>System.Delegate.BindToMethodInfo(System.Object;System.IRuntimeMethodInfo;System.RuntimeType;System.DelegateBindingFlags):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BindToMethodName" uniqueID="BindToMethodName(System.Object;System.RuntimeType;System.String;System.DelegateBindingFlags):System.Boolean">
				<signature>System.Delegate.BindToMethodName(System.Object;System.RuntimeType;System.String;System.DelegateBindingFlags):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.Delegate.Clone():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CombineImpl" uniqueID="CombineImpl(System.Delegate):System.Delegate">
				<signature>System.Delegate.CombineImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Delegate" uniqueID="Delegate():System.Void">
				<signature>System.Delegate.Delegate():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Delegate" uniqueID="Delegate(System.Object;System.String):System.Void">
				<signature>System.Delegate.Delegate(System.Object;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Delegate" uniqueID="Delegate(System.Type;System.String):System.Void">
				<signature>System.Delegate.Delegate(System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DelegateConstruct" uniqueID="DelegateConstruct(System.Object;System.IntPtr):System.Void">
				<signature>System.Delegate.DelegateConstruct(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DynamicInvoke" uniqueID="DynamicInvoke(System.Object[]):System.Object">
				<signature>System.Delegate.DynamicInvoke(System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DynamicInvokeImpl" uniqueID="DynamicInvokeImpl(System.Object[]):System.Object">
				<signature>System.Delegate.DynamicInvokeImpl(System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Delegate.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindMethodHandle" uniqueID="FindMethodHandle():System.IRuntimeMethodInfo">
				<signature>System.Delegate.FindMethodHandle():System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCallStub" uniqueID="GetCallStub(System.IntPtr):System.IntPtr">
				<signature>System.Delegate.GetCallStub(System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Delegate.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInvocationList" uniqueID="GetInvocationList():System.Delegate[]">
				<signature>System.Delegate.GetInvocationList():System.Delegate[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetInvokeMethod" uniqueID="GetInvokeMethod():System.IntPtr">
				<signature>System.Delegate.GetInvokeMethod():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMethodImpl" uniqueID="GetMethodImpl():System.Reflection.MethodInfo">
				<signature>System.Delegate.GetMethodImpl():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMulticastInvoke" uniqueID="GetMulticastInvoke():System.IntPtr">
				<signature>System.Delegate.GetMulticastInvoke():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTarget" uniqueID="GetTarget():System.Object">
				<signature>System.Delegate.GetTarget():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveImpl" uniqueID="RemoveImpl(System.Delegate):System.Delegate">
				<signature>System.Delegate.RemoveImpl(System.Delegate):System.Delegate</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Method" uniqueID="get_Method():System.Reflection.MethodInfo">
				<signature>System.Delegate.get_Method():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Target" uniqueID="get_Target():System.Object">
				<signature>System.Delegate.get_Target():System.Object</signature>
			</method>
		</class>
		<class name="ICloneable" uniqueID="System.ICloneable">
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.ICloneable.Clone():System.Object</signature>
			</method>
		</class>
		<class name="IDisposable" uniqueID="System.IDisposable">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.IDisposable.Dispose():System.Void</signature>
			</method>
		</class>
		<class name="IConvertible" uniqueID="System.IConvertible">
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.IConvertible.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToBoolean" uniqueID="ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToByte" uniqueID="ToByte(System.IFormatProvider):System.Byte">
				<signature>System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToChar" uniqueID="ToChar(System.IFormatProvider):System.Char">
				<signature>System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToDateTime" uniqueID="ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToDecimal" uniqueID="ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToDouble" uniqueID="ToDouble(System.IFormatProvider):System.Double">
				<signature>System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToInt16" uniqueID="ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToInt32" uniqueID="ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToInt64" uniqueID="ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToSByte" uniqueID="ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToSingle" uniqueID="ToSingle(System.IFormatProvider):System.Single">
				<signature>System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.IConvertible.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToType" uniqueID="ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUInt16" uniqueID="ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUInt32" uniqueID="ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUInt64" uniqueID="ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
		</class>
		<class name="Comparison&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Comparison&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(Microsoft.SqlServer.Server.SmiExtendedMetaData;Microsoft.SqlServer.Server.SmiExtendedMetaData;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.BeginInvoke(Microsoft.SqlServer.Server.SmiExtendedMetaData;Microsoft.SqlServer.Server.SmiExtendedMetaData;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="Comparison&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Comparison&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(Microsoft.SqlServer.Server.SmiExtendedMetaData;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32">
				<signature>System.Comparison&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Invoke(Microsoft.SqlServer.Server.SmiExtendedMetaData;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32</signature>
			</method>
		</class>
		<class name="Enum" uniqueID="System.Enum">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Enum.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.Type;System.Object;System.String):System.String">
				<signature>System.Enum.Format(System.Type;System.Object;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetCachedValuesAndNames" uniqueID="GetCachedValuesAndNames(System.RuntimeType;System.UInt64[];System.String[];System.Boolean;System.Boolean):System.Void">
				<signature>System.Enum.GetCachedValuesAndNames(System.RuntimeType;System.UInt64[];System.String[];System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetEnumValuesAndNames" uniqueID="GetEnumValuesAndNames(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Boolean;System.Boolean):System.Void">
				<signature>System.Enum.GetEnumValuesAndNames(System.RuntimeTypeHandle;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Runtime.CompilerServices.ObjectHandleOnStack;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetHashEntry" uniqueID="GetHashEntry(System.RuntimeType):System.Enum+HashEntry">
				<signature>System.Enum.GetHashEntry(System.RuntimeType):System.Enum+HashEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetName" uniqueID="GetName(System.Type;System.Object):System.String">
				<signature>System.Enum.GetName(System.Type;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetNames" uniqueID="GetNames(System.Type):System.String[]">
				<signature>System.Enum.GetNames(System.Type):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetUnderlyingType" uniqueID="GetUnderlyingType(System.Type):System.Type">
				<signature>System.Enum.GetUnderlyingType(System.Type):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetValues" uniqueID="GetValues(System.Type):System.Array">
				<signature>System.Enum.GetValues(System.Type):System.Array</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalBoxEnum" uniqueID="InternalBoxEnum(System.RuntimeType;System.Int64):System.Object">
				<signature>System.Enum.InternalBoxEnum(System.RuntimeType;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalCompareTo" uniqueID="InternalCompareTo(System.Object;System.Object):System.Int32">
				<signature>System.Enum.InternalCompareTo(System.Object;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalFlagsFormat" uniqueID="InternalFlagsFormat(System.RuntimeType;System.Object):System.String">
				<signature>System.Enum.InternalFlagsFormat(System.RuntimeType;System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalFormat" uniqueID="InternalFormat(System.RuntimeType;System.Object):System.String">
				<signature>System.Enum.InternalFormat(System.RuntimeType;System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalFormattedHexString" uniqueID="InternalFormattedHexString(System.Object):System.String">
				<signature>System.Enum.InternalFormattedHexString(System.Object):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalGetNames" uniqueID="InternalGetNames(System.RuntimeType):System.String[]">
				<signature>System.Enum.InternalGetNames(System.RuntimeType):System.String[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalGetUnderlyingType" uniqueID="InternalGetUnderlyingType(System.RuntimeType):System.RuntimeType">
				<signature>System.Enum.InternalGetUnderlyingType(System.RuntimeType):System.RuntimeType</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalGetValues" uniqueID="InternalGetValues(System.RuntimeType):System.UInt64[]">
				<signature>System.Enum.InternalGetValues(System.RuntimeType):System.UInt64[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Type;System.Object):System.Boolean">
				<signature>System.Enum.IsDefined(System.Type;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.Type;System.String):System.Object">
				<signature>System.Enum.Parse(System.Type;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.Type;System.String;System.Boolean):System.Object">
				<signature>System.Enum.Parse(System.Type;System.String;System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Boolean):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Byte):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Byte):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Char):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Char):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Int16):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Int16):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Int32):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Int64):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.Object):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.Object):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.SByte):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.SByte):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.UInt16):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.UInt16):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.UInt32):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.UInt32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToObject" uniqueID="ToObject(System.Type;System.UInt64):System.Object">
				<signature>System.Enum.ToObject(System.Type;System.UInt64):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Object):System.UInt64">
				<signature>System.Enum.ToUInt64(System.Object):System.UInt64</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TryParseEnum" uniqueID="TryParseEnum(System.Type;System.String;System.Boolean;System.Enum+EnumResult):System.Boolean">
				<signature>System.Enum.TryParseEnum(System.Type;System.String;System.Boolean;System.Enum+EnumResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.Enum.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Enum" uniqueID="Enum():System.Void">
				<signature>System.Enum.Enum():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Enum.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Enum.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.Enum.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetValue" uniqueID="GetValue():System.Object">
				<signature>System.Enum.GetValue():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HasFlag" uniqueID="HasFlag(System.Enum):System.Boolean">
				<signature>System.Enum.HasFlag(System.Enum):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalGetCorElementType" uniqueID="InternalGetCorElementType():System.Reflection.CorElementType">
				<signature>System.Enum.InternalGetCorElementType():System.Reflection.CorElementType</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalHasFlag" uniqueID="InternalHasFlag(System.Enum):System.Boolean">
				<signature>System.Enum.InternalHasFlag(System.Enum):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.Enum.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.Enum.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.Enum.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.Enum.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.Enum.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.Enum.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.Enum.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.Enum.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.Enum.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.Enum.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.Enum.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.Enum.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.Enum.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.Enum.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.Enum.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Enum.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.Enum.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.Enum.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.Enum.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="Action&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Action&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="Action&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Action&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.BeginInvoke(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void">
				<signature>System.Action&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Invoke(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.Object,System.Threading.Tasks.Task&gt;" uniqueID="System.Func&lt;System.Object,System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Object,System.Threading.Tasks.Task&gt;.BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.Object,System.Threading.Tasks.Task&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Object,System.Threading.Tasks.Task&gt;" uniqueID="Func&lt;System.Object,System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Object,System.Threading.Tasks.Task&gt;.Func&lt;System.Object,System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object):System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.Object,System.Threading.Tasks.Task&gt;.Invoke(System.Object):System.Threading.Tasks.Task</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task[]&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task[]&gt;.Action&lt;System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task[]&gt;.BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task[]&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task[]):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task[]&gt;.Invoke(System.Threading.Tasks.Task[]):System.Void</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Data.DataTable&gt;" uniqueID="System.Comparison&lt;System.Data.DataTable&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataTable;System.Data.DataTable;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Data.DataTable&gt;.BeginInvoke(System.Data.DataTable;System.Data.DataTable;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Data.DataTable&gt;" uniqueID="Comparison&lt;System.Data.DataTable&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Data.DataTable&gt;.Comparison&lt;System.Data.DataTable&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataTable&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataTable;System.Data.DataTable):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataTable&gt;.Invoke(System.Data.DataTable;System.Data.DataTable):System.Int32</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.String&gt;" uniqueID="System.Predicate&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.String;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.String&gt;.BeginInvoke(System.String;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.String&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.String):System.Boolean">
				<signature>System.Predicate&lt;System.String&gt;.Invoke(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.String&gt;" uniqueID="Predicate&lt;System.String&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.String&gt;.Predicate&lt;System.String&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Action&gt;" uniqueID="System.Action&lt;System.Action&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Action&gt;" uniqueID="Action&lt;System.Action&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Action&gt;.Action&lt;System.Action&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Action;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Action&gt;.BeginInvoke(System.Action;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Action&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Action):System.Void">
				<signature>System.Action&lt;System.Action&gt;.Invoke(System.Action):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Attribute&gt;" uniqueID="System.Action&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Attribute&gt;" uniqueID="Action&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Attribute&gt;.Action&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Attribute&gt;.BeginInvoke(System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Attribute&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Attribute):System.Void">
				<signature>System.Action&lt;System.Attribute&gt;.Invoke(System.Attribute):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.Common.DbDataReader&gt;" uniqueID="System.Func&lt;System.Data.Common.DbDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.Common.DbDataReader&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.Common.DbDataReader">
				<signature>System.Func&lt;System.Data.Common.DbDataReader&gt;.EndInvoke(System.IAsyncResult):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Func&lt;System.Data.Common.DbDataReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.Common.DbDataReader&gt;.Func&lt;System.Data.Common.DbDataReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.Data.Common.DbDataReader">
				<signature>System.Func&lt;System.Data.Common.DbDataReader&gt;.Invoke():System.Data.Common.DbDataReader</signature>
			</method>
		</class>
		<class name="Action&lt;System.Data.DataRow&gt;" uniqueID="System.Action&lt;System.Data.DataRow&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Data.DataRow&gt;" uniqueID="Action&lt;System.Data.DataRow&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Data.DataRow&gt;.Action&lt;System.Data.DataRow&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataRow;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Data.DataRow&gt;.BeginInvoke(System.Data.DataRow;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Data.DataRow&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataRow):System.Void">
				<signature>System.Action&lt;System.Data.DataRow&gt;.Invoke(System.Data.DataRow):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.SqlClient.SqlParameter;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;.BeginInvoke(System.Data.SqlClient.SqlParameter;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.SqlClient.SqlParameter):System.Boolean">
				<signature>System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;.Invoke(System.Data.SqlClient.SqlParameter):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="Predicate&lt;System.Data.SqlClient.SqlParameter&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Data.DataColumn&gt;" uniqueID="System.Action&lt;System.Data.DataColumn&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Data.DataColumn&gt;" uniqueID="Action&lt;System.Data.DataColumn&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Data.DataColumn&gt;.Action&lt;System.Data.DataColumn&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataColumn;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Data.DataColumn&gt;.BeginInvoke(System.Data.DataColumn;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Data.DataColumn&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataColumn):System.Void">
				<signature>System.Action&lt;System.Data.DataColumn&gt;.Invoke(System.Data.DataColumn):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Object[]&gt;" uniqueID="System.Action&lt;System.Object[]&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Object[]&gt;" uniqueID="Action&lt;System.Object[]&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Object[]&gt;.Action&lt;System.Object[]&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Object[]&gt;.BeginInvoke(System.Object[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Object[]&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object[]):System.Void">
				<signature>System.Action&lt;System.Object[]&gt;.Invoke(System.Object[]):System.Void</signature>
			</method>
		</class>
		<class name="String" uniqueID="System.String">
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean;System.Globalization.CultureInfo):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Boolean;System.Globalization.CultureInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.Compare(System.String;System.Int32;System.String;System.Int32;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String):System.Int32">
				<signature>System.String.Compare(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.Boolean):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.Boolean;System.Globalization.CultureInfo):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.Boolean;System.Globalization.CultureInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.Globalization.CultureInfo;System.Globalization.CompareOptions):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compare" uniqueID="Compare(System.String;System.String;System.StringComparison):System.Int32">
				<signature>System.String.Compare(System.String;System.String;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CompareOrdinal" uniqueID="CompareOrdinal(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.CompareOrdinal(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CompareOrdinal" uniqueID="CompareOrdinal(System.String;System.String):System.Int32">
				<signature>System.String.CompareOrdinal(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompareOrdinalHelper" uniqueID="CompareOrdinalHelper(System.String;System.String):System.Int32">
				<signature>System.String.CompareOrdinalHelper(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompareOrdinalIgnoreCaseHelper" uniqueID="CompareOrdinalIgnoreCaseHelper(System.String;System.String):System.Int32">
				<signature>System.String.CompareOrdinalIgnoreCaseHelper(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.String">
				<signature>System.String.Concat(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object):System.String">
				<signature>System.String.Concat(System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object;System.Object):System.String">
				<signature>System.String.Concat(System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object;System.Object;System.Object):System.String">
				<signature>System.String.Concat(System.Object;System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.Object[]):System.String">
				<signature>System.String.Concat(System.Object[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String;System.String):System.String">
				<signature>System.String.Concat(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String;System.String;System.String):System.String">
				<signature>System.String.Concat(System.String;System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String;System.String;System.String;System.String):System.String">
				<signature>System.String.Concat(System.String;System.String;System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Concat" uniqueID="Concat(System.String[]):System.String">
				<signature>System.String.Concat(System.String[]):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ConcatArray" uniqueID="ConcatArray(System.String[];System.Int32):System.String">
				<signature>System.String.ConcatArray(System.String[];System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.String):System.String">
				<signature>System.String.Copy(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateString" uniqueID="CreateString(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.String">
				<signature>System.String.CreateString(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateStringFromEncoding" uniqueID="CreateStringFromEncoding(System.Byte;System.Int32;System.Text.Encoding):System.String">
				<signature>System.String.CreateStringFromEncoding(System.Byte;System.Int32;System.Text.Encoding):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Equals" uniqueID="Equals(System.String;System.String):System.Boolean">
				<signature>System.String.Equals(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Equals" uniqueID="Equals(System.String;System.String;System.StringComparison):System.Boolean">
				<signature>System.String.Equals(System.String;System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="EqualsHelper" uniqueID="EqualsHelper(System.String;System.String):System.Boolean">
				<signature>System.String.EqualsHelper(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FastAllocateString" uniqueID="FastAllocateString(System.Int32):System.String">
				<signature>System.String.FastAllocateString(System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FillStringChecked" uniqueID="FillStringChecked(System.String;System.Int32;System.String):System.Void">
				<signature>System.String.FillStringChecked(System.String;System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.IFormatProvider;System.String;System.Object[]):System.String">
				<signature>System.String.Format(System.IFormatProvider;System.String;System.Object[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object):System.String">
				<signature>System.String.Format(System.String;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object;System.Object):System.String">
				<signature>System.String.Format(System.String;System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object;System.Object;System.Object):System.String">
				<signature>System.String.Format(System.String;System.Object;System.Object;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Format" uniqueID="Format(System.String;System.Object[]):System.String">
				<signature>System.String.Format(System.String;System.Object[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Intern" uniqueID="Intern(System.String):System.String">
				<signature>System.String.Intern(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalCopy" uniqueID="InternalCopy(System.String;System.IntPtr;System.Int32):System.Void">
				<signature>System.String.InternalCopy(System.String;System.IntPtr;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalMarvin32HashString" uniqueID="InternalMarvin32HashString(System.String;System.Int32;System.Int64):System.Int32">
				<signature>System.String.InternalMarvin32HashString(System.String;System.Int32;System.Int64):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalUseRandomizedHashing" uniqueID="InternalUseRandomizedHashing():System.Boolean">
				<signature>System.String.InternalUseRandomizedHashing():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsBOMWhitespace" uniqueID="IsBOMWhitespace(System.Char):System.Boolean">
				<signature>System.String.IsBOMWhitespace(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsInterned" uniqueID="IsInterned(System.String):System.String">
				<signature>System.String.IsInterned(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsNullOrEmpty" uniqueID="IsNullOrEmpty(System.String):System.Boolean">
				<signature>System.String.IsNullOrEmpty(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsNullOrWhiteSpace" uniqueID="IsNullOrWhiteSpace(System.String):System.Boolean">
				<signature>System.String.IsNullOrWhiteSpace(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Join" uniqueID="Join(System.String;System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.String">
				<signature>System.String.Join(System.String;System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Join" uniqueID="Join(System.String;System.Object[]):System.String">
				<signature>System.String.Join(System.String;System.Object[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Join" uniqueID="Join(System.String;System.String[]):System.String">
				<signature>System.String.Join(System.String;System.String[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Join" uniqueID="Join(System.String;System.String[];System.Int32;System.Int32):System.String">
				<signature>System.String.Join(System.String;System.String[];System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SmallCharToUpper" uniqueID="SmallCharToUpper(System.String):System.String">
				<signature>System.String.SmallCharToUpper(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UseRandomizedHashing" uniqueID="UseRandomizedHashing():System.Boolean">
				<signature>System.String.UseRandomizedHashing():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_LegacyMode" uniqueID="get_LegacyMode():System.Boolean">
				<signature>System.String.get_LegacyMode():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="nativeCompareOrdinalEx" uniqueID="nativeCompareOrdinalEx(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.nativeCompareOrdinalEx(System.String;System.Int32;System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="nativeCompareOrdinalIgnoreCaseWC" uniqueID="nativeCompareOrdinalIgnoreCaseWC(System.String;System.SByte):System.Int32">
				<signature>System.String.nativeCompareOrdinalIgnoreCaseWC(System.String;System.SByte):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.String;System.String):System.Boolean">
				<signature>System.String.op_Equality(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.String;System.String):System.Boolean">
				<signature>System.String.op_Inequality(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="wcslen" uniqueID="wcslen(System.Char):System.Int32">
				<signature>System.String.wcslen(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="wstrcpy" uniqueID="wstrcpy(System.Char;System.Char;System.Int32):System.Void">
				<signature>System.String.wstrcpy(System.Char;System.Char;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.String.Clone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.String.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.String):System.Int32">
				<signature>System.String.CompareTo(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.String.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConvertToAnsi" uniqueID="ConvertToAnsi(System.Byte;System.Int32;System.Boolean;System.Boolean):System.Int32">
				<signature>System.String.ConvertToAnsi(System.Byte;System.Int32;System.Boolean;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.String.CopyTo(System.Int32;System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateTrimmedString" uniqueID="CreateTrimmedString(System.Int32;System.Int32):System.String">
				<signature>System.String.CreateTrimmedString(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharArray" uniqueID="CtorCharArray(System.Char[]):System.String">
				<signature>System.String.CtorCharArray(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharArrayStartLength" uniqueID="CtorCharArrayStartLength(System.Char[];System.Int32;System.Int32):System.String">
				<signature>System.String.CtorCharArrayStartLength(System.Char[];System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharCount" uniqueID="CtorCharCount(System.Char;System.Int32):System.String">
				<signature>System.String.CtorCharCount(System.Char;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharPtr" uniqueID="CtorCharPtr(System.Char):System.String">
				<signature>System.String.CtorCharPtr(System.Char):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CtorCharPtrStartLength" uniqueID="CtorCharPtrStartLength(System.Char;System.Int32;System.Int32):System.String">
				<signature>System.String.CtorCharPtrStartLength(System.Char;System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.Char):System.Boolean">
				<signature>System.String.EndsWith(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.String):System.Boolean">
				<signature>System.String.EndsWith(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean">
				<signature>System.String.EndsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndsWith" uniqueID="EndsWith(System.String;System.StringComparison):System.Boolean">
				<signature>System.String.EndsWith(System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.String.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.String):System.Boolean">
				<signature>System.String.Equals(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.String;System.StringComparison):System.Boolean">
				<signature>System.String.Equals(System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.CharEnumerator">
				<signature>System.String.GetEnumerator():System.CharEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.String.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetLegacyNonRandomizedHashCode" uniqueID="GetLegacyNonRandomizedHashCode():System.Int32">
				<signature>System.String.GetLegacyNonRandomizedHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.String.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Char):System.Int32">
				<signature>System.String.IndexOf(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Char;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.Char;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Char;System.Int32;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.Char;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.String.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.IndexOf(System.String;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.StringComparison):System.Int32">
				<signature>System.String.IndexOf(System.String;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOfAny" uniqueID="IndexOfAny(System.Char[]):System.Int32">
				<signature>System.String.IndexOfAny(System.Char[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOfAny" uniqueID="IndexOfAny(System.Char[];System.Int32):System.Int32">
				<signature>System.String.IndexOfAny(System.Char[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOfAny" uniqueID="IndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.String.IndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.String):System.String">
				<signature>System.String.Insert(System.Int32;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalSplitKeepEmptyEntries" uniqueID="InternalSplitKeepEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]">
				<signature>System.String.InternalSplitKeepEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalSplitOmitEmptyEntries" uniqueID="InternalSplitOmitEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]">
				<signature>System.String.InternalSplitOmitEmptyEntries(System.Int32[];System.Int32[];System.Int32;System.Int32):System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalSubString" uniqueID="InternalSubString(System.Int32;System.Int32):System.String">
				<signature>System.String.InternalSubString(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsAscii" uniqueID="IsAscii():System.Boolean">
				<signature>System.String.IsAscii():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsFastSort" uniqueID="IsFastSort():System.Boolean">
				<signature>System.String.IsFastSort():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsNormalized" uniqueID="IsNormalized():System.Boolean">
				<signature>System.String.IsNormalized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsNormalized" uniqueID="IsNormalized(System.Text.NormalizationForm):System.Boolean">
				<signature>System.String.IsNormalized(System.Text.NormalizationForm):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Char):System.Int32">
				<signature>System.String.LastIndexOf(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Char;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.Char;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Char;System.Int32;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.Char;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String):System.Int32">
				<signature>System.String.LastIndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32;System.Int32):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.Int32;System.StringComparison):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.Int32;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.String;System.StringComparison):System.Int32">
				<signature>System.String.LastIndexOf(System.String;System.StringComparison):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOfAny" uniqueID="LastIndexOfAny(System.Char[]):System.Int32">
				<signature>System.String.LastIndexOfAny(System.Char[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOfAny" uniqueID="LastIndexOfAny(System.Char[];System.Int32):System.Int32">
				<signature>System.String.LastIndexOfAny(System.Char[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOfAny" uniqueID="LastIndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.String.LastIndexOfAny(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MakeSeparatorList" uniqueID="MakeSeparatorList(System.Char[];System.Int32[]):System.Int32">
				<signature>System.String.MakeSeparatorList(System.Char[];System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MakeSeparatorList" uniqueID="MakeSeparatorList(System.String[];System.Int32[];System.Int32[]):System.Int32">
				<signature>System.String.MakeSeparatorList(System.String[];System.Int32[];System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Normalize" uniqueID="Normalize():System.String">
				<signature>System.String.Normalize():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Normalize" uniqueID="Normalize(System.Text.NormalizationForm):System.String">
				<signature>System.String.Normalize(System.Text.NormalizationForm):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PadHelper" uniqueID="PadHelper(System.Int32;System.Char;System.Boolean):System.String">
				<signature>System.String.PadHelper(System.Int32;System.Char;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadLeft" uniqueID="PadLeft(System.Int32):System.String">
				<signature>System.String.PadLeft(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadLeft" uniqueID="PadLeft(System.Int32;System.Char):System.String">
				<signature>System.String.PadLeft(System.Int32;System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadRight" uniqueID="PadRight(System.Int32):System.String">
				<signature>System.String.PadRight(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PadRight" uniqueID="PadRight(System.Int32;System.Char):System.String">
				<signature>System.String.PadRight(System.Int32;System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Int32):System.String">
				<signature>System.String.Remove(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Int32;System.Int32):System.String">
				<signature>System.String.Remove(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Replace" uniqueID="Replace(System.Char;System.Char):System.String">
				<signature>System.String.Replace(System.Char;System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Replace" uniqueID="Replace(System.String;System.String):System.String">
				<signature>System.String.Replace(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReplaceInternal" uniqueID="ReplaceInternal(System.Char;System.Char):System.String">
				<signature>System.String.ReplaceInternal(System.Char;System.Char):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReplaceInternal" uniqueID="ReplaceInternal(System.String;System.String):System.String">
				<signature>System.String.ReplaceInternal(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetTrailByte" uniqueID="SetTrailByte(System.Byte):System.Void">
				<signature>System.String.SetTrailByte(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[]):System.String[]">
				<signature>System.String.Split(System.Char[]):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[];System.Int32):System.String[]">
				<signature>System.String.Split(System.Char[];System.Int32):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[];System.Int32;System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.Char[];System.Int32;System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.Char[];System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.Char[];System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.String[];System.Int32;System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.String[];System.Int32;System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Split" uniqueID="Split(System.String[];System.StringSplitOptions):System.String[]">
				<signature>System.String.Split(System.String[];System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SplitInternal" uniqueID="SplitInternal(System.Char[];System.Int32;System.StringSplitOptions):System.String[]">
				<signature>System.String.SplitInternal(System.Char[];System.Int32;System.StringSplitOptions):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartsWith" uniqueID="StartsWith(System.String):System.Boolean">
				<signature>System.String.StartsWith(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartsWith" uniqueID="StartsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean">
				<signature>System.String.StartsWith(System.String;System.Boolean;System.Globalization.CultureInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartsWith" uniqueID="StartsWith(System.String;System.StringComparison):System.Boolean">
				<signature>System.String.StartsWith(System.String;System.StringComparison):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char):System.Void">
				<signature>System.String.String(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char;System.Int32):System.Void">
				<signature>System.String.String(System.Char;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char;System.Int32;System.Int32):System.Void">
				<signature>System.String.String(System.Char;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char[]):System.Void">
				<signature>System.String.String(System.Char[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.String.String(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.SByte):System.Void">
				<signature>System.String.String(System.SByte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.SByte;System.Int32;System.Int32):System.Void">
				<signature>System.String.String(System.SByte;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="String" uniqueID="String(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.Void">
				<signature>System.String.String(System.SByte;System.Int32;System.Int32;System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Substring" uniqueID="Substring(System.Int32):System.String">
				<signature>System.String.Substring(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Substring" uniqueID="Substring(System.Int32;System.Int32):System.String">
				<signature>System.String.Substring(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;">
				<signature>System.String.System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.String.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.String.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.String.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.String.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.String.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.String.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.String.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.String.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.String.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.String.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.String.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.String.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.String.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.String.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.String.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.String.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToCharArray" uniqueID="ToCharArray():System.Char[]">
				<signature>System.String.ToCharArray():System.Char[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToCharArray" uniqueID="ToCharArray(System.Int32;System.Int32):System.Char[]">
				<signature>System.String.ToCharArray(System.Int32;System.Int32):System.Char[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLower" uniqueID="ToLower():System.String">
				<signature>System.String.ToLower():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLower" uniqueID="ToLower(System.Globalization.CultureInfo):System.String">
				<signature>System.String.ToLower(System.Globalization.CultureInfo):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToLowerInvariant" uniqueID="ToLowerInvariant():System.String">
				<signature>System.String.ToLowerInvariant():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.String.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.String.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUpper" uniqueID="ToUpper():System.String">
				<signature>System.String.ToUpper():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUpper" uniqueID="ToUpper(System.Globalization.CultureInfo):System.String">
				<signature>System.String.ToUpper(System.Globalization.CultureInfo):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToUpperInvariant" uniqueID="ToUpperInvariant():System.String">
				<signature>System.String.ToUpperInvariant():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Trim" uniqueID="Trim():System.String">
				<signature>System.String.Trim():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Trim" uniqueID="Trim(System.Char[]):System.String">
				<signature>System.String.Trim(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimEnd" uniqueID="TrimEnd(System.Char[]):System.String">
				<signature>System.String.TrimEnd(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TrimHelper" uniqueID="TrimHelper(System.Char[];System.Int32):System.String">
				<signature>System.String.TrimHelper(System.Char[];System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TrimHelper" uniqueID="TrimHelper(System.Int32):System.String">
				<signature>System.String.TrimHelper(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimStart" uniqueID="TrimStart(System.Char[]):System.String">
				<signature>System.String.TrimStart(System.Char[]):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TryGetTrailByte" uniqueID="TryGetTrailByte(System.Byte):System.Boolean">
				<signature>System.String.TryGetTrailByte(System.Byte):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Chars" uniqueID="get_Chars(System.Int32):System.Char">
				<signature>System.String.get_Chars(System.Int32):System.Char</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FirstChar" uniqueID="get_FirstChar():System.Char">
				<signature>System.String.get_FirstChar():System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Length" uniqueID="get_Length():System.Int32">
				<signature>System.String.get_Length():System.Int32</signature>
			</method>
		</class>
		<class name="Action&lt;System.Data.DataRelation&gt;" uniqueID="System.Action&lt;System.Data.DataRelation&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Data.DataRelation&gt;" uniqueID="Action&lt;System.Data.DataRelation&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Data.DataRelation&gt;.Action&lt;System.Data.DataRelation&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataRelation;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Data.DataRelation&gt;.BeginInvoke(System.Data.DataRelation;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Data.DataRelation&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataRelation):System.Void">
				<signature>System.Action&lt;System.Data.DataRelation&gt;.Invoke(System.Data.DataRelation):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Data.DataTable&gt;" uniqueID="System.Action&lt;System.Data.DataTable&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Data.DataTable&gt;" uniqueID="Action&lt;System.Data.DataTable&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Data.DataTable&gt;.Action&lt;System.Data.DataTable&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataTable;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Data.DataTable&gt;.BeginInvoke(System.Data.DataTable;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Data.DataTable&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataTable):System.Void">
				<signature>System.Action&lt;System.Data.DataTable&gt;.Invoke(System.Data.DataTable):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.Xml.XmlReader&gt;" uniqueID="System.Func&lt;System.Xml.XmlReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Xml.XmlReader&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Xml.XmlReader">
				<signature>System.Func&lt;System.Xml.XmlReader&gt;.EndInvoke(System.IAsyncResult):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Xml.XmlReader&gt;" uniqueID="Func&lt;System.Xml.XmlReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Xml.XmlReader&gt;.Func&lt;System.Xml.XmlReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.Xml.XmlReader">
				<signature>System.Func&lt;System.Xml.XmlReader&gt;.Invoke():System.Xml.XmlReader</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Boolean&gt;):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Boolean&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Data.DataView&gt;" uniqueID="System.Action&lt;System.Data.DataView&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Data.DataView&gt;" uniqueID="Action&lt;System.Data.DataView&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Data.DataView&gt;.Action&lt;System.Data.DataView&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataView;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Data.DataView&gt;.BeginInvoke(System.Data.DataView;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Data.DataView&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataView):System.Void">
				<signature>System.Action&lt;System.Data.DataView&gt;.Invoke(System.Data.DataView):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Data.Index&gt;" uniqueID="System.Action&lt;System.Data.Index&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Data.Index&gt;" uniqueID="Action&lt;System.Data.Index&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Data.Index&gt;.Action&lt;System.Data.Index&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Index;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Data.Index&gt;.BeginInvoke(System.Data.Index;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Data.Index&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Index):System.Void">
				<signature>System.Action&lt;System.Data.Index&gt;.Invoke(System.Data.Index):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Action&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="Action&lt;System.Data.SqlClient.SqlParameter&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Data.SqlClient.SqlParameter&gt;.Action&lt;System.Data.SqlClient.SqlParameter&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.SqlClient.SqlParameter;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Data.SqlClient.SqlParameter&gt;.BeginInvoke(System.Data.SqlClient.SqlParameter;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Data.SqlClient.SqlParameter&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Action&lt;System.Data.SqlClient.SqlParameter&gt;.Invoke(System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
		</class>
		<class name="Array" uniqueID="System.Array">
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Int32;System.Int32;System.Object):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Int32;System.Int32;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Object):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Array.BinarySearch(System.Array;System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Clear" uniqueID="Clear(System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Clear(System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CombineHashCodes" uniqueID="CombineHashCodes(System.Int32;System.Int32):System.Int32">
				<signature>System.Array.CombineHashCodes(System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ConstrainedCopy" uniqueID="ConstrainedCopy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.ConstrainedCopy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Array;System.Int32):System.Void">
				<signature>System.Array.Copy(System.Array;System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Array;System.Int64):System.Void">
				<signature>System.Array.Copy(System.Array;System.Array;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32;System.Boolean):System.Void">
				<signature>System.Array.Copy(System.Array;System.Int32;System.Array;System.Int32;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Copy" uniqueID="Copy(System.Array;System.Int64;System.Array;System.Int64;System.Int64):System.Void">
				<signature>System.Array.Copy(System.Array;System.Int64;System.Array;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32;System.Int32):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32;System.Int32;System.Int32):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32;System.Int32;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32[]):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32[]):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int32[];System.Int32[]):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int32[];System.Int32[]):System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateInstance" uniqueID="CreateInstance(System.Type;System.Int64[]):System.Array">
				<signature>System.Array.CreateInstance(System.Type;System.Int64[]):System.Array</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMedian" uniqueID="GetMedian(System.Int32;System.Int32):System.Int32">
				<signature>System.Array.GetMedian(System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IndexOf" uniqueID="IndexOf(System.Array;System.Object):System.Int32">
				<signature>System.Array.IndexOf(System.Array;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IndexOf" uniqueID="IndexOf(System.Array;System.Object;System.Int32):System.Int32">
				<signature>System.Array.IndexOf(System.Array;System.Object;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IndexOf" uniqueID="IndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32">
				<signature>System.Array.IndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalCreate" uniqueID="InternalCreate(System.Void;System.Int32;System.Int32;System.Int32):System.Array">
				<signature>System.Array.InternalCreate(System.Void;System.Int32;System.Int32;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalSetValue" uniqueID="InternalSetValue(System.Void;System.Object):System.Void">
				<signature>System.Array.InternalSetValue(System.Void;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LastIndexOf" uniqueID="LastIndexOf(System.Array;System.Object):System.Int32">
				<signature>System.Array.LastIndexOf(System.Array;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LastIndexOf" uniqueID="LastIndexOf(System.Array;System.Object;System.Int32):System.Int32">
				<signature>System.Array.LastIndexOf(System.Array;System.Object;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LastIndexOf" uniqueID="LastIndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32">
				<signature>System.Array.LastIndexOf(System.Array;System.Object;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Reverse" uniqueID="Reverse(System.Array):System.Void">
				<signature>System.Array.Reverse(System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Reverse" uniqueID="Reverse(System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Reverse(System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array):System.Void">
				<signature>System.Array.Sort(System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Int32;System.Int32):System.Void">
				<signature>System.Array.Sort(System.Array;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Sort" uniqueID="Sort(System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void">
				<signature>System.Array.Sort(System.Array;System.Int32;System.Int32;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZBinarySearch" uniqueID="TrySZBinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean">
				<signature>System.Array.TrySZBinarySearch(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZIndexOf" uniqueID="TrySZIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean">
				<signature>System.Array.TrySZIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZLastIndexOf" uniqueID="TrySZLastIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean">
				<signature>System.Array.TrySZLastIndexOf(System.Array;System.Int32;System.Int32;System.Object;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZReverse" uniqueID="TrySZReverse(System.Array;System.Int32;System.Int32):System.Boolean">
				<signature>System.Array.TrySZReverse(System.Array;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TrySZSort" uniqueID="TrySZSort(System.Array;System.Array;System.Int32;System.Int32):System.Boolean">
				<signature>System.Array.TrySZSort(System.Array;System.Array;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateInstance" uniqueID="UnsafeCreateInstance(System.Type;System.Int32):System.Array">
				<signature>System.Array.UnsafeCreateInstance(System.Type;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateInstance" uniqueID="UnsafeCreateInstance(System.Type;System.Int32;System.Int32):System.Array">
				<signature>System.Array.UnsafeCreateInstance(System.Type;System.Int32;System.Int32):System.Array</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateInstance" uniqueID="UnsafeCreateInstance(System.Type;System.Int32[]):System.Array">
				<signature>System.Array.UnsafeCreateInstance(System.Type;System.Int32[]):System.Array</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateInstance" uniqueID="UnsafeCreateInstance(System.Type;System.Int32[];System.Int32[]):System.Array">
				<signature>System.Array.UnsafeCreateInstance(System.Type;System.Int32[];System.Int32[]):System.Array</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Array" uniqueID="Array():System.Void">
				<signature>System.Array.Array():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Object">
				<signature>System.Array.Clone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Array.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int64):System.Void">
				<signature>System.Array.CopyTo(System.Array;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDataPtrOffsetInternal" uniqueID="GetDataPtrOffsetInternal():System.Int32">
				<signature>System.Array.GetDataPtrOffsetInternal():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Array.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLength" uniqueID="GetLength(System.Int32):System.Int32">
				<signature>System.Array.GetLength(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLongLength" uniqueID="GetLongLength(System.Int32):System.Int64">
				<signature>System.Array.GetLongLength(System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLowerBound" uniqueID="GetLowerBound(System.Int32):System.Int32">
				<signature>System.Array.GetLowerBound(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetUpperBound" uniqueID="GetUpperBound(System.Int32):System.Int32">
				<signature>System.Array.GetUpperBound(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32):System.Object">
				<signature>System.Array.GetValue(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32;System.Int32):System.Object">
				<signature>System.Array.GetValue(System.Int32;System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32;System.Int32;System.Int32):System.Object">
				<signature>System.Array.GetValue(System.Int32;System.Int32;System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32[]):System.Object">
				<signature>System.Array.GetValue(System.Int32[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64):System.Object">
				<signature>System.Array.GetValue(System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64;System.Int64):System.Object">
				<signature>System.Array.GetValue(System.Int64;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64;System.Int64;System.Int64):System.Object">
				<signature>System.Array.GetValue(System.Int64;System.Int64;System.Int64):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int64[]):System.Object">
				<signature>System.Array.GetValue(System.Int64[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Initialize" uniqueID="Initialize():System.Void">
				<signature>System.Array.Initialize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalGetReference" uniqueID="InternalGetReference(System.Void;System.Int32;System.Int32):System.Void">
				<signature>System.Array.InternalGetReference(System.Void;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32;System.Int32):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int32[]):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int32[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64;System.Int64):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64;System.Int64;System.Int64):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Object;System.Int64[]):System.Void">
				<signature>System.Array.SetValue(System.Object;System.Int64[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_Count" uniqueID="System.Collections.ICollection.get_Count():System.Int32">
				<signature>System.Array.System.Collections.ICollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Array.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Array.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Array.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Array.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Array.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Array.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Array.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Array.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Array.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IStructuralComparable.CompareTo" uniqueID="System.Collections.IStructuralComparable.CompareTo(System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Array.System.Collections.IStructuralComparable.CompareTo(System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IStructuralEquatable.Equals" uniqueID="System.Collections.IStructuralEquatable.Equals(System.Object;System.Collections.IEqualityComparer):System.Boolean">
				<signature>System.Array.System.Collections.IStructuralEquatable.Equals(System.Object;System.Collections.IEqualityComparer):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IStructuralEquatable.GetHashCode" uniqueID="System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer):System.Int32">
				<signature>System.Array.System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFixedSize" uniqueID="get_IsFixedSize():System.Boolean">
				<signature>System.Array.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Array.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Array.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Length" uniqueID="get_Length():System.Int32">
				<signature>System.Array.get_Length():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LongLength" uniqueID="get_LongLength():System.Int64">
				<signature>System.Array.get_LongLength():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Rank" uniqueID="get_Rank():System.Int32">
				<signature>System.Array.get_Rank():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Array.get_SyncRoot():System.Object</signature>
			</method>
		</class>
		<class name="Action&lt;System.Exception&gt;" uniqueID="System.Action&lt;System.Exception&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Exception&gt;" uniqueID="Action&lt;System.Exception&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Exception&gt;.Action&lt;System.Exception&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Exception;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Exception&gt;.BeginInvoke(System.Exception;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Exception&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Exception):System.Void">
				<signature>System.Action&lt;System.Exception&gt;.Invoke(System.Exception):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
		</class>
		<class name="Action&lt;System.IAsyncResult&gt;" uniqueID="System.Action&lt;System.IAsyncResult&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.IAsyncResult&gt;" uniqueID="Action&lt;System.IAsyncResult&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.IAsyncResult&gt;.Action&lt;System.IAsyncResult&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.IAsyncResult&gt;.BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.IAsyncResult&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.IAsyncResult&gt;.Invoke(System.IAsyncResult):System.Void</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Data.DataRow&gt;" uniqueID="System.Comparison&lt;System.Data.DataRow&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataRow;System.Data.DataRow;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Data.DataRow&gt;.BeginInvoke(System.Data.DataRow;System.Data.DataRow;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Data.DataRow&gt;" uniqueID="Comparison&lt;System.Data.DataRow&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Data.DataRow&gt;.Comparison&lt;System.Data.DataRow&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataRow&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataRow;System.Data.DataRow):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataRow&gt;.Invoke(System.Data.DataRow;System.Data.DataRow):System.Int32</signature>
			</method>
		</class>
		<class name="Action&lt;System.Object&gt;" uniqueID="System.Action&lt;System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Object&gt;" uniqueID="Action&lt;System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Object&gt;.Action&lt;System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Object&gt;.BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object):System.Void">
				<signature>System.Action&lt;System.Object&gt;.Invoke(System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task,System.Object&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task,System.Object&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task,System.Object&gt;.Action&lt;System.Threading.Tasks.Task,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task;System.Object):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task,System.Object&gt;.Invoke(System.Threading.Tasks.Task;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;,System.Object&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;,System.Object&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;,System.Object&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;,System.Object&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;,System.Object&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;,System.Object&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;,System.Object&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;,System.Object&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Data.DataColumn&gt;" uniqueID="System.Comparison&lt;System.Data.DataColumn&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataColumn;System.Data.DataColumn;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Data.DataColumn&gt;.BeginInvoke(System.Data.DataColumn;System.Data.DataColumn;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Data.DataColumn&gt;" uniqueID="Comparison&lt;System.Data.DataColumn&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Data.DataColumn&gt;.Comparison&lt;System.Data.DataColumn&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataColumn&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataColumn;System.Data.DataColumn):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataColumn&gt;.Invoke(System.Data.DataColumn;System.Data.DataColumn):System.Int32</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Data.Index&gt;" uniqueID="System.Comparison&lt;System.Data.Index&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Index;System.Data.Index;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Data.Index&gt;.BeginInvoke(System.Data.Index;System.Data.Index;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Data.Index&gt;" uniqueID="Comparison&lt;System.Data.Index&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Data.Index&gt;.Comparison&lt;System.Data.Index&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Data.Index&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Index;System.Data.Index):System.Int32">
				<signature>System.Comparison&lt;System.Data.Index&gt;.Invoke(System.Data.Index;System.Data.Index):System.Int32</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;,System.Object&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;,System.Object&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;,System.Object&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;,System.Object&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;,System.Object&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;,System.Object&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;,System.Object&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;,System.Object&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;,System.Object&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;,System.Object&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;,System.Object&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;,System.Object&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Int32&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Int32&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Int32&gt;):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Int32&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Action&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="Action&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Web.UI.ScriptReferenceBase&gt;.Action&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.UI.ScriptReferenceBase;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Web.UI.ScriptReferenceBase&gt;.BeginInvoke(System.Web.UI.ScriptReferenceBase;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Web.UI.ScriptReferenceBase&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.UI.ScriptReferenceBase):System.Void">
				<signature>System.Action&lt;System.Web.UI.ScriptReferenceBase&gt;.Invoke(System.Web.UI.ScriptReferenceBase):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Object&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Object&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Object&gt;):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Object&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;,System.Object&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;,System.Object&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;,System.Object&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.String&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.String&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.String&gt;;System.Object):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;,System.Object&gt;.Invoke(System.Threading.Tasks.Task&lt;System.String&gt;;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.String&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.String&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.String&gt;):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.String&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Object&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Object&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Object&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Object&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Data.Index&gt;" uniqueID="System.Predicate&lt;System.Data.Index&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.Index;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Data.Index&gt;.BeginInvoke(System.Data.Index;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Data.Index&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.Index):System.Boolean">
				<signature>System.Predicate&lt;System.Data.Index&gt;.Invoke(System.Data.Index):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Data.Index&gt;" uniqueID="Predicate&lt;System.Data.Index&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Data.Index&gt;.Predicate&lt;System.Data.Index&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;,System.Object&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;,System.Object&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;,System.Object&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;,System.Object&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;,System.Object&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;,System.Object&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;,System.Object&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;,System.Object&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;" uniqueID="System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;" uniqueID="Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;):System.Void">
				<signature>System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Action&lt;System.Web.HttpContext&gt;" uniqueID="System.Action&lt;System.Web.HttpContext&gt;">
			<method accessibility="Public" methodKind="Member" name="Action&lt;System.Web.HttpContext&gt;" uniqueID="Action&lt;System.Web.HttpContext&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Action&lt;System.Web.HttpContext&gt;.Action&lt;System.Web.HttpContext&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Action&lt;System.Web.HttpContext&gt;.BeginInvoke(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Action&lt;System.Web.HttpContext&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.HttpContext):System.Void">
				<signature>System.Action&lt;System.Web.HttpContext&gt;.Invoke(System.Web.HttpContext):System.Void</signature>
			</method>
		</class>
		<class name="Attribute" uniqueID="System.Attribute">
			<method accessibility="Private" methodKind="Static" name="AddAttributesToList" uniqueID="AddAttributesToList(System.Collections.Generic.List&lt;System.Attribute&gt;;System.Attribute[];System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Attribute.AddAttributesToList(System.Collections.Generic.List&lt;System.Attribute&gt;;System.Attribute[];System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="AreFieldValuesEqual" uniqueID="AreFieldValuesEqual(System.Object;System.Object):System.Boolean">
				<signature>System.Attribute.AreFieldValuesEqual(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CopyToArrayList" uniqueID="CopyToArrayList(System.Collections.Generic.List&lt;System.Attribute&gt;;System.Attribute[];System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Attribute.CopyToArrayList(System.Collections.Generic.List&lt;System.Attribute&gt;;System.Attribute[];System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateAttributeArrayHelper" uniqueID="CreateAttributeArrayHelper(System.Type;System.Int32):System.Attribute[]">
				<signature>System.Attribute.CreateAttributeArrayHelper(System.Type;System.Int32):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Assembly;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Assembly;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.MemberInfo;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Module;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Module;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.Module;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.Module;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.ParameterInfo;System.Type):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo;System.Type):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttribute" uniqueID="GetCustomAttribute(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute">
				<signature>System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Assembly;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.Module;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.Module;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo;System.Type):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo;System.Type):System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetParentDefinition" uniqueID="GetParentDefinition(System.Reflection.EventInfo):System.Reflection.EventInfo">
				<signature>System.Attribute.GetParentDefinition(System.Reflection.EventInfo):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetParentDefinition" uniqueID="GetParentDefinition(System.Reflection.ParameterInfo):System.Reflection.ParameterInfo">
				<signature>System.Attribute.GetParentDefinition(System.Reflection.ParameterInfo):System.Reflection.ParameterInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetParentDefinition" uniqueID="GetParentDefinition(System.Reflection.PropertyInfo):System.Reflection.PropertyInfo">
				<signature>System.Attribute.GetParentDefinition(System.Reflection.PropertyInfo):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetAttributeUsage" uniqueID="InternalGetAttributeUsage(System.Type):System.AttributeUsageAttribute">
				<signature>System.Attribute.InternalGetAttributeUsage(System.Type):System.AttributeUsageAttribute</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetCustomAttributes" uniqueID="InternalGetCustomAttributes(System.Reflection.EventInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.InternalGetCustomAttributes(System.Reflection.EventInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalGetCustomAttributes" uniqueID="InternalGetCustomAttributes(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.InternalGetCustomAttributes(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalIsDefined" uniqueID="InternalIsDefined(System.Reflection.EventInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.InternalIsDefined(System.Reflection.EventInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalIsDefined" uniqueID="InternalIsDefined(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.InternalIsDefined(System.Reflection.PropertyInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalParamGetCustomAttributes" uniqueID="InternalParamGetCustomAttributes(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]">
				<signature>System.Attribute.InternalParamGetCustomAttributes(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Attribute[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalParamIsDefined" uniqueID="InternalParamIsDefined(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.InternalParamIsDefined(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Assembly;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Assembly;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Assembly;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Assembly;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.MemberInfo;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.MemberInfo;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.MemberInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Module;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Module;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.Module;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.Module;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.ParameterInfo;System.Type):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.ParameterInfo;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDefined" uniqueID="IsDefined(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean">
				<signature>System.Attribute.IsDefined(System.Reflection.ParameterInfo;System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Attribute" uniqueID="Attribute():System.Void">
				<signature>System.Attribute.Attribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Attribute.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Attribute.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefaultAttribute" uniqueID="IsDefaultAttribute():System.Boolean">
				<signature>System.Attribute.IsDefaultAttribute():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Match" uniqueID="Match(System.Object):System.Boolean">
				<signature>System.Attribute.Match(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.GetTypeInfo" uniqueID="System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Attribute.Invoke" uniqueID="System.Runtime.InteropServices._Attribute.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeId" uniqueID="get_TypeId():System.Object">
				<signature>System.Attribute.get_TypeId():System.Object</signature>
			</method>
		</class>
		<class name="AttributeUsageAttribute" uniqueID="System.AttributeUsageAttribute">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.AttributeUsageAttribute.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AttributeUsageAttribute" uniqueID="AttributeUsageAttribute(System.AttributeTargets):System.Void">
				<signature>System.AttributeUsageAttribute.AttributeUsageAttribute(System.AttributeTargets):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AttributeUsageAttribute" uniqueID="AttributeUsageAttribute(System.AttributeTargets;System.Boolean;System.Boolean):System.Void">
				<signature>System.AttributeUsageAttribute.AttributeUsageAttribute(System.AttributeTargets;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowMultiple" uniqueID="get_AllowMultiple():System.Boolean">
				<signature>System.AttributeUsageAttribute.get_AllowMultiple():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Inherited" uniqueID="get_Inherited():System.Boolean">
				<signature>System.AttributeUsageAttribute.get_Inherited():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValidOn" uniqueID="get_ValidOn():System.AttributeTargets">
				<signature>System.AttributeUsageAttribute.get_ValidOn():System.AttributeTargets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowMultiple" uniqueID="set_AllowMultiple(System.Boolean):System.Void">
				<signature>System.AttributeUsageAttribute.set_AllowMultiple(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Inherited" uniqueID="set_Inherited(System.Boolean):System.Void">
				<signature>System.AttributeUsageAttribute.set_Inherited(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.IAsyncResult,System.Threading.Tasks.Task&gt;" uniqueID="System.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task&gt;.BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.IAsyncResult,System.Threading.Tasks.Task&gt;" uniqueID="Func&lt;System.IAsyncResult,System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task&gt;.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IAsyncResult):System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task&gt;.Invoke(System.IAsyncResult):System.Threading.Tasks.Task</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Data.DataRelation&gt;" uniqueID="System.Comparison&lt;System.Data.DataRelation&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataRelation;System.Data.DataRelation;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Data.DataRelation&gt;.BeginInvoke(System.Data.DataRelation;System.Data.DataRelation;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Data.DataRelation&gt;" uniqueID="Comparison&lt;System.Data.DataRelation&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Data.DataRelation&gt;.Comparison&lt;System.Data.DataRelation&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataRelation&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataRelation;System.Data.DataRelation):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataRelation&gt;.Invoke(System.Data.DataRelation;System.Data.DataRelation):System.Int32</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task,System.Object&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Object">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task,System.Object&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Object&gt;.Func&lt;System.Threading.Tasks.Task,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.Object">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Object&gt;.Invoke(System.Threading.Tasks.Task):System.Object</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Data.DataView&gt;" uniqueID="System.Comparison&lt;System.Data.DataView&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataView;System.Data.DataView;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Data.DataView&gt;.BeginInvoke(System.Data.DataView;System.Data.DataView;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Data.DataView&gt;" uniqueID="Comparison&lt;System.Data.DataView&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Data.DataView&gt;.Comparison&lt;System.Data.DataView&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataView&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataView;System.Data.DataView):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataView&gt;.Invoke(System.Data.DataView;System.Data.DataView):System.Int32</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Data.DataViewListener&gt;" uniqueID="System.Comparison&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataViewListener;System.Data.DataViewListener;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Data.DataViewListener&gt;.BeginInvoke(System.Data.DataViewListener;System.Data.DataViewListener;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Data.DataViewListener&gt;" uniqueID="Comparison&lt;System.Data.DataViewListener&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Data.DataViewListener&gt;.Comparison&lt;System.Data.DataViewListener&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataViewListener&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataViewListener;System.Data.DataViewListener):System.Int32">
				<signature>System.Comparison&lt;System.Data.DataViewListener&gt;.Invoke(System.Data.DataViewListener;System.Data.DataViewListener):System.Int32</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Exception&gt;" uniqueID="System.Comparison&lt;System.Exception&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Exception;System.Exception;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Exception&gt;.BeginInvoke(System.Exception;System.Exception;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Exception&gt;" uniqueID="Comparison&lt;System.Exception&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Exception&gt;.Comparison&lt;System.Exception&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Exception&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Exception;System.Exception):System.Int32">
				<signature>System.Comparison&lt;System.Exception&gt;.Invoke(System.Exception;System.Exception):System.Int32</signature>
			</method>
		</class>
		<class name="Func&lt;System.Boolean&gt;" uniqueID="System.Func&lt;System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Boolean&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Boolean&gt;" uniqueID="Func&lt;System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Boolean&gt;.Func&lt;System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.Boolean">
				<signature>System.Func&lt;System.Boolean&gt;.Invoke():System.Boolean</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Object[]&gt;" uniqueID="System.Comparison&lt;System.Object[]&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object[];System.Object[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Object[]&gt;.BeginInvoke(System.Object[];System.Object[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Object[]&gt;" uniqueID="Comparison&lt;System.Object[]&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Object[]&gt;.Comparison&lt;System.Object[]&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Object[]&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object[];System.Object[]):System.Int32">
				<signature>System.Comparison&lt;System.Object[]&gt;.Invoke(System.Object[];System.Object[]):System.Int32</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Comparison&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Threading.Tasks.Task&gt;.BeginInvoke(System.Threading.Tasks.Task;System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Threading.Tasks.Task&gt;" uniqueID="Comparison&lt;System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Threading.Tasks.Task&gt;.Comparison&lt;System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Threading.Tasks.Task&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task;System.Threading.Tasks.Task):System.Int32">
				<signature>System.Comparison&lt;System.Threading.Tasks.Task&gt;.Invoke(System.Threading.Tasks.Task;System.Threading.Tasks.Task):System.Int32</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Comparison&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.UI.ScriptManagerProxy;System.Web.UI.ScriptManagerProxy;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Web.UI.ScriptManagerProxy&gt;.BeginInvoke(System.Web.UI.ScriptManagerProxy;System.Web.UI.ScriptManagerProxy;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="Comparison&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Web.UI.ScriptManagerProxy&gt;.Comparison&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Web.UI.ScriptManagerProxy&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.UI.ScriptManagerProxy;System.Web.UI.ScriptManagerProxy):System.Int32">
				<signature>System.Comparison&lt;System.Web.UI.ScriptManagerProxy&gt;.Invoke(System.Web.UI.ScriptManagerProxy;System.Web.UI.ScriptManagerProxy):System.Int32</signature>
			</method>
		</class>
		<class name="Comparison&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Comparison&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.UI.ScriptReferenceBase;System.Web.UI.ScriptReferenceBase;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Comparison&lt;System.Web.UI.ScriptReferenceBase&gt;.BeginInvoke(System.Web.UI.ScriptReferenceBase;System.Web.UI.ScriptReferenceBase;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Comparison&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="Comparison&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Comparison&lt;System.Web.UI.ScriptReferenceBase&gt;.Comparison&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Comparison&lt;System.Web.UI.ScriptReferenceBase&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.UI.ScriptReferenceBase;System.Web.UI.ScriptReferenceBase):System.Int32">
				<signature>System.Comparison&lt;System.Web.UI.ScriptReferenceBase&gt;.Invoke(System.Web.UI.ScriptReferenceBase;System.Web.UI.ScriptReferenceBase):System.Int32</signature>
			</method>
		</class>
		<class name="Console" uniqueID="System.Console">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Console.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Beep" uniqueID="Beep():System.Void">
				<signature>System.Console.Beep():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Beep" uniqueID="Beep(System.Int32;System.Int32):System.Void">
				<signature>System.Console.Beep(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="BreakEvent" uniqueID="BreakEvent(System.Int32):System.Boolean">
				<signature>System.Console.BreakEvent(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Console.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ColorAttributeToConsoleColor" uniqueID="ColorAttributeToConsoleColor(Microsoft.Win32.Win32Native+Color):System.ConsoleColor">
				<signature>System.Console.ColorAttributeToConsoleColor(Microsoft.Win32.Win32Native+Color):System.ConsoleColor</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ConsoleColorToColorAttribute" uniqueID="ConsoleColorToColorAttribute(System.ConsoleColor;System.Boolean):Microsoft.Win32.Win32Native+Color">
				<signature>System.Console.ConsoleColorToColorAttribute(System.ConsoleColor;System.Boolean):Microsoft.Win32.Win32Native+Color</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ConsoleHandleIsWritable" uniqueID="ConsoleHandleIsWritable(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Boolean">
				<signature>System.Console.ConsoleHandleIsWritable(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ControlCDelegate" uniqueID="ControlCDelegate(System.Object):System.Void">
				<signature>System.Console.ControlCDelegate(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetBufferInfo" uniqueID="GetBufferInfo():Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO">
				<signature>System.Console.GetBufferInfo():Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetBufferInfo" uniqueID="GetBufferInfo(System.Boolean;System.Boolean):Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO">
				<signature>System.Console.GetBufferInfo(System.Boolean;System.Boolean):Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetStandardFile" uniqueID="GetStandardFile(System.Int32;System.IO.FileAccess;System.Int32):System.IO.Stream">
				<signature>System.Console.GetStandardFile(System.Int32;System.IO.FileAccess;System.Int32):System.IO.Stream</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetTitleNative" uniqueID="GetTitleNative(System.Runtime.CompilerServices.StringHandleOnStack;System.Int32):System.Int32">
				<signature>System.Console.GetTitleNative(System.Runtime.CompilerServices.StringHandleOnStack;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetUseFileAPIs" uniqueID="GetUseFileAPIs(System.Int32):System.Boolean">
				<signature>System.Console.GetUseFileAPIs(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InitializeStdOutError" uniqueID="InitializeStdOutError(System.Boolean):System.Void">
				<signature>System.Console.InitializeStdOutError(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsAltKeyDown" uniqueID="IsAltKeyDown(Microsoft.Win32.Win32Native+InputRecord):System.Boolean">
				<signature>System.Console.IsAltKeyDown(Microsoft.Win32.Win32Native+InputRecord):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsHandleRedirected" uniqueID="IsHandleRedirected(System.IntPtr):System.Boolean">
				<signature>System.Console.IsHandleRedirected(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsKeyDownEvent" uniqueID="IsKeyDownEvent(Microsoft.Win32.Win32Native+InputRecord):System.Boolean">
				<signature>System.Console.IsKeyDownEvent(Microsoft.Win32.Win32Native+InputRecord):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsModKey" uniqueID="IsModKey(Microsoft.Win32.Win32Native+InputRecord):System.Boolean">
				<signature>System.Console.IsModKey(Microsoft.Win32.Win32Native+InputRecord):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsStandardConsoleUnicodeEncoding" uniqueID="IsStandardConsoleUnicodeEncoding(System.Text.Encoding):System.Boolean">
				<signature>System.Console.IsStandardConsoleUnicodeEncoding(System.Text.Encoding):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MoveBufferArea" uniqueID="MoveBufferArea(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32):System.Void">
				<signature>System.Console.MoveBufferArea(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MoveBufferArea" uniqueID="MoveBufferArea(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Char;System.ConsoleColor;System.ConsoleColor):System.Void">
				<signature>System.Console.MoveBufferArea(System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Int32;System.Char;System.ConsoleColor;System.ConsoleColor):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardError" uniqueID="OpenStandardError():System.IO.Stream">
				<signature>System.Console.OpenStandardError():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardError" uniqueID="OpenStandardError(System.Int32):System.IO.Stream">
				<signature>System.Console.OpenStandardError(System.Int32):System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardInput" uniqueID="OpenStandardInput():System.IO.Stream">
				<signature>System.Console.OpenStandardInput():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardInput" uniqueID="OpenStandardInput(System.Int32):System.IO.Stream">
				<signature>System.Console.OpenStandardInput(System.Int32):System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardOutput" uniqueID="OpenStandardOutput():System.IO.Stream">
				<signature>System.Console.OpenStandardOutput():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenStandardOutput" uniqueID="OpenStandardOutput(System.Int32):System.IO.Stream">
				<signature>System.Console.OpenStandardOutput(System.Int32):System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Read" uniqueID="Read():System.Int32">
				<signature>System.Console.Read():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReadKey" uniqueID="ReadKey():System.ConsoleKeyInfo">
				<signature>System.Console.ReadKey():System.ConsoleKeyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReadKey" uniqueID="ReadKey(System.Boolean):System.ConsoleKeyInfo">
				<signature>System.Console.ReadKey(System.Boolean):System.ConsoleKeyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReadLine" uniqueID="ReadLine():System.String">
				<signature>System.Console.ReadLine():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ResetColor" uniqueID="ResetColor():System.Void">
				<signature>System.Console.ResetColor():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetBufferSize" uniqueID="SetBufferSize(System.Int32;System.Int32):System.Void">
				<signature>System.Console.SetBufferSize(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetCursorPosition" uniqueID="SetCursorPosition(System.Int32;System.Int32):System.Void">
				<signature>System.Console.SetCursorPosition(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetError" uniqueID="SetError(System.IO.TextWriter):System.Void">
				<signature>System.Console.SetError(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetIn" uniqueID="SetIn(System.IO.TextReader):System.Void">
				<signature>System.Console.SetIn(System.IO.TextReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetOut" uniqueID="SetOut(System.IO.TextWriter):System.Void">
				<signature>System.Console.SetOut(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetWindowPosition" uniqueID="SetWindowPosition(System.Int32;System.Int32):System.Void">
				<signature>System.Console.SetWindowPosition(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetWindowSize" uniqueID="SetWindowSize(System.Int32;System.Int32):System.Void">
				<signature>System.Console.SetWindowSize(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Boolean):System.Void">
				<signature>System.Console.Write(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Char):System.Void">
				<signature>System.Console.Write(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Char[]):System.Void">
				<signature>System.Console.Write(System.Char[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.Console.Write(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Decimal):System.Void">
				<signature>System.Console.Write(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Double):System.Void">
				<signature>System.Console.Write(System.Double):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Int32):System.Void">
				<signature>System.Console.Write(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Int64):System.Void">
				<signature>System.Console.Write(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Object):System.Void">
				<signature>System.Console.Write(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.Single):System.Void">
				<signature>System.Console.Write(System.Single):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.String):System.Void">
				<signature>System.Console.Write(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.String;System.Object):System.Void">
				<signature>System.Console.Write(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.String;System.Object;System.Object):System.Void">
				<signature>System.Console.Write(System.String;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.String;System.Object;System.Object;System.Object):System.Void">
				<signature>System.Console.Write(System.String;System.Object;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.String;System.Object[]):System.Void">
				<signature>System.Console.Write(System.String;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.UInt32):System.Void">
				<signature>System.Console.Write(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Write" uniqueID="Write(System.UInt64):System.Void">
				<signature>System.Console.Write(System.UInt64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine():System.Void">
				<signature>System.Console.WriteLine():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Boolean):System.Void">
				<signature>System.Console.WriteLine(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Char):System.Void">
				<signature>System.Console.WriteLine(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Char[]):System.Void">
				<signature>System.Console.WriteLine(System.Char[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.Console.WriteLine(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Decimal):System.Void">
				<signature>System.Console.WriteLine(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Double):System.Void">
				<signature>System.Console.WriteLine(System.Double):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Int32):System.Void">
				<signature>System.Console.WriteLine(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Int64):System.Void">
				<signature>System.Console.WriteLine(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Object):System.Void">
				<signature>System.Console.WriteLine(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.Single):System.Void">
				<signature>System.Console.WriteLine(System.Single):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.String):System.Void">
				<signature>System.Console.WriteLine(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.String;System.Object):System.Void">
				<signature>System.Console.WriteLine(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.String;System.Object;System.Object):System.Void">
				<signature>System.Console.WriteLine(System.String;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.String;System.Object;System.Object;System.Object):System.Void">
				<signature>System.Console.WriteLine(System.String;System.Object;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.String;System.Object[]):System.Void">
				<signature>System.Console.WriteLine(System.String;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.UInt32):System.Void">
				<signature>System.Console.WriteLine(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WriteLine" uniqueID="WriteLine(System.UInt64):System.Void">
				<signature>System.Console.WriteLine(System.UInt64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="add_CancelKeyPress" uniqueID="add_CancelKeyPress(System.ConsoleCancelEventHandler):System.Void">
				<signature>System.Console.add_CancelKeyPress(System.ConsoleCancelEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_BackgroundColor" uniqueID="get_BackgroundColor():System.ConsoleColor">
				<signature>System.Console.get_BackgroundColor():System.ConsoleColor</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_BufferHeight" uniqueID="get_BufferHeight():System.Int32">
				<signature>System.Console.get_BufferHeight():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_BufferWidth" uniqueID="get_BufferWidth():System.Int32">
				<signature>System.Console.get_BufferWidth():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CapsLock" uniqueID="get_CapsLock():System.Boolean">
				<signature>System.Console.get_CapsLock():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="get_ConsoleInputHandle" uniqueID="get_ConsoleInputHandle():System.IntPtr">
				<signature>System.Console.get_ConsoleInputHandle():System.IntPtr</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="get_ConsoleOutputHandle" uniqueID="get_ConsoleOutputHandle():System.IntPtr">
				<signature>System.Console.get_ConsoleOutputHandle():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CursorLeft" uniqueID="get_CursorLeft():System.Int32">
				<signature>System.Console.get_CursorLeft():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CursorSize" uniqueID="get_CursorSize():System.Int32">
				<signature>System.Console.get_CursorSize():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CursorTop" uniqueID="get_CursorTop():System.Int32">
				<signature>System.Console.get_CursorTop():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CursorVisible" uniqueID="get_CursorVisible():System.Boolean">
				<signature>System.Console.get_CursorVisible():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Error" uniqueID="get_Error():System.IO.TextWriter">
				<signature>System.Console.get_Error():System.IO.TextWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_ForegroundColor" uniqueID="get_ForegroundColor():System.ConsoleColor">
				<signature>System.Console.get_ForegroundColor():System.ConsoleColor</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_In" uniqueID="get_In():System.IO.TextReader">
				<signature>System.Console.get_In():System.IO.TextReader</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_InputEncoding" uniqueID="get_InputEncoding():System.Text.Encoding">
				<signature>System.Console.get_InputEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="get_InternalSyncObject" uniqueID="get_InternalSyncObject():System.Object">
				<signature>System.Console.get_InternalSyncObject():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_IsErrorRedirected" uniqueID="get_IsErrorRedirected():System.Boolean">
				<signature>System.Console.get_IsErrorRedirected():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_IsInputRedirected" uniqueID="get_IsInputRedirected():System.Boolean">
				<signature>System.Console.get_IsInputRedirected():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_IsOutputRedirected" uniqueID="get_IsOutputRedirected():System.Boolean">
				<signature>System.Console.get_IsOutputRedirected():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_KeyAvailable" uniqueID="get_KeyAvailable():System.Boolean">
				<signature>System.Console.get_KeyAvailable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_LargestWindowHeight" uniqueID="get_LargestWindowHeight():System.Int32">
				<signature>System.Console.get_LargestWindowHeight():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_LargestWindowWidth" uniqueID="get_LargestWindowWidth():System.Int32">
				<signature>System.Console.get_LargestWindowWidth():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_NumberLock" uniqueID="get_NumberLock():System.Boolean">
				<signature>System.Console.get_NumberLock():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Out" uniqueID="get_Out():System.IO.TextWriter">
				<signature>System.Console.get_Out():System.IO.TextWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_OutputEncoding" uniqueID="get_OutputEncoding():System.Text.Encoding">
				<signature>System.Console.get_OutputEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="get_ReadKeySyncObject" uniqueID="get_ReadKeySyncObject():System.Object">
				<signature>System.Console.get_ReadKeySyncObject():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Title" uniqueID="get_Title():System.String">
				<signature>System.Console.get_Title():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_TreatControlCAsInput" uniqueID="get_TreatControlCAsInput():System.Boolean">
				<signature>System.Console.get_TreatControlCAsInput():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_WindowHeight" uniqueID="get_WindowHeight():System.Int32">
				<signature>System.Console.get_WindowHeight():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_WindowLeft" uniqueID="get_WindowLeft():System.Int32">
				<signature>System.Console.get_WindowLeft():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_WindowTop" uniqueID="get_WindowTop():System.Int32">
				<signature>System.Console.get_WindowTop():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_WindowWidth" uniqueID="get_WindowWidth():System.Int32">
				<signature>System.Console.get_WindowWidth():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="remove_CancelKeyPress" uniqueID="remove_CancelKeyPress(System.ConsoleCancelEventHandler):System.Void">
				<signature>System.Console.remove_CancelKeyPress(System.ConsoleCancelEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_BackgroundColor" uniqueID="set_BackgroundColor(System.ConsoleColor):System.Void">
				<signature>System.Console.set_BackgroundColor(System.ConsoleColor):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_BufferHeight" uniqueID="set_BufferHeight(System.Int32):System.Void">
				<signature>System.Console.set_BufferHeight(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_BufferWidth" uniqueID="set_BufferWidth(System.Int32):System.Void">
				<signature>System.Console.set_BufferWidth(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_CursorLeft" uniqueID="set_CursorLeft(System.Int32):System.Void">
				<signature>System.Console.set_CursorLeft(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_CursorSize" uniqueID="set_CursorSize(System.Int32):System.Void">
				<signature>System.Console.set_CursorSize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_CursorTop" uniqueID="set_CursorTop(System.Int32):System.Void">
				<signature>System.Console.set_CursorTop(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_CursorVisible" uniqueID="set_CursorVisible(System.Boolean):System.Void">
				<signature>System.Console.set_CursorVisible(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_ForegroundColor" uniqueID="set_ForegroundColor(System.ConsoleColor):System.Void">
				<signature>System.Console.set_ForegroundColor(System.ConsoleColor):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_InputEncoding" uniqueID="set_InputEncoding(System.Text.Encoding):System.Void">
				<signature>System.Console.set_InputEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_OutputEncoding" uniqueID="set_OutputEncoding(System.Text.Encoding):System.Void">
				<signature>System.Console.set_OutputEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_Title" uniqueID="set_Title(System.String):System.Void">
				<signature>System.Console.set_Title(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_TreatControlCAsInput" uniqueID="set_TreatControlCAsInput(System.Boolean):System.Void">
				<signature>System.Console.set_TreatControlCAsInput(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_WindowHeight" uniqueID="set_WindowHeight(System.Int32):System.Void">
				<signature>System.Console.set_WindowHeight(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_WindowLeft" uniqueID="set_WindowLeft(System.Int32):System.Void">
				<signature>System.Console.set_WindowLeft(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_WindowTop" uniqueID="set_WindowTop(System.Int32):System.Void">
				<signature>System.Console.set_WindowTop(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_WindowWidth" uniqueID="set_WindowWidth(System.Int32):System.Void">
				<signature>System.Console.set_WindowWidth(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Exception&gt;" uniqueID="System.Predicate&lt;System.Exception&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Exception;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Exception&gt;.BeginInvoke(System.Exception;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Exception&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Exception):System.Boolean">
				<signature>System.Predicate&lt;System.Exception&gt;.Invoke(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Exception&gt;" uniqueID="Predicate&lt;System.Exception&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Exception&gt;.Predicate&lt;System.Exception&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Convert" uniqueID="System.Convert">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Convert.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ChangeType" uniqueID="ChangeType(System.Object;System.Type):System.Object">
				<signature>System.Convert.ChangeType(System.Object;System.Type):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ChangeType" uniqueID="ChangeType(System.Object;System.Type;System.IFormatProvider):System.Object">
				<signature>System.Convert.ChangeType(System.Object;System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ChangeType" uniqueID="ChangeType(System.Object;System.TypeCode):System.Object">
				<signature>System.Convert.ChangeType(System.Object;System.TypeCode):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ChangeType" uniqueID="ChangeType(System.Object;System.TypeCode;System.IFormatProvider):System.Object">
				<signature>System.Convert.ChangeType(System.Object;System.TypeCode;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ConvertToBase64Array" uniqueID="ConvertToBase64Array(System.Char;System.Byte;System.Int32;System.Int32;System.Boolean):System.Int32">
				<signature>System.Convert.ConvertToBase64Array(System.Char;System.Byte;System.Int32;System.Int32;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DefaultToType" uniqueID="DefaultToType(System.IConvertible;System.Type;System.IFormatProvider):System.Object">
				<signature>System.Convert.DefaultToType(System.IConvertible;System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FromBase64CharArray" uniqueID="FromBase64CharArray(System.Char[];System.Int32;System.Int32):System.Byte[]">
				<signature>System.Convert.FromBase64CharArray(System.Char[];System.Int32;System.Int32):System.Byte[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromBase64CharPtr" uniqueID="FromBase64CharPtr(System.Char;System.Int32):System.Byte[]">
				<signature>System.Convert.FromBase64CharPtr(System.Char;System.Int32):System.Byte[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FromBase64String" uniqueID="FromBase64String(System.String):System.Byte[]">
				<signature>System.Convert.FromBase64String(System.String):System.Byte[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromBase64_ComputeResultLength" uniqueID="FromBase64_ComputeResultLength(System.Char;System.Int32):System.Int32">
				<signature>System.Convert.FromBase64_ComputeResultLength(System.Char;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromBase64_Decode" uniqueID="FromBase64_Decode(System.Char;System.Int32;System.Byte;System.Int32):System.Int32">
				<signature>System.Convert.FromBase64_Decode(System.Char;System.Int32;System.Byte;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeCode" uniqueID="GetTypeCode(System.Object):System.TypeCode">
				<signature>System.Convert.GetTypeCode(System.Object):System.TypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsDBNull" uniqueID="IsDBNull(System.Object):System.Boolean">
				<signature>System.Convert.IsDBNull(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64CharArray" uniqueID="ToBase64CharArray(System.Byte[];System.Int32;System.Int32;System.Char[];System.Int32):System.Int32">
				<signature>System.Convert.ToBase64CharArray(System.Byte[];System.Int32;System.Int32;System.Char[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64CharArray" uniqueID="ToBase64CharArray(System.Byte[];System.Int32;System.Int32;System.Char[];System.Int32;System.Base64FormattingOptions):System.Int32">
				<signature>System.Convert.ToBase64CharArray(System.Byte[];System.Int32;System.Int32;System.Char[];System.Int32;System.Base64FormattingOptions):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64String" uniqueID="ToBase64String(System.Byte[]):System.String">
				<signature>System.Convert.ToBase64String(System.Byte[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64String" uniqueID="ToBase64String(System.Byte[];System.Base64FormattingOptions):System.String">
				<signature>System.Convert.ToBase64String(System.Byte[];System.Base64FormattingOptions):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64String" uniqueID="ToBase64String(System.Byte[];System.Int32;System.Int32):System.String">
				<signature>System.Convert.ToBase64String(System.Byte[];System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBase64String" uniqueID="ToBase64String(System.Byte[];System.Int32;System.Int32;System.Base64FormattingOptions):System.String">
				<signature>System.Convert.ToBase64String(System.Byte[];System.Int32;System.Int32;System.Base64FormattingOptions):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ToBase64_CalculateAndValidateOutputLength" uniqueID="ToBase64_CalculateAndValidateOutputLength(System.Int32;System.Boolean):System.Int32">
				<signature>System.Convert.ToBase64_CalculateAndValidateOutputLength(System.Int32;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Boolean):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Byte):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Byte):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Char):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.DateTime):System.Boolean">
				<signature>System.Convert.ToBoolean(System.DateTime):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Decimal):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Decimal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Double):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Double):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Int16):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Int16):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Int32):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Int64):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Int64):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Object):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Object;System.IFormatProvider):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Object;System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.SByte):System.Boolean">
				<signature>System.Convert.ToBoolean(System.SByte):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.Single):System.Boolean">
				<signature>System.Convert.ToBoolean(System.Single):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.String):System.Boolean">
				<signature>System.Convert.ToBoolean(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.String;System.IFormatProvider):System.Boolean">
				<signature>System.Convert.ToBoolean(System.String;System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.UInt16):System.Boolean">
				<signature>System.Convert.ToBoolean(System.UInt16):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.UInt32):System.Boolean">
				<signature>System.Convert.ToBoolean(System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToBoolean" uniqueID="ToBoolean(System.UInt64):System.Boolean">
				<signature>System.Convert.ToBoolean(System.UInt64):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Boolean):System.Byte">
				<signature>System.Convert.ToByte(System.Boolean):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Byte):System.Byte">
				<signature>System.Convert.ToByte(System.Byte):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Char):System.Byte">
				<signature>System.Convert.ToByte(System.Char):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.DateTime):System.Byte">
				<signature>System.Convert.ToByte(System.DateTime):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Decimal):System.Byte">
				<signature>System.Convert.ToByte(System.Decimal):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Double):System.Byte">
				<signature>System.Convert.ToByte(System.Double):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Int16):System.Byte">
				<signature>System.Convert.ToByte(System.Int16):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Int32):System.Byte">
				<signature>System.Convert.ToByte(System.Int32):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Int64):System.Byte">
				<signature>System.Convert.ToByte(System.Int64):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Object):System.Byte">
				<signature>System.Convert.ToByte(System.Object):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Object;System.IFormatProvider):System.Byte">
				<signature>System.Convert.ToByte(System.Object;System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.SByte):System.Byte">
				<signature>System.Convert.ToByte(System.SByte):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.Single):System.Byte">
				<signature>System.Convert.ToByte(System.Single):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.String):System.Byte">
				<signature>System.Convert.ToByte(System.String):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.String;System.IFormatProvider):System.Byte">
				<signature>System.Convert.ToByte(System.String;System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.String;System.Int32):System.Byte">
				<signature>System.Convert.ToByte(System.String;System.Int32):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.UInt16):System.Byte">
				<signature>System.Convert.ToByte(System.UInt16):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.UInt32):System.Byte">
				<signature>System.Convert.ToByte(System.UInt32):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToByte" uniqueID="ToByte(System.UInt64):System.Byte">
				<signature>System.Convert.ToByte(System.UInt64):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Boolean):System.Char">
				<signature>System.Convert.ToChar(System.Boolean):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Byte):System.Char">
				<signature>System.Convert.ToChar(System.Byte):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Char):System.Char">
				<signature>System.Convert.ToChar(System.Char):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.DateTime):System.Char">
				<signature>System.Convert.ToChar(System.DateTime):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Decimal):System.Char">
				<signature>System.Convert.ToChar(System.Decimal):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Double):System.Char">
				<signature>System.Convert.ToChar(System.Double):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Int16):System.Char">
				<signature>System.Convert.ToChar(System.Int16):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Int32):System.Char">
				<signature>System.Convert.ToChar(System.Int32):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Int64):System.Char">
				<signature>System.Convert.ToChar(System.Int64):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Object):System.Char">
				<signature>System.Convert.ToChar(System.Object):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Object;System.IFormatProvider):System.Char">
				<signature>System.Convert.ToChar(System.Object;System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.SByte):System.Char">
				<signature>System.Convert.ToChar(System.SByte):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.Single):System.Char">
				<signature>System.Convert.ToChar(System.Single):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.String):System.Char">
				<signature>System.Convert.ToChar(System.String):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.String;System.IFormatProvider):System.Char">
				<signature>System.Convert.ToChar(System.String;System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.UInt16):System.Char">
				<signature>System.Convert.ToChar(System.UInt16):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.UInt32):System.Char">
				<signature>System.Convert.ToChar(System.UInt32):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToChar" uniqueID="ToChar(System.UInt64):System.Char">
				<signature>System.Convert.ToChar(System.UInt64):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Boolean):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Boolean):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Byte):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Byte):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Char):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Char):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.DateTime):System.DateTime">
				<signature>System.Convert.ToDateTime(System.DateTime):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Decimal):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Decimal):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Double):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Double):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Int16):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Int16):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Int32):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Int32):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Int64):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Int64):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Object):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Object):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Object;System.IFormatProvider):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Object;System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.SByte):System.DateTime">
				<signature>System.Convert.ToDateTime(System.SByte):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.Single):System.DateTime">
				<signature>System.Convert.ToDateTime(System.Single):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.String):System.DateTime">
				<signature>System.Convert.ToDateTime(System.String):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.String;System.IFormatProvider):System.DateTime">
				<signature>System.Convert.ToDateTime(System.String;System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.UInt16):System.DateTime">
				<signature>System.Convert.ToDateTime(System.UInt16):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.UInt32):System.DateTime">
				<signature>System.Convert.ToDateTime(System.UInt32):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDateTime" uniqueID="ToDateTime(System.UInt64):System.DateTime">
				<signature>System.Convert.ToDateTime(System.UInt64):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Boolean):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Boolean):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Byte):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Byte):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Char):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Char):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.DateTime):System.Decimal">
				<signature>System.Convert.ToDecimal(System.DateTime):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Decimal):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Decimal):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Double):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Double):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Int16):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Int16):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Int32):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Int32):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Int64):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Int64):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Object):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Object):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Object;System.IFormatProvider):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Object;System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.SByte):System.Decimal">
				<signature>System.Convert.ToDecimal(System.SByte):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.Single):System.Decimal">
				<signature>System.Convert.ToDecimal(System.Single):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.String):System.Decimal">
				<signature>System.Convert.ToDecimal(System.String):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.String;System.IFormatProvider):System.Decimal">
				<signature>System.Convert.ToDecimal(System.String;System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.UInt16):System.Decimal">
				<signature>System.Convert.ToDecimal(System.UInt16):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.UInt32):System.Decimal">
				<signature>System.Convert.ToDecimal(System.UInt32):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDecimal" uniqueID="ToDecimal(System.UInt64):System.Decimal">
				<signature>System.Convert.ToDecimal(System.UInt64):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Boolean):System.Double">
				<signature>System.Convert.ToDouble(System.Boolean):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Byte):System.Double">
				<signature>System.Convert.ToDouble(System.Byte):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Char):System.Double">
				<signature>System.Convert.ToDouble(System.Char):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.DateTime):System.Double">
				<signature>System.Convert.ToDouble(System.DateTime):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Decimal):System.Double">
				<signature>System.Convert.ToDouble(System.Decimal):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Double):System.Double">
				<signature>System.Convert.ToDouble(System.Double):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Int16):System.Double">
				<signature>System.Convert.ToDouble(System.Int16):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Int32):System.Double">
				<signature>System.Convert.ToDouble(System.Int32):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Int64):System.Double">
				<signature>System.Convert.ToDouble(System.Int64):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Object):System.Double">
				<signature>System.Convert.ToDouble(System.Object):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Object;System.IFormatProvider):System.Double">
				<signature>System.Convert.ToDouble(System.Object;System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.SByte):System.Double">
				<signature>System.Convert.ToDouble(System.SByte):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.Single):System.Double">
				<signature>System.Convert.ToDouble(System.Single):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.String):System.Double">
				<signature>System.Convert.ToDouble(System.String):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.String;System.IFormatProvider):System.Double">
				<signature>System.Convert.ToDouble(System.String;System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.UInt16):System.Double">
				<signature>System.Convert.ToDouble(System.UInt16):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.UInt32):System.Double">
				<signature>System.Convert.ToDouble(System.UInt32):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToDouble" uniqueID="ToDouble(System.UInt64):System.Double">
				<signature>System.Convert.ToDouble(System.UInt64):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Boolean):System.Int16">
				<signature>System.Convert.ToInt16(System.Boolean):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Byte):System.Int16">
				<signature>System.Convert.ToInt16(System.Byte):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Char):System.Int16">
				<signature>System.Convert.ToInt16(System.Char):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.DateTime):System.Int16">
				<signature>System.Convert.ToInt16(System.DateTime):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Decimal):System.Int16">
				<signature>System.Convert.ToInt16(System.Decimal):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Double):System.Int16">
				<signature>System.Convert.ToInt16(System.Double):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Int16):System.Int16">
				<signature>System.Convert.ToInt16(System.Int16):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Int32):System.Int16">
				<signature>System.Convert.ToInt16(System.Int32):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Int64):System.Int16">
				<signature>System.Convert.ToInt16(System.Int64):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Object):System.Int16">
				<signature>System.Convert.ToInt16(System.Object):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Object;System.IFormatProvider):System.Int16">
				<signature>System.Convert.ToInt16(System.Object;System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.SByte):System.Int16">
				<signature>System.Convert.ToInt16(System.SByte):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.Single):System.Int16">
				<signature>System.Convert.ToInt16(System.Single):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.String):System.Int16">
				<signature>System.Convert.ToInt16(System.String):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.String;System.IFormatProvider):System.Int16">
				<signature>System.Convert.ToInt16(System.String;System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.String;System.Int32):System.Int16">
				<signature>System.Convert.ToInt16(System.String;System.Int32):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.UInt16):System.Int16">
				<signature>System.Convert.ToInt16(System.UInt16):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.UInt32):System.Int16">
				<signature>System.Convert.ToInt16(System.UInt32):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt16" uniqueID="ToInt16(System.UInt64):System.Int16">
				<signature>System.Convert.ToInt16(System.UInt64):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Boolean):System.Int32">
				<signature>System.Convert.ToInt32(System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Byte):System.Int32">
				<signature>System.Convert.ToInt32(System.Byte):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Char):System.Int32">
				<signature>System.Convert.ToInt32(System.Char):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.DateTime):System.Int32">
				<signature>System.Convert.ToInt32(System.DateTime):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Decimal):System.Int32">
				<signature>System.Convert.ToInt32(System.Decimal):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Double):System.Int32">
				<signature>System.Convert.ToInt32(System.Double):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Int16):System.Int32">
				<signature>System.Convert.ToInt32(System.Int16):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Int32):System.Int32">
				<signature>System.Convert.ToInt32(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Int64):System.Int32">
				<signature>System.Convert.ToInt32(System.Int64):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Object):System.Int32">
				<signature>System.Convert.ToInt32(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Object;System.IFormatProvider):System.Int32">
				<signature>System.Convert.ToInt32(System.Object;System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.SByte):System.Int32">
				<signature>System.Convert.ToInt32(System.SByte):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.Single):System.Int32">
				<signature>System.Convert.ToInt32(System.Single):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.String):System.Int32">
				<signature>System.Convert.ToInt32(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.String;System.IFormatProvider):System.Int32">
				<signature>System.Convert.ToInt32(System.String;System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.String;System.Int32):System.Int32">
				<signature>System.Convert.ToInt32(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.UInt16):System.Int32">
				<signature>System.Convert.ToInt32(System.UInt16):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.UInt32):System.Int32">
				<signature>System.Convert.ToInt32(System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt32" uniqueID="ToInt32(System.UInt64):System.Int32">
				<signature>System.Convert.ToInt32(System.UInt64):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Boolean):System.Int64">
				<signature>System.Convert.ToInt64(System.Boolean):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Byte):System.Int64">
				<signature>System.Convert.ToInt64(System.Byte):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Char):System.Int64">
				<signature>System.Convert.ToInt64(System.Char):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.DateTime):System.Int64">
				<signature>System.Convert.ToInt64(System.DateTime):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Decimal):System.Int64">
				<signature>System.Convert.ToInt64(System.Decimal):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Double):System.Int64">
				<signature>System.Convert.ToInt64(System.Double):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Int16):System.Int64">
				<signature>System.Convert.ToInt64(System.Int16):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Int32):System.Int64">
				<signature>System.Convert.ToInt64(System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Int64):System.Int64">
				<signature>System.Convert.ToInt64(System.Int64):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Object):System.Int64">
				<signature>System.Convert.ToInt64(System.Object):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Object;System.IFormatProvider):System.Int64">
				<signature>System.Convert.ToInt64(System.Object;System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.SByte):System.Int64">
				<signature>System.Convert.ToInt64(System.SByte):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.Single):System.Int64">
				<signature>System.Convert.ToInt64(System.Single):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.String):System.Int64">
				<signature>System.Convert.ToInt64(System.String):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.String;System.IFormatProvider):System.Int64">
				<signature>System.Convert.ToInt64(System.String;System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.String;System.Int32):System.Int64">
				<signature>System.Convert.ToInt64(System.String;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.UInt16):System.Int64">
				<signature>System.Convert.ToInt64(System.UInt16):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.UInt32):System.Int64">
				<signature>System.Convert.ToInt64(System.UInt32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToInt64" uniqueID="ToInt64(System.UInt64):System.Int64">
				<signature>System.Convert.ToInt64(System.UInt64):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Boolean):System.SByte">
				<signature>System.Convert.ToSByte(System.Boolean):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Byte):System.SByte">
				<signature>System.Convert.ToSByte(System.Byte):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Char):System.SByte">
				<signature>System.Convert.ToSByte(System.Char):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.DateTime):System.SByte">
				<signature>System.Convert.ToSByte(System.DateTime):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Decimal):System.SByte">
				<signature>System.Convert.ToSByte(System.Decimal):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Double):System.SByte">
				<signature>System.Convert.ToSByte(System.Double):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Int16):System.SByte">
				<signature>System.Convert.ToSByte(System.Int16):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Int32):System.SByte">
				<signature>System.Convert.ToSByte(System.Int32):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Int64):System.SByte">
				<signature>System.Convert.ToSByte(System.Int64):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Object):System.SByte">
				<signature>System.Convert.ToSByte(System.Object):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Object;System.IFormatProvider):System.SByte">
				<signature>System.Convert.ToSByte(System.Object;System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.SByte):System.SByte">
				<signature>System.Convert.ToSByte(System.SByte):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.Single):System.SByte">
				<signature>System.Convert.ToSByte(System.Single):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.String):System.SByte">
				<signature>System.Convert.ToSByte(System.String):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.String;System.IFormatProvider):System.SByte">
				<signature>System.Convert.ToSByte(System.String;System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.String;System.Int32):System.SByte">
				<signature>System.Convert.ToSByte(System.String;System.Int32):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.UInt16):System.SByte">
				<signature>System.Convert.ToSByte(System.UInt16):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.UInt32):System.SByte">
				<signature>System.Convert.ToSByte(System.UInt32):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSByte" uniqueID="ToSByte(System.UInt64):System.SByte">
				<signature>System.Convert.ToSByte(System.UInt64):System.SByte</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Boolean):System.Single">
				<signature>System.Convert.ToSingle(System.Boolean):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Byte):System.Single">
				<signature>System.Convert.ToSingle(System.Byte):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Char):System.Single">
				<signature>System.Convert.ToSingle(System.Char):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.DateTime):System.Single">
				<signature>System.Convert.ToSingle(System.DateTime):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Decimal):System.Single">
				<signature>System.Convert.ToSingle(System.Decimal):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Double):System.Single">
				<signature>System.Convert.ToSingle(System.Double):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Int16):System.Single">
				<signature>System.Convert.ToSingle(System.Int16):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Int32):System.Single">
				<signature>System.Convert.ToSingle(System.Int32):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Int64):System.Single">
				<signature>System.Convert.ToSingle(System.Int64):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Object):System.Single">
				<signature>System.Convert.ToSingle(System.Object):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Object;System.IFormatProvider):System.Single">
				<signature>System.Convert.ToSingle(System.Object;System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.SByte):System.Single">
				<signature>System.Convert.ToSingle(System.SByte):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.Single):System.Single">
				<signature>System.Convert.ToSingle(System.Single):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.String):System.Single">
				<signature>System.Convert.ToSingle(System.String):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.String;System.IFormatProvider):System.Single">
				<signature>System.Convert.ToSingle(System.String;System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.UInt16):System.Single">
				<signature>System.Convert.ToSingle(System.UInt16):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.UInt32):System.Single">
				<signature>System.Convert.ToSingle(System.UInt32):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToSingle" uniqueID="ToSingle(System.UInt64):System.Single">
				<signature>System.Convert.ToSingle(System.UInt64):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Boolean):System.String">
				<signature>System.Convert.ToString(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Boolean;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Boolean;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Byte):System.String">
				<signature>System.Convert.ToString(System.Byte):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Byte;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Byte;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Byte;System.Int32):System.String">
				<signature>System.Convert.ToString(System.Byte;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Char):System.String">
				<signature>System.Convert.ToString(System.Char):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Char;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Char;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.DateTime):System.String">
				<signature>System.Convert.ToString(System.DateTime):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.DateTime;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.DateTime;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Decimal):System.String">
				<signature>System.Convert.ToString(System.Decimal):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Decimal;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Decimal;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Double):System.String">
				<signature>System.Convert.ToString(System.Double):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Double;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Double;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int16):System.String">
				<signature>System.Convert.ToString(System.Int16):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int16;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Int16;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int16;System.Int32):System.String">
				<signature>System.Convert.ToString(System.Int16;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int32):System.String">
				<signature>System.Convert.ToString(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int32;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Int32;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int32;System.Int32):System.String">
				<signature>System.Convert.ToString(System.Int32;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int64):System.String">
				<signature>System.Convert.ToString(System.Int64):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int64;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Int64;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Int64;System.Int32):System.String">
				<signature>System.Convert.ToString(System.Int64;System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Object):System.String">
				<signature>System.Convert.ToString(System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Object;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Object;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.SByte):System.String">
				<signature>System.Convert.ToString(System.SByte):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.SByte;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.SByte;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Single):System.String">
				<signature>System.Convert.ToString(System.Single):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.Single;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.Single;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.Convert.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt16):System.String">
				<signature>System.Convert.ToString(System.UInt16):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt16;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.UInt16;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt32):System.String">
				<signature>System.Convert.ToString(System.UInt32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt32;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.UInt32;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt64):System.String">
				<signature>System.Convert.ToString(System.UInt64):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToString" uniqueID="ToString(System.UInt64;System.IFormatProvider):System.String">
				<signature>System.Convert.ToString(System.UInt64;System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Boolean):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Boolean):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Byte):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Byte):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Char):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Char):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.DateTime):System.UInt16">
				<signature>System.Convert.ToUInt16(System.DateTime):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Decimal):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Decimal):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Double):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Double):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Int16):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Int16):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Int32):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Int32):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Int64):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Int64):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Object):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Object):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Object;System.IFormatProvider):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Object;System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.SByte):System.UInt16">
				<signature>System.Convert.ToUInt16(System.SByte):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.Single):System.UInt16">
				<signature>System.Convert.ToUInt16(System.Single):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.String):System.UInt16">
				<signature>System.Convert.ToUInt16(System.String):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.String;System.IFormatProvider):System.UInt16">
				<signature>System.Convert.ToUInt16(System.String;System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.String;System.Int32):System.UInt16">
				<signature>System.Convert.ToUInt16(System.String;System.Int32):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.UInt16):System.UInt16">
				<signature>System.Convert.ToUInt16(System.UInt16):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.UInt32):System.UInt16">
				<signature>System.Convert.ToUInt16(System.UInt32):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt16" uniqueID="ToUInt16(System.UInt64):System.UInt16">
				<signature>System.Convert.ToUInt16(System.UInt64):System.UInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Boolean):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Boolean):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Byte):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Byte):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Char):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Char):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.DateTime):System.UInt32">
				<signature>System.Convert.ToUInt32(System.DateTime):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Decimal):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Decimal):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Double):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Double):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Int16):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Int16):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Int32):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Int32):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Int64):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Int64):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Object):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Object):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Object;System.IFormatProvider):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Object;System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.SByte):System.UInt32">
				<signature>System.Convert.ToUInt32(System.SByte):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.Single):System.UInt32">
				<signature>System.Convert.ToUInt32(System.Single):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.String):System.UInt32">
				<signature>System.Convert.ToUInt32(System.String):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.String;System.IFormatProvider):System.UInt32">
				<signature>System.Convert.ToUInt32(System.String;System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.String;System.Int32):System.UInt32">
				<signature>System.Convert.ToUInt32(System.String;System.Int32):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.UInt16):System.UInt32">
				<signature>System.Convert.ToUInt32(System.UInt16):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.UInt32):System.UInt32">
				<signature>System.Convert.ToUInt32(System.UInt32):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt32" uniqueID="ToUInt32(System.UInt64):System.UInt32">
				<signature>System.Convert.ToUInt32(System.UInt64):System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Boolean):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Boolean):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Byte):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Byte):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Char):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Char):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.DateTime):System.UInt64">
				<signature>System.Convert.ToUInt64(System.DateTime):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Decimal):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Decimal):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Double):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Double):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Int16):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Int16):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Int32):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Int32):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Int64):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Int64):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Object):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Object):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Object;System.IFormatProvider):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Object;System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.SByte):System.UInt64">
				<signature>System.Convert.ToUInt64(System.SByte):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.Single):System.UInt64">
				<signature>System.Convert.ToUInt64(System.Single):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.String):System.UInt64">
				<signature>System.Convert.ToUInt64(System.String):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.String;System.IFormatProvider):System.UInt64">
				<signature>System.Convert.ToUInt64(System.String;System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.String;System.Int32):System.UInt64">
				<signature>System.Convert.ToUInt64(System.String;System.Int32):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.UInt16):System.UInt64">
				<signature>System.Convert.ToUInt64(System.UInt16):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.UInt32):System.UInt64">
				<signature>System.Convert.ToUInt64(System.UInt32):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ToUInt64" uniqueID="ToUInt64(System.UInt64):System.UInt64">
				<signature>System.Convert.ToUInt64(System.UInt64):System.UInt64</signature>
			</method>
		</class>
		<class name="Converter&lt;System.Type,System.String&gt;" uniqueID="System.Converter&lt;System.Type,System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Type;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Converter&lt;System.Type,System.String&gt;.BeginInvoke(System.Type;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Converter&lt;System.Type,System.String&gt;" uniqueID="Converter&lt;System.Type,System.String&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Converter&lt;System.Type,System.String&gt;.Converter&lt;System.Type,System.String&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.String">
				<signature>System.Converter&lt;System.Type,System.String&gt;.EndInvoke(System.IAsyncResult):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Type):System.String">
				<signature>System.Converter&lt;System.Type,System.String&gt;.Invoke(System.Type):System.String</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task,System.Boolean&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task,System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Boolean&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task,System.Boolean&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task,System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Boolean&gt;.Func&lt;System.Threading.Tasks.Task,System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Boolean&gt;.Invoke(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
		</class>
		<class name="Enum+EnumResult" uniqueID="System.Enum+EnumResult">
			<method accessibility="Protected" methodKind="Member" name="GetEnumParseException" uniqueID="GetEnumParseException():System.Exception">
				<signature>System.Enum+EnumResult.GetEnumParseException():System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Init" uniqueID="Init(System.Boolean):System.Void">
				<signature>System.Enum+EnumResult.Init(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetFailure" uniqueID="SetFailure(System.Enum+ParseFailureKind;System.String):System.Void">
				<signature>System.Enum+EnumResult.SetFailure(System.Enum+ParseFailureKind;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetFailure" uniqueID="SetFailure(System.Enum+ParseFailureKind;System.String;System.Object):System.Void">
				<signature>System.Enum+EnumResult.SetFailure(System.Enum+ParseFailureKind;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetFailure" uniqueID="SetFailure(System.Exception):System.Void">
				<signature>System.Enum+EnumResult.SetFailure(System.Exception):System.Void</signature>
			</method>
		</class>
		<class name="Enum+HashEntry" uniqueID="System.Enum+HashEntry">
			<method accessibility="Public" methodKind="Member" name="Enum+HashEntry" uniqueID="Enum+HashEntry(System.String[];System.UInt64[]):System.Void">
				<signature>System.Enum+HashEntry.Enum+HashEntry(System.String[];System.UInt64[]):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.IAsyncResult,System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="System.Func&lt;System.IAsyncResult,System.Data.ProviderBase.DbConnectionInternal&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.ProviderBase.DbConnectionInternal&gt;.BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.ProviderBase.DbConnectionInternal&gt;.EndInvoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.IAsyncResult,System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Func&lt;System.IAsyncResult,System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.ProviderBase.DbConnectionInternal&gt;.Func&lt;System.IAsyncResult,System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.ProviderBase.DbConnectionInternal&gt;.Invoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
		</class>
		<class name="EventArgs" uniqueID="System.EventArgs">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.EventArgs.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EventArgs" uniqueID="EventArgs():System.Void">
				<signature>System.EventArgs.EventArgs():System.Void</signature>
			</method>
		</class>
		<class name="EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;" uniqueID="System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.Runtime.Serialization.SafeSerializationEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;.BeginInvoke(System.Object;System.Runtime.Serialization.SafeSerializationEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;" uniqueID="EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Runtime.Serialization.SafeSerializationEventArgs):System.Void">
				<signature>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;.Invoke(System.Object;System.Runtime.Serialization.SafeSerializationEventArgs):System.Void</signature>
			</method>
		</class>
		<class name="EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;" uniqueID="System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.Web.UI.AsyncPostBackErrorEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;.BeginInvoke(System.Object;System.Web.UI.AsyncPostBackErrorEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;" uniqueID="EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Web.UI.AsyncPostBackErrorEventArgs):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;.Invoke(System.Object;System.Web.UI.AsyncPostBackErrorEventArgs):System.Void</signature>
			</method>
		</class>
		<class name="EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;" uniqueID="System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.Web.UI.CompositeScriptReferenceEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;.BeginInvoke(System.Object;System.Web.UI.CompositeScriptReferenceEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;" uniqueID="EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Web.UI.CompositeScriptReferenceEventArgs):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;.Invoke(System.Object;System.Web.UI.CompositeScriptReferenceEventArgs):System.Void</signature>
			</method>
		</class>
		<class name="EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;" uniqueID="System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.Web.UI.HistoryEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;.BeginInvoke(System.Object;System.Web.UI.HistoryEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;" uniqueID="EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Web.UI.HistoryEventArgs):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;.Invoke(System.Object;System.Web.UI.HistoryEventArgs):System.Void</signature>
			</method>
		</class>
		<class name="EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;" uniqueID="System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.Web.UI.ScriptReferenceEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;.BeginInvoke(System.Object;System.Web.UI.ScriptReferenceEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;" uniqueID="EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object;System.Web.UI.ScriptReferenceEventArgs):System.Void">
				<signature>System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;.Invoke(System.Object;System.Web.UI.ScriptReferenceEventArgs):System.Void</signature>
			</method>
		</class>
		<class name="Exception" uniqueID="System.Exception">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Exception.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CopyDynamicMethods" uniqueID="CopyDynamicMethods(System.Object):System.Object">
				<signature>System.Exception.CopyDynamicMethods(System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CopyStackTrace" uniqueID="CopyStackTrace(System.Object):System.Object">
				<signature>System.Exception.CopyStackTrace(System.Object):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMessageFromNativeResources" uniqueID="GetMessageFromNativeResources(System.Exception+ExceptionMessageKind):System.String">
				<signature>System.Exception.GetMessageFromNativeResources(System.Exception+ExceptionMessageKind):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMessageFromNativeResources" uniqueID="GetMessageFromNativeResources(System.Exception+ExceptionMessageKind;System.Runtime.CompilerServices.StringHandleOnStack):System.Void">
				<signature>System.Exception.GetMessageFromNativeResources(System.Exception+ExceptionMessageKind;System.Runtime.CompilerServices.StringHandleOnStack):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetMethodFromStackTrace" uniqueID="GetMethodFromStackTrace(System.Object):System.IRuntimeMethodInfo">
				<signature>System.Exception.GetMethodFromStackTrace(System.Object):System.IRuntimeMethodInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetStackTracesDeepCopy" uniqueID="GetStackTracesDeepCopy(System.Exception;System.Object;System.Object):System.Void">
				<signature>System.Exception.GetStackTracesDeepCopy(System.Exception;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsImmutableAgileException" uniqueID="IsImmutableAgileException(System.Exception):System.Boolean">
				<signature>System.Exception.IsImmutableAgileException(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="PrepareForForeignExceptionRaise" uniqueID="PrepareForForeignExceptionRaise():System.Void">
				<signature>System.Exception.PrepareForForeignExceptionRaise():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SaveStackTracesFromDeepCopy" uniqueID="SaveStackTracesFromDeepCopy(System.Exception;System.Object;System.Object):System.Void">
				<signature>System.Exception.SaveStackTracesFromDeepCopy(System.Exception;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="nIsTransient" uniqueID="nIsTransient(System.Int32):System.Boolean">
				<signature>System.Exception.nIsTransient(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddExceptionDataForRestrictedErrorInfo" uniqueID="AddExceptionDataForRestrictedErrorInfo(System.String;System.String;System.String;System.Object;System.Boolean):System.Void">
				<signature>System.Exception.AddExceptionDataForRestrictedErrorInfo(System.String;System.String;System.String;System.Object;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeepCopyDynamicMethods" uniqueID="DeepCopyDynamicMethods(System.Object):System.Object">
				<signature>System.Exception.DeepCopyDynamicMethods(System.Object):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeepCopyStackTrace" uniqueID="DeepCopyStackTrace(System.Object):System.Object">
				<signature>System.Exception.DeepCopyStackTrace(System.Object):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exception" uniqueID="Exception():System.Void">
				<signature>System.Exception.Exception():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Exception" uniqueID="Exception(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Exception.Exception(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exception" uniqueID="Exception(System.String):System.Void">
				<signature>System.Exception.Exception(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exception" uniqueID="Exception(System.String;System.Exception):System.Void">
				<signature>System.Exception.Exception(System.String;System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBaseException" uniqueID="GetBaseException():System.Exception">
				<signature>System.Exception.GetBaseException():System.Exception</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetClassName" uniqueID="GetClassName():System.String">
				<signature>System.Exception.GetClassName():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetExceptionMethodFromStackTrace" uniqueID="GetExceptionMethodFromStackTrace():System.Reflection.MethodBase">
				<signature>System.Exception.GetExceptionMethodFromStackTrace():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetExceptionMethodFromString" uniqueID="GetExceptionMethodFromString():System.Reflection.MethodBase">
				<signature>System.Exception.GetExceptionMethodFromString():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetExceptionMethodString" uniqueID="GetExceptionMethodString():System.String">
				<signature>System.Exception.GetExceptionMethodString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetStackTrace" uniqueID="GetStackTrace(System.Boolean):System.String">
				<signature>System.Exception.GetStackTrace(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetStackTracesDeepCopy" uniqueID="GetStackTracesDeepCopy(System.Object;System.Object):System.Void">
				<signature>System.Exception.GetStackTracesDeepCopy(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetTargetSiteInternal" uniqueID="GetTargetSiteInternal():System.Reflection.MethodBase">
				<signature>System.Exception.GetTargetSiteInternal():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Exception.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Init" uniqueID="Init():System.Void">
				<signature>System.Exception.Init():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalPreserveStackTrace" uniqueID="InternalPreserveStackTrace():System.Void">
				<signature>System.Exception.InternalPreserveStackTrace():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalToString" uniqueID="InternalToString():System.String">
				<signature>System.Exception.InternalToString():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnDeserialized" uniqueID="OnDeserialized(System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Exception.OnDeserialized(System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PrepForRemoting" uniqueID="PrepForRemoting():System.Exception">
				<signature>System.Exception.PrepForRemoting():System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RestoreExceptionDispatchInfo" uniqueID="RestoreExceptionDispatchInfo(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void">
				<signature>System.Exception.RestoreExceptionDispatchInfo(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetErrorCode" uniqueID="SetErrorCode(System.Int32):System.Void">
				<signature>System.Exception.SetErrorCode(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StripFileInfo" uniqueID="StripFileInfo(System.String;System.Boolean):System.String">
				<signature>System.Exception.StripFileInfo(System.String;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Exception.ToString():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ToString" uniqueID="ToString(System.Boolean;System.Boolean):System.String">
				<signature>System.Exception.ToString(System.Boolean;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TryGetRestrictedLanguageErrorObject" uniqueID="TryGetRestrictedLanguageErrorObject(System.Object):System.Boolean">
				<signature>System.Exception.TryGetRestrictedLanguageErrorObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_SerializeObjectState" uniqueID="add_SerializeObjectState(System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;):System.Void">
				<signature>System.Exception.add_SerializeObjectState(System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Data" uniqueID="get_Data():System.Collections.IDictionary">
				<signature>System.Exception.get_Data():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HResult" uniqueID="get_HResult():System.Int32">
				<signature>System.Exception.get_HResult():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HelpLink" uniqueID="get_HelpLink():System.String">
				<signature>System.Exception.get_HelpLink():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IPForWatsonBuckets" uniqueID="get_IPForWatsonBuckets():System.UIntPtr">
				<signature>System.Exception.get_IPForWatsonBuckets():System.UIntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InnerException" uniqueID="get_InnerException():System.Exception">
				<signature>System.Exception.get_InnerException():System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsTransient" uniqueID="get_IsTransient():System.Boolean">
				<signature>System.Exception.get_IsTransient():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Message" uniqueID="get_Message():System.String">
				<signature>System.Exception.get_Message():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RemoteStackTrace" uniqueID="get_RemoteStackTrace():System.String">
				<signature>System.Exception.get_RemoteStackTrace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Source" uniqueID="get_Source():System.String">
				<signature>System.Exception.get_Source():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StackTrace" uniqueID="get_StackTrace():System.String">
				<signature>System.Exception.get_StackTrace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TargetSite" uniqueID="get_TargetSite():System.Reflection.MethodBase">
				<signature>System.Exception.get_TargetSite():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_WatsonBuckets" uniqueID="get_WatsonBuckets():System.Object">
				<signature>System.Exception.get_WatsonBuckets():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_SerializeObjectState" uniqueID="remove_SerializeObjectState(System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;):System.Void">
				<signature>System.Exception.remove_SerializeObjectState(System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_HResult" uniqueID="set_HResult(System.Int32):System.Void">
				<signature>System.Exception.set_HResult(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HelpLink" uniqueID="set_HelpLink(System.String):System.Void">
				<signature>System.Exception.set_HelpLink(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Source" uniqueID="set_Source(System.String):System.Void">
				<signature>System.Exception.set_Source(System.String):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" uniqueID="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;.BeginInvoke(System.AsyncCallback;System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.IAsyncResult">
				<signature>System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;.EndInvoke(System.IAsyncResult):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" uniqueID="Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;.Invoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
		</class>
		<class name="Func&lt;System.IAsyncResult,System.Threading.Tasks.Task[]&gt;" uniqueID="System.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task[]&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task[]&gt;.BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task[]">
				<signature>System.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task[]&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.IAsyncResult,System.Threading.Tasks.Task[]&gt;" uniqueID="Func&lt;System.IAsyncResult,System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task[]&gt;.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IAsyncResult):System.Threading.Tasks.Task[]">
				<signature>System.Func&lt;System.IAsyncResult,System.Threading.Tasks.Task[]&gt;.Invoke(System.IAsyncResult):System.Threading.Tasks.Task[]</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task[],System.Data.Common.DbDataReader&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task[],System.Data.Common.DbDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.Common.DbDataReader&gt;.BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.Common.DbDataReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.Common.DbDataReader&gt;.EndInvoke(System.IAsyncResult):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task[],System.Data.Common.DbDataReader&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task[],System.Data.Common.DbDataReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.Common.DbDataReader&gt;.Func&lt;System.Threading.Tasks.Task[],System.Data.Common.DbDataReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task[]):System.Data.Common.DbDataReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.Common.DbDataReader&gt;.Invoke(System.Threading.Tasks.Task[]):System.Data.Common.DbDataReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task[],System.String&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task[],System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.String&gt;.BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.String">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.String&gt;.EndInvoke(System.IAsyncResult):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task[],System.String&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task[],System.String&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.String&gt;.Func&lt;System.Threading.Tasks.Task[],System.String&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task[]):System.String">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.String&gt;.Invoke(System.Threading.Tasks.Task[]):System.String</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.EndInvoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Invoke():System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
		</class>
		<class name="Func&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader">
				<signature>System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;.EndInvoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Func&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;.Func&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.Data.SqlClient.SqlDataReader">
				<signature>System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;.Invoke():System.Data.SqlClient.SqlDataReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task[],System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task[],System.Data.ProviderBase.DbConnectionInternal&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.ProviderBase.DbConnectionInternal&gt;.BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.ProviderBase.DbConnectionInternal&gt;.EndInvoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task[],System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task[],System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.ProviderBase.DbConnectionInternal&gt;.Func&lt;System.Threading.Tasks.Task[],System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task[]):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.ProviderBase.DbConnectionInternal&gt;.Invoke(System.Threading.Tasks.Task[]):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
		</class>
		<class name="Func&lt;System.IAsyncResult,System.Boolean&gt;" uniqueID="System.Func&lt;System.IAsyncResult,System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.IAsyncResult,System.Boolean&gt;.BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;System.IAsyncResult,System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.IAsyncResult,System.Boolean&gt;" uniqueID="Func&lt;System.IAsyncResult,System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.IAsyncResult,System.Boolean&gt;.Func&lt;System.IAsyncResult,System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;System.IAsyncResult,System.Boolean&gt;.Invoke(System.IAsyncResult):System.Boolean</signature>
			</method>
		</class>
		<class name="Func&lt;System.IAsyncResult,System.Data.Common.DbDataReader&gt;" uniqueID="System.Func&lt;System.IAsyncResult,System.Data.Common.DbDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.Common.DbDataReader&gt;.BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.Common.DbDataReader">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.Common.DbDataReader&gt;.EndInvoke(System.IAsyncResult):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.IAsyncResult,System.Data.Common.DbDataReader&gt;" uniqueID="Func&lt;System.IAsyncResult,System.Data.Common.DbDataReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.Common.DbDataReader&gt;.Func&lt;System.IAsyncResult,System.Data.Common.DbDataReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IAsyncResult):System.Data.Common.DbDataReader">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.Common.DbDataReader&gt;.Invoke(System.IAsyncResult):System.Data.Common.DbDataReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.IAsyncResult,System.Data.SqlClient.SqlDataReader&gt;" uniqueID="System.Func&lt;System.IAsyncResult,System.Data.SqlClient.SqlDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.SqlClient.SqlDataReader&gt;.BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.SqlClient.SqlDataReader&gt;.EndInvoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.IAsyncResult,System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Func&lt;System.IAsyncResult,System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.SqlClient.SqlDataReader&gt;.Func&lt;System.IAsyncResult,System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader">
				<signature>System.Func&lt;System.IAsyncResult,System.Data.SqlClient.SqlDataReader&gt;.Invoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.IAsyncResult,System.Int32&gt;" uniqueID="System.Func&lt;System.IAsyncResult,System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.IAsyncResult,System.Int32&gt;.BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Func&lt;System.IAsyncResult,System.Int32&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.IAsyncResult,System.Int32&gt;" uniqueID="Func&lt;System.IAsyncResult,System.Int32&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.IAsyncResult,System.Int32&gt;.Func&lt;System.IAsyncResult,System.Int32&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IAsyncResult):System.Int32">
				<signature>System.Func&lt;System.IAsyncResult,System.Int32&gt;.Invoke(System.IAsyncResult):System.Int32</signature>
			</method>
		</class>
		<class name="Func&lt;System.IAsyncResult,System.Object&gt;" uniqueID="System.Func&lt;System.IAsyncResult,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.IAsyncResult,System.Object&gt;.BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Object">
				<signature>System.Func&lt;System.IAsyncResult,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.IAsyncResult,System.Object&gt;" uniqueID="Func&lt;System.IAsyncResult,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.IAsyncResult,System.Object&gt;.Func&lt;System.IAsyncResult,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IAsyncResult):System.Object">
				<signature>System.Func&lt;System.IAsyncResult,System.Object&gt;.Invoke(System.IAsyncResult):System.Object</signature>
			</method>
		</class>
		<class name="Func&lt;System.IAsyncResult,System.String&gt;" uniqueID="System.Func&lt;System.IAsyncResult,System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.IAsyncResult,System.String&gt;.BeginInvoke(System.IAsyncResult;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.String">
				<signature>System.Func&lt;System.IAsyncResult,System.String&gt;.EndInvoke(System.IAsyncResult):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.IAsyncResult,System.String&gt;" uniqueID="Func&lt;System.IAsyncResult,System.String&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.IAsyncResult,System.String&gt;.Func&lt;System.IAsyncResult,System.String&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IAsyncResult):System.String">
				<signature>System.Func&lt;System.IAsyncResult,System.String&gt;.Invoke(System.IAsyncResult):System.String</signature>
			</method>
		</class>
		<class name="Func&lt;System.Int32&gt;" uniqueID="System.Func&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Int32&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Func&lt;System.Int32&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Int32&gt;" uniqueID="Func&lt;System.Int32&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Int32&gt;.Func&lt;System.Int32&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.Int32">
				<signature>System.Func&lt;System.Int32&gt;.Invoke():System.Int32</signature>
			</method>
		</class>
		<class name="Func&lt;System.Object,System.Boolean&gt;" uniqueID="System.Func&lt;System.Object,System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Object,System.Boolean&gt;.BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;System.Object,System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Object,System.Boolean&gt;" uniqueID="Func&lt;System.Object,System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Object,System.Boolean&gt;.Func&lt;System.Object,System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object):System.Boolean">
				<signature>System.Func&lt;System.Object,System.Boolean&gt;.Invoke(System.Object):System.Boolean</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Object,System.Data.Common.DbDataReader&gt;" uniqueID="System.Func&lt;System.Object,System.Data.Common.DbDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Object,System.Data.Common.DbDataReader&gt;.BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.Common.DbDataReader">
				<signature>System.Func&lt;System.Object,System.Data.Common.DbDataReader&gt;.EndInvoke(System.IAsyncResult):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Object,System.Data.Common.DbDataReader&gt;" uniqueID="Func&lt;System.Object,System.Data.Common.DbDataReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Object,System.Data.Common.DbDataReader&gt;.Func&lt;System.Object,System.Data.Common.DbDataReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object):System.Data.Common.DbDataReader">
				<signature>System.Func&lt;System.Object,System.Data.Common.DbDataReader&gt;.Invoke(System.Object):System.Data.Common.DbDataReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.Object,System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="System.Func&lt;System.Object,System.Data.ProviderBase.DbConnectionInternal&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Object,System.Data.ProviderBase.DbConnectionInternal&gt;.BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Func&lt;System.Object,System.Data.ProviderBase.DbConnectionInternal&gt;.EndInvoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Object,System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Func&lt;System.Object,System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Object,System.Data.ProviderBase.DbConnectionInternal&gt;.Func&lt;System.Object,System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Func&lt;System.Object,System.Data.ProviderBase.DbConnectionInternal&gt;.Invoke(System.Object):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
		</class>
		<class name="Func&lt;System.Object,System.Data.SqlClient.SqlDataReader&gt;" uniqueID="System.Func&lt;System.Object,System.Data.SqlClient.SqlDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Object,System.Data.SqlClient.SqlDataReader&gt;.BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader">
				<signature>System.Func&lt;System.Object,System.Data.SqlClient.SqlDataReader&gt;.EndInvoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Object,System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Func&lt;System.Object,System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Object,System.Data.SqlClient.SqlDataReader&gt;.Func&lt;System.Object,System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object):System.Data.SqlClient.SqlDataReader">
				<signature>System.Func&lt;System.Object,System.Data.SqlClient.SqlDataReader&gt;.Invoke(System.Object):System.Data.SqlClient.SqlDataReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.Object,System.Int32&gt;" uniqueID="System.Func&lt;System.Object,System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Object,System.Int32&gt;.BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Func&lt;System.Object,System.Int32&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Object,System.Int32&gt;" uniqueID="Func&lt;System.Object,System.Int32&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Object,System.Int32&gt;.Func&lt;System.Object,System.Int32&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object):System.Int32">
				<signature>System.Func&lt;System.Object,System.Int32&gt;.Invoke(System.Object):System.Int32</signature>
			</method>
		</class>
		<class name="Func&lt;System.Object,System.Object&gt;" uniqueID="System.Func&lt;System.Object,System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Object,System.Object&gt;.BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Object">
				<signature>System.Func&lt;System.Object,System.Object&gt;.EndInvoke(System.IAsyncResult):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Object,System.Object&gt;" uniqueID="Func&lt;System.Object,System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Object,System.Object&gt;.Func&lt;System.Object,System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object):System.Object">
				<signature>System.Func&lt;System.Object,System.Object&gt;.Invoke(System.Object):System.Object</signature>
			</method>
		</class>
		<class name="Func&lt;System.Object,System.String&gt;" uniqueID="System.Func&lt;System.Object,System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Object,System.String&gt;.BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.String">
				<signature>System.Func&lt;System.Object,System.String&gt;.EndInvoke(System.IAsyncResult):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Object,System.String&gt;" uniqueID="Func&lt;System.Object,System.String&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Object,System.String&gt;.Func&lt;System.Object,System.String&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object):System.String">
				<signature>System.Func&lt;System.Object,System.String&gt;.Invoke(System.Object):System.String</signature>
			</method>
		</class>
		<class name="Func&lt;System.Object,System.Threading.Tasks.Task[]&gt;" uniqueID="System.Func&lt;System.Object,System.Threading.Tasks.Task[]&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Object,System.Threading.Tasks.Task[]&gt;.BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task[]">
				<signature>System.Func&lt;System.Object,System.Threading.Tasks.Task[]&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Object,System.Threading.Tasks.Task[]&gt;" uniqueID="Func&lt;System.Object,System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Object,System.Threading.Tasks.Task[]&gt;.Func&lt;System.Object,System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object):System.Threading.Tasks.Task[]">
				<signature>System.Func&lt;System.Object,System.Threading.Tasks.Task[]&gt;.Invoke(System.Object):System.Threading.Tasks.Task[]</signature>
			</method>
		</class>
		<class name="Func&lt;System.Object,System.Xml.XmlReader&gt;" uniqueID="System.Func&lt;System.Object,System.Xml.XmlReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Object,System.Xml.XmlReader&gt;.BeginInvoke(System.Object;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Xml.XmlReader">
				<signature>System.Func&lt;System.Object,System.Xml.XmlReader&gt;.EndInvoke(System.IAsyncResult):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Object,System.Xml.XmlReader&gt;" uniqueID="Func&lt;System.Object,System.Xml.XmlReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Object,System.Xml.XmlReader&gt;.Func&lt;System.Object,System.Xml.XmlReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object):System.Xml.XmlReader">
				<signature>System.Func&lt;System.Object,System.Xml.XmlReader&gt;.Invoke(System.Object):System.Xml.XmlReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.Object&gt;" uniqueID="System.Func&lt;System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Object&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Object">
				<signature>System.Func&lt;System.Object&gt;.EndInvoke(System.IAsyncResult):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Object&gt;" uniqueID="Func&lt;System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Object&gt;.Func&lt;System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.Object">
				<signature>System.Func&lt;System.Object&gt;.Invoke():System.Object</signature>
			</method>
		</class>
		<class name="Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;" uniqueID="System.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Reflection.Assembly;System.String;System.Boolean;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;.BeginInvoke(System.Reflection.Assembly;System.String;System.Boolean;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Type">
				<signature>System.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;.EndInvoke(System.IAsyncResult):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;" uniqueID="Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Reflection.Assembly;System.String;System.Boolean):System.Type">
				<signature>System.Func&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;.Invoke(System.Reflection.Assembly;System.String;System.Boolean):System.Type</signature>
			</method>
		</class>
		<class name="Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;" uniqueID="System.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Reflection.AssemblyName;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;.BeginInvoke(System.Reflection.AssemblyName;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Reflection.Assembly">
				<signature>System.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;.EndInvoke(System.IAsyncResult):System.Reflection.Assembly</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;" uniqueID="Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Reflection.AssemblyName):System.Reflection.Assembly">
				<signature>System.Func&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;.Invoke(System.Reflection.AssemblyName):System.Reflection.Assembly</signature>
			</method>
		</class>
		<class name="Func&lt;System.String&gt;" uniqueID="System.Func&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.String&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.String">
				<signature>System.Func&lt;System.String&gt;.EndInvoke(System.IAsyncResult):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.String&gt;" uniqueID="Func&lt;System.String&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.String&gt;.Func&lt;System.String&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.String">
				<signature>System.Func&lt;System.String&gt;.Invoke():System.String</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task,System.Data.Common.DbDataReader&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task,System.Data.Common.DbDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.Common.DbDataReader&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.Common.DbDataReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.Common.DbDataReader&gt;.EndInvoke(System.IAsyncResult):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task,System.Data.Common.DbDataReader&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task,System.Data.Common.DbDataReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.Common.DbDataReader&gt;.Func&lt;System.Threading.Tasks.Task,System.Data.Common.DbDataReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.Data.Common.DbDataReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.Common.DbDataReader&gt;.Invoke(System.Threading.Tasks.Task):System.Data.Common.DbDataReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task,System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task,System.Data.ProviderBase.DbConnectionInternal&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.ProviderBase.DbConnectionInternal&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.ProviderBase.DbConnectionInternal&gt;.EndInvoke(System.IAsyncResult):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task,System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task,System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.ProviderBase.DbConnectionInternal&gt;.Func&lt;System.Threading.Tasks.Task,System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.ProviderBase.DbConnectionInternal&gt;.Invoke(System.Threading.Tasks.Task):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task,System.Data.SqlClient.SqlDataReader&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task,System.Data.SqlClient.SqlDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.SqlClient.SqlDataReader&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.SqlClient.SqlDataReader&gt;.EndInvoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task,System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task,System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.SqlClient.SqlDataReader&gt;.Func&lt;System.Threading.Tasks.Task,System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.Data.SqlClient.SqlDataReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Data.SqlClient.SqlDataReader&gt;.Invoke(System.Threading.Tasks.Task):System.Data.SqlClient.SqlDataReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task,System.Int32&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task,System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Int32&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Int32&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task,System.Int32&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task,System.Int32&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Int32&gt;.Func&lt;System.Threading.Tasks.Task,System.Int32&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.Int32">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Int32&gt;.Invoke(System.Threading.Tasks.Task):System.Int32</signature>
			</method>
		</class>
		<class name="Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.BeginInvoke(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean">
				<signature>System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Invoke(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task,System.String&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task,System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.String&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.String">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.String&gt;.EndInvoke(System.IAsyncResult):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task,System.String&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task,System.String&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.String&gt;.Func&lt;System.Threading.Tasks.Task,System.String&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.String">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.String&gt;.Invoke(System.Threading.Tasks.Task):System.String</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task&gt;.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task&gt;.Invoke(System.Threading.Tasks.Task):System.Threading.Tasks.Task</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task[]&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task[]&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task[]&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task[]">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task[]&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task[]&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task[]&gt;.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.Threading.Tasks.Task[]">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Threading.Tasks.Task[]&gt;.Invoke(System.Threading.Tasks.Task):System.Threading.Tasks.Task[]</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task,System.Xml.XmlReader&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task,System.Xml.XmlReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Xml.XmlReader&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Xml.XmlReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Xml.XmlReader&gt;.EndInvoke(System.IAsyncResult):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task,System.Xml.XmlReader&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task,System.Xml.XmlReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Xml.XmlReader&gt;.Func&lt;System.Threading.Tasks.Task,System.Xml.XmlReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.Xml.XmlReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task,System.Xml.XmlReader&gt;.Invoke(System.Threading.Tasks.Task):System.Xml.XmlReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task[],System.Data.SqlClient.SqlDataReader&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task[],System.Data.SqlClient.SqlDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.SqlClient.SqlDataReader&gt;.BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.SqlClient.SqlDataReader&gt;.EndInvoke(System.IAsyncResult):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task[],System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task[],System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.SqlClient.SqlDataReader&gt;.Func&lt;System.Threading.Tasks.Task[],System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task[]):System.Data.SqlClient.SqlDataReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Data.SqlClient.SqlDataReader&gt;.Invoke(System.Threading.Tasks.Task[]):System.Data.SqlClient.SqlDataReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Object&gt;&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Object&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Object&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Object&gt;&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Object&gt;&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Object&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Object&gt;&gt;.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Object&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Object&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.String&gt;&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.String&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.String&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.String&gt;&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.String&gt;&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.String&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.String&gt;&gt;.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.String&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.String&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;.BeginInvoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Func&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;.Invoke(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.Threading.Tasks.Task&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task&gt;.Func&lt;System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.Threading.Tasks.Task&gt;.Invoke():System.Threading.Tasks.Task</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task[],System.Boolean&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task[],System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Boolean&gt;.BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Boolean&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task[],System.Boolean&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task[],System.Boolean&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Boolean&gt;.Func&lt;System.Threading.Tasks.Task[],System.Boolean&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task[]):System.Boolean">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Boolean&gt;.Invoke(System.Threading.Tasks.Task[]):System.Boolean</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task[],System.Int32&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task[],System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Int32&gt;.BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Int32">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Int32&gt;.EndInvoke(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task[],System.Int32&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task[],System.Int32&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Int32&gt;.Func&lt;System.Threading.Tasks.Task[],System.Int32&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task[]):System.Int32">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Int32&gt;.Invoke(System.Threading.Tasks.Task[]):System.Int32</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task[],System.Object&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task[],System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Object&gt;.BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Object">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Object&gt;.EndInvoke(System.IAsyncResult):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task[],System.Object&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task[],System.Object&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Object&gt;.Func&lt;System.Threading.Tasks.Task[],System.Object&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task[]):System.Object">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Object&gt;.Invoke(System.Threading.Tasks.Task[]):System.Object</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task&gt;.BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task&gt;.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task[]):System.Threading.Tasks.Task">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task&gt;.Invoke(System.Threading.Tasks.Task[]):System.Threading.Tasks.Task</signature>
			</method>
		</class>
		<class name="IEquatable&lt;System.Int32&gt;" uniqueID="System.IEquatable&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Int32):System.Boolean">
				<signature>System.IEquatable&lt;System.Int32&gt;.Equals(System.Int32):System.Boolean</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task[]&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task[]&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task[]&gt;.BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task[]">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task[]&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task[]&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task[]&gt;.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task[]):System.Threading.Tasks.Task[]">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Threading.Tasks.Task[]&gt;.Invoke(System.Threading.Tasks.Task[]):System.Threading.Tasks.Task[]</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task[],System.Xml.XmlReader&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task[],System.Xml.XmlReader&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Xml.XmlReader&gt;.BeginInvoke(System.Threading.Tasks.Task[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Xml.XmlReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Xml.XmlReader&gt;.EndInvoke(System.IAsyncResult):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task[],System.Xml.XmlReader&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task[],System.Xml.XmlReader&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Xml.XmlReader&gt;.Func&lt;System.Threading.Tasks.Task[],System.Xml.XmlReader&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task[]):System.Xml.XmlReader">
				<signature>System.Func&lt;System.Threading.Tasks.Task[],System.Xml.XmlReader&gt;.Invoke(System.Threading.Tasks.Task[]):System.Xml.XmlReader</signature>
			</method>
		</class>
		<class name="Func&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="System.Func&lt;System.Threading.Tasks.Task[]&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Func&lt;System.Threading.Tasks.Task[]&gt;.BeginInvoke(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task[]">
				<signature>System.Func&lt;System.Threading.Tasks.Task[]&gt;.EndInvoke(System.IAsyncResult):System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Func&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Func&lt;System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Func&lt;System.Threading.Tasks.Task[]&gt;.Func&lt;System.Threading.Tasks.Task[]&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke():System.Threading.Tasks.Task[]">
				<signature>System.Func&lt;System.Threading.Tasks.Task[]&gt;.Invoke():System.Threading.Tasks.Task[]</signature>
			</method>
		</class>
		<class name="IComparable&lt;System.Int32&gt;" uniqueID="System.IComparable&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Int32):System.Int32">
				<signature>System.IComparable&lt;System.Int32&gt;.CompareTo(System.Int32):System.Int32</signature>
			</method>
		</class>
		<class name="IComparable&lt;System.String&gt;" uniqueID="System.IComparable&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.String):System.Int32">
				<signature>System.IComparable&lt;System.String&gt;.CompareTo(System.String):System.Int32</signature>
			</method>
		</class>
		<class name="IEquatable&lt;System.String&gt;" uniqueID="System.IEquatable&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.String):System.Boolean">
				<signature>System.IEquatable&lt;System.String&gt;.Equals(System.String):System.Boolean</signature>
			</method>
		</class>
		<class name="MarshalByRefObject" uniqueID="System.MarshalByRefObject">
			<method accessibility="Protected" methodKind="Static" name="CanCastToXmlTypeHelper" uniqueID="CanCastToXmlTypeHelper(System.RuntimeType;System.MarshalByRefObject):System.Boolean">
				<signature>System.MarshalByRefObject.CanCastToXmlTypeHelper(System.RuntimeType;System.MarshalByRefObject):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetComIUnknown" uniqueID="GetComIUnknown(System.MarshalByRefObject):System.IntPtr">
				<signature>System.MarshalByRefObject.GetComIUnknown(System.MarshalByRefObject):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetIdentity" uniqueID="GetIdentity(System.MarshalByRefObject):System.Runtime.Remoting.Identity">
				<signature>System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject):System.Runtime.Remoting.Identity</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetIdentity" uniqueID="GetIdentity(System.MarshalByRefObject;System.Boolean):System.Runtime.Remoting.Identity">
				<signature>System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject;System.Boolean):System.Runtime.Remoting.Identity</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CanCastToXmlType" uniqueID="CanCastToXmlType(System.String;System.String):System.Boolean">
				<signature>System.MarshalByRefObject.CanCastToXmlType(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateObjRef" uniqueID="CreateObjRef(System.Type):System.Runtime.Remoting.ObjRef">
				<signature>System.MarshalByRefObject.CreateObjRef(System.Type):System.Runtime.Remoting.ObjRef</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetComIUnknown" uniqueID="GetComIUnknown(System.Boolean):System.IntPtr">
				<signature>System.MarshalByRefObject.GetComIUnknown(System.Boolean):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetLifetimeService" uniqueID="GetLifetimeService():System.Object">
				<signature>System.MarshalByRefObject.GetLifetimeService():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InitializeLifetimeService" uniqueID="InitializeLifetimeService():System.Object">
				<signature>System.MarshalByRefObject.InitializeLifetimeService():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object">
				<signature>System.MarshalByRefObject.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsInstanceOfType" uniqueID="IsInstanceOfType(System.Type):System.Boolean">
				<signature>System.MarshalByRefObject.IsInstanceOfType(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MarshalByRefObject" uniqueID="MarshalByRefObject():System.Void">
				<signature>System.MarshalByRefObject.MarshalByRefObject():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MemberwiseClone" uniqueID="MemberwiseClone(System.Boolean):System.MarshalByRefObject">
				<signature>System.MarshalByRefObject.MemberwiseClone(System.Boolean):System.MarshalByRefObject</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="__RaceSetServerIdentity" uniqueID="__RaceSetServerIdentity(System.Runtime.Remoting.ServerIdentity):System.Runtime.Remoting.ServerIdentity">
				<signature>System.MarshalByRefObject.__RaceSetServerIdentity(System.Runtime.Remoting.ServerIdentity):System.Runtime.Remoting.ServerIdentity</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="__ResetServerIdentity" uniqueID="__ResetServerIdentity():System.Void">
				<signature>System.MarshalByRefObject.__ResetServerIdentity():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_Identity" uniqueID="get_Identity():System.Object">
				<signature>System.MarshalByRefObject.get_Identity():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_Identity" uniqueID="set_Identity(System.Object):System.Void">
				<signature>System.MarshalByRefObject.set_Identity(System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IServiceProvider" uniqueID="System.IServiceProvider">
			<method accessibility="Public" methodKind="Member" name="GetService" uniqueID="GetService(System.Type):System.Object">
				<signature>System.IServiceProvider.GetService(System.Type):System.Object</signature>
			</method>
		</class>
		<class name="Int32" uniqueID="System.Int32">
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String):System.Int32">
				<signature>System.Int32.Parse(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.Globalization.NumberStyles):System.Int32">
				<signature>System.Int32.Parse(System.String;System.Globalization.NumberStyles):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.Globalization.NumberStyles;System.IFormatProvider):System.Int32">
				<signature>System.Int32.Parse(System.String;System.Globalization.NumberStyles;System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Parse" uniqueID="Parse(System.String;System.IFormatProvider):System.Int32">
				<signature>System.Int32.Parse(System.String;System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Globalization.NumberStyles;System.IFormatProvider;System.Int32):System.Boolean">
				<signature>System.Int32.TryParse(System.String;System.Globalization.NumberStyles;System.IFormatProvider;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TryParse" uniqueID="TryParse(System.String;System.Int32):System.Boolean">
				<signature>System.Int32.TryParse(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Int32):System.Int32">
				<signature>System.Int32.CompareTo(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object):System.Int32">
				<signature>System.Int32.CompareTo(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Int32):System.Boolean">
				<signature>System.Int32.Equals(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Int32.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Int32.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeCode" uniqueID="GetTypeCode():System.TypeCode">
				<signature>System.Int32.GetTypeCode():System.TypeCode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToBoolean" uniqueID="System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean">
				<signature>System.Int32.System.IConvertible.ToBoolean(System.IFormatProvider):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToByte" uniqueID="System.IConvertible.ToByte(System.IFormatProvider):System.Byte">
				<signature>System.Int32.System.IConvertible.ToByte(System.IFormatProvider):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToChar" uniqueID="System.IConvertible.ToChar(System.IFormatProvider):System.Char">
				<signature>System.Int32.System.IConvertible.ToChar(System.IFormatProvider):System.Char</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDateTime" uniqueID="System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime">
				<signature>System.Int32.System.IConvertible.ToDateTime(System.IFormatProvider):System.DateTime</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDecimal" uniqueID="System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal">
				<signature>System.Int32.System.IConvertible.ToDecimal(System.IFormatProvider):System.Decimal</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToDouble" uniqueID="System.IConvertible.ToDouble(System.IFormatProvider):System.Double">
				<signature>System.Int32.System.IConvertible.ToDouble(System.IFormatProvider):System.Double</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt16" uniqueID="System.IConvertible.ToInt16(System.IFormatProvider):System.Int16">
				<signature>System.Int32.System.IConvertible.ToInt16(System.IFormatProvider):System.Int16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt32" uniqueID="System.IConvertible.ToInt32(System.IFormatProvider):System.Int32">
				<signature>System.Int32.System.IConvertible.ToInt32(System.IFormatProvider):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToInt64" uniqueID="System.IConvertible.ToInt64(System.IFormatProvider):System.Int64">
				<signature>System.Int32.System.IConvertible.ToInt64(System.IFormatProvider):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSByte" uniqueID="System.IConvertible.ToSByte(System.IFormatProvider):System.SByte">
				<signature>System.Int32.System.IConvertible.ToSByte(System.IFormatProvider):System.SByte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToSingle" uniqueID="System.IConvertible.ToSingle(System.IFormatProvider):System.Single">
				<signature>System.Int32.System.IConvertible.ToSingle(System.IFormatProvider):System.Single</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToType" uniqueID="System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object">
				<signature>System.Int32.System.IConvertible.ToType(System.Type;System.IFormatProvider):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt16" uniqueID="System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16">
				<signature>System.Int32.System.IConvertible.ToUInt16(System.IFormatProvider):System.UInt16</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt32" uniqueID="System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32">
				<signature>System.Int32.System.IConvertible.ToUInt32(System.IFormatProvider):System.UInt32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IConvertible.ToUInt64" uniqueID="System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64">
				<signature>System.Int32.System.IConvertible.ToUInt64(System.IFormatProvider):System.UInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Int32.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.IFormatProvider):System.String">
				<signature>System.Int32.ToString(System.IFormatProvider):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String):System.String">
				<signature>System.Int32.ToString(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString(System.String;System.IFormatProvider):System.String">
				<signature>System.Int32.ToString(System.String;System.IFormatProvider):System.String</signature>
			</method>
		</class>
		<class name="Nullable&lt;System.Boolean&gt;" uniqueID="System.Nullable&lt;System.Boolean&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Nullable&lt;System.Boolean&gt;):System.Boolean">
				<signature>System.Nullable&lt;System.Boolean&gt;.op_Explicit(System.Nullable&lt;System.Boolean&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Boolean):System.Nullable&lt;System.Boolean&gt;">
				<signature>System.Nullable&lt;System.Boolean&gt;.op_Implicit(System.Boolean):System.Nullable&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Nullable&lt;System.Boolean&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Nullable&lt;System.Boolean&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault():System.Boolean">
				<signature>System.Nullable&lt;System.Boolean&gt;.GetValueOrDefault():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Boolean):System.Boolean">
				<signature>System.Nullable&lt;System.Boolean&gt;.GetValueOrDefault(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Nullable&lt;System.Boolean&gt;" uniqueID="Nullable&lt;System.Boolean&gt;(System.Boolean):System.Void">
				<signature>System.Nullable&lt;System.Boolean&gt;.Nullable&lt;System.Boolean&gt;(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Nullable&lt;System.Boolean&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasValue" uniqueID="get_HasValue():System.Boolean">
				<signature>System.Nullable&lt;System.Boolean&gt;.get_HasValue():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Boolean">
				<signature>System.Nullable&lt;System.Boolean&gt;.get_Value():System.Boolean</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Data.DataColumn&gt;" uniqueID="System.Predicate&lt;System.Data.DataColumn&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataColumn;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Data.DataColumn&gt;.BeginInvoke(System.Data.DataColumn;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataColumn&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataColumn):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataColumn&gt;.Invoke(System.Data.DataColumn):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Data.DataColumn&gt;" uniqueID="Predicate&lt;System.Data.DataColumn&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Data.DataColumn&gt;.Predicate&lt;System.Data.DataColumn&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Nullable&lt;System.Int32&gt;" uniqueID="System.Nullable&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Nullable&lt;System.Int32&gt;):System.Int32">
				<signature>System.Nullable&lt;System.Int32&gt;.op_Explicit(System.Nullable&lt;System.Int32&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Int32):System.Nullable&lt;System.Int32&gt;">
				<signature>System.Nullable&lt;System.Int32&gt;.op_Implicit(System.Int32):System.Nullable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Nullable&lt;System.Int32&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Nullable&lt;System.Int32&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault():System.Int32">
				<signature>System.Nullable&lt;System.Int32&gt;.GetValueOrDefault():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Int32):System.Int32">
				<signature>System.Nullable&lt;System.Int32&gt;.GetValueOrDefault(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Nullable&lt;System.Int32&gt;" uniqueID="Nullable&lt;System.Int32&gt;(System.Int32):System.Void">
				<signature>System.Nullable&lt;System.Int32&gt;.Nullable&lt;System.Int32&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Nullable&lt;System.Int32&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasValue" uniqueID="get_HasValue():System.Boolean">
				<signature>System.Nullable&lt;System.Int32&gt;.get_HasValue():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Int32">
				<signature>System.Nullable&lt;System.Int32&gt;.get_Value():System.Int32</signature>
			</method>
		</class>
		<class name="Nullable&lt;System.Int64&gt;" uniqueID="System.Nullable&lt;System.Int64&gt;">
			<method accessibility="Public" methodKind="Static" name="op_Explicit" uniqueID="op_Explicit(System.Nullable&lt;System.Int64&gt;):System.Int64">
				<signature>System.Nullable&lt;System.Int64&gt;.op_Explicit(System.Nullable&lt;System.Int64&gt;):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Implicit" uniqueID="op_Implicit(System.Int64):System.Nullable&lt;System.Int64&gt;">
				<signature>System.Nullable&lt;System.Int64&gt;.op_Implicit(System.Int64):System.Nullable&lt;System.Int64&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Nullable&lt;System.Int64&gt;.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Nullable&lt;System.Int64&gt;.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault():System.Int64">
				<signature>System.Nullable&lt;System.Int64&gt;.GetValueOrDefault():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Int64):System.Int64">
				<signature>System.Nullable&lt;System.Int64&gt;.GetValueOrDefault(System.Int64):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Nullable&lt;System.Int64&gt;" uniqueID="Nullable&lt;System.Int64&gt;(System.Int64):System.Void">
				<signature>System.Nullable&lt;System.Int64&gt;.Nullable&lt;System.Int64&gt;(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Nullable&lt;System.Int64&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasValue" uniqueID="get_HasValue():System.Boolean">
				<signature>System.Nullable&lt;System.Int64&gt;.get_HasValue():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Int64">
				<signature>System.Nullable&lt;System.Int64&gt;.get_Value():System.Int64</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Attribute&gt;" uniqueID="System.Predicate&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Attribute&gt;.BeginInvoke(System.Attribute;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Attribute&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Attribute):System.Boolean">
				<signature>System.Predicate&lt;System.Attribute&gt;.Invoke(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Attribute&gt;" uniqueID="Predicate&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Attribute&gt;.Predicate&lt;System.Attribute&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Data.DataRelation&gt;" uniqueID="System.Predicate&lt;System.Data.DataRelation&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataRelation;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Data.DataRelation&gt;.BeginInvoke(System.Data.DataRelation;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataRelation&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataRelation):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataRelation&gt;.Invoke(System.Data.DataRelation):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Data.DataRelation&gt;" uniqueID="Predicate&lt;System.Data.DataRelation&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Data.DataRelation&gt;.Predicate&lt;System.Data.DataRelation&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Data.DataRow&gt;" uniqueID="System.Predicate&lt;System.Data.DataRow&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataRow;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Data.DataRow&gt;.BeginInvoke(System.Data.DataRow;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataRow&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataRow):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataRow&gt;.Invoke(System.Data.DataRow):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Data.DataRow&gt;" uniqueID="Predicate&lt;System.Data.DataRow&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Data.DataRow&gt;.Predicate&lt;System.Data.DataRow&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Data.DataTable&gt;" uniqueID="System.Predicate&lt;System.Data.DataTable&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataTable;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Data.DataTable&gt;.BeginInvoke(System.Data.DataTable;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataTable&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataTable):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataTable&gt;.Invoke(System.Data.DataTable):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Data.DataTable&gt;" uniqueID="Predicate&lt;System.Data.DataTable&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Data.DataTable&gt;.Predicate&lt;System.Data.DataTable&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Data.DataView&gt;" uniqueID="System.Predicate&lt;System.Data.DataView&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataView;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Data.DataView&gt;.BeginInvoke(System.Data.DataView;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataView&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataView):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataView&gt;.Invoke(System.Data.DataView):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Data.DataView&gt;" uniqueID="Predicate&lt;System.Data.DataView&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Data.DataView&gt;.Predicate&lt;System.Data.DataView&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Data.DataViewListener&gt;" uniqueID="System.Predicate&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Data.DataViewListener;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Data.DataViewListener&gt;.BeginInvoke(System.Data.DataViewListener;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataViewListener&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Data.DataViewListener):System.Boolean">
				<signature>System.Predicate&lt;System.Data.DataViewListener&gt;.Invoke(System.Data.DataViewListener):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Data.DataViewListener&gt;" uniqueID="Predicate&lt;System.Data.DataViewListener&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Data.DataViewListener&gt;.Predicate&lt;System.Data.DataViewListener&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Object[]&gt;" uniqueID="System.Predicate&lt;System.Object[]&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Object[];System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Object[]&gt;.BeginInvoke(System.Object[];System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Object[]&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Object[]):System.Boolean">
				<signature>System.Predicate&lt;System.Object[]&gt;.Invoke(System.Object[]):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Object[]&gt;" uniqueID="Predicate&lt;System.Object[]&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Object[]&gt;.Predicate&lt;System.Object[]&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Predicate&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Threading.Tasks.Task&gt;.BeginInvoke(System.Threading.Tasks.Task;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Threading.Tasks.Task&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Predicate&lt;System.Threading.Tasks.Task&gt;.Invoke(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Threading.Tasks.Task&gt;" uniqueID="Predicate&lt;System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Threading.Tasks.Task&gt;.Predicate&lt;System.Threading.Tasks.Task&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.UI.ScriptManagerProxy;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;.BeginInvoke(System.Web.UI.ScriptManagerProxy;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.UI.ScriptManagerProxy):System.Boolean">
				<signature>System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;.Invoke(System.Web.UI.ScriptManagerProxy):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.UI.ScriptReferenceBase;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;.BeginInvoke(System.Web.UI.ScriptReferenceBase;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.UI.ScriptReferenceBase):System.Boolean">
				<signature>System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;.Invoke(System.Web.UI.ScriptReferenceBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Object;System.IntPtr):System.Void">
				<signature>System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Type" uniqueID="System.Type">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Type.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="BinarySearch" uniqueID="BinarySearch(System.Array;System.Object):System.Int32">
				<signature>System.Type.BinarySearch(System.Array;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateBinder" uniqueID="CreateBinder():System.Void">
				<signature>System.Type.CreateBinder():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String):System.Type">
				<signature>System.Type.GetType(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Boolean):System.Type">
				<signature>System.Type.GetType(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Boolean;System.Boolean):System.Type">
				<signature>System.Type.GetType(System.String;System.Boolean;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;):System.Type">
				<signature>System.Type.GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;;System.Boolean):System.Type">
				<signature>System.Type.GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetType" uniqueID="GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;;System.Boolean;System.Boolean):System.Type">
				<signature>System.Type.GetType(System.String;System.Func&lt;System.Reflection.AssemblyName;System.Reflection.Assembly&gt;;System.Func&lt;System.Reflection.Assembly;System.String;System.Boolean;System.Type&gt;;System.Boolean;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeArray" uniqueID="GetTypeArray(System.Object[]):System.Type[]">
				<signature>System.Type.GetTypeArray(System.Object[]):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeCode" uniqueID="GetTypeCode(System.Type):System.TypeCode">
				<signature>System.Type.GetTypeCode(System.Type):System.TypeCode</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid;System.String):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid;System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromCLSID" uniqueID="GetTypeFromCLSID(System.Guid;System.String;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromCLSID(System.Guid;System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromHandle" uniqueID="GetTypeFromHandle(System.RuntimeTypeHandle):System.Type">
				<signature>System.Type.GetTypeFromHandle(System.RuntimeTypeHandle):System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTypeFromHandleUnsafe" uniqueID="GetTypeFromHandleUnsafe(System.IntPtr):System.RuntimeType">
				<signature>System.Type.GetTypeFromHandleUnsafe(System.IntPtr):System.RuntimeType</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String;System.String):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String;System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeFromProgID" uniqueID="GetTypeFromProgID(System.String;System.String;System.Boolean):System.Type">
				<signature>System.Type.GetTypeFromProgID(System.String;System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTypeHandle" uniqueID="GetTypeHandle(System.Object):System.RuntimeTypeHandle">
				<signature>System.Type.GetTypeHandle(System.Object):System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsIntegerType" uniqueID="IsIntegerType(System.Type):System.Boolean">
				<signature>System.Type.IsIntegerType(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReflectionOnlyGetType" uniqueID="ReflectionOnlyGetType(System.String;System.Boolean;System.Boolean):System.Type">
				<signature>System.Type.ReflectionOnlyGetType(System.String;System.Boolean;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_DefaultBinder" uniqueID="get_DefaultBinder():System.Reflection.Binder">
				<signature>System.Type.get_DefaultBinder():System.Reflection.Binder</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Type;System.Type):System.Boolean">
				<signature>System.Type.op_Equality(System.Type;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Type;System.Type):System.Boolean">
				<signature>System.Type.op_Inequality(System.Type;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Type.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Type):System.Boolean">
				<signature>System.Type.Equals(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindInterfaces" uniqueID="FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]">
				<signature>System.Type.FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindMembers" uniqueID="FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]">
				<signature>System.Type.FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FormatTypeName" uniqueID="FormatTypeName():System.String">
				<signature>System.Type.FormatTypeName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FormatTypeName" uniqueID="FormatTypeName(System.Boolean):System.String">
				<signature>System.Type.FormatTypeName(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetArrayRank" uniqueID="GetArrayRank():System.Int32">
				<signature>System.Type.GetArrayRank():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetAttributeFlagsImpl" uniqueID="GetAttributeFlagsImpl():System.Reflection.TypeAttributes">
				<signature>System.Type.GetAttributeFlagsImpl():System.Reflection.TypeAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Type[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructor(System.Type[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetConstructorImpl" uniqueID="GetConstructorImpl(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Type.GetConstructorImpl(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors():System.Reflection.ConstructorInfo[]">
				<signature>System.Type.GetConstructors():System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]">
				<signature>System.Type.GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDefaultMembers" uniqueID="GetDefaultMembers():System.Reflection.MemberInfo[]">
				<signature>System.Type.GetDefaultMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetElementType" uniqueID="GetElementType():System.Type">
				<signature>System.Type.GetElementType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetEnumData" uniqueID="GetEnumData(System.String[];System.Array):System.Void">
				<signature>System.Type.GetEnumData(System.String[];System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumName" uniqueID="GetEnumName(System.Object):System.String">
				<signature>System.Type.GetEnumName(System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumNames" uniqueID="GetEnumNames():System.String[]">
				<signature>System.Type.GetEnumNames():System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetEnumRawConstantValues" uniqueID="GetEnumRawConstantValues():System.Array">
				<signature>System.Type.GetEnumRawConstantValues():System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumUnderlyingType" uniqueID="GetEnumUnderlyingType():System.Type">
				<signature>System.Type.GetEnumUnderlyingType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumValues" uniqueID="GetEnumValues():System.Array">
				<signature>System.Type.GetEnumValues():System.Array</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String):System.Reflection.EventInfo">
				<signature>System.Type.GetEvent(System.String):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo">
				<signature>System.Type.GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents():System.Reflection.EventInfo[]">
				<signature>System.Type.GetEvents():System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]">
				<signature>System.Type.GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String):System.Reflection.FieldInfo">
				<signature>System.Type.GetField(System.String):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo">
				<signature>System.Type.GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields():System.Reflection.FieldInfo[]">
				<signature>System.Type.GetFields():System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]">
				<signature>System.Type.GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericArguments" uniqueID="GetGenericArguments():System.Type[]">
				<signature>System.Type.GetGenericArguments():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericParameterConstraints" uniqueID="GetGenericParameterConstraints():System.Type[]">
				<signature>System.Type.GetGenericParameterConstraints():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGenericTypeDefinition" uniqueID="GetGenericTypeDefinition():System.Type">
				<signature>System.Type.GetGenericTypeDefinition():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Type.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String):System.Type">
				<signature>System.Type.GetInterface(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String;System.Boolean):System.Type">
				<signature>System.Type.GetInterface(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaceMap" uniqueID="GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping">
				<signature>System.Type.GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaces" uniqueID="GetInterfaces():System.Type[]">
				<signature>System.Type.GetInterfaces():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMember(System.String):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers():System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Type.GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMethodImpl" uniqueID="GetMethodImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Type.GetMethodImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods():System.Reflection.MethodInfo[]">
				<signature>System.Type.GetMethods():System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]">
				<signature>System.Type.GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String):System.Type">
				<signature>System.Type.GetNestedType(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String;System.Reflection.BindingFlags):System.Type">
				<signature>System.Type.GetNestedType(System.String;System.Reflection.BindingFlags):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes():System.Type[]">
				<signature>System.Type.GetNestedTypes():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes(System.Reflection.BindingFlags):System.Type[]">
				<signature>System.Type.GetNestedTypes(System.Reflection.BindingFlags):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties():System.Reflection.PropertyInfo[]">
				<signature>System.Type.GetProperties():System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]">
				<signature>System.Type.GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags;System.Type):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Reflection.BindingFlags;System.Type):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetPropertyImpl" uniqueID="GetPropertyImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Type.GetPropertyImpl(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRootElementType" uniqueID="GetRootElementType():System.Type">
				<signature>System.Type.GetRootElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Type.GetType():System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTypeCodeImpl" uniqueID="GetTypeCodeImpl():System.TypeCode">
				<signature>System.Type.GetTypeCodeImpl():System.TypeCode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTypeHandleInternal" uniqueID="GetTypeHandleInternal():System.RuntimeTypeHandle">
				<signature>System.Type.GetTypeHandleInternal():System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasElementTypeImpl" uniqueID="HasElementTypeImpl():System.Boolean">
				<signature>System.Type.HasElementTypeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasProxyAttributeImpl" uniqueID="HasProxyAttributeImpl():System.Boolean">
				<signature>System.Type.HasProxyAttributeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ImplementInterface" uniqueID="ImplementInterface(System.Type):System.Boolean">
				<signature>System.Type.ImplementInterface(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object">
				<signature>System.Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object">
				<signature>System.Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object">
				<signature>System.Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsArrayImpl" uniqueID="IsArrayImpl():System.Boolean">
				<signature>System.Type.IsArrayImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsAssignableFrom" uniqueID="IsAssignableFrom(System.Type):System.Boolean">
				<signature>System.Type.IsAssignableFrom(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsByRefImpl" uniqueID="IsByRefImpl():System.Boolean">
				<signature>System.Type.IsByRefImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsCOMObjectImpl" uniqueID="IsCOMObjectImpl():System.Boolean">
				<signature>System.Type.IsCOMObjectImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsContextfulImpl" uniqueID="IsContextfulImpl():System.Boolean">
				<signature>System.Type.IsContextfulImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsEnumDefined" uniqueID="IsEnumDefined(System.Object):System.Boolean">
				<signature>System.Type.IsEnumDefined(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsEquivalentTo" uniqueID="IsEquivalentTo(System.Type):System.Boolean">
				<signature>System.Type.IsEquivalentTo(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsExportedToWindowsRuntimeImpl" uniqueID="IsExportedToWindowsRuntimeImpl():System.Boolean">
				<signature>System.Type.IsExportedToWindowsRuntimeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsInstanceOfType" uniqueID="IsInstanceOfType(System.Object):System.Boolean">
				<signature>System.Type.IsInstanceOfType(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsMarshalByRefImpl" uniqueID="IsMarshalByRefImpl():System.Boolean">
				<signature>System.Type.IsMarshalByRefImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsPointerImpl" uniqueID="IsPointerImpl():System.Boolean">
				<signature>System.Type.IsPointerImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsPrimitiveImpl" uniqueID="IsPrimitiveImpl():System.Boolean">
				<signature>System.Type.IsPrimitiveImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSubclassOf" uniqueID="IsSubclassOf(System.Type):System.Boolean">
				<signature>System.Type.IsSubclassOf(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsValueTypeImpl" uniqueID="IsValueTypeImpl():System.Boolean">
				<signature>System.Type.IsValueTypeImpl():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsWindowsRuntimeObjectImpl" uniqueID="IsWindowsRuntimeObjectImpl():System.Boolean">
				<signature>System.Type.IsWindowsRuntimeObjectImpl():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeArrayType" uniqueID="MakeArrayType():System.Type">
				<signature>System.Type.MakeArrayType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeArrayType" uniqueID="MakeArrayType(System.Int32):System.Type">
				<signature>System.Type.MakeArrayType(System.Int32):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeByRefType" uniqueID="MakeByRefType():System.Type">
				<signature>System.Type.MakeByRefType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakeGenericType" uniqueID="MakeGenericType(System.Type[]):System.Type">
				<signature>System.Type.MakeGenericType(System.Type[]):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MakePointerType" uniqueID="MakePointerType():System.Type">
				<signature>System.Type.MakePointerType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.GetTypeInfo" uniqueID="System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._Type.Invoke" uniqueID="System.Runtime.InteropServices._Type.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Type.System.Runtime.InteropServices._Type.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Type.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Type" uniqueID="Type():System.Void">
				<signature>System.Type.Type():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Assembly" uniqueID="get_Assembly():System.Reflection.Assembly">
				<signature>System.Type.get_Assembly():System.Reflection.Assembly</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AssemblyQualifiedName" uniqueID="get_AssemblyQualifiedName():System.String">
				<signature>System.Type.get_AssemblyQualifiedName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Reflection.TypeAttributes">
				<signature>System.Type.get_Attributes():System.Reflection.TypeAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BaseType" uniqueID="get_BaseType():System.Type">
				<signature>System.Type.get_BaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContainsGenericParameters" uniqueID="get_ContainsGenericParameters():System.Boolean">
				<signature>System.Type.get_ContainsGenericParameters():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringMethod" uniqueID="get_DeclaringMethod():System.Reflection.MethodBase">
				<signature>System.Type.get_DeclaringMethod():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Type.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FullName" uniqueID="get_FullName():System.String">
				<signature>System.Type.get_FullName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GUID" uniqueID="get_GUID():System.Guid">
				<signature>System.Type.get_GUID():System.Guid</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GenericParameterAttributes" uniqueID="get_GenericParameterAttributes():System.Reflection.GenericParameterAttributes">
				<signature>System.Type.get_GenericParameterAttributes():System.Reflection.GenericParameterAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GenericParameterPosition" uniqueID="get_GenericParameterPosition():System.Int32">
				<signature>System.Type.get_GenericParameterPosition():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GenericTypeArguments" uniqueID="get_GenericTypeArguments():System.Type[]">
				<signature>System.Type.get_GenericTypeArguments():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasElementType" uniqueID="get_HasElementType():System.Boolean">
				<signature>System.Type.get_HasElementType():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasProxyAttribute" uniqueID="get_HasProxyAttribute():System.Boolean">
				<signature>System.Type.get_HasProxyAttribute():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAbstract" uniqueID="get_IsAbstract():System.Boolean">
				<signature>System.Type.get_IsAbstract():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAnsiClass" uniqueID="get_IsAnsiClass():System.Boolean">
				<signature>System.Type.get_IsAnsiClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsArray" uniqueID="get_IsArray():System.Boolean">
				<signature>System.Type.get_IsArray():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoClass" uniqueID="get_IsAutoClass():System.Boolean">
				<signature>System.Type.get_IsAutoClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoLayout" uniqueID="get_IsAutoLayout():System.Boolean">
				<signature>System.Type.get_IsAutoLayout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsByRef" uniqueID="get_IsByRef():System.Boolean">
				<signature>System.Type.get_IsByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCOMObject" uniqueID="get_IsCOMObject():System.Boolean">
				<signature>System.Type.get_IsCOMObject():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClass" uniqueID="get_IsClass():System.Boolean">
				<signature>System.Type.get_IsClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsConstructedGenericType" uniqueID="get_IsConstructedGenericType():System.Boolean">
				<signature>System.Type.get_IsConstructedGenericType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsContextful" uniqueID="get_IsContextful():System.Boolean">
				<signature>System.Type.get_IsContextful():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsEnum" uniqueID="get_IsEnum():System.Boolean">
				<signature>System.Type.get_IsEnum():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsExplicitLayout" uniqueID="get_IsExplicitLayout():System.Boolean">
				<signature>System.Type.get_IsExplicitLayout():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsExportedToWindowsRuntime" uniqueID="get_IsExportedToWindowsRuntime():System.Boolean">
				<signature>System.Type.get_IsExportedToWindowsRuntime():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsGenericParameter" uniqueID="get_IsGenericParameter():System.Boolean">
				<signature>System.Type.get_IsGenericParameter():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsGenericType" uniqueID="get_IsGenericType():System.Boolean">
				<signature>System.Type.get_IsGenericType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsGenericTypeDefinition" uniqueID="get_IsGenericTypeDefinition():System.Boolean">
				<signature>System.Type.get_IsGenericTypeDefinition():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsImport" uniqueID="get_IsImport():System.Boolean">
				<signature>System.Type.get_IsImport():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInterface" uniqueID="get_IsInterface():System.Boolean">
				<signature>System.Type.get_IsInterface():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLayoutSequential" uniqueID="get_IsLayoutSequential():System.Boolean">
				<signature>System.Type.get_IsLayoutSequential():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsMarshalByRef" uniqueID="get_IsMarshalByRef():System.Boolean">
				<signature>System.Type.get_IsMarshalByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNested" uniqueID="get_IsNested():System.Boolean">
				<signature>System.Type.get_IsNested():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedAssembly" uniqueID="get_IsNestedAssembly():System.Boolean">
				<signature>System.Type.get_IsNestedAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamANDAssem" uniqueID="get_IsNestedFamANDAssem():System.Boolean">
				<signature>System.Type.get_IsNestedFamANDAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamORAssem" uniqueID="get_IsNestedFamORAssem():System.Boolean">
				<signature>System.Type.get_IsNestedFamORAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamily" uniqueID="get_IsNestedFamily():System.Boolean">
				<signature>System.Type.get_IsNestedFamily():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPrivate" uniqueID="get_IsNestedPrivate():System.Boolean">
				<signature>System.Type.get_IsNestedPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPublic" uniqueID="get_IsNestedPublic():System.Boolean">
				<signature>System.Type.get_IsNestedPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNotPublic" uniqueID="get_IsNotPublic():System.Boolean">
				<signature>System.Type.get_IsNotPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPointer" uniqueID="get_IsPointer():System.Boolean">
				<signature>System.Type.get_IsPointer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPrimitive" uniqueID="get_IsPrimitive():System.Boolean">
				<signature>System.Type.get_IsPrimitive():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPublic" uniqueID="get_IsPublic():System.Boolean">
				<signature>System.Type.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSealed" uniqueID="get_IsSealed():System.Boolean">
				<signature>System.Type.get_IsSealed():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecurityCritical" uniqueID="get_IsSecurityCritical():System.Boolean">
				<signature>System.Type.get_IsSecurityCritical():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecuritySafeCritical" uniqueID="get_IsSecuritySafeCritical():System.Boolean">
				<signature>System.Type.get_IsSecuritySafeCritical():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecurityTransparent" uniqueID="get_IsSecurityTransparent():System.Boolean">
				<signature>System.Type.get_IsSecurityTransparent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSerializable" uniqueID="get_IsSerializable():System.Boolean">
				<signature>System.Type.get_IsSerializable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSpecialName" uniqueID="get_IsSpecialName():System.Boolean">
				<signature>System.Type.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsSzArray" uniqueID="get_IsSzArray():System.Boolean">
				<signature>System.Type.get_IsSzArray():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsUnicodeClass" uniqueID="get_IsUnicodeClass():System.Boolean">
				<signature>System.Type.get_IsUnicodeClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsValueType" uniqueID="get_IsValueType():System.Boolean">
				<signature>System.Type.get_IsValueType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsVisible" uniqueID="get_IsVisible():System.Boolean">
				<signature>System.Type.get_IsVisible():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsWindowsRuntimeObject" uniqueID="get_IsWindowsRuntimeObject():System.Boolean">
				<signature>System.Type.get_IsWindowsRuntimeObject():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Type.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Module" uniqueID="get_Module():System.Reflection.Module">
				<signature>System.Type.get_Module():System.Reflection.Module</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.Type.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NeedsReflectionSecurityCheck" uniqueID="get_NeedsReflectionSecurityCheck():System.Boolean">
				<signature>System.Type.get_NeedsReflectionSecurityCheck():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Type.get_ReflectedType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StructLayoutAttribute" uniqueID="get_StructLayoutAttribute():System.Runtime.InteropServices.StructLayoutAttribute">
				<signature>System.Type.get_StructLayoutAttribute():System.Runtime.InteropServices.StructLayoutAttribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeHandle" uniqueID="get_TypeHandle():System.RuntimeTypeHandle">
				<signature>System.Type.get_TypeHandle():System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeInitializer" uniqueID="get_TypeInitializer():System.Reflection.ConstructorInfo">
				<signature>System.Type.get_TypeInitializer():System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnderlyingSystemType" uniqueID="get_UnderlyingSystemType():System.Type">
				<signature>System.Type.get_UnderlyingSystemType():System.Type</signature>
			</method>
		</class>
	</package>
	<package name="System.Data">
		<class name="IDataParameterCollection" uniqueID="System.Data.IDataParameterCollection">
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Data.IDataParameterCollection.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.Data.IDataParameterCollection.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.String):System.Void">
				<signature>System.Data.IDataParameterCollection.RemoveAt(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Object">
				<signature>System.Data.IDataParameterCollection.get_Item(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Object):System.Void">
				<signature>System.Data.IDataParameterCollection.set_Item(System.String;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IDbCommand" uniqueID="System.Data.IDbCommand">
			<method accessibility="Public" methodKind="Member" name="Cancel" uniqueID="Cancel():System.Void">
				<signature>System.Data.IDbCommand.Cancel():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateParameter" uniqueID="CreateParameter():System.Data.IDbDataParameter">
				<signature>System.Data.IDbCommand.CreateParameter():System.Data.IDbDataParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteNonQuery" uniqueID="ExecuteNonQuery():System.Int32">
				<signature>System.Data.IDbCommand.ExecuteNonQuery():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReader" uniqueID="ExecuteReader():System.Data.IDataReader">
				<signature>System.Data.IDbCommand.ExecuteReader():System.Data.IDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReader" uniqueID="ExecuteReader(System.Data.CommandBehavior):System.Data.IDataReader">
				<signature>System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior):System.Data.IDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteScalar" uniqueID="ExecuteScalar():System.Object">
				<signature>System.Data.IDbCommand.ExecuteScalar():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Prepare" uniqueID="Prepare():System.Void">
				<signature>System.Data.IDbCommand.Prepare():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CommandText" uniqueID="get_CommandText():System.String">
				<signature>System.Data.IDbCommand.get_CommandText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CommandTimeout" uniqueID="get_CommandTimeout():System.Int32">
				<signature>System.Data.IDbCommand.get_CommandTimeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CommandType" uniqueID="get_CommandType():System.Data.CommandType">
				<signature>System.Data.IDbCommand.get_CommandType():System.Data.CommandType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Connection" uniqueID="get_Connection():System.Data.IDbConnection">
				<signature>System.Data.IDbCommand.get_Connection():System.Data.IDbConnection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Parameters" uniqueID="get_Parameters():System.Data.IDataParameterCollection">
				<signature>System.Data.IDbCommand.get_Parameters():System.Data.IDataParameterCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Transaction" uniqueID="get_Transaction():System.Data.IDbTransaction">
				<signature>System.Data.IDbCommand.get_Transaction():System.Data.IDbTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UpdatedRowSource" uniqueID="get_UpdatedRowSource():System.Data.UpdateRowSource">
				<signature>System.Data.IDbCommand.get_UpdatedRowSource():System.Data.UpdateRowSource</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CommandText" uniqueID="set_CommandText(System.String):System.Void">
				<signature>System.Data.IDbCommand.set_CommandText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CommandTimeout" uniqueID="set_CommandTimeout(System.Int32):System.Void">
				<signature>System.Data.IDbCommand.set_CommandTimeout(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CommandType" uniqueID="set_CommandType(System.Data.CommandType):System.Void">
				<signature>System.Data.IDbCommand.set_CommandType(System.Data.CommandType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Connection" uniqueID="set_Connection(System.Data.IDbConnection):System.Void">
				<signature>System.Data.IDbCommand.set_Connection(System.Data.IDbConnection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Transaction" uniqueID="set_Transaction(System.Data.IDbTransaction):System.Void">
				<signature>System.Data.IDbCommand.set_Transaction(System.Data.IDbTransaction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UpdatedRowSource" uniqueID="set_UpdatedRowSource(System.Data.UpdateRowSource):System.Void">
				<signature>System.Data.IDbCommand.set_UpdatedRowSource(System.Data.UpdateRowSource):System.Void</signature>
			</method>
		</class>
		<class name="IDataReader" uniqueID="System.Data.IDataReader">
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Data.IDataReader.Close():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSchemaTable" uniqueID="GetSchemaTable():System.Data.DataTable">
				<signature>System.Data.IDataReader.GetSchemaTable():System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NextResult" uniqueID="NextResult():System.Boolean">
				<signature>System.Data.IDataReader.NextResult():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read():System.Boolean">
				<signature>System.Data.IDataReader.Read():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Depth" uniqueID="get_Depth():System.Int32">
				<signature>System.Data.IDataReader.get_Depth():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClosed" uniqueID="get_IsClosed():System.Boolean">
				<signature>System.Data.IDataReader.get_IsClosed():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RecordsAffected" uniqueID="get_RecordsAffected():System.Int32">
				<signature>System.Data.IDataReader.get_RecordsAffected():System.Int32</signature>
			</method>
		</class>
		<class name="IDbConnection" uniqueID="System.Data.IDbConnection">
			<method accessibility="Public" methodKind="Member" name="BeginTransaction" uniqueID="BeginTransaction():System.Data.IDbTransaction">
				<signature>System.Data.IDbConnection.BeginTransaction():System.Data.IDbTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginTransaction" uniqueID="BeginTransaction(System.Data.IsolationLevel):System.Data.IDbTransaction">
				<signature>System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel):System.Data.IDbTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ChangeDatabase" uniqueID="ChangeDatabase(System.String):System.Void">
				<signature>System.Data.IDbConnection.ChangeDatabase(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Data.IDbConnection.Close():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateCommand" uniqueID="CreateCommand():System.Data.IDbCommand">
				<signature>System.Data.IDbConnection.CreateCommand():System.Data.IDbCommand</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Open" uniqueID="Open():System.Void">
				<signature>System.Data.IDbConnection.Open():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ConnectionString" uniqueID="get_ConnectionString():System.String">
				<signature>System.Data.IDbConnection.get_ConnectionString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ConnectionTimeout" uniqueID="get_ConnectionTimeout():System.Int32">
				<signature>System.Data.IDbConnection.get_ConnectionTimeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Database" uniqueID="get_Database():System.String">
				<signature>System.Data.IDbConnection.get_Database():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_State" uniqueID="get_State():System.Data.ConnectionState">
				<signature>System.Data.IDbConnection.get_State():System.Data.ConnectionState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ConnectionString" uniqueID="set_ConnectionString(System.String):System.Void">
				<signature>System.Data.IDbConnection.set_ConnectionString(System.String):System.Void</signature>
			</method>
		</class>
		<class name="IDataRecord" uniqueID="System.Data.IDataRecord">
			<method accessibility="Public" methodKind="Member" name="GetBoolean" uniqueID="GetBoolean(System.Int32):System.Boolean">
				<signature>System.Data.IDataRecord.GetBoolean(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetByte" uniqueID="GetByte(System.Int32):System.Byte">
				<signature>System.Data.IDataRecord.GetByte(System.Int32):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBytes" uniqueID="GetBytes(System.Int32;System.Int64;System.Byte[];System.Int32;System.Int32):System.Int64">
				<signature>System.Data.IDataRecord.GetBytes(System.Int32;System.Int64;System.Byte[];System.Int32;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChar" uniqueID="GetChar(System.Int32):System.Char">
				<signature>System.Data.IDataRecord.GetChar(System.Int32):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChars" uniqueID="GetChars(System.Int32;System.Int64;System.Char[];System.Int32;System.Int32):System.Int64">
				<signature>System.Data.IDataRecord.GetChars(System.Int32;System.Int64;System.Char[];System.Int32;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetData" uniqueID="GetData(System.Int32):System.Data.IDataReader">
				<signature>System.Data.IDataRecord.GetData(System.Int32):System.Data.IDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDataTypeName" uniqueID="GetDataTypeName(System.Int32):System.String">
				<signature>System.Data.IDataRecord.GetDataTypeName(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDateTime" uniqueID="GetDateTime(System.Int32):System.DateTime">
				<signature>System.Data.IDataRecord.GetDateTime(System.Int32):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDecimal" uniqueID="GetDecimal(System.Int32):System.Decimal">
				<signature>System.Data.IDataRecord.GetDecimal(System.Int32):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDouble" uniqueID="GetDouble(System.Int32):System.Double">
				<signature>System.Data.IDataRecord.GetDouble(System.Int32):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFieldType" uniqueID="GetFieldType(System.Int32):System.Type">
				<signature>System.Data.IDataRecord.GetFieldType(System.Int32):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFloat" uniqueID="GetFloat(System.Int32):System.Single">
				<signature>System.Data.IDataRecord.GetFloat(System.Int32):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGuid" uniqueID="GetGuid(System.Int32):System.Guid">
				<signature>System.Data.IDataRecord.GetGuid(System.Int32):System.Guid</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInt16" uniqueID="GetInt16(System.Int32):System.Int16">
				<signature>System.Data.IDataRecord.GetInt16(System.Int32):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInt32" uniqueID="GetInt32(System.Int32):System.Int32">
				<signature>System.Data.IDataRecord.GetInt32(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInt64" uniqueID="GetInt64(System.Int32):System.Int64">
				<signature>System.Data.IDataRecord.GetInt64(System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetName" uniqueID="GetName(System.Int32):System.String">
				<signature>System.Data.IDataRecord.GetName(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetOrdinal" uniqueID="GetOrdinal(System.String):System.Int32">
				<signature>System.Data.IDataRecord.GetOrdinal(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetString" uniqueID="GetString(System.Int32):System.String">
				<signature>System.Data.IDataRecord.GetString(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32):System.Object">
				<signature>System.Data.IDataRecord.GetValue(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValues" uniqueID="GetValues(System.Object[]):System.Int32">
				<signature>System.Data.IDataRecord.GetValues(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDBNull" uniqueID="IsDBNull(System.Int32):System.Boolean">
				<signature>System.Data.IDataRecord.IsDBNull(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FieldCount" uniqueID="get_FieldCount():System.Int32">
				<signature>System.Data.IDataRecord.get_FieldCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object">
				<signature>System.Data.IDataRecord.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Object">
				<signature>System.Data.IDataRecord.get_Item(System.String):System.Object</signature>
			</method>
		</class>
		<class name="IDataParameter" uniqueID="System.Data.IDataParameter">
			<method accessibility="Public" methodKind="Member" name="get_DbType" uniqueID="get_DbType():System.Data.DbType">
				<signature>System.Data.IDataParameter.get_DbType():System.Data.DbType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Direction" uniqueID="get_Direction():System.Data.ParameterDirection">
				<signature>System.Data.IDataParameter.get_Direction():System.Data.ParameterDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNullable" uniqueID="get_IsNullable():System.Boolean">
				<signature>System.Data.IDataParameter.get_IsNullable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ParameterName" uniqueID="get_ParameterName():System.String">
				<signature>System.Data.IDataParameter.get_ParameterName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SourceColumn" uniqueID="get_SourceColumn():System.String">
				<signature>System.Data.IDataParameter.get_SourceColumn():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SourceVersion" uniqueID="get_SourceVersion():System.Data.DataRowVersion">
				<signature>System.Data.IDataParameter.get_SourceVersion():System.Data.DataRowVersion</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Object">
				<signature>System.Data.IDataParameter.get_Value():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DbType" uniqueID="set_DbType(System.Data.DbType):System.Void">
				<signature>System.Data.IDataParameter.set_DbType(System.Data.DbType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Direction" uniqueID="set_Direction(System.Data.ParameterDirection):System.Void">
				<signature>System.Data.IDataParameter.set_Direction(System.Data.ParameterDirection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ParameterName" uniqueID="set_ParameterName(System.String):System.Void">
				<signature>System.Data.IDataParameter.set_ParameterName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SourceColumn" uniqueID="set_SourceColumn(System.String):System.Void">
				<signature>System.Data.IDataParameter.set_SourceColumn(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SourceVersion" uniqueID="set_SourceVersion(System.Data.DataRowVersion):System.Void">
				<signature>System.Data.IDataParameter.set_SourceVersion(System.Data.DataRowVersion):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Value" uniqueID="set_Value(System.Object):System.Void">
				<signature>System.Data.IDataParameter.set_Value(System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IDbDataParameter" uniqueID="System.Data.IDbDataParameter">
			<method accessibility="Public" methodKind="Member" name="get_Precision" uniqueID="get_Precision():System.Byte">
				<signature>System.Data.IDbDataParameter.get_Precision():System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scale" uniqueID="get_Scale():System.Byte">
				<signature>System.Data.IDbDataParameter.get_Scale():System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Size" uniqueID="get_Size():System.Int32">
				<signature>System.Data.IDbDataParameter.get_Size():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Precision" uniqueID="set_Precision(System.Byte):System.Void">
				<signature>System.Data.IDbDataParameter.set_Precision(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Scale" uniqueID="set_Scale(System.Byte):System.Void">
				<signature>System.Data.IDbDataParameter.set_Scale(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Size" uniqueID="set_Size(System.Int32):System.Void">
				<signature>System.Data.IDbDataParameter.set_Size(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="DataColumn" uniqueID="System.Data.DataColumn">
			<method accessibility="Protected" methodKind="Static" name="IsAutoIncrementType" uniqueID="IsAutoIncrementType(System.Type):System.Boolean">
				<signature>System.Data.DataColumn.IsAutoIncrementType(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddDependentColumn" uniqueID="AddDependentColumn(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumn.AddDependentColumn(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BindExpression" uniqueID="BindExpression():System.Void">
				<signature>System.Data.DataColumn.BindExpression():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckColumnConstraint" uniqueID="CheckColumnConstraint(System.Data.DataRow;System.Data.DataRowAction):System.Void">
				<signature>System.Data.DataColumn.CheckColumnConstraint(System.Data.DataRow;System.Data.DataRowAction):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckMaxLength" uniqueID="CheckMaxLength():System.Boolean">
				<signature>System.Data.DataColumn.CheckMaxLength():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckMaxLength" uniqueID="CheckMaxLength(System.Data.DataRow):System.Void">
				<signature>System.Data.DataColumn.CheckMaxLength(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CheckNotAllowNull" uniqueID="CheckNotAllowNull():System.Void">
				<signature>System.Data.DataColumn.CheckNotAllowNull():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckNullable" uniqueID="CheckNullable(System.Data.DataRow):System.Void">
				<signature>System.Data.DataColumn.CheckNullable(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckUnique" uniqueID="CheckUnique():System.Void">
				<signature>System.Data.DataColumn.CheckUnique():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Clone" uniqueID="Clone():System.Data.DataColumn">
				<signature>System.Data.DataColumn.Clone():System.Data.DataColumn</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Compare" uniqueID="Compare(System.Int32;System.Int32):System.Int32">
				<signature>System.Data.DataColumn.Compare(System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CompareValueTo" uniqueID="CompareValueTo(System.Int32;System.Object):System.Int32">
				<signature>System.Data.DataColumn.CompareValueTo(System.Int32;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CompareValueTo" uniqueID="CompareValueTo(System.Int32;System.Object;System.Boolean):System.Boolean">
				<signature>System.Data.DataColumn.CompareValueTo(System.Int32;System.Object;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConvertObjectToXml" uniqueID="ConvertObjectToXml(System.Object):System.String">
				<signature>System.Data.DataColumn.ConvertObjectToXml(System.Object):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConvertObjectToXml" uniqueID="ConvertObjectToXml(System.Object;System.Xml.XmlWriter;System.Xml.Serialization.XmlRootAttribute):System.Void">
				<signature>System.Data.DataColumn.ConvertObjectToXml(System.Object;System.Xml.XmlWriter;System.Xml.Serialization.XmlRootAttribute):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConvertValue" uniqueID="ConvertValue(System.Object):System.Object">
				<signature>System.Data.DataColumn.ConvertValue(System.Object):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConvertXmlToObject" uniqueID="ConvertXmlToObject(System.String):System.Object">
				<signature>System.Data.DataColumn.ConvertXmlToObject(System.String):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConvertXmlToObject" uniqueID="ConvertXmlToObject(System.Xml.XmlReader;System.Xml.Serialization.XmlRootAttribute):System.Object">
				<signature>System.Data.DataColumn.ConvertXmlToObject(System.Xml.XmlReader;System.Xml.Serialization.XmlRootAttribute):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Copy" uniqueID="Copy(System.Int32;System.Int32):System.Void">
				<signature>System.Data.DataColumn.Copy(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CopyValueIntoStore" uniqueID="CopyValueIntoStore(System.Int32;System.Object;System.Collections.BitArray;System.Int32):System.Void">
				<signature>System.Data.DataColumn.CopyValueIntoStore(System.Int32;System.Object;System.Collections.BitArray;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataColumn" uniqueID="DataColumn():System.Void">
				<signature>System.Data.DataColumn.DataColumn():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataColumn" uniqueID="DataColumn(System.String):System.Void">
				<signature>System.Data.DataColumn.DataColumn(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataColumn" uniqueID="DataColumn(System.String;System.Type):System.Void">
				<signature>System.Data.DataColumn.DataColumn(System.String;System.Type):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataColumn" uniqueID="DataColumn(System.String;System.Type;System.String):System.Void">
				<signature>System.Data.DataColumn.DataColumn(System.String;System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataColumn" uniqueID="DataColumn(System.String;System.Type;System.String;System.Data.MappingType):System.Void">
				<signature>System.Data.DataColumn.DataColumn(System.String;System.Type;System.String;System.Data.MappingType):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindParentRelation" uniqueID="FindParentRelation():System.Data.DataRelation">
				<signature>System.Data.DataColumn.FindParentRelation():System.Data.DataRelation</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinishInitInProgress" uniqueID="FinishInitInProgress():System.Void">
				<signature>System.Data.DataColumn.FinishInitInProgress():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FreeRecord" uniqueID="FreeRecord(System.Int32):System.Void">
				<signature>System.Data.DataColumn.FreeRecord(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetAggregateValue" uniqueID="GetAggregateValue(System.Int32[];System.Data.AggregateType):System.Object">
				<signature>System.Data.DataColumn.GetAggregateValue(System.Int32[];System.Data.AggregateType):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetColumnValueAsString" uniqueID="GetColumnValueAsString(System.Data.DataRow;System.Data.DataRowVersion):System.String">
				<signature>System.Data.DataColumn.GetColumnValueAsString(System.Data.DataRow;System.Data.DataRowVersion):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDataRow" uniqueID="GetDataRow(System.Int32):System.Data.DataRow">
				<signature>System.Data.DataColumn.GetDataRow(System.Int32):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEmptyColumnStore" uniqueID="GetEmptyColumnStore(System.Int32):System.Object">
				<signature>System.Data.DataColumn.GetEmptyColumnStore(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetStringLength" uniqueID="GetStringLength(System.Int32):System.Int32">
				<signature>System.Data.DataColumn.GetStringLength(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HandleDependentColumnList" uniqueID="HandleDependentColumnList(System.Data.DataExpression;System.Data.DataExpression):System.Void">
				<signature>System.Data.DataColumn.HandleDependentColumnList(System.Data.DataExpression;System.Data.DataExpression):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Init" uniqueID="Init(System.Int32):System.Void">
				<signature>System.Data.DataColumn.Init(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializeRecord" uniqueID="InitializeRecord(System.Int32):System.Void">
				<signature>System.Data.DataColumn.InitializeRecord(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InsureStorage" uniqueID="InsureStorage():System.Void">
				<signature>System.Data.DataColumn.InsureStorage():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalUnique" uniqueID="InternalUnique(System.Boolean):System.Void">
				<signature>System.Data.DataColumn.InternalUnique(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsColumnMappingValid" uniqueID="IsColumnMappingValid(System.Data.Common.StorageType;System.Data.MappingType):System.Boolean">
				<signature>System.Data.DataColumn.IsColumnMappingValid(System.Data.Common.StorageType;System.Data.MappingType):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsInRelation" uniqueID="IsInRelation():System.Boolean">
				<signature>System.Data.DataColumn.IsInRelation():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsMaxLengthViolated" uniqueID="IsMaxLengthViolated():System.Boolean">
				<signature>System.Data.DataColumn.IsMaxLengthViolated():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsNotAllowDBNullViolated" uniqueID="IsNotAllowDBNullViolated():System.Boolean">
				<signature>System.Data.DataColumn.IsNotAllowDBNullViolated():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsNull" uniqueID="IsNull(System.Int32):System.Boolean">
				<signature>System.Data.DataColumn.IsNull(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsValueCustomTypeInstance" uniqueID="IsValueCustomTypeInstance(System.Object):System.Boolean">
				<signature>System.Data.DataColumn.IsValueCustomTypeInstance(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPropertyChanging" uniqueID="OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs):System.Void">
				<signature>System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnSetDataSet" uniqueID="OnSetDataSet():System.Void">
				<signature>System.Data.DataColumn.OnSetDataSet():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RaisePropertyChanging" uniqueID="RaisePropertyChanging(System.String):System.Void">
				<signature>System.Data.DataColumn.RaisePropertyChanging(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveDependentColumn" uniqueID="RemoveDependentColumn(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumn.RemoveDependentColumn(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetCaption" uniqueID="ResetCaption():System.Void">
				<signature>System.Data.DataColumn.ResetCaption():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetNamespace" uniqueID="ResetNamespace():System.Void">
				<signature>System.Data.DataColumn.ResetNamespace():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCapacity" uniqueID="SetCapacity(System.Int32):System.Void">
				<signature>System.Data.DataColumn.SetCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetMaxLengthSimpleType" uniqueID="SetMaxLengthSimpleType():System.Void">
				<signature>System.Data.DataColumn.SetMaxLengthSimpleType():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetOrdinal" uniqueID="SetOrdinal(System.Int32):System.Void">
				<signature>System.Data.DataColumn.SetOrdinal(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetOrdinalInternal" uniqueID="SetOrdinalInternal(System.Int32):System.Void">
				<signature>System.Data.DataColumn.SetOrdinalInternal(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetStorage" uniqueID="SetStorage(System.Object;System.Collections.BitArray):System.Void">
				<signature>System.Data.DataColumn.SetStorage(System.Object;System.Collections.BitArray):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetTable" uniqueID="SetTable(System.Data.DataTable):System.Void">
				<signature>System.Data.DataColumn.SetTable(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetValue" uniqueID="SetValue(System.Int32;System.Object):System.Void">
				<signature>System.Data.DataColumn.SetValue(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializeCaption" uniqueID="ShouldSerializeCaption():System.Boolean">
				<signature>System.Data.DataColumn.ShouldSerializeCaption():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializeDefaultValue" uniqueID="ShouldSerializeDefaultValue():System.Boolean">
				<signature>System.Data.DataColumn.ShouldSerializeDefaultValue():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializeNamespace" uniqueID="ShouldSerializeNamespace():System.Boolean">
				<signature>System.Data.DataColumn.ShouldSerializeNamespace():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.DataColumn.ToString():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UpdateColumnType" uniqueID="UpdateColumnType(System.Type;System.Data.Common.StorageType):System.Void">
				<signature>System.Data.DataColumn.UpdateColumnType(System.Type;System.Data.Common.StorageType):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_PropertyChanging" uniqueID="add_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Data.DataColumn.add_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowDBNull" uniqueID="get_AllowDBNull():System.Boolean">
				<signature>System.Data.DataColumn.get_AllowDBNull():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AutoInc" uniqueID="get_AutoInc():System.Data.AutoIncrementValue">
				<signature>System.Data.DataColumn.get_AutoInc():System.Data.AutoIncrementValue</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AutoIncrement" uniqueID="get_AutoIncrement():System.Boolean">
				<signature>System.Data.DataColumn.get_AutoIncrement():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AutoIncrementCurrent" uniqueID="get_AutoIncrementCurrent():System.Object">
				<signature>System.Data.DataColumn.get_AutoIncrementCurrent():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AutoIncrementSeed" uniqueID="get_AutoIncrementSeed():System.Int64">
				<signature>System.Data.DataColumn.get_AutoIncrementSeed():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AutoIncrementStep" uniqueID="get_AutoIncrementStep():System.Int64">
				<signature>System.Data.DataColumn.get_AutoIncrementStep():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Caption" uniqueID="get_Caption():System.String">
				<signature>System.Data.DataColumn.get_Caption():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ColumnMapping" uniqueID="get_ColumnMapping():System.Data.MappingType">
				<signature>System.Data.DataColumn.get_ColumnMapping():System.Data.MappingType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ColumnName" uniqueID="get_ColumnName():System.String">
				<signature>System.Data.DataColumn.get_ColumnName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Computed" uniqueID="get_Computed():System.Boolean">
				<signature>System.Data.DataColumn.get_Computed():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DataExpression" uniqueID="get_DataExpression():System.Data.DataExpression">
				<signature>System.Data.DataColumn.get_DataExpression():System.Data.DataExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataType" uniqueID="get_DataType():System.Type">
				<signature>System.Data.DataColumn.get_DataType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DateTimeMode" uniqueID="get_DateTimeMode():System.Data.DataSetDateTime">
				<signature>System.Data.DataColumn.get_DateTimeMode():System.Data.DataSetDateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DefaultValue" uniqueID="get_DefaultValue():System.Object">
				<signature>System.Data.DataColumn.get_DefaultValue():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DefaultValueIsNull" uniqueID="get_DefaultValueIsNull():System.Boolean">
				<signature>System.Data.DataColumn.get_DefaultValueIsNull():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EncodedColumnName" uniqueID="get_EncodedColumnName():System.String">
				<signature>System.Data.DataColumn.get_EncodedColumnName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.String">
				<signature>System.Data.DataColumn.get_Expression():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ExtendedProperties" uniqueID="get_ExtendedProperties():System.Data.PropertyCollection">
				<signature>System.Data.DataColumn.get_ExtendedProperties():System.Data.PropertyCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FormatProvider" uniqueID="get_FormatProvider():System.IFormatProvider">
				<signature>System.Data.DataColumn.get_FormatProvider():System.IFormatProvider</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasData" uniqueID="get_HasData():System.Boolean">
				<signature>System.Data.DataColumn.get_HasData():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ImplementsIChangeTracking" uniqueID="get_ImplementsIChangeTracking():System.Boolean">
				<signature>System.Data.DataColumn.get_ImplementsIChangeTracking():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ImplementsINullable" uniqueID="get_ImplementsINullable():System.Boolean">
				<signature>System.Data.DataColumn.get_ImplementsINullable():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ImplementsIRevertibleChangeTracking" uniqueID="get_ImplementsIRevertibleChangeTracking():System.Boolean">
				<signature>System.Data.DataColumn.get_ImplementsIRevertibleChangeTracking():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ImplementsIXMLSerializable" uniqueID="get_ImplementsIXMLSerializable():System.Boolean">
				<signature>System.Data.DataColumn.get_ImplementsIXMLSerializable():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsCloneable" uniqueID="get_IsCloneable():System.Boolean">
				<signature>System.Data.DataColumn.get_IsCloneable():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsCustomType" uniqueID="get_IsCustomType():System.Boolean">
				<signature>System.Data.DataColumn.get_IsCustomType():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsSqlType" uniqueID="get_IsSqlType():System.Boolean">
				<signature>System.Data.DataColumn.get_IsSqlType():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsStringType" uniqueID="get_IsStringType():System.Boolean">
				<signature>System.Data.DataColumn.get_IsStringType():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsValueType" uniqueID="get_IsValueType():System.Boolean">
				<signature>System.Data.DataColumn.get_IsValueType():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object">
				<signature>System.Data.DataColumn.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Locale" uniqueID="get_Locale():System.Globalization.CultureInfo">
				<signature>System.Data.DataColumn.get_Locale():System.Globalization.CultureInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MaxLength" uniqueID="get_MaxLength():System.Int32">
				<signature>System.Data.DataColumn.get_MaxLength():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.Data.DataColumn.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ObjectID" uniqueID="get_ObjectID():System.Int32">
				<signature>System.Data.DataColumn.get_ObjectID():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Ordinal" uniqueID="get_Ordinal():System.Int32">
				<signature>System.Data.DataColumn.get_Ordinal():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Prefix" uniqueID="get_Prefix():System.String">
				<signature>System.Data.DataColumn.get_Prefix():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReadOnly" uniqueID="get_ReadOnly():System.Boolean">
				<signature>System.Data.DataColumn.get_ReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SimpleType" uniqueID="get_SimpleType():System.Data.SimpleType">
				<signature>System.Data.DataColumn.get_SimpleType():System.Data.SimpleType</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_SortIndex" uniqueID="get_SortIndex():System.Data.Index">
				<signature>System.Data.DataColumn.get_SortIndex():System.Data.Index</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Table" uniqueID="get_Table():System.Data.DataTable">
				<signature>System.Data.DataColumn.get_Table():System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Unique" uniqueID="get_Unique():System.Boolean">
				<signature>System.Data.DataColumn.get_Unique():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_XmlDataType" uniqueID="get_XmlDataType():System.String">
				<signature>System.Data.DataColumn.get_XmlDataType():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_PropertyChanging" uniqueID="remove_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Data.DataColumn.remove_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowDBNull" uniqueID="set_AllowDBNull(System.Boolean):System.Void">
				<signature>System.Data.DataColumn.set_AllowDBNull(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AutoIncrement" uniqueID="set_AutoIncrement(System.Boolean):System.Void">
				<signature>System.Data.DataColumn.set_AutoIncrement(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AutoIncrementCurrent" uniqueID="set_AutoIncrementCurrent(System.Object):System.Void">
				<signature>System.Data.DataColumn.set_AutoIncrementCurrent(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AutoIncrementSeed" uniqueID="set_AutoIncrementSeed(System.Int64):System.Void">
				<signature>System.Data.DataColumn.set_AutoIncrementSeed(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AutoIncrementStep" uniqueID="set_AutoIncrementStep(System.Int64):System.Void">
				<signature>System.Data.DataColumn.set_AutoIncrementStep(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Caption" uniqueID="set_Caption(System.String):System.Void">
				<signature>System.Data.DataColumn.set_Caption(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ColumnMapping" uniqueID="set_ColumnMapping(System.Data.MappingType):System.Void">
				<signature>System.Data.DataColumn.set_ColumnMapping(System.Data.MappingType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ColumnName" uniqueID="set_ColumnName(System.String):System.Void">
				<signature>System.Data.DataColumn.set_ColumnName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataType" uniqueID="set_DataType(System.Type):System.Void">
				<signature>System.Data.DataColumn.set_DataType(System.Type):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DateTimeMode" uniqueID="set_DateTimeMode(System.Data.DataSetDateTime):System.Void">
				<signature>System.Data.DataColumn.set_DateTimeMode(System.Data.DataSetDateTime):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DefaultValue" uniqueID="set_DefaultValue(System.Object):System.Void">
				<signature>System.Data.DataColumn.set_DefaultValue(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Expression" uniqueID="set_Expression(System.String):System.Void">
				<signature>System.Data.DataColumn.set_Expression(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Data.DataColumn.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MaxLength" uniqueID="set_MaxLength(System.Int32):System.Void">
				<signature>System.Data.DataColumn.set_MaxLength(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Namespace" uniqueID="set_Namespace(System.String):System.Void">
				<signature>System.Data.DataColumn.set_Namespace(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Prefix" uniqueID="set_Prefix(System.String):System.Void">
				<signature>System.Data.DataColumn.set_Prefix(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ReadOnly" uniqueID="set_ReadOnly(System.Boolean):System.Void">
				<signature>System.Data.DataColumn.set_ReadOnly(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SimpleType" uniqueID="set_SimpleType(System.Data.SimpleType):System.Void">
				<signature>System.Data.DataColumn.set_SimpleType(System.Data.SimpleType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Unique" uniqueID="set_Unique(System.Boolean):System.Void">
				<signature>System.Data.DataColumn.set_Unique(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_XmlDataType" uniqueID="set_XmlDataType(System.String):System.Void">
				<signature>System.Data.DataColumn.set_XmlDataType(System.String):System.Void</signature>
			</method>
		</class>
		<class name="InternalDataCollectionBase" uniqueID="System.Data.InternalDataCollectionBase">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.InternalDataCollectionBase.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Data.InternalDataCollectionBase.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.InternalDataCollectionBase.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InternalDataCollectionBase" uniqueID="InternalDataCollectionBase():System.Void">
				<signature>System.Data.InternalDataCollectionBase.InternalDataCollectionBase():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NamesEqual" uniqueID="NamesEqual(System.String;System.String;System.Boolean;System.Globalization.CultureInfo):System.Int32">
				<signature>System.Data.InternalDataCollectionBase.NamesEqual(System.String;System.String;System.Boolean;System.Globalization.CultureInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Data.InternalDataCollectionBase.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Data.InternalDataCollectionBase.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Data.InternalDataCollectionBase.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_List" uniqueID="get_List():System.Collections.ArrayList">
				<signature>System.Data.InternalDataCollectionBase.get_List():System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Data.InternalDataCollectionBase.get_SyncRoot():System.Object</signature>
			</method>
		</class>
		<class name="DataColumnCollection" uniqueID="System.Data.DataColumnCollection">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add():System.Data.DataColumn">
				<signature>System.Data.DataColumnCollection.Add():System.Data.DataColumn</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.Add(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String):System.Data.DataColumn">
				<signature>System.Data.DataColumnCollection.Add(System.String):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Type):System.Data.DataColumn">
				<signature>System.Data.DataColumnCollection.Add(System.String;System.Type):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Type;System.String):System.Data.DataColumn">
				<signature>System.Data.DataColumnCollection.Add(System.String;System.Type;System.String):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddAt" uniqueID="AddAt(System.Int32;System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.AddAt(System.Int32;System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddColumnsImplementingIChangeTrackingList" uniqueID="AddColumnsImplementingIChangeTrackingList(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.AddColumnsImplementingIChangeTrackingList(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Data.DataColumn[]):System.Void">
				<signature>System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ArrayAdd" uniqueID="ArrayAdd(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.ArrayAdd(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ArrayAdd" uniqueID="ArrayAdd(System.Int32;System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.ArrayAdd(System.Int32;System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ArrayRemove" uniqueID="ArrayRemove(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.ArrayRemove(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AssignName" uniqueID="AssignName():System.String">
				<signature>System.Data.DataColumnCollection.AssignName():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BaseAdd" uniqueID="BaseAdd(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.BaseAdd(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BaseGroupSwitch" uniqueID="BaseGroupSwitch(System.Data.DataColumn[];System.Int32;System.Data.DataColumn[];System.Int32):System.Void">
				<signature>System.Data.DataColumnCollection.BaseGroupSwitch(System.Data.DataColumn[];System.Int32;System.Data.DataColumn[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BaseRemove" uniqueID="BaseRemove(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.BaseRemove(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CanRegisterName" uniqueID="CanRegisterName(System.String):System.Boolean">
				<signature>System.Data.DataColumnCollection.CanRegisterName(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CanRemove" uniqueID="CanRemove(System.Data.DataColumn):System.Boolean">
				<signature>System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CanRemove" uniqueID="CanRemove(System.Data.DataColumn;System.Boolean):System.Boolean">
				<signature>System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckIChangeTracking" uniqueID="CheckIChangeTracking(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.CheckIChangeTracking(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Data.DataColumnCollection.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Data.DataColumnCollection.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Contains" uniqueID="Contains(System.String;System.Boolean):System.Boolean">
				<signature>System.Data.DataColumnCollection.Contains(System.String;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataColumn[];System.Int32):System.Void">
				<signature>System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DataColumnCollection" uniqueID="DataColumnCollection(System.Data.DataTable):System.Void">
				<signature>System.Data.DataColumnCollection.DataColumnCollection(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureAdditionalCapacity" uniqueID="EnsureAdditionalCapacity(System.Int32):System.Void">
				<signature>System.Data.DataColumnCollection.EnsureAdditionalCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinishInitCollection" uniqueID="FinishInitCollection():System.Void">
				<signature>System.Data.DataColumnCollection.FinishInitCollection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataColumn):System.Int32">
				<signature>System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.Data.DataColumnCollection.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IndexOfCaseInsensitive" uniqueID="IndexOfCaseInsensitive(System.String):System.Int32">
				<signature>System.Data.DataColumnCollection.IndexOfCaseInsensitive(System.String):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MakeName" uniqueID="MakeName(System.Int32):System.String">
				<signature>System.Data.DataColumnCollection.MakeName(System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveTo" uniqueID="MoveTo(System.Data.DataColumn;System.Int32):System.Void">
				<signature>System.Data.DataColumnCollection.MoveTo(System.Data.DataColumn;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs):System.Void">
				<signature>System.Data.DataColumnCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanging" uniqueID="OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs):System.Void">
				<signature>System.Data.DataColumnCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnColumnPropertyChanged" uniqueID="OnColumnPropertyChanged(System.ComponentModel.CollectionChangeEventArgs):System.Void">
				<signature>System.Data.DataColumnCollection.OnColumnPropertyChanged(System.ComponentModel.CollectionChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterColumnName" uniqueID="RegisterColumnName(System.String;System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.RegisterColumnName(System.String;System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.Remove(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Void">
				<signature>System.Data.DataColumnCollection.Remove(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Data.DataColumnCollection.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RemoveColumnsImplementingIChangeTrackingList" uniqueID="RemoveColumnsImplementingIChangeTrackingList(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataColumnCollection.RemoveColumnsImplementingIChangeTrackingList(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UnregisterName" uniqueID="UnregisterName(System.String):System.Void">
				<signature>System.Data.DataColumnCollection.UnregisterName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CollectionChanged" uniqueID="add_CollectionChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void">
				<signature>System.Data.DataColumnCollection.add_CollectionChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_CollectionChanging" uniqueID="add_CollectionChanging(System.ComponentModel.CollectionChangeEventHandler):System.Void">
				<signature>System.Data.DataColumnCollection.add_CollectionChanging(System.ComponentModel.CollectionChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_ColumnPropertyChanged" uniqueID="add_ColumnPropertyChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void">
				<signature>System.Data.DataColumnCollection.add_ColumnPropertyChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ColumnsImplementingIChangeTracking" uniqueID="get_ColumnsImplementingIChangeTracking():System.Data.DataColumn[]">
				<signature>System.Data.DataColumnCollection.get_ColumnsImplementingIChangeTracking():System.Data.DataColumn[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ColumnsImplementingIChangeTrackingCount" uniqueID="get_ColumnsImplementingIChangeTrackingCount():System.Int32">
				<signature>System.Data.DataColumnCollection.get_ColumnsImplementingIChangeTrackingCount():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ColumnsImplementingIRevertibleChangeTrackingCount" uniqueID="get_ColumnsImplementingIRevertibleChangeTrackingCount():System.Int32">
				<signature>System.Data.DataColumnCollection.get_ColumnsImplementingIRevertibleChangeTrackingCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataColumn">
				<signature>System.Data.DataColumnCollection.get_Item(System.Int32):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Data.DataColumn">
				<signature>System.Data.DataColumnCollection.get_Item(System.String):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String;System.String):System.Data.DataColumn">
				<signature>System.Data.DataColumnCollection.get_Item(System.String;System.String):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_List" uniqueID="get_List():System.Collections.ArrayList">
				<signature>System.Data.DataColumnCollection.get_List():System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CollectionChanged" uniqueID="remove_CollectionChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void">
				<signature>System.Data.DataColumnCollection.remove_CollectionChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_CollectionChanging" uniqueID="remove_CollectionChanging(System.ComponentModel.CollectionChangeEventHandler):System.Void">
				<signature>System.Data.DataColumnCollection.remove_CollectionChanging(System.ComponentModel.CollectionChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_ColumnPropertyChanged" uniqueID="remove_ColumnPropertyChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void">
				<signature>System.Data.DataColumnCollection.remove_ColumnPropertyChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void</signature>
			</method>
		</class>
		<class name="DataRow" uniqueID="System.Data.DataRow">
			<method accessibility="Public" methodKind="Member" name="AcceptChanges" uniqueID="AcceptChanges():System.Void">
				<signature>System.Data.DataRow.AcceptChanges():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginEdit" uniqueID="BeginEdit():System.Void">
				<signature>System.Data.DataRow.BeginEdit():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginEditInternal" uniqueID="BeginEditInternal():System.Boolean">
				<signature>System.Data.DataRow.BeginEditInternal():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CancelEdit" uniqueID="CancelEdit():System.Void">
				<signature>System.Data.DataRow.CancelEdit():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckColumn" uniqueID="CheckColumn(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataRow.CheckColumn(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckForLoops" uniqueID="CheckForLoops(System.Data.DataRelation):System.Void">
				<signature>System.Data.DataRow.CheckForLoops(System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckInTable" uniqueID="CheckInTable():System.Void">
				<signature>System.Data.DataRow.CheckInTable():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearError" uniqueID="ClearError(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataRow.ClearError(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ClearErrors" uniqueID="ClearErrors():System.Void">
				<signature>System.Data.DataRow.ClearErrors():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CopyValuesIntoStore" uniqueID="CopyValuesIntoStore(System.Collections.ArrayList;System.Collections.ArrayList;System.Int32):System.Int32">
				<signature>System.Data.DataRow.CopyValuesIntoStore(System.Collections.ArrayList;System.Collections.ArrayList;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataRow" uniqueID="DataRow(System.Data.DataRowBuilder):System.Void">
				<signature>System.Data.DataRow.DataRow(System.Data.DataRowBuilder):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Delete" uniqueID="Delete():System.Void">
				<signature>System.Data.DataRow.Delete():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndEdit" uniqueID="EndEdit():System.Void">
				<signature>System.Data.DataRow.EndEdit():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChildRows" uniqueID="GetChildRows(System.Data.DataRelation):System.Data.DataRow[]">
				<signature>System.Data.DataRow.GetChildRows(System.Data.DataRelation):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChildRows" uniqueID="GetChildRows(System.Data.DataRelation;System.Data.DataRowVersion):System.Data.DataRow[]">
				<signature>System.Data.DataRow.GetChildRows(System.Data.DataRelation;System.Data.DataRowVersion):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChildRows" uniqueID="GetChildRows(System.String):System.Data.DataRow[]">
				<signature>System.Data.DataRow.GetChildRows(System.String):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChildRows" uniqueID="GetChildRows(System.String;System.Data.DataRowVersion):System.Data.DataRow[]">
				<signature>System.Data.DataRow.GetChildRows(System.String;System.Data.DataRowVersion):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetColumnError" uniqueID="GetColumnError(System.Data.DataColumn):System.String">
				<signature>System.Data.DataRow.GetColumnError(System.Data.DataColumn):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetColumnError" uniqueID="GetColumnError(System.Int32):System.String">
				<signature>System.Data.DataRow.GetColumnError(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetColumnError" uniqueID="GetColumnError(System.String):System.String">
				<signature>System.Data.DataRow.GetColumnError(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetColumnValues" uniqueID="GetColumnValues(System.Data.DataColumn[]):System.Object[]">
				<signature>System.Data.DataRow.GetColumnValues(System.Data.DataColumn[]):System.Object[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetColumnValues" uniqueID="GetColumnValues(System.Data.DataColumn[];System.Data.DataRowVersion):System.Object[]">
				<signature>System.Data.DataRow.GetColumnValues(System.Data.DataColumn[];System.Data.DataRowVersion):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetColumnsInError" uniqueID="GetColumnsInError():System.Data.DataColumn[]">
				<signature>System.Data.DataRow.GetColumnsInError():System.Data.DataColumn[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCurrentRecordNo" uniqueID="GetCurrentRecordNo():System.Int32">
				<signature>System.Data.DataRow.GetCurrentRecordNo():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDataColumn" uniqueID="GetDataColumn(System.String):System.Data.DataColumn">
				<signature>System.Data.DataRow.GetDataColumn(System.String):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultRecord" uniqueID="GetDefaultRecord():System.Int32">
				<signature>System.Data.DataRow.GetDefaultRecord():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDefaultRowVersion" uniqueID="GetDefaultRowVersion(System.Data.DataViewRowState):System.Data.DataRowVersion">
				<signature>System.Data.DataRow.GetDefaultRowVersion(System.Data.DataViewRowState):System.Data.DataRowVersion</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetKeyValues" uniqueID="GetKeyValues(System.Data.DataKey):System.Object[]">
				<signature>System.Data.DataRow.GetKeyValues(System.Data.DataKey):System.Object[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetKeyValues" uniqueID="GetKeyValues(System.Data.DataKey;System.Data.DataRowVersion):System.Object[]">
				<signature>System.Data.DataRow.GetKeyValues(System.Data.DataKey;System.Data.DataRowVersion):System.Object[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetNestedParentCount" uniqueID="GetNestedParentCount():System.Int32">
				<signature>System.Data.DataRow.GetNestedParentCount():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetNestedParentRow" uniqueID="GetNestedParentRow(System.Data.DataRowVersion):System.Data.DataRow">
				<signature>System.Data.DataRow.GetNestedParentRow(System.Data.DataRowVersion):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetOriginalRecordNo" uniqueID="GetOriginalRecordNo():System.Int32">
				<signature>System.Data.DataRow.GetOriginalRecordNo():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetParentRow" uniqueID="GetParentRow(System.Data.DataRelation):System.Data.DataRow">
				<signature>System.Data.DataRow.GetParentRow(System.Data.DataRelation):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetParentRow" uniqueID="GetParentRow(System.Data.DataRelation;System.Data.DataRowVersion):System.Data.DataRow">
				<signature>System.Data.DataRow.GetParentRow(System.Data.DataRelation;System.Data.DataRowVersion):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetParentRow" uniqueID="GetParentRow(System.String):System.Data.DataRow">
				<signature>System.Data.DataRow.GetParentRow(System.String):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetParentRow" uniqueID="GetParentRow(System.String;System.Data.DataRowVersion):System.Data.DataRow">
				<signature>System.Data.DataRow.GetParentRow(System.String;System.Data.DataRowVersion):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetParentRows" uniqueID="GetParentRows(System.Data.DataRelation):System.Data.DataRow[]">
				<signature>System.Data.DataRow.GetParentRows(System.Data.DataRelation):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetParentRows" uniqueID="GetParentRows(System.Data.DataRelation;System.Data.DataRowVersion):System.Data.DataRow[]">
				<signature>System.Data.DataRow.GetParentRows(System.Data.DataRelation;System.Data.DataRowVersion):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetParentRows" uniqueID="GetParentRows(System.String):System.Data.DataRow[]">
				<signature>System.Data.DataRow.GetParentRows(System.String):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetParentRows" uniqueID="GetParentRows(System.String;System.Data.DataRowVersion):System.Data.DataRow[]">
				<signature>System.Data.DataRow.GetParentRows(System.String;System.Data.DataRowVersion):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetProposedRecordNo" uniqueID="GetProposedRecordNo():System.Int32">
				<signature>System.Data.DataRow.GetProposedRecordNo():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRecordFromVersion" uniqueID="GetRecordFromVersion(System.Data.DataRowVersion):System.Int32">
				<signature>System.Data.DataRow.GetRecordFromVersion(System.Data.DataRowVersion):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRecordState" uniqueID="GetRecordState(System.Int32):System.Data.DataViewRowState">
				<signature>System.Data.DataRow.GetRecordState(System.Int32):System.Data.DataViewRowState</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasChanges" uniqueID="HasChanges():System.Boolean">
				<signature>System.Data.DataRow.HasChanges():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasKeyChanged" uniqueID="HasKeyChanged(System.Data.DataKey):System.Boolean">
				<signature>System.Data.DataRow.HasKeyChanged(System.Data.DataKey):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasKeyChanged" uniqueID="HasKeyChanged(System.Data.DataKey;System.Data.DataRowVersion;System.Data.DataRowVersion):System.Boolean">
				<signature>System.Data.DataRow.HasKeyChanged(System.Data.DataKey;System.Data.DataRowVersion;System.Data.DataRowVersion):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HasVersion" uniqueID="HasVersion(System.Data.DataRowVersion):System.Boolean">
				<signature>System.Data.DataRow.HasVersion(System.Data.DataRowVersion):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HaveValuesChanged" uniqueID="HaveValuesChanged(System.Data.DataColumn[]):System.Boolean">
				<signature>System.Data.DataRow.HaveValuesChanged(System.Data.DataColumn[]):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HaveValuesChanged" uniqueID="HaveValuesChanged(System.Data.DataColumn[];System.Data.DataRowVersion;System.Data.DataRowVersion):System.Boolean">
				<signature>System.Data.DataRow.HaveValuesChanged(System.Data.DataColumn[];System.Data.DataRowVersion;System.Data.DataRowVersion):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsNull" uniqueID="IsNull(System.Data.DataColumn):System.Boolean">
				<signature>System.Data.DataRow.IsNull(System.Data.DataColumn):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsNull" uniqueID="IsNull(System.Data.DataColumn;System.Data.DataRowVersion):System.Boolean">
				<signature>System.Data.DataRow.IsNull(System.Data.DataColumn;System.Data.DataRowVersion):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsNull" uniqueID="IsNull(System.Int32):System.Boolean">
				<signature>System.Data.DataRow.IsNull(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsNull" uniqueID="IsNull(System.String):System.Boolean">
				<signature>System.Data.DataRow.IsNull(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RejectChanges" uniqueID="RejectChanges():System.Void">
				<signature>System.Data.DataRow.RejectChanges():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetLastChangedColumn" uniqueID="ResetLastChangedColumn():System.Void">
				<signature>System.Data.DataRow.ResetLastChangedColumn():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RowErrorChanged" uniqueID="RowErrorChanged():System.Void">
				<signature>System.Data.DataRow.RowErrorChanged():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetAdded" uniqueID="SetAdded():System.Void">
				<signature>System.Data.DataRow.SetAdded():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetColumnError" uniqueID="SetColumnError(System.Data.DataColumn;System.String):System.Void">
				<signature>System.Data.DataRow.SetColumnError(System.Data.DataColumn;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetColumnError" uniqueID="SetColumnError(System.Int32;System.String):System.Void">
				<signature>System.Data.DataRow.SetColumnError(System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetColumnError" uniqueID="SetColumnError(System.String;System.String):System.Void">
				<signature>System.Data.DataRow.SetColumnError(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetKeyValues" uniqueID="SetKeyValues(System.Data.DataKey;System.Object[]):System.Void">
				<signature>System.Data.DataRow.SetKeyValues(System.Data.DataKey;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetModified" uniqueID="SetModified():System.Void">
				<signature>System.Data.DataRow.SetModified():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetNestedParentRow" uniqueID="SetNestedParentRow(System.Data.DataRow;System.Boolean):System.Void">
				<signature>System.Data.DataRow.SetNestedParentRow(System.Data.DataRow;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetNull" uniqueID="SetNull(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataRow.SetNull(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetParentRow" uniqueID="SetParentRow(System.Data.DataRow):System.Void">
				<signature>System.Data.DataRow.SetParentRow(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetParentRow" uniqueID="SetParentRow(System.Data.DataRow;System.Data.DataRelation):System.Void">
				<signature>System.Data.DataRow.SetParentRow(System.Data.DataRow;System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetParentRowToDBNull" uniqueID="SetParentRowToDBNull():System.Void">
				<signature>System.Data.DataRow.SetParentRowToDBNull():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetParentRowToDBNull" uniqueID="SetParentRowToDBNull(System.Data.DataRelation):System.Void">
				<signature>System.Data.DataRow.SetParentRowToDBNull(System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="VerifyValueFromStorage" uniqueID="VerifyValueFromStorage(System.Data.DataColumn;System.Data.DataRowVersion;System.Object):System.Void">
				<signature>System.Data.DataRow.VerifyValueFromStorage(System.Data.DataColumn;System.Data.DataRowVersion;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Element" uniqueID="get_Element():System.Xml.XmlBoundElement">
				<signature>System.Data.DataRow.get_Element():System.Xml.XmlBoundElement</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasErrors" uniqueID="get_HasErrors():System.Boolean">
				<signature>System.Data.DataRow.get_HasErrors():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasPropertyChanged" uniqueID="get_HasPropertyChanged():System.Boolean">
				<signature>System.Data.DataRow.get_HasPropertyChanged():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Data.DataColumn):System.Object">
				<signature>System.Data.DataRow.get_Item(System.Data.DataColumn):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Data.DataColumn;System.Data.DataRowVersion):System.Object">
				<signature>System.Data.DataRow.get_Item(System.Data.DataColumn;System.Data.DataRowVersion):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object">
				<signature>System.Data.DataRow.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32;System.Data.DataRowVersion):System.Object">
				<signature>System.Data.DataRow.get_Item(System.Int32;System.Data.DataRowVersion):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Object">
				<signature>System.Data.DataRow.get_Item(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String;System.Data.DataRowVersion):System.Object">
				<signature>System.Data.DataRow.get_Item(System.String;System.Data.DataRowVersion):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ItemArray" uniqueID="get_ItemArray():System.Object[]">
				<signature>System.Data.DataRow.get_ItemArray():System.Object[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LastChangedColumn" uniqueID="get_LastChangedColumn():System.Data.DataColumn">
				<signature>System.Data.DataRow.get_LastChangedColumn():System.Data.DataColumn</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RBTreeNodeId" uniqueID="get_RBTreeNodeId():System.Int32">
				<signature>System.Data.DataRow.get_RBTreeNodeId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RowError" uniqueID="get_RowError():System.String">
				<signature>System.Data.DataRow.get_RowError():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RowState" uniqueID="get_RowState():System.Data.DataRowState">
				<signature>System.Data.DataRow.get_RowState():System.Data.DataRowState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Table" uniqueID="get_Table():System.Data.DataTable">
				<signature>System.Data.DataRow.get_Table():System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_rowID" uniqueID="get_rowID():System.Int64">
				<signature>System.Data.DataRow.get_rowID():System.Int64</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Element" uniqueID="set_Element(System.Xml.XmlBoundElement):System.Void">
				<signature>System.Data.DataRow.set_Element(System.Xml.XmlBoundElement):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Data.DataColumn;System.Object):System.Void">
				<signature>System.Data.DataRow.set_Item(System.Data.DataColumn;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Data.DataRow.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Object):System.Void">
				<signature>System.Data.DataRow.set_Item(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ItemArray" uniqueID="set_ItemArray(System.Object[]):System.Void">
				<signature>System.Data.DataRow.set_ItemArray(System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_LastChangedColumn" uniqueID="set_LastChangedColumn(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataRow.set_LastChangedColumn(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_RBTreeNodeId" uniqueID="set_RBTreeNodeId(System.Int32):System.Void">
				<signature>System.Data.DataRow.set_RBTreeNodeId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RowError" uniqueID="set_RowError(System.String):System.Void">
				<signature>System.Data.DataRow.set_RowError(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_rowID" uniqueID="set_rowID(System.Int64):System.Void">
				<signature>System.Data.DataRow.set_rowID(System.Int64):System.Void</signature>
			</method>
		</class>
		<class name="DataRowCollection" uniqueID="System.Data.DataRowCollection">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataRow):System.Void">
				<signature>System.Data.DataRowCollection.Add(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object[]):System.Data.DataRow">
				<signature>System.Data.DataRowCollection.Add(System.Object[]):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddWithColumnEvents" uniqueID="AddWithColumnEvents(System.Object[]):System.Data.DataRow">
				<signature>System.Data.DataRowCollection.AddWithColumnEvents(System.Object[]):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ArrayAdd" uniqueID="ArrayAdd(System.Data.DataRow):System.Void">
				<signature>System.Data.DataRowCollection.ArrayAdd(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ArrayClear" uniqueID="ArrayClear():System.Void">
				<signature>System.Data.DataRowCollection.ArrayClear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ArrayInsert" uniqueID="ArrayInsert(System.Data.DataRow;System.Int32):System.Void">
				<signature>System.Data.DataRowCollection.ArrayInsert(System.Data.DataRow;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ArrayRemove" uniqueID="ArrayRemove(System.Data.DataRow):System.Void">
				<signature>System.Data.DataRowCollection.ArrayRemove(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Data.DataRowCollection.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object):System.Boolean">
				<signature>System.Data.DataRowCollection.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object[]):System.Boolean">
				<signature>System.Data.DataRowCollection.Contains(System.Object[]):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Data.DataRowCollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataRow[];System.Int32):System.Void">
				<signature>System.Data.DataRowCollection.CopyTo(System.Data.DataRow[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DataRowCollection" uniqueID="DataRowCollection(System.Data.DataTable):System.Void">
				<signature>System.Data.DataRowCollection.DataRowCollection(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DiffInsertAt" uniqueID="DiffInsertAt(System.Data.DataRow;System.Int32):System.Void">
				<signature>System.Data.DataRowCollection.DiffInsertAt(System.Data.DataRow;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object):System.Data.DataRow">
				<signature>System.Data.DataRowCollection.Find(System.Object):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):System.Data.DataRow">
				<signature>System.Data.DataRowCollection.Find(System.Object[]):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.DataRowCollection.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRow):System.Int32">
				<signature>System.Data.DataRowCollection.IndexOf(System.Data.DataRow):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertAt" uniqueID="InsertAt(System.Data.DataRow;System.Int32):System.Void">
				<signature>System.Data.DataRowCollection.InsertAt(System.Data.DataRow;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataRow):System.Void">
				<signature>System.Data.DataRowCollection.Remove(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Data.DataRowCollection.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Data.DataRowCollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataRow">
				<signature>System.Data.DataRowCollection.get_Item(System.Int32):System.Data.DataRow</signature>
			</method>
		</class>
		<class name="DataSet" uniqueID="System.Data.DataSet">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.DataSet.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetDataSetSchema" uniqueID="GetDataSetSchema(System.Xml.Schema.XmlSchemaSet):System.Xml.Schema.XmlSchemaComplexType">
				<signature>System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet):System.Xml.Schema.XmlSchemaComplexType</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="MoveToElement" uniqueID="MoveToElement(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataSet.MoveToElement(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="PublishLegacyWSDL" uniqueID="PublishLegacyWSDL():System.Boolean">
				<signature>System.Data.DataSet.PublishLegacyWSDL():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AcceptChanges" uniqueID="AcceptChanges():System.Void">
				<signature>System.Data.DataSet.AcceptChanges():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInit" uniqueID="BeginInit():System.Void">
				<signature>System.Data.DataSet.BeginInit():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Data.DataSet.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Data.DataSet">
				<signature>System.Data.DataSet.Clone():System.Data.DataSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Copy" uniqueID="Copy():System.Data.DataSet">
				<signature>System.Data.DataSet.Copy():System.Data.DataSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateDataReader" uniqueID="CreateDataReader():System.Data.DataTableReader">
				<signature>System.Data.DataSet.CreateDataReader():System.Data.DataTableReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateDataReader" uniqueID="CreateDataReader(System.Data.DataTable[]):System.Data.DataTableReader">
				<signature>System.Data.DataSet.CreateDataReader(System.Data.DataTable[]):System.Data.DataTableReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataSet" uniqueID="DataSet():System.Void">
				<signature>System.Data.DataSet.DataSet():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DataSet" uniqueID="DataSet(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Data.DataSet.DataSet(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DataSet" uniqueID="DataSet(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Boolean):System.Void">
				<signature>System.Data.DataSet.DataSet(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataSet" uniqueID="DataSet(System.String):System.Void">
				<signature>System.Data.DataSet.DataSet(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeserializeDataSet" uniqueID="DeserializeDataSet(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Data.SerializationFormat;System.Data.SchemaSerializationMode):System.Void">
				<signature>System.Data.DataSet.DeserializeDataSet(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Data.SerializationFormat;System.Data.SchemaSerializationMode):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DeserializeDataSetData" uniqueID="DeserializeDataSetData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Data.SerializationFormat):System.Void">
				<signature>System.Data.DataSet.DeserializeDataSetData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Data.SerializationFormat):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DeserializeDataSetProperties" uniqueID="DeserializeDataSetProperties(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Data.DataSet.DeserializeDataSetProperties(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DeserializeDataSetSchema" uniqueID="DeserializeDataSetSchema(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Data.SerializationFormat;System.Data.SchemaSerializationMode):System.Void">
				<signature>System.Data.DataSet.DeserializeDataSetSchema(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Data.SerializationFormat;System.Data.SchemaSerializationMode):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DeserializeRelations" uniqueID="DeserializeRelations(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Data.DataSet.DeserializeRelations(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DetermineSchemaSerializationMode" uniqueID="DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Data.SchemaSerializationMode">
				<signature>System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Data.SchemaSerializationMode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DetermineSchemaSerializationMode" uniqueID="DetermineSchemaSerializationMode(System.Xml.XmlReader):System.Data.SchemaSerializationMode">
				<signature>System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader):System.Data.SchemaSerializationMode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnableConstraints" uniqueID="EnableConstraints():System.Void">
				<signature>System.Data.DataSet.EnableConstraints():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInit" uniqueID="EndInit():System.Void">
				<signature>System.Data.DataSet.EndInit():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EstimatedXmlStringSize" uniqueID="EstimatedXmlStringSize():System.Int32">
				<signature>System.Data.DataSet.EstimatedXmlStringSize():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FailedEnableConstraints" uniqueID="FailedEnableConstraints():System.Void">
				<signature>System.Data.DataSet.FailedEnableConstraints():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindTable" uniqueID="FindTable(System.Data.DataTable;System.ComponentModel.PropertyDescriptor[];System.Int32):System.Data.DataTable">
				<signature>System.Data.DataSet.FindTable(System.Data.DataTable;System.ComponentModel.PropertyDescriptor[];System.Int32):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChanges" uniqueID="GetChanges():System.Data.DataSet">
				<signature>System.Data.DataSet.GetChanges():System.Data.DataSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChanges" uniqueID="GetChanges(System.Data.DataRowState):System.Data.DataSet">
				<signature>System.Data.DataSet.GetChanges(System.Data.DataRowState):System.Data.DataSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetParentRelations" uniqueID="GetParentRelations(System.Data.DataTable):System.Data.DataRelationCollection">
				<signature>System.Data.DataSet.GetParentRelations(System.Data.DataTable):System.Data.DataRelationCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRemotingDiffGram" uniqueID="GetRemotingDiffGram(System.Data.DataTable):System.String">
				<signature>System.Data.DataSet.GetRemotingDiffGram(System.Data.DataTable):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetSchemaSerializable" uniqueID="GetSchemaSerializable():System.Xml.Schema.XmlSchema">
				<signature>System.Data.DataSet.GetSchemaSerializable():System.Xml.Schema.XmlSchema</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetSerializationData" uniqueID="GetSerializationData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetXml" uniqueID="GetXml():System.String">
				<signature>System.Data.DataSet.GetXml():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetXmlSchema" uniqueID="GetXmlSchema():System.String">
				<signature>System.Data.DataSet.GetXmlSchema():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetXmlSchemaForRemoting" uniqueID="GetXmlSchemaForRemoting(System.Data.DataTable):System.String">
				<signature>System.Data.DataSet.GetXmlSchemaForRemoting(System.Data.DataTable):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HasChanges" uniqueID="HasChanges():System.Boolean">
				<signature>System.Data.DataSet.HasChanges():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HasChanges" uniqueID="HasChanges(System.Data.DataRowState):System.Boolean">
				<signature>System.Data.DataSet.HasChanges(System.Data.DataRowState):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InferSchema" uniqueID="InferSchema(System.Xml.XmlDocument;System.String[];System.Data.XmlReadMode):System.Void">
				<signature>System.Data.DataSet.InferSchema(System.Xml.XmlDocument;System.String[];System.Data.XmlReadMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InferXmlSchema" uniqueID="InferXmlSchema(System.IO.Stream;System.String[]):System.Void">
				<signature>System.Data.DataSet.InferXmlSchema(System.IO.Stream;System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InferXmlSchema" uniqueID="InferXmlSchema(System.IO.TextReader;System.String[]):System.Void">
				<signature>System.Data.DataSet.InferXmlSchema(System.IO.TextReader;System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InferXmlSchema" uniqueID="InferXmlSchema(System.String;System.String[]):System.Void">
				<signature>System.Data.DataSet.InferXmlSchema(System.String;System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InferXmlSchema" uniqueID="InferXmlSchema(System.Xml.XmlReader;System.String[]):System.Void">
				<signature>System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader;System.String[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializeDerivedDataSet" uniqueID="InitializeDerivedDataSet():System.Void">
				<signature>System.Data.DataSet.InitializeDerivedDataSet():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsBinarySerialized" uniqueID="IsBinarySerialized(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Boolean">
				<signature>System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsEmpty" uniqueID="IsEmpty():System.Boolean">
				<signature>System.Data.DataSet.IsEmpty():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Load" uniqueID="Load(System.Data.IDataReader;System.Data.LoadOption;System.Data.DataTable[]):System.Void">
				<signature>System.Data.DataSet.Load(System.Data.IDataReader;System.Data.LoadOption;System.Data.DataTable[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Load" uniqueID="Load(System.Data.IDataReader;System.Data.LoadOption;System.Data.FillErrorEventHandler;System.Data.DataTable[]):System.Void">
				<signature>System.Data.DataSet.Load(System.Data.IDataReader;System.Data.LoadOption;System.Data.FillErrorEventHandler;System.Data.DataTable[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Load" uniqueID="Load(System.Data.IDataReader;System.Data.LoadOption;System.String[]):System.Void">
				<signature>System.Data.DataSet.Load(System.Data.IDataReader;System.Data.LoadOption;System.String[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MarkModifiedRows" uniqueID="MarkModifiedRows(System.Data.DataSet+TableChanges[];System.Data.DataRowState):System.Void">
				<signature>System.Data.DataSet.MarkModifiedRows(System.Data.DataSet+TableChanges[];System.Data.DataRowState):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MarkRelatedRowsAsModified" uniqueID="MarkRelatedRowsAsModified(System.Data.DataSet+TableChanges[];System.Data.DataRow):System.Void">
				<signature>System.Data.DataSet.MarkRelatedRowsAsModified(System.Data.DataSet+TableChanges[];System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Merge" uniqueID="Merge(System.Data.DataRow[]):System.Void">
				<signature>System.Data.DataSet.Merge(System.Data.DataRow[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Merge" uniqueID="Merge(System.Data.DataRow[];System.Boolean;System.Data.MissingSchemaAction):System.Void">
				<signature>System.Data.DataSet.Merge(System.Data.DataRow[];System.Boolean;System.Data.MissingSchemaAction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Merge" uniqueID="Merge(System.Data.DataSet):System.Void">
				<signature>System.Data.DataSet.Merge(System.Data.DataSet):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Merge" uniqueID="Merge(System.Data.DataSet;System.Boolean):System.Void">
				<signature>System.Data.DataSet.Merge(System.Data.DataSet;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Merge" uniqueID="Merge(System.Data.DataSet;System.Boolean;System.Data.MissingSchemaAction):System.Void">
				<signature>System.Data.DataSet.Merge(System.Data.DataSet;System.Boolean;System.Data.MissingSchemaAction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Merge" uniqueID="Merge(System.Data.DataTable):System.Void">
				<signature>System.Data.DataSet.Merge(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Merge" uniqueID="Merge(System.Data.DataTable;System.Boolean;System.Data.MissingSchemaAction):System.Void">
				<signature>System.Data.DataSet.Merge(System.Data.DataTable;System.Boolean;System.Data.MissingSchemaAction):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveToElement" uniqueID="MoveToElement(System.Xml.XmlReader;System.Int32):System.Boolean">
				<signature>System.Data.DataSet.MoveToElement(System.Xml.XmlReader;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnClearFunctionCalled" uniqueID="OnClearFunctionCalled(System.Data.DataTable):System.Void">
				<signature>System.Data.DataSet.OnClearFunctionCalled(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDataRowCreated" uniqueID="OnDataRowCreated(System.Data.DataRow):System.Void">
				<signature>System.Data.DataSet.OnDataRowCreated(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnInitialized" uniqueID="OnInitialized():System.Void">
				<signature>System.Data.DataSet.OnInitialized():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnMergeFailed" uniqueID="OnMergeFailed(System.Data.MergeFailedEventArgs):System.Void">
				<signature>System.Data.DataSet.OnMergeFailed(System.Data.MergeFailedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPropertyChanging" uniqueID="OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs):System.Void">
				<signature>System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRemoveRelation" uniqueID="OnRemoveRelation(System.Data.DataRelation):System.Void">
				<signature>System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRemoveRelationHack" uniqueID="OnRemoveRelationHack(System.Data.DataRelation):System.Void">
				<signature>System.Data.DataSet.OnRemoveRelationHack(System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnRemoveTable" uniqueID="OnRemoveTable(System.Data.DataTable):System.Void">
				<signature>System.Data.DataSet.OnRemoveTable(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRemovedTable" uniqueID="OnRemovedTable(System.Data.DataTable):System.Void">
				<signature>System.Data.DataSet.OnRemovedTable(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaiseMergeFailed" uniqueID="RaiseMergeFailed(System.Data.DataTable;System.String;System.Data.MissingSchemaAction):System.Void">
				<signature>System.Data.DataSet.RaiseMergeFailed(System.Data.DataTable;System.String;System.Data.MissingSchemaAction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RaisePropertyChanging" uniqueID="RaisePropertyChanging(System.String):System.Void">
				<signature>System.Data.DataSet.RaisePropertyChanging(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadEndElement" uniqueID="ReadEndElement(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataSet.ReadEndElement(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXDRSchema" uniqueID="ReadXDRSchema(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataSet.ReadXDRSchema(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXSDSchema" uniqueID="ReadXSDSchema(System.Xml.XmlReader;System.Boolean):System.Void">
				<signature>System.Data.DataSet.ReadXSDSchema(System.Xml.XmlReader;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.IO.Stream):System.Data.XmlReadMode">
				<signature>System.Data.DataSet.ReadXml(System.IO.Stream):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.IO.Stream;System.Data.XmlReadMode):System.Data.XmlReadMode">
				<signature>System.Data.DataSet.ReadXml(System.IO.Stream;System.Data.XmlReadMode):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.IO.TextReader):System.Data.XmlReadMode">
				<signature>System.Data.DataSet.ReadXml(System.IO.TextReader):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.IO.TextReader;System.Data.XmlReadMode):System.Data.XmlReadMode">
				<signature>System.Data.DataSet.ReadXml(System.IO.TextReader;System.Data.XmlReadMode):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.String):System.Data.XmlReadMode">
				<signature>System.Data.DataSet.ReadXml(System.String):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.String;System.Data.XmlReadMode):System.Data.XmlReadMode">
				<signature>System.Data.DataSet.ReadXml(System.String;System.Data.XmlReadMode):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.Xml.XmlReader):System.Data.XmlReadMode">
				<signature>System.Data.DataSet.ReadXml(System.Xml.XmlReader):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.Xml.XmlReader;System.Boolean):System.Data.XmlReadMode">
				<signature>System.Data.DataSet.ReadXml(System.Xml.XmlReader;System.Boolean):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.Xml.XmlReader;System.Data.XmlReadMode):System.Data.XmlReadMode">
				<signature>System.Data.DataSet.ReadXml(System.Xml.XmlReader;System.Data.XmlReadMode):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.Xml.XmlReader;System.Data.XmlReadMode;System.Boolean):System.Data.XmlReadMode">
				<signature>System.Data.DataSet.ReadXml(System.Xml.XmlReader;System.Data.XmlReadMode;System.Boolean):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadXmlDiffgram" uniqueID="ReadXmlDiffgram(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataSet.ReadXmlDiffgram(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXmlSchema" uniqueID="ReadXmlSchema(System.IO.Stream):System.Void">
				<signature>System.Data.DataSet.ReadXmlSchema(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXmlSchema" uniqueID="ReadXmlSchema(System.IO.TextReader):System.Void">
				<signature>System.Data.DataSet.ReadXmlSchema(System.IO.TextReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXmlSchema" uniqueID="ReadXmlSchema(System.String):System.Void">
				<signature>System.Data.DataSet.ReadXmlSchema(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXmlSchema" uniqueID="ReadXmlSchema(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXmlSchema" uniqueID="ReadXmlSchema(System.Xml.XmlReader;System.Boolean):System.Void">
				<signature>System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXmlSerializable" uniqueID="ReadXmlSerializable(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RejectChanges" uniqueID="RejectChanges():System.Void">
				<signature>System.Data.DataSet.RejectChanges():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reset" uniqueID="Reset():System.Void">
				<signature>System.Data.DataSet.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetRelations" uniqueID="ResetRelations():System.Void">
				<signature>System.Data.DataSet.ResetRelations():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetTables" uniqueID="ResetTables():System.Void">
				<signature>System.Data.DataSet.ResetTables():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RestoreEnforceConstraints" uniqueID="RestoreEnforceConstraints(System.Boolean):System.Void">
				<signature>System.Data.DataSet.RestoreEnforceConstraints(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SerializeDataSet" uniqueID="SerializeDataSet(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Data.SerializationFormat):System.Void">
				<signature>System.Data.DataSet.SerializeDataSet(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Data.SerializationFormat):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SerializeDataSetProperties" uniqueID="SerializeDataSetProperties(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Data.DataSet.SerializeDataSetProperties(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SerializeRelations" uniqueID="SerializeRelations(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Data.DataSet.SerializeRelations(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetLocaleValue" uniqueID="SetLocaleValue(System.Globalization.CultureInfo;System.Boolean):System.Void">
				<signature>System.Data.DataSet.SetLocaleValue(System.Globalization.CultureInfo;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ShouldSerializeLocale" uniqueID="ShouldSerializeLocale():System.Boolean">
				<signature>System.Data.DataSet.ShouldSerializeLocale():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ShouldSerializeRelations" uniqueID="ShouldSerializeRelations():System.Boolean">
				<signature>System.Data.DataSet.ShouldSerializeRelations():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ShouldSerializeTables" uniqueID="ShouldSerializeTables():System.Boolean">
				<signature>System.Data.DataSet.ShouldSerializeTables():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.DataSet.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.DataSet.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Xml.Serialization.IXmlSerializable.GetSchema" uniqueID="System.Xml.Serialization.IXmlSerializable.GetSchema():System.Xml.Schema.XmlSchema">
				<signature>System.Data.DataSet.System.Xml.Serialization.IXmlSerializable.GetSchema():System.Xml.Schema.XmlSchema</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Xml.Serialization.IXmlSerializable.ReadXml" uniqueID="System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataSet.System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Xml.Serialization.IXmlSerializable.WriteXml" uniqueID="System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter):System.Void">
				<signature>System.Data.DataSet.System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TopLevelTables" uniqueID="TopLevelTables():System.Data.DataTable[]">
				<signature>System.Data.DataSet.TopLevelTables():System.Data.DataTable[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TopLevelTables" uniqueID="TopLevelTables(System.Boolean):System.Data.DataTable[]">
				<signature>System.Data.DataSet.TopLevelTables(System.Boolean):System.Data.DataTable[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateCaseConstraint" uniqueID="ValidateCaseConstraint():System.Boolean">
				<signature>System.Data.DataSet.ValidateCaseConstraint():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateLocaleConstraint" uniqueID="ValidateLocaleConstraint():System.Boolean">
				<signature>System.Data.DataSet.ValidateLocaleConstraint():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.Stream):System.Void">
				<signature>System.Data.DataSet.WriteXml(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.Stream;System.Data.XmlWriteMode):System.Void">
				<signature>System.Data.DataSet.WriteXml(System.IO.Stream;System.Data.XmlWriteMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.TextWriter):System.Void">
				<signature>System.Data.DataSet.WriteXml(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.TextWriter;System.Data.XmlWriteMode):System.Void">
				<signature>System.Data.DataSet.WriteXml(System.IO.TextWriter;System.Data.XmlWriteMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.String):System.Void">
				<signature>System.Data.DataSet.WriteXml(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.String;System.Data.XmlWriteMode):System.Void">
				<signature>System.Data.DataSet.WriteXml(System.String;System.Data.XmlWriteMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.Xml.XmlWriter):System.Void">
				<signature>System.Data.DataSet.WriteXml(System.Xml.XmlWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.Xml.XmlWriter;System.Data.XmlWriteMode):System.Void">
				<signature>System.Data.DataSet.WriteXml(System.Xml.XmlWriter;System.Data.XmlWriteMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.IO.Stream):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.IO.Stream;System.Converter&lt;System.Type;System.String&gt;):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.IO.Stream;System.Converter&lt;System.Type;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.IO.Stream;System.Data.SchemaFormat;System.Converter&lt;System.Type;System.String&gt;):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.IO.Stream;System.Data.SchemaFormat;System.Converter&lt;System.Type;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.IO.TextWriter):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.IO.TextWriter;System.Converter&lt;System.Type;System.String&gt;):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter;System.Converter&lt;System.Type;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.IO.TextWriter;System.Data.SchemaFormat;System.Converter&lt;System.Type;System.String&gt;):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter;System.Data.SchemaFormat;System.Converter&lt;System.Type;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.String):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.String;System.Converter&lt;System.Type;System.String&gt;):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.String;System.Converter&lt;System.Type;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.String;System.Data.SchemaFormat;System.Converter&lt;System.Type;System.String&gt;):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.String;System.Data.SchemaFormat;System.Converter&lt;System.Type;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.Xml.XmlWriter):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.Xml.XmlWriter;System.Converter&lt;System.Type;System.String&gt;):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter;System.Converter&lt;System.Type;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.Xml.XmlWriter;System.Data.SchemaFormat;System.Converter&lt;System.Type;System.String&gt;):System.Void">
				<signature>System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter;System.Data.SchemaFormat;System.Converter&lt;System.Type;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_ClearFunctionCalled" uniqueID="add_ClearFunctionCalled(System.Data.DataSetClearEventhandler):System.Void">
				<signature>System.Data.DataSet.add_ClearFunctionCalled(System.Data.DataSetClearEventhandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_DataRowCreated" uniqueID="add_DataRowCreated(System.Data.DataRowCreatedEventHandler):System.Void">
				<signature>System.Data.DataSet.add_DataRowCreated(System.Data.DataRowCreatedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Initialized" uniqueID="add_Initialized(System.EventHandler):System.Void">
				<signature>System.Data.DataSet.add_Initialized(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_MergeFailed" uniqueID="add_MergeFailed(System.Data.MergeFailedEventHandler):System.Void">
				<signature>System.Data.DataSet.add_MergeFailed(System.Data.MergeFailedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_PropertyChanging" uniqueID="add_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Data.DataSet.add_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CaseSensitive" uniqueID="get_CaseSensitive():System.Boolean">
				<signature>System.Data.DataSet.get_CaseSensitive():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataSetName" uniqueID="get_DataSetName():System.String">
				<signature>System.Data.DataSet.get_DataSetName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DefaultViewManager" uniqueID="get_DefaultViewManager():System.Data.DataViewManager">
				<signature>System.Data.DataSet.get_DefaultViewManager():System.Data.DataViewManager</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnforceConstraints" uniqueID="get_EnforceConstraints():System.Boolean">
				<signature>System.Data.DataSet.get_EnforceConstraints():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ExtendedProperties" uniqueID="get_ExtendedProperties():System.Data.PropertyCollection">
				<signature>System.Data.DataSet.get_ExtendedProperties():System.Data.PropertyCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FBoundToDocument" uniqueID="get_FBoundToDocument():System.Boolean">
				<signature>System.Data.DataSet.get_FBoundToDocument():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasErrors" uniqueID="get_HasErrors():System.Boolean">
				<signature>System.Data.DataSet.get_HasErrors():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInitialized" uniqueID="get_IsInitialized():System.Boolean">
				<signature>System.Data.DataSet.get_IsInitialized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Locale" uniqueID="get_Locale():System.Globalization.CultureInfo">
				<signature>System.Data.DataSet.get_Locale():System.Globalization.CultureInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MainTableName" uniqueID="get_MainTableName():System.String">
				<signature>System.Data.DataSet.get_MainTableName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.Data.DataSet.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ObjectID" uniqueID="get_ObjectID():System.Int32">
				<signature>System.Data.DataSet.get_ObjectID():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Prefix" uniqueID="get_Prefix():System.String">
				<signature>System.Data.DataSet.get_Prefix():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Relations" uniqueID="get_Relations():System.Data.DataRelationCollection">
				<signature>System.Data.DataSet.get_Relations():System.Data.DataRelationCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RemotingFormat" uniqueID="get_RemotingFormat():System.Data.SerializationFormat">
				<signature>System.Data.DataSet.get_RemotingFormat():System.Data.SerializationFormat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SchemaSerializationMode" uniqueID="get_SchemaSerializationMode():System.Data.SchemaSerializationMode">
				<signature>System.Data.DataSet.get_SchemaSerializationMode():System.Data.SchemaSerializationMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Site" uniqueID="get_Site():System.ComponentModel.ISite">
				<signature>System.Data.DataSet.get_Site():System.ComponentModel.ISite</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Tables" uniqueID="get_Tables():System.Data.DataTableCollection">
				<signature>System.Data.DataSet.get_Tables():System.Data.DataTableCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_ClearFunctionCalled" uniqueID="remove_ClearFunctionCalled(System.Data.DataSetClearEventhandler):System.Void">
				<signature>System.Data.DataSet.remove_ClearFunctionCalled(System.Data.DataSetClearEventhandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_DataRowCreated" uniqueID="remove_DataRowCreated(System.Data.DataRowCreatedEventHandler):System.Void">
				<signature>System.Data.DataSet.remove_DataRowCreated(System.Data.DataRowCreatedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Initialized" uniqueID="remove_Initialized(System.EventHandler):System.Void">
				<signature>System.Data.DataSet.remove_Initialized(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_MergeFailed" uniqueID="remove_MergeFailed(System.Data.MergeFailedEventHandler):System.Void">
				<signature>System.Data.DataSet.remove_MergeFailed(System.Data.MergeFailedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_PropertyChanging" uniqueID="remove_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Data.DataSet.remove_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CaseSensitive" uniqueID="set_CaseSensitive(System.Boolean):System.Void">
				<signature>System.Data.DataSet.set_CaseSensitive(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataSetName" uniqueID="set_DataSetName(System.String):System.Void">
				<signature>System.Data.DataSet.set_DataSetName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnforceConstraints" uniqueID="set_EnforceConstraints(System.Boolean):System.Void">
				<signature>System.Data.DataSet.set_EnforceConstraints(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_FBoundToDocument" uniqueID="set_FBoundToDocument(System.Boolean):System.Void">
				<signature>System.Data.DataSet.set_FBoundToDocument(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Locale" uniqueID="set_Locale(System.Globalization.CultureInfo):System.Void">
				<signature>System.Data.DataSet.set_Locale(System.Globalization.CultureInfo):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_MainTableName" uniqueID="set_MainTableName(System.String):System.Void">
				<signature>System.Data.DataSet.set_MainTableName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Namespace" uniqueID="set_Namespace(System.String):System.Void">
				<signature>System.Data.DataSet.set_Namespace(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Prefix" uniqueID="set_Prefix(System.String):System.Void">
				<signature>System.Data.DataSet.set_Prefix(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RemotingFormat" uniqueID="set_RemotingFormat(System.Data.SerializationFormat):System.Void">
				<signature>System.Data.DataSet.set_RemotingFormat(System.Data.SerializationFormat):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SchemaSerializationMode" uniqueID="set_SchemaSerializationMode(System.Data.SchemaSerializationMode):System.Void">
				<signature>System.Data.DataSet.set_SchemaSerializationMode(System.Data.SchemaSerializationMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Site" uniqueID="set_Site(System.ComponentModel.ISite):System.Void">
				<signature>System.Data.DataSet.set_Site(System.ComponentModel.ISite):System.Void</signature>
			</method>
		</class>
		<class name="DataSet+TableChanges" uniqueID="System.Data.DataSet+TableChanges">
			<method accessibility="Protected" methodKind="Member" name="DataSet+TableChanges" uniqueID="DataSet+TableChanges(System.Int32):System.Void">
				<signature>System.Data.DataSet+TableChanges.DataSet+TableChanges(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasChanges" uniqueID="get_HasChanges():System.Int32">
				<signature>System.Data.DataSet+TableChanges.get_HasChanges():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Boolean">
				<signature>System.Data.DataSet+TableChanges.get_Item(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_HasChanges" uniqueID="set_HasChanges(System.Int32):System.Void">
				<signature>System.Data.DataSet+TableChanges.set_HasChanges(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Boolean):System.Void">
				<signature>System.Data.DataSet+TableChanges.set_Item(System.Int32;System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="DataTable" uniqueID="System.Data.DataTable">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.DataTable.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetDataTableSchema" uniqueID="GetDataTableSchema(System.Xml.Schema.XmlSchemaSet):System.Xml.Schema.XmlSchemaComplexType">
				<signature>System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet):System.Xml.Schema.XmlSchemaComplexType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AcceptChanges" uniqueID="AcceptChanges():System.Void">
				<signature>System.Data.DataTable.AcceptChanges():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddDependentColumn" uniqueID="AddDependentColumn(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataTable.AddDependentColumn(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddForeignKey" uniqueID="AddForeignKey(System.Data.DataColumn):System.Data.DataColumn">
				<signature>System.Data.DataTable.AddForeignKey(System.Data.DataColumn):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddRecords" uniqueID="AddRecords(System.Int32;System.Int32):System.Data.DataRow">
				<signature>System.Data.DataTable.AddRecords(System.Int32;System.Int32):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddRow" uniqueID="AddRow(System.Data.DataRow):System.Void">
				<signature>System.Data.DataTable.AddRow(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddRow" uniqueID="AddRow(System.Data.DataRow;System.Int32):System.Void">
				<signature>System.Data.DataTable.AddRow(System.Data.DataRow;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddUniqueKey" uniqueID="AddUniqueKey():System.Data.DataColumn">
				<signature>System.Data.DataTable.AddUniqueKey():System.Data.DataColumn</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddUniqueKey" uniqueID="AddUniqueKey(System.Int32):System.Data.DataColumn">
				<signature>System.Data.DataTable.AddUniqueKey(System.Int32):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInit" uniqueID="BeginInit():System.Void">
				<signature>System.Data.DataTable.BeginInit():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginLoadData" uniqueID="BeginLoadData():System.Void">
				<signature>System.Data.DataTable.BeginLoadData():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CacheNestedParent" uniqueID="CacheNestedParent():System.Void">
				<signature>System.Data.DataTable.CacheNestedParent():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CascadeAll" uniqueID="CascadeAll(System.Data.DataRow;System.Data.DataRowAction):System.Void">
				<signature>System.Data.DataTable.CascadeAll(System.Data.DataRow;System.Data.DataRowAction):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckCascadingNamespaceConflict" uniqueID="CheckCascadingNamespaceConflict(System.String):System.Void">
				<signature>System.Data.DataTable.CheckCascadingNamespaceConflict(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckForClosureOnExpressionTables" uniqueID="CheckForClosureOnExpressionTables(System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.Boolean">
				<signature>System.Data.DataTable.CheckForClosureOnExpressionTables(System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckForClosureOnExpressions" uniqueID="CheckForClosureOnExpressions(System.Data.DataTable;System.Boolean):System.Boolean">
				<signature>System.Data.DataTable.CheckForClosureOnExpressions(System.Data.DataTable;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckNamespaceValidityForNestedParentRelations" uniqueID="CheckNamespaceValidityForNestedParentRelations(System.String;System.Data.DataTable):System.Void">
				<signature>System.Data.DataTable.CheckNamespaceValidityForNestedParentRelations(System.String;System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckNamespaceValidityForNestedRelations" uniqueID="CheckNamespaceValidityForNestedRelations(System.String):System.Void">
				<signature>System.Data.DataTable.CheckNamespaceValidityForNestedRelations(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckNotModifying" uniqueID="CheckNotModifying(System.Data.DataRow):System.Void">
				<signature>System.Data.DataTable.CheckNotModifying(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckPrimaryKey" uniqueID="CheckPrimaryKey():System.Void">
				<signature>System.Data.DataTable.CheckPrimaryKey():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Data.DataTable.Clear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Clear" uniqueID="Clear(System.Boolean):System.Void">
				<signature>System.Data.DataTable.Clear(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Data.DataTable">
				<signature>System.Data.DataTable.Clone():System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Clone" uniqueID="Clone(System.Data.DataSet):System.Data.DataTable">
				<signature>System.Data.DataTable.Clone(System.Data.DataSet):System.Data.DataTable</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CloneHierarchy" uniqueID="CloneHierarchy(System.Data.DataTable;System.Data.DataSet;System.Collections.Hashtable):System.Data.DataTable">
				<signature>System.Data.DataTable.CloneHierarchy(System.Data.DataTable;System.Data.DataSet;System.Collections.Hashtable):System.Data.DataTable</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CloneTo" uniqueID="CloneTo(System.Data.DataTable;System.Data.DataSet;System.Boolean):System.Data.DataTable">
				<signature>System.Data.DataTable.CloneTo(System.Data.DataTable;System.Data.DataSet;System.Boolean):System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CommitRow" uniqueID="CommitRow(System.Data.DataRow):System.Void">
				<signature>System.Data.DataTable.CommitRow(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Compare" uniqueID="Compare(System.String;System.String):System.Int32">
				<signature>System.Data.DataTable.Compare(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Compare" uniqueID="Compare(System.String;System.String;System.Globalization.CompareInfo):System.Int32">
				<signature>System.Data.DataTable.Compare(System.String;System.String;System.Globalization.CompareInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compute" uniqueID="Compute(System.String;System.String):System.Object">
				<signature>System.Data.DataTable.Compute(System.String;System.String):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ConvertToRowError" uniqueID="ConvertToRowError(System.Int32;System.Collections.Hashtable;System.Collections.Hashtable):System.Void">
				<signature>System.Data.DataTable.ConvertToRowError(System.Int32;System.Collections.Hashtable;System.Collections.Hashtable):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ConvertToRowState" uniqueID="ConvertToRowState(System.Collections.BitArray;System.Int32):System.Data.DataRowState">
				<signature>System.Data.DataTable.ConvertToRowState(System.Collections.BitArray;System.Int32):System.Data.DataRowState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Copy" uniqueID="Copy():System.Data.DataTable">
				<signature>System.Data.DataTable.Copy():System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CopyRow" uniqueID="CopyRow(System.Data.DataTable;System.Data.DataRow):System.Void">
				<signature>System.Data.DataTable.CopyRow(System.Data.DataTable;System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateDataReader" uniqueID="CreateDataReader():System.Data.DataTableReader">
				<signature>System.Data.DataTable.CreateDataReader():System.Data.DataTableReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateEmptyRow" uniqueID="CreateEmptyRow():System.Data.DataRow">
				<signature>System.Data.DataTable.CreateEmptyRow():System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateInstance" uniqueID="CreateInstance():System.Data.DataTable">
				<signature>System.Data.DataTable.CreateInstance():System.Data.DataTable</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateRelationList" uniqueID="CreateRelationList(System.Collections.Generic.List&lt;System.Data.DataTable&gt;;System.Collections.Generic.List&lt;System.Data.DataRelation&gt;):System.Void">
				<signature>System.Data.DataTable.CreateRelationList(System.Collections.Generic.List&lt;System.Data.DataTable&gt;;System.Collections.Generic.List&lt;System.Data.DataRelation&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateTableList" uniqueID="CreateTableList(System.Data.DataTable;System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.Void">
				<signature>System.Data.DataTable.CreateTableList(System.Data.DataTable;System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataTable" uniqueID="DataTable():System.Void">
				<signature>System.Data.DataTable.DataTable():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DataTable" uniqueID="DataTable(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Data.DataTable.DataTable(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataTable" uniqueID="DataTable(System.String):System.Void">
				<signature>System.Data.DataTable.DataTable(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataTable" uniqueID="DataTable(System.String;System.String):System.Void">
				<signature>System.Data.DataTable.DataTable(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeleteRow" uniqueID="DeleteRow(System.Data.DataRow):System.Void">
				<signature>System.Data.DataTable.DeleteRow(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeserializeConstraints" uniqueID="DeserializeConstraints(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32;System.Boolean):System.Void">
				<signature>System.Data.DataTable.DeserializeConstraints(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeserializeDataTable" uniqueID="DeserializeDataTable(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Boolean;System.Data.SerializationFormat):System.Void">
				<signature>System.Data.DataTable.DeserializeDataTable(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Boolean;System.Data.SerializationFormat):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeserializeExpressionColumns" uniqueID="DeserializeExpressionColumns(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32):System.Void">
				<signature>System.Data.DataTable.DeserializeExpressionColumns(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeserializeTableData" uniqueID="DeserializeTableData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32):System.Void">
				<signature>System.Data.DataTable.DeserializeTableData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeserializeTableSchema" uniqueID="DeserializeTableSchema(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Boolean):System.Void">
				<signature>System.Data.DataTable.DeserializeTableSchema(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DoRaiseNamespaceChange" uniqueID="DoRaiseNamespaceChange():System.Void">
				<signature>System.Data.DataTable.DoRaiseNamespaceChange():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnableConstraints" uniqueID="EnableConstraints():System.Void">
				<signature>System.Data.DataTable.EnableConstraints():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInit" uniqueID="EndInit():System.Void">
				<signature>System.Data.DataTable.EndInit():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndLoadData" uniqueID="EndLoadData():System.Void">
				<signature>System.Data.DataTable.EndLoadData():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EvaluateDependentExpressions" uniqueID="EvaluateDependentExpressions(System.Collections.Generic.List&lt;System.Data.DataColumn&gt;;System.Data.DataRow;System.Data.DataRowVersion;System.Collections.Generic.List&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Data.DataTable.EvaluateDependentExpressions(System.Collections.Generic.List&lt;System.Data.DataColumn&gt;;System.Data.DataRow;System.Data.DataRowVersion;System.Collections.Generic.List&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EvaluateDependentExpressions" uniqueID="EvaluateDependentExpressions(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataTable.EvaluateDependentExpressions(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EvaluateExpressions" uniqueID="EvaluateExpressions():System.Void">
				<signature>System.Data.DataTable.EvaluateExpressions():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EvaluateExpressions" uniqueID="EvaluateExpressions(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataTable.EvaluateExpressions(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EvaluateExpressions" uniqueID="EvaluateExpressions(System.Data.DataRow;System.Data.DataRowAction;System.Collections.Generic.List&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Data.DataTable.EvaluateExpressions(System.Data.DataRow;System.Data.DataRowAction;System.Collections.Generic.List&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindByIndex" uniqueID="FindByIndex(System.Data.Index;System.Object[]):System.Data.DataRow">
				<signature>System.Data.DataTable.FindByIndex(System.Data.Index;System.Object[]):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindByPrimaryKey" uniqueID="FindByPrimaryKey(System.Object):System.Data.DataRow">
				<signature>System.Data.DataTable.FindByPrimaryKey(System.Object):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindByPrimaryKey" uniqueID="FindByPrimaryKey(System.Object[]):System.Data.DataRow">
				<signature>System.Data.DataTable.FindByPrimaryKey(System.Object[]):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindMergeTarget" uniqueID="FindMergeTarget(System.Data.DataRow;System.Data.DataKey;System.Data.Index):System.Data.DataRow">
				<signature>System.Data.DataTable.FindMergeTarget(System.Data.DataRow;System.Data.DataKey;System.Data.Index):System.Data.DataRow</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindNestedParentRelations" uniqueID="FindNestedParentRelations():System.Data.DataRelation[]">
				<signature>System.Data.DataTable.FindNestedParentRelations():System.Data.DataRelation[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindRow" uniqueID="FindRow(System.Data.DataKey;System.Object):System.Data.DataRow">
				<signature>System.Data.DataTable.FindRow(System.Data.DataKey;System.Object):System.Data.DataRow</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindRow" uniqueID="FindRow(System.Data.DataKey;System.Object[]):System.Data.DataRow">
				<signature>System.Data.DataTable.FindRow(System.Data.DataKey;System.Object[]):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FormatSortString" uniqueID="FormatSortString(System.Data.IndexField[]):System.String">
				<signature>System.Data.DataTable.FormatSortString(System.Data.IndexField[]):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FreeRecord" uniqueID="FreeRecord(System.Int32):System.Void">
				<signature>System.Data.DataTable.FreeRecord(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChanges" uniqueID="GetChanges():System.Data.DataTable">
				<signature>System.Data.DataTable.GetChanges():System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChanges" uniqueID="GetChanges(System.Data.DataRowState):System.Data.DataTable">
				<signature>System.Data.DataTable.GetChanges(System.Data.DataRowState):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetErrors" uniqueID="GetErrors():System.Data.DataRow[]">
				<signature>System.Data.DataTable.GetErrors():System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIndex" uniqueID="GetIndex(System.Data.IndexField[]):System.Data.Index">
				<signature>System.Data.DataTable.GetIndex(System.Data.IndexField[]):System.Data.Index</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIndex" uniqueID="GetIndex(System.Data.IndexField[];System.Data.DataViewRowState;System.Data.IFilter):System.Data.Index">
				<signature>System.Data.DataTable.GetIndex(System.Data.IndexField[];System.Data.DataViewRowState;System.Data.IFilter):System.Data.Index</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetIndex" uniqueID="GetIndex(System.String;System.Data.DataViewRowState;System.Data.IFilter):System.Data.Index">
				<signature>System.Data.DataTable.GetIndex(System.String;System.Data.DataViewRowState;System.Data.IFilter):System.Data.Index</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetInheritedNamespace" uniqueID="GetInheritedNamespace(System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.String">
				<signature>System.Data.DataTable.GetInheritedNamespace(System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetListeners" uniqueID="GetListeners():System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;">
				<signature>System.Data.DataTable.GetListeners():System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetPropertyDescriptorCollection" uniqueID="GetPropertyDescriptorCollection(System.Attribute[]):System.ComponentModel.PropertyDescriptorCollection">
				<signature>System.Data.DataTable.GetPropertyDescriptorCollection(System.Attribute[]):System.ComponentModel.PropertyDescriptorCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRowAndColumnErrors" uniqueID="GetRowAndColumnErrors(System.Int32;System.Collections.Hashtable;System.Collections.Hashtable):System.Void">
				<signature>System.Data.DataTable.GetRowAndColumnErrors(System.Int32;System.Collections.Hashtable;System.Collections.Hashtable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRowType" uniqueID="GetRowType():System.Type">
				<signature>System.Data.DataTable.GetRowType():System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetSchema" uniqueID="GetSchema():System.Xml.Schema.XmlSchema">
				<signature>System.Data.DataTable.GetSchema():System.Xml.Schema.XmlSchema</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetSpecialHashCode" uniqueID="GetSpecialHashCode(System.String):System.Int32">
				<signature>System.Data.DataTable.GetSpecialHashCode(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ImportRow" uniqueID="ImportRow(System.Data.DataRow):System.Void">
				<signature>System.Data.DataTable.ImportRow(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IncrementalCloneTo" uniqueID="IncrementalCloneTo(System.Data.DataTable;System.Data.DataTable):System.Data.DataTable">
				<signature>System.Data.DataTable.IncrementalCloneTo(System.Data.DataTable;System.Data.DataTable):System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.String):System.Int32">
				<signature>System.Data.DataTable.IndexOf(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertRecordToIndexes" uniqueID="InsertRecordToIndexes(System.Data.DataRow;System.Data.DataRowVersion):System.Int32[]">
				<signature>System.Data.DataTable.InsertRecordToIndexes(System.Data.DataRow;System.Data.DataRowVersion):System.Int32[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertRow" uniqueID="InsertRow(System.Data.DataRow;System.Int32;System.Int32):System.Void">
				<signature>System.Data.DataTable.InsertRow(System.Data.DataRow;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertRow" uniqueID="InsertRow(System.Data.DataRow;System.Int64):System.Void">
				<signature>System.Data.DataTable.InsertRow(System.Data.DataRow;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InsertRow" uniqueID="InsertRow(System.Data.DataRow;System.Int64;System.Int32;System.Boolean):System.Void">
				<signature>System.Data.DataTable.InsertRow(System.Data.DataRow;System.Int64;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsEmptyXml" uniqueID="IsEmptyXml(System.Xml.XmlReader):System.Boolean">
				<signature>System.Data.DataTable.IsEmptyXml(System.Xml.XmlReader):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsNamespaceInherited" uniqueID="IsNamespaceInherited():System.Boolean">
				<signature>System.Data.DataTable.IsNamespaceInherited():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsSuffix" uniqueID="IsSuffix(System.String;System.String):System.Boolean">
				<signature>System.Data.DataTable.IsSuffix(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Load" uniqueID="Load(System.Data.IDataReader):System.Void">
				<signature>System.Data.DataTable.Load(System.Data.IDataReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Load" uniqueID="Load(System.Data.IDataReader;System.Data.LoadOption):System.Void">
				<signature>System.Data.DataTable.Load(System.Data.IDataReader;System.Data.LoadOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Load" uniqueID="Load(System.Data.IDataReader;System.Data.LoadOption;System.Data.FillErrorEventHandler):System.Void">
				<signature>System.Data.DataTable.Load(System.Data.IDataReader;System.Data.LoadOption;System.Data.FillErrorEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LoadDataRow" uniqueID="LoadDataRow(System.Object[];System.Boolean):System.Data.DataRow">
				<signature>System.Data.DataTable.LoadDataRow(System.Object[];System.Boolean):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LoadDataRow" uniqueID="LoadDataRow(System.Object[];System.Data.LoadOption):System.Data.DataRow">
				<signature>System.Data.DataTable.LoadDataRow(System.Object[];System.Data.LoadOption):System.Data.DataRow</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="LoadRow" uniqueID="LoadRow(System.Object[];System.Data.LoadOption;System.Data.Index):System.Data.DataRow">
				<signature>System.Data.DataTable.LoadRow(System.Object[];System.Data.LoadOption;System.Data.Index):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Merge" uniqueID="Merge(System.Data.DataTable):System.Void">
				<signature>System.Data.DataTable.Merge(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Merge" uniqueID="Merge(System.Data.DataTable;System.Boolean):System.Void">
				<signature>System.Data.DataTable.Merge(System.Data.DataTable;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Merge" uniqueID="Merge(System.Data.DataTable;System.Boolean;System.Data.MissingSchemaAction):System.Void">
				<signature>System.Data.DataTable.Merge(System.Data.DataTable;System.Boolean;System.Data.MissingSchemaAction):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MergeRow" uniqueID="MergeRow(System.Data.DataRow;System.Data.DataRow;System.Boolean;System.Data.Index):System.Data.DataRow">
				<signature>System.Data.DataTable.MergeRow(System.Data.DataRow;System.Data.DataRow;System.Boolean;System.Data.Index):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveToElement" uniqueID="MoveToElement(System.Xml.XmlReader;System.Int32):System.Boolean">
				<signature>System.Data.DataTable.MoveToElement(System.Xml.XmlReader;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NewEmptyRow" uniqueID="NewEmptyRow():System.Data.DataRow">
				<signature>System.Data.DataTable.NewEmptyRow():System.Data.DataRow</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="NewIndexDesc" uniqueID="NewIndexDesc(System.Data.DataKey):System.Data.IndexField[]">
				<signature>System.Data.DataTable.NewIndexDesc(System.Data.DataKey):System.Data.IndexField[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NewRecord" uniqueID="NewRecord():System.Int32">
				<signature>System.Data.DataTable.NewRecord():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NewRecord" uniqueID="NewRecord(System.Int32):System.Int32">
				<signature>System.Data.DataTable.NewRecord(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NewRecordFromArray" uniqueID="NewRecordFromArray(System.Object[]):System.Int32">
				<signature>System.Data.DataTable.NewRecordFromArray(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NewRow" uniqueID="NewRow():System.Data.DataRow">
				<signature>System.Data.DataTable.NewRow():System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NewRow" uniqueID="NewRow(System.Int32):System.Data.DataRow">
				<signature>System.Data.DataTable.NewRow(System.Int32):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NewRowArray" uniqueID="NewRowArray(System.Int32):System.Data.DataRow[]">
				<signature>System.Data.DataTable.NewRowArray(System.Int32):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="NewRowCreated" uniqueID="NewRowCreated(System.Data.DataRow):System.Void">
				<signature>System.Data.DataTable.NewRowCreated(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NewRowFromBuilder" uniqueID="NewRowFromBuilder(System.Data.DataRowBuilder):System.Data.DataRow">
				<signature>System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NewUninitializedRecord" uniqueID="NewUninitializedRecord():System.Int32">
				<signature>System.Data.DataTable.NewUninitializedRecord():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="NewUninitializedRow" uniqueID="NewUninitializedRow():System.Data.DataRow">
				<signature>System.Data.DataTable.NewUninitializedRow():System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnColumnChanged" uniqueID="OnColumnChanged(System.Data.DataColumnChangeEventArgs):System.Void">
				<signature>System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnColumnChanging" uniqueID="OnColumnChanging(System.Data.DataColumnChangeEventArgs):System.Void">
				<signature>System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnInitialized" uniqueID="OnInitialized():System.Void">
				<signature>System.Data.DataTable.OnInitialized():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPropertyChanging" uniqueID="OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs):System.Void">
				<signature>System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRemoveColumn" uniqueID="OnRemoveColumn(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRemoveColumnInternal" uniqueID="OnRemoveColumnInternal(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataTable.OnRemoveColumnInternal(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowChanged" uniqueID="OnRowChanged(System.Data.DataRowChangeEventArgs):System.Void">
				<signature>System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnRowChanged" uniqueID="OnRowChanged(System.Data.DataRowChangeEventArgs;System.Data.DataRow;System.Data.DataRowAction):System.Data.DataRowChangeEventArgs">
				<signature>System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs;System.Data.DataRow;System.Data.DataRowAction):System.Data.DataRowChangeEventArgs</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowChanging" uniqueID="OnRowChanging(System.Data.DataRowChangeEventArgs):System.Void">
				<signature>System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnRowChanging" uniqueID="OnRowChanging(System.Data.DataRowChangeEventArgs;System.Data.DataRow;System.Data.DataRowAction):System.Data.DataRowChangeEventArgs">
				<signature>System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs;System.Data.DataRow;System.Data.DataRowAction):System.Data.DataRowChangeEventArgs</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowDeleted" uniqueID="OnRowDeleted(System.Data.DataRowChangeEventArgs):System.Void">
				<signature>System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowDeleting" uniqueID="OnRowDeleting(System.Data.DataRowChangeEventArgs):System.Void">
				<signature>System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnTableCleared" uniqueID="OnTableCleared(System.Data.DataTableClearEventArgs):System.Void">
				<signature>System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnTableClearing" uniqueID="OnTableClearing(System.Data.DataTableClearEventArgs):System.Void">
				<signature>System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnTableNewRow" uniqueID="OnTableNewRow(System.Data.DataTableNewRowEventArgs):System.Void">
				<signature>System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ParseSortString" uniqueID="ParseSortString(System.String):System.Data.IndexField[]">
				<signature>System.Data.DataTable.ParseSortString(System.String):System.Data.IndexField[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaisePropertyChanging" uniqueID="RaisePropertyChanging(System.String):System.Void">
				<signature>System.Data.DataTable.RaisePropertyChanging(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RaiseRowChanged" uniqueID="RaiseRowChanged(System.Data.DataRowChangeEventArgs;System.Data.DataRow;System.Data.DataRowAction):System.Data.DataRowChangeEventArgs">
				<signature>System.Data.DataTable.RaiseRowChanged(System.Data.DataRowChangeEventArgs;System.Data.DataRow;System.Data.DataRowAction):System.Data.DataRowChangeEventArgs</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RaiseRowChanging" uniqueID="RaiseRowChanging(System.Data.DataRowChangeEventArgs;System.Data.DataRow;System.Data.DataRowAction):System.Data.DataRowChangeEventArgs">
				<signature>System.Data.DataTable.RaiseRowChanging(System.Data.DataRowChangeEventArgs;System.Data.DataRow;System.Data.DataRowAction):System.Data.DataRowChangeEventArgs</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RaiseRowChanging" uniqueID="RaiseRowChanging(System.Data.DataRowChangeEventArgs;System.Data.DataRow;System.Data.DataRowAction;System.Boolean):System.Data.DataRowChangeEventArgs">
				<signature>System.Data.DataTable.RaiseRowChanging(System.Data.DataRowChangeEventArgs;System.Data.DataRow;System.Data.DataRowAction;System.Boolean):System.Data.DataRowChangeEventArgs</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadEndElement" uniqueID="ReadEndElement(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataTable.ReadEndElement(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXDRSchema" uniqueID="ReadXDRSchema(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataTable.ReadXDRSchema(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXSDSchema" uniqueID="ReadXSDSchema(System.Xml.XmlReader;System.Boolean):System.Void">
				<signature>System.Data.DataTable.ReadXSDSchema(System.Xml.XmlReader;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.IO.Stream):System.Data.XmlReadMode">
				<signature>System.Data.DataTable.ReadXml(System.IO.Stream):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.IO.TextReader):System.Data.XmlReadMode">
				<signature>System.Data.DataTable.ReadXml(System.IO.TextReader):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.String):System.Data.XmlReadMode">
				<signature>System.Data.DataTable.ReadXml(System.String):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.Xml.XmlReader):System.Data.XmlReadMode">
				<signature>System.Data.DataTable.ReadXml(System.Xml.XmlReader):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.Xml.XmlReader;System.Boolean):System.Data.XmlReadMode">
				<signature>System.Data.DataTable.ReadXml(System.Xml.XmlReader;System.Boolean):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.Xml.XmlReader;System.Data.XmlReadMode;System.Boolean):System.Data.XmlReadMode">
				<signature>System.Data.DataTable.ReadXml(System.Xml.XmlReader;System.Data.XmlReadMode;System.Boolean):System.Data.XmlReadMode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadXmlDiffgram" uniqueID="ReadXmlDiffgram(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataTable.ReadXmlDiffgram(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXmlSchema" uniqueID="ReadXmlSchema(System.IO.Stream):System.Void">
				<signature>System.Data.DataTable.ReadXmlSchema(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXmlSchema" uniqueID="ReadXmlSchema(System.IO.TextReader):System.Void">
				<signature>System.Data.DataTable.ReadXmlSchema(System.IO.TextReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXmlSchema" uniqueID="ReadXmlSchema(System.String):System.Void">
				<signature>System.Data.DataTable.ReadXmlSchema(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXmlSchema" uniqueID="ReadXmlSchema(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXmlSchema" uniqueID="ReadXmlSchema(System.Xml.XmlReader;System.Boolean):System.Void">
				<signature>System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadXmlSerializable" uniqueID="ReadXmlSerializable(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RecordChanged" uniqueID="RecordChanged(System.Int32):System.Void">
				<signature>System.Data.DataTable.RecordChanged(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RecordChanged" uniqueID="RecordChanged(System.Int32[];System.Int32[]):System.Void">
				<signature>System.Data.DataTable.RecordChanged(System.Int32[];System.Int32[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RecordStateChanged" uniqueID="RecordStateChanged(System.Int32;System.Data.DataViewRowState;System.Data.DataViewRowState):System.Void">
				<signature>System.Data.DataTable.RecordStateChanged(System.Int32;System.Data.DataViewRowState;System.Data.DataViewRowState):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RecordStateChanged" uniqueID="RecordStateChanged(System.Int32;System.Data.DataViewRowState;System.Data.DataViewRowState;System.Int32;System.Data.DataViewRowState;System.Data.DataViewRowState):System.Void">
				<signature>System.Data.DataTable.RecordStateChanged(System.Int32;System.Data.DataViewRowState;System.Data.DataViewRowState;System.Int32;System.Data.DataViewRowState;System.Data.DataViewRowState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RejectChanges" uniqueID="RejectChanges():System.Void">
				<signature>System.Data.DataTable.RejectChanges():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveDependentColumn" uniqueID="RemoveDependentColumn(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataTable.RemoveDependentColumn(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveRecordFromIndexes" uniqueID="RemoveRecordFromIndexes(System.Data.DataRow;System.Data.DataRowVersion):System.Int32[]">
				<signature>System.Data.DataTable.RemoveRecordFromIndexes(System.Data.DataRow;System.Data.DataRowVersion):System.Int32[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveRow" uniqueID="RemoveRow(System.Data.DataRow;System.Boolean):System.Void">
				<signature>System.Data.DataTable.RemoveRow(System.Data.DataRow;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reset" uniqueID="Reset():System.Void">
				<signature>System.Data.DataTable.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetCaseSensitive" uniqueID="ResetCaseSensitive():System.Void">
				<signature>System.Data.DataTable.ResetCaseSensitive():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetColumns" uniqueID="ResetColumns():System.Void">
				<signature>System.Data.DataTable.ResetColumns():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetConstraints" uniqueID="ResetConstraints():System.Void">
				<signature>System.Data.DataTable.ResetConstraints():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetIndexes" uniqueID="ResetIndexes():System.Void">
				<signature>System.Data.DataTable.ResetIndexes():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetInternalIndexes" uniqueID="ResetInternalIndexes(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataTable.ResetInternalIndexes(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetNamespace" uniqueID="ResetNamespace():System.Void">
				<signature>System.Data.DataTable.ResetNamespace():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetPrimaryKey" uniqueID="ResetPrimaryKey():System.Void">
				<signature>System.Data.DataTable.ResetPrimaryKey():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RestoreConstraint" uniqueID="RestoreConstraint(System.Boolean):System.Void">
				<signature>System.Data.DataTable.RestoreConstraint(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RestoreIndexEvents" uniqueID="RestoreIndexEvents(System.Boolean):System.Void">
				<signature>System.Data.DataTable.RestoreIndexEvents(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RestoreShadowIndexes" uniqueID="RestoreShadowIndexes():System.Void">
				<signature>System.Data.DataTable.RestoreShadowIndexes():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RollbackRow" uniqueID="RollbackRow(System.Data.DataRow):System.Void">
				<signature>System.Data.DataTable.RollbackRow(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select():System.Data.DataRow[]">
				<signature>System.Data.DataTable.Select():System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String):System.Data.DataRow[]">
				<signature>System.Data.DataTable.Select(System.String):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String;System.String):System.Data.DataRow[]">
				<signature>System.Data.DataTable.Select(System.String;System.String):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String;System.String;System.Data.DataViewRowState):System.Data.DataRow[]">
				<signature>System.Data.DataTable.Select(System.String;System.String;System.Data.DataViewRowState):System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SerializeConstraints" uniqueID="SerializeConstraints(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32;System.Boolean):System.Void">
				<signature>System.Data.DataTable.SerializeConstraints(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SerializeDataTable" uniqueID="SerializeDataTable(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Boolean;System.Data.SerializationFormat):System.Void">
				<signature>System.Data.DataTable.SerializeDataTable(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Boolean;System.Data.SerializationFormat):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SerializeExpressionColumns" uniqueID="SerializeExpressionColumns(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32):System.Void">
				<signature>System.Data.DataTable.SerializeExpressionColumns(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SerializeTableData" uniqueID="SerializeTableData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32):System.Void">
				<signature>System.Data.DataTable.SerializeTableData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SerializeTableSchema" uniqueID="SerializeTableSchema(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Boolean):System.Void">
				<signature>System.Data.DataTable.SerializeTableSchema(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCaseSensitiveValue" uniqueID="SetCaseSensitiveValue(System.Boolean;System.Boolean;System.Boolean):System.Boolean">
				<signature>System.Data.DataTable.SetCaseSensitiveValue(System.Boolean;System.Boolean;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetDataRowWithLoadOption" uniqueID="SetDataRowWithLoadOption(System.Data.DataRow;System.Int32;System.Data.LoadOption;System.Boolean):System.Void">
				<signature>System.Data.DataTable.SetDataRowWithLoadOption(System.Data.DataRow;System.Int32;System.Data.LoadOption;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetDataSet" uniqueID="SetDataSet(System.Data.DataSet):System.Void">
				<signature>System.Data.DataTable.SetDataSet(System.Data.DataSet):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetKeyValues" uniqueID="SetKeyValues(System.Data.DataKey;System.Object[];System.Int32):System.Void">
				<signature>System.Data.DataTable.SetKeyValues(System.Data.DataKey;System.Object[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetLocaleValue" uniqueID="SetLocaleValue(System.Globalization.CultureInfo;System.Boolean;System.Boolean):System.Boolean">
				<signature>System.Data.DataTable.SetLocaleValue(System.Globalization.CultureInfo;System.Boolean;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetMergeRecords" uniqueID="SetMergeRecords(System.Data.DataRow;System.Int32;System.Int32;System.Data.DataRowAction):System.Void">
				<signature>System.Data.DataTable.SetMergeRecords(System.Data.DataRow;System.Int32;System.Int32;System.Data.DataRowAction):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetNewRecord" uniqueID="SetNewRecord(System.Data.DataRow;System.Int32;System.Data.DataRowAction;System.Boolean;System.Boolean;System.Boolean):System.Void">
				<signature>System.Data.DataTable.SetNewRecord(System.Data.DataRow;System.Int32;System.Data.DataRowAction;System.Boolean;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetNewRecordWorker" uniqueID="SetNewRecordWorker(System.Data.DataRow;System.Int32;System.Data.DataRowAction;System.Boolean;System.Boolean;System.Int32;System.Boolean;System.Exception):System.Void">
				<signature>System.Data.DataTable.SetNewRecordWorker(System.Data.DataRow;System.Int32;System.Data.DataRowAction;System.Boolean;System.Boolean;System.Int32;System.Boolean;System.Exception):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetOldRecord" uniqueID="SetOldRecord(System.Data.DataRow;System.Int32):System.Void">
				<signature>System.Data.DataTable.SetOldRecord(System.Data.DataRow;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetShadowIndexes" uniqueID="SetShadowIndexes():System.Void">
				<signature>System.Data.DataTable.SetShadowIndexes():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ShadowIndexCopy" uniqueID="ShadowIndexCopy():System.Void">
				<signature>System.Data.DataTable.ShadowIndexCopy():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ShouldSerializeCaseSensitive" uniqueID="ShouldSerializeCaseSensitive():System.Boolean">
				<signature>System.Data.DataTable.ShouldSerializeCaseSensitive():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ShouldSerializeLocale" uniqueID="ShouldSerializeLocale():System.Boolean">
				<signature>System.Data.DataTable.ShouldSerializeLocale():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializeNamespace" uniqueID="ShouldSerializeNamespace():System.Boolean">
				<signature>System.Data.DataTable.ShouldSerializeNamespace():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializePrimaryKey" uniqueID="ShouldSerializePrimaryKey():System.Boolean">
				<signature>System.Data.DataTable.ShouldSerializePrimaryKey():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SilentlySetValue" uniqueID="SilentlySetValue(System.Data.DataRow;System.Data.DataColumn;System.Data.DataRowVersion;System.Object):System.Void">
				<signature>System.Data.DataTable.SilentlySetValue(System.Data.DataRow;System.Data.DataColumn;System.Data.DataRowVersion;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SuspendIndexEvents" uniqueID="SuspendIndexEvents():System.Void">
				<signature>System.Data.DataTable.SuspendIndexEvents():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.GetList" uniqueID="System.ComponentModel.IListSource.GetList():System.Collections.IList">
				<signature>System.Data.DataTable.System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IListSource.get_ContainsListCollection" uniqueID="System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean">
				<signature>System.Data.DataTable.System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Xml.Serialization.IXmlSerializable.GetSchema" uniqueID="System.Xml.Serialization.IXmlSerializable.GetSchema():System.Xml.Schema.XmlSchema">
				<signature>System.Data.DataTable.System.Xml.Serialization.IXmlSerializable.GetSchema():System.Xml.Schema.XmlSchema</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Xml.Serialization.IXmlSerializable.ReadXml" uniqueID="System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader):System.Void">
				<signature>System.Data.DataTable.System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Xml.Serialization.IXmlSerializable.WriteXml" uniqueID="System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter):System.Void">
				<signature>System.Data.DataTable.System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.DataTable.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UpdatePropertyDescriptorCollectionCache" uniqueID="UpdatePropertyDescriptorCollectionCache():System.Void">
				<signature>System.Data.DataTable.UpdatePropertyDescriptorCollectionCache():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UpdatingAdd" uniqueID="UpdatingAdd(System.Object[]):System.Data.DataRow">
				<signature>System.Data.DataTable.UpdatingAdd(System.Object[]):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UpdatingCurrent" uniqueID="UpdatingCurrent(System.Data.DataRow;System.Data.DataRowAction):System.Boolean">
				<signature>System.Data.DataTable.UpdatingCurrent(System.Data.DataRow;System.Data.DataRowAction):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.Stream):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.Stream;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.IO.Stream;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.Stream;System.Data.XmlWriteMode):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.IO.Stream;System.Data.XmlWriteMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.Stream;System.Data.XmlWriteMode;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.IO.Stream;System.Data.XmlWriteMode;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.TextWriter):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.TextWriter;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.IO.TextWriter;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.TextWriter;System.Data.XmlWriteMode):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.IO.TextWriter;System.Data.XmlWriteMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.IO.TextWriter;System.Data.XmlWriteMode;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.IO.TextWriter;System.Data.XmlWriteMode;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.String):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.String;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.String;System.Data.XmlWriteMode):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.String;System.Data.XmlWriteMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.String;System.Data.XmlWriteMode;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.String;System.Data.XmlWriteMode;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.Xml.XmlWriter):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.Xml.XmlWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.Xml.XmlWriter;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.Xml.XmlWriter;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.Xml.XmlWriter;System.Data.XmlWriteMode):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.Xml.XmlWriter;System.Data.XmlWriteMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.Xml.XmlWriter;System.Data.XmlWriteMode;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXml(System.Xml.XmlWriter;System.Data.XmlWriteMode;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.IO.Stream):System.Void">
				<signature>System.Data.DataTable.WriteXmlSchema(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.IO.Stream;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXmlSchema(System.IO.Stream;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.IO.TextWriter):System.Void">
				<signature>System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.IO.TextWriter;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.String):System.Void">
				<signature>System.Data.DataTable.WriteXmlSchema(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.String;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXmlSchema(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.Xml.XmlWriter):System.Void">
				<signature>System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXmlSchema" uniqueID="WriteXmlSchema(System.Xml.XmlWriter;System.Boolean):System.Void">
				<signature>System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_ColumnChanged" uniqueID="add_ColumnChanged(System.Data.DataColumnChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.add_ColumnChanged(System.Data.DataColumnChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_ColumnChanging" uniqueID="add_ColumnChanging(System.Data.DataColumnChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.add_ColumnChanging(System.Data.DataColumnChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Initialized" uniqueID="add_Initialized(System.EventHandler):System.Void">
				<signature>System.Data.DataTable.add_Initialized(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="add_PropertyChanging" uniqueID="add_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Data.DataTable.add_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowChanged" uniqueID="add_RowChanged(System.Data.DataRowChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.add_RowChanged(System.Data.DataRowChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowChanging" uniqueID="add_RowChanging(System.Data.DataRowChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.add_RowChanging(System.Data.DataRowChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowDeleted" uniqueID="add_RowDeleted(System.Data.DataRowChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.add_RowDeleted(System.Data.DataRowChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowDeleting" uniqueID="add_RowDeleting(System.Data.DataRowChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.add_RowDeleting(System.Data.DataRowChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_TableCleared" uniqueID="add_TableCleared(System.Data.DataTableClearEventHandler):System.Void">
				<signature>System.Data.DataTable.add_TableCleared(System.Data.DataTableClearEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_TableClearing" uniqueID="add_TableClearing(System.Data.DataTableClearEventHandler):System.Void">
				<signature>System.Data.DataTable.add_TableClearing(System.Data.DataTableClearEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_TableNewRow" uniqueID="add_TableNewRow(System.Data.DataTableNewRowEventHandler):System.Void">
				<signature>System.Data.DataTable.add_TableNewRow(System.Data.DataTableNewRowEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AreIndexEventsSuspended" uniqueID="get_AreIndexEventsSuspended():System.Boolean">
				<signature>System.Data.DataTable.get_AreIndexEventsSuspended():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CaseSensitive" uniqueID="get_CaseSensitive():System.Boolean">
				<signature>System.Data.DataTable.get_CaseSensitive():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ChildRelations" uniqueID="get_ChildRelations():System.Data.DataRelationCollection">
				<signature>System.Data.DataTable.get_ChildRelations():System.Data.DataRelationCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Columns" uniqueID="get_Columns():System.Data.DataColumnCollection">
				<signature>System.Data.DataTable.get_Columns():System.Data.DataColumnCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_CompareInfo" uniqueID="get_CompareInfo():System.Globalization.CompareInfo">
				<signature>System.Data.DataTable.get_CompareInfo():System.Globalization.CompareInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Constraints" uniqueID="get_Constraints():System.Data.ConstraintCollection">
				<signature>System.Data.DataTable.get_Constraints():System.Data.ConstraintCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataSet" uniqueID="get_DataSet():System.Data.DataSet">
				<signature>System.Data.DataTable.get_DataSet():System.Data.DataSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DefaultView" uniqueID="get_DefaultView():System.Data.DataView">
				<signature>System.Data.DataTable.get_DefaultView():System.Data.DataView</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DisplayExpression" uniqueID="get_DisplayExpression():System.String">
				<signature>System.Data.DataTable.get_DisplayExpression():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DisplayExpressionInternal" uniqueID="get_DisplayExpressionInternal():System.String">
				<signature>System.Data.DataTable.get_DisplayExpressionInternal():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ElementColumnCount" uniqueID="get_ElementColumnCount():System.Int32">
				<signature>System.Data.DataTable.get_ElementColumnCount():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EncodedTableName" uniqueID="get_EncodedTableName():System.String">
				<signature>System.Data.DataTable.get_EncodedTableName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EnforceConstraints" uniqueID="get_EnforceConstraints():System.Boolean">
				<signature>System.Data.DataTable.get_EnforceConstraints():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ExtendedProperties" uniqueID="get_ExtendedProperties():System.Data.PropertyCollection">
				<signature>System.Data.DataTable.get_ExtendedProperties():System.Data.PropertyCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FormatProvider" uniqueID="get_FormatProvider():System.IFormatProvider">
				<signature>System.Data.DataTable.get_FormatProvider():System.IFormatProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasErrors" uniqueID="get_HasErrors():System.Boolean">
				<signature>System.Data.DataTable.get_HasErrors():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInitialized" uniqueID="get_IsInitialized():System.Boolean">
				<signature>System.Data.DataTable.get_IsInitialized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_IsTypedDataTable" uniqueID="get_IsTypedDataTable():System.Boolean">
				<signature>System.Data.DataTable.get_IsTypedDataTable():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LiveIndexes" uniqueID="get_LiveIndexes():System.Collections.Generic.List&lt;System.Data.Index&gt;">
				<signature>System.Data.DataTable.get_LiveIndexes():System.Collections.Generic.List&lt;System.Data.Index&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Locale" uniqueID="get_Locale():System.Globalization.CultureInfo">
				<signature>System.Data.DataTable.get_Locale():System.Globalization.CultureInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MaxOccurs" uniqueID="get_MaxOccurs():System.Decimal">
				<signature>System.Data.DataTable.get_MaxOccurs():System.Decimal</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MergingData" uniqueID="get_MergingData():System.Boolean">
				<signature>System.Data.DataTable.get_MergingData():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MinOccurs" uniqueID="get_MinOccurs():System.Decimal">
				<signature>System.Data.DataTable.get_MinOccurs():System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MinimumCapacity" uniqueID="get_MinimumCapacity():System.Int32">
				<signature>System.Data.DataTable.get_MinimumCapacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.Data.DataTable.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NeedColumnChangeEvents" uniqueID="get_NeedColumnChangeEvents():System.Boolean">
				<signature>System.Data.DataTable.get_NeedColumnChangeEvents():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NestedParentRelations" uniqueID="get_NestedParentRelations():System.Data.DataRelation[]">
				<signature>System.Data.DataTable.get_NestedParentRelations():System.Data.DataRelation[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NestedParentsCount" uniqueID="get_NestedParentsCount():System.Int32">
				<signature>System.Data.DataTable.get_NestedParentsCount():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ObjectID" uniqueID="get_ObjectID():System.Int32">
				<signature>System.Data.DataTable.get_ObjectID():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ParentRelations" uniqueID="get_ParentRelations():System.Data.DataRelationCollection">
				<signature>System.Data.DataTable.get_ParentRelations():System.Data.DataRelationCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Prefix" uniqueID="get_Prefix():System.String">
				<signature>System.Data.DataTable.get_Prefix():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PrimaryKey" uniqueID="get_PrimaryKey():System.Data.DataColumn[]">
				<signature>System.Data.DataTable.get_PrimaryKey():System.Data.DataColumn[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RecordCapacity" uniqueID="get_RecordCapacity():System.Int32">
				<signature>System.Data.DataTable.get_RecordCapacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RemotingFormat" uniqueID="get_RemotingFormat():System.Data.SerializationFormat">
				<signature>System.Data.DataTable.get_RemotingFormat():System.Data.SerializationFormat</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RowDiffId" uniqueID="get_RowDiffId():System.Collections.Hashtable">
				<signature>System.Data.DataTable.get_RowDiffId():System.Collections.Hashtable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Rows" uniqueID="get_Rows():System.Data.DataRowCollection">
				<signature>System.Data.DataTable.get_Rows():System.Data.DataRowCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SchemaLoading" uniqueID="get_SchemaLoading():System.Boolean">
				<signature>System.Data.DataTable.get_SchemaLoading():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SelfNested" uniqueID="get_SelfNested():System.Boolean">
				<signature>System.Data.DataTable.get_SelfNested():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Site" uniqueID="get_Site():System.ComponentModel.ISite">
				<signature>System.Data.DataTable.get_Site():System.ComponentModel.ISite</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SuspendEnforceConstraints" uniqueID="get_SuspendEnforceConstraints():System.Boolean">
				<signature>System.Data.DataTable.get_SuspendEnforceConstraints():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TableName" uniqueID="get_TableName():System.String">
				<signature>System.Data.DataTable.get_TableName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TypeName" uniqueID="get_TypeName():System.Xml.XmlQualifiedName">
				<signature>System.Data.DataTable.get_TypeName():System.Xml.XmlQualifiedName</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UKColumnPositionForInference" uniqueID="get_UKColumnPositionForInference():System.Int32">
				<signature>System.Data.DataTable.get_UKColumnPositionForInference():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_XmlText" uniqueID="get_XmlText():System.Data.DataColumn">
				<signature>System.Data.DataTable.get_XmlText():System.Data.DataColumn</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_ColumnChanged" uniqueID="remove_ColumnChanged(System.Data.DataColumnChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.remove_ColumnChanged(System.Data.DataColumnChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_ColumnChanging" uniqueID="remove_ColumnChanging(System.Data.DataColumnChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.remove_ColumnChanging(System.Data.DataColumnChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Initialized" uniqueID="remove_Initialized(System.EventHandler):System.Void">
				<signature>System.Data.DataTable.remove_Initialized(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="remove_PropertyChanging" uniqueID="remove_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void">
				<signature>System.Data.DataTable.remove_PropertyChanging(System.ComponentModel.PropertyChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowChanged" uniqueID="remove_RowChanged(System.Data.DataRowChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.remove_RowChanged(System.Data.DataRowChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowChanging" uniqueID="remove_RowChanging(System.Data.DataRowChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.remove_RowChanging(System.Data.DataRowChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowDeleted" uniqueID="remove_RowDeleted(System.Data.DataRowChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.remove_RowDeleted(System.Data.DataRowChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowDeleting" uniqueID="remove_RowDeleting(System.Data.DataRowChangeEventHandler):System.Void">
				<signature>System.Data.DataTable.remove_RowDeleting(System.Data.DataRowChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_TableCleared" uniqueID="remove_TableCleared(System.Data.DataTableClearEventHandler):System.Void">
				<signature>System.Data.DataTable.remove_TableCleared(System.Data.DataTableClearEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_TableClearing" uniqueID="remove_TableClearing(System.Data.DataTableClearEventHandler):System.Void">
				<signature>System.Data.DataTable.remove_TableClearing(System.Data.DataTableClearEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_TableNewRow" uniqueID="remove_TableNewRow(System.Data.DataTableNewRowEventHandler):System.Void">
				<signature>System.Data.DataTable.remove_TableNewRow(System.Data.DataTableNewRowEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CaseSensitive" uniqueID="set_CaseSensitive(System.Boolean):System.Void">
				<signature>System.Data.DataTable.set_CaseSensitive(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DisplayExpression" uniqueID="set_DisplayExpression(System.String):System.Void">
				<signature>System.Data.DataTable.set_DisplayExpression(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ElementColumnCount" uniqueID="set_ElementColumnCount(System.Int32):System.Void">
				<signature>System.Data.DataTable.set_ElementColumnCount(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_EnforceConstraints" uniqueID="set_EnforceConstraints(System.Boolean):System.Void">
				<signature>System.Data.DataTable.set_EnforceConstraints(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Locale" uniqueID="set_Locale(System.Globalization.CultureInfo):System.Void">
				<signature>System.Data.DataTable.set_Locale(System.Globalization.CultureInfo):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_MaxOccurs" uniqueID="set_MaxOccurs(System.Decimal):System.Void">
				<signature>System.Data.DataTable.set_MaxOccurs(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_MergingData" uniqueID="set_MergingData(System.Boolean):System.Void">
				<signature>System.Data.DataTable.set_MergingData(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_MinOccurs" uniqueID="set_MinOccurs(System.Decimal):System.Void">
				<signature>System.Data.DataTable.set_MinOccurs(System.Decimal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MinimumCapacity" uniqueID="set_MinimumCapacity(System.Int32):System.Void">
				<signature>System.Data.DataTable.set_MinimumCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Namespace" uniqueID="set_Namespace(System.String):System.Void">
				<signature>System.Data.DataTable.set_Namespace(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Prefix" uniqueID="set_Prefix(System.String):System.Void">
				<signature>System.Data.DataTable.set_Prefix(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PrimaryKey" uniqueID="set_PrimaryKey(System.Data.DataColumn[]):System.Void">
				<signature>System.Data.DataTable.set_PrimaryKey(System.Data.DataColumn[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RemotingFormat" uniqueID="set_RemotingFormat(System.Data.SerializationFormat):System.Void">
				<signature>System.Data.DataTable.set_RemotingFormat(System.Data.SerializationFormat):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Site" uniqueID="set_Site(System.ComponentModel.ISite):System.Void">
				<signature>System.Data.DataTable.set_Site(System.ComponentModel.ISite):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SuspendEnforceConstraints" uniqueID="set_SuspendEnforceConstraints(System.Boolean):System.Void">
				<signature>System.Data.DataTable.set_SuspendEnforceConstraints(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TableName" uniqueID="set_TableName(System.String):System.Void">
				<signature>System.Data.DataTable.set_TableName(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_TypeName" uniqueID="set_TypeName(System.Xml.XmlQualifiedName):System.Void">
				<signature>System.Data.DataTable.set_TypeName(System.Xml.XmlQualifiedName):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_UKColumnPositionForInference" uniqueID="set_UKColumnPositionForInference(System.Int32):System.Void">
				<signature>System.Data.DataTable.set_UKColumnPositionForInference(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_XmlText" uniqueID="set_XmlText(System.Data.DataColumn):System.Void">
				<signature>System.Data.DataTable.set_XmlText(System.Data.DataColumn):System.Void</signature>
			</method>
		</class>
		<class name="DataTableCollection" uniqueID="System.Data.DataTableCollection">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add():System.Data.DataTable">
				<signature>System.Data.DataTableCollection.Add():System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataTable):System.Void">
				<signature>System.Data.DataTableCollection.Add(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String):System.Data.DataTable">
				<signature>System.Data.DataTableCollection.Add(System.String):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.String):System.Data.DataTable">
				<signature>System.Data.DataTableCollection.Add(System.String;System.String):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Data.DataTable[]):System.Void">
				<signature>System.Data.DataTableCollection.AddRange(System.Data.DataTable[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ArrayAdd" uniqueID="ArrayAdd(System.Data.DataTable):System.Void">
				<signature>System.Data.DataTableCollection.ArrayAdd(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AssignName" uniqueID="AssignName():System.String">
				<signature>System.Data.DataTableCollection.AssignName():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BaseAdd" uniqueID="BaseAdd(System.Data.DataTable):System.Void">
				<signature>System.Data.DataTableCollection.BaseAdd(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BaseGroupSwitch" uniqueID="BaseGroupSwitch(System.Data.DataTable[];System.Int32;System.Data.DataTable[];System.Int32):System.Void">
				<signature>System.Data.DataTableCollection.BaseGroupSwitch(System.Data.DataTable[];System.Int32;System.Data.DataTable[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BaseRemove" uniqueID="BaseRemove(System.Data.DataTable):System.Void">
				<signature>System.Data.DataTableCollection.BaseRemove(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CanRemove" uniqueID="CanRemove(System.Data.DataTable):System.Boolean">
				<signature>System.Data.DataTableCollection.CanRemove(System.Data.DataTable):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CanRemove" uniqueID="CanRemove(System.Data.DataTable;System.Boolean):System.Boolean">
				<signature>System.Data.DataTableCollection.CanRemove(System.Data.DataTable;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Data.DataTableCollection.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Data.DataTableCollection.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Contains" uniqueID="Contains(System.String;System.Boolean):System.Boolean">
				<signature>System.Data.DataTableCollection.Contains(System.String;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String;System.String):System.Boolean">
				<signature>System.Data.DataTableCollection.Contains(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Contains" uniqueID="Contains(System.String;System.String;System.Boolean;System.Boolean):System.Boolean">
				<signature>System.Data.DataTableCollection.Contains(System.String;System.String;System.Boolean;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataTable[];System.Int32):System.Void">
				<signature>System.Data.DataTableCollection.CopyTo(System.Data.DataTable[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DataTableCollection" uniqueID="DataTableCollection(System.Data.DataSet):System.Void">
				<signature>System.Data.DataTableCollection.DataTableCollection(System.Data.DataSet):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinishInitCollection" uniqueID="FinishInitCollection():System.Void">
				<signature>System.Data.DataTableCollection.FinishInitCollection():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTable" uniqueID="GetTable(System.String;System.String):System.Data.DataTable">
				<signature>System.Data.DataTableCollection.GetTable(System.String;System.String):System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTableSmart" uniqueID="GetTableSmart(System.String;System.String):System.Data.DataTable">
				<signature>System.Data.DataTableCollection.GetTableSmart(System.String;System.String):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataTable):System.Int32">
				<signature>System.Data.DataTableCollection.IndexOf(System.Data.DataTable):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.Data.DataTableCollection.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.String):System.Int32">
				<signature>System.Data.DataTableCollection.IndexOf(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String;System.String;System.Boolean):System.Int32">
				<signature>System.Data.DataTableCollection.IndexOf(System.String;System.String;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalIndexOf" uniqueID="InternalIndexOf(System.String):System.Int32">
				<signature>System.Data.DataTableCollection.InternalIndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalIndexOf" uniqueID="InternalIndexOf(System.String;System.String):System.Int32">
				<signature>System.Data.DataTableCollection.InternalIndexOf(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MakeName" uniqueID="MakeName(System.Int32):System.String">
				<signature>System.Data.DataTableCollection.MakeName(System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanged" uniqueID="OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs):System.Void">
				<signature>System.Data.DataTableCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnCollectionChanging" uniqueID="OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs):System.Void">
				<signature>System.Data.DataTableCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterName" uniqueID="RegisterName(System.String;System.String):System.Void">
				<signature>System.Data.DataTableCollection.RegisterName(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataTable):System.Void">
				<signature>System.Data.DataTableCollection.Remove(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Void">
				<signature>System.Data.DataTableCollection.Remove(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String;System.String):System.Void">
				<signature>System.Data.DataTableCollection.Remove(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Data.DataTableCollection.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReplaceFromInference" uniqueID="ReplaceFromInference(System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.Void">
				<signature>System.Data.DataTableCollection.ReplaceFromInference(System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UnregisterName" uniqueID="UnregisterName(System.String):System.Void">
				<signature>System.Data.DataTableCollection.UnregisterName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CollectionChanged" uniqueID="add_CollectionChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void">
				<signature>System.Data.DataTableCollection.add_CollectionChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CollectionChanging" uniqueID="add_CollectionChanging(System.ComponentModel.CollectionChangeEventHandler):System.Void">
				<signature>System.Data.DataTableCollection.add_CollectionChanging(System.ComponentModel.CollectionChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataTable">
				<signature>System.Data.DataTableCollection.get_Item(System.Int32):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Data.DataTable">
				<signature>System.Data.DataTableCollection.get_Item(System.String):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String;System.String):System.Data.DataTable">
				<signature>System.Data.DataTableCollection.get_Item(System.String;System.String):System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_List" uniqueID="get_List():System.Collections.ArrayList">
				<signature>System.Data.DataTableCollection.get_List():System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ObjectID" uniqueID="get_ObjectID():System.Int32">
				<signature>System.Data.DataTableCollection.get_ObjectID():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CollectionChanged" uniqueID="remove_CollectionChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void">
				<signature>System.Data.DataTableCollection.remove_CollectionChanged(System.ComponentModel.CollectionChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CollectionChanging" uniqueID="remove_CollectionChanging(System.ComponentModel.CollectionChangeEventHandler):System.Void">
				<signature>System.Data.DataTableCollection.remove_CollectionChanging(System.ComponentModel.CollectionChangeEventHandler):System.Void</signature>
			</method>
		</class>
		<class name="DataView" uniqueID="System.Data.DataView">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.DataView.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddNew" uniqueID="AddNew():System.Data.DataRowView">
				<signature>System.Data.DataView.AddNew():System.Data.DataRowView</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginInit" uniqueID="BeginInit():System.Void">
				<signature>System.Data.DataView.BeginInit():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckOpen" uniqueID="CheckOpen():System.Void">
				<signature>System.Data.DataView.CheckOpen():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckSort" uniqueID="CheckSort(System.String):System.Void">
				<signature>System.Data.DataView.CheckSort(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ChildRelationCollectionChanged" uniqueID="ChildRelationCollectionChanged(System.Object;System.ComponentModel.CollectionChangeEventArgs):System.Void">
				<signature>System.Data.DataView.ChildRelationCollectionChanged(System.Object;System.ComponentModel.CollectionChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Data.DataView.Close():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ColumnCollectionChanged" uniqueID="ColumnCollectionChanged(System.Object;System.ComponentModel.CollectionChangeEventArgs):System.Void">
				<signature>System.Data.DataView.ColumnCollectionChanged(System.Object;System.ComponentModel.CollectionChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ColumnCollectionChangedInternal" uniqueID="ColumnCollectionChangedInternal(System.Object;System.ComponentModel.CollectionChangeEventArgs):System.Void">
				<signature>System.Data.DataView.ColumnCollectionChangedInternal(System.Object;System.ComponentModel.CollectionChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Data.DataView.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataRowView[];System.Int32):System.Void">
				<signature>System.Data.DataView.CopyTo(System.Data.DataRowView[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateSortString" uniqueID="CreateSortString(System.ComponentModel.PropertyDescriptor;System.ComponentModel.ListSortDirection):System.String">
				<signature>System.Data.DataView.CreateSortString(System.ComponentModel.PropertyDescriptor;System.ComponentModel.ListSortDirection):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataView" uniqueID="DataView():System.Void">
				<signature>System.Data.DataView.DataView():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataView" uniqueID="DataView(System.Data.DataTable):System.Void">
				<signature>System.Data.DataView.DataView(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DataView" uniqueID="DataView(System.Data.DataTable;System.Boolean):System.Void">
				<signature>System.Data.DataView.DataView(System.Data.DataTable;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DataView" uniqueID="DataView(System.Data.DataTable;System.Predicate&lt;System.Data.DataRow&gt;;System.Comparison&lt;System.Data.DataRow&gt;;System.Data.DataViewRowState):System.Void">
				<signature>System.Data.DataView.DataView(System.Data.DataTable;System.Predicate&lt;System.Data.DataRow&gt;;System.Comparison&lt;System.Data.DataRow&gt;;System.Data.DataViewRowState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataView" uniqueID="DataView(System.Data.DataTable;System.String;System.String;System.Data.DataViewRowState):System.Void">
				<signature>System.Data.DataView.DataView(System.Data.DataTable;System.String;System.String;System.Data.DataViewRowState):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Delete" uniqueID="Delete(System.Data.DataRow):System.Void">
				<signature>System.Data.DataView.Delete(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Delete" uniqueID="Delete(System.Int32):System.Void">
				<signature>System.Data.DataView.Delete(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.Data.DataView.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInit" uniqueID="EndInit():System.Void">
				<signature>System.Data.DataView.EndInit():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Data.DataView):System.Boolean">
				<signature>System.Data.DataView.Equals(System.Data.DataView):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object):System.Int32">
				<signature>System.Data.DataView.Find(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Object[]):System.Int32">
				<signature>System.Data.DataView.Find(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindByKey" uniqueID="FindByKey(System.Object):System.Int32">
				<signature>System.Data.DataView.FindByKey(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindByKey" uniqueID="FindByKey(System.Object[]):System.Int32">
				<signature>System.Data.DataView.FindByKey(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindRows" uniqueID="FindRows(System.Object):System.Data.DataRowView[]">
				<signature>System.Data.DataView.FindRows(System.Object):System.Data.DataRowView[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindRows" uniqueID="FindRows(System.Object[]):System.Data.DataRowView[]">
				<signature>System.Data.DataView.FindRows(System.Object[]):System.Data.DataRowView[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindRowsByKey" uniqueID="FindRowsByKey(System.Object[]):System.Data.DataRowView[]">
				<signature>System.Data.DataView.FindRowsByKey(System.Object[]):System.Data.DataRowView[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinishAddNew" uniqueID="FinishAddNew(System.Boolean):System.Void">
				<signature>System.Data.DataView.FinishAddNew(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDataRowViewFromRange" uniqueID="GetDataRowViewFromRange(System.Data.Range):System.Data.DataRowView[]">
				<signature>System.Data.DataView.GetDataRowViewFromRange(System.Data.Range):System.Data.DataRowView[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.DataView.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetFilter" uniqueID="GetFilter():System.Data.IFilter">
				<signature>System.Data.DataView.GetFilter():System.Data.IFilter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetFindIndex" uniqueID="GetFindIndex(System.String;System.Boolean):System.Data.Index">
				<signature>System.Data.DataView.GetFindIndex(System.String;System.Boolean):System.Data.Index</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetRecord" uniqueID="GetRecord(System.Int32):System.Int32">
				<signature>System.Data.DataView.GetRecord(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRow" uniqueID="GetRow(System.Int32):System.Data.DataRow">
				<signature>System.Data.DataView.GetRow(System.Int32):System.Data.DataRow</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetRowView" uniqueID="GetRowView(System.Data.DataRow):System.Data.DataRowView">
				<signature>System.Data.DataView.GetRowView(System.Data.DataRow):System.Data.DataRowView</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetRowView" uniqueID="GetRowView(System.Int32):System.Data.DataRowView">
				<signature>System.Data.DataView.GetRowView(System.Int32):System.Data.DataRowView</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetSortDescriptions" uniqueID="GetSortDescriptions():System.ComponentModel.ListSortDescriptionCollection">
				<signature>System.Data.DataView.GetSortDescriptions():System.ComponentModel.ListSortDescriptionCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetSortProperty" uniqueID="GetSortProperty():System.ComponentModel.PropertyDescriptor">
				<signature>System.Data.DataView.GetSortProperty():System.ComponentModel.PropertyDescriptor</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IndexListChanged" uniqueID="IndexListChanged(System.Object;System.ComponentModel.ListChangedEventArgs):System.Void">
				<signature>System.Data.DataView.IndexListChanged(System.Object;System.ComponentModel.ListChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IndexListChangedInternal" uniqueID="IndexListChangedInternal(System.ComponentModel.ListChangedEventArgs):System.Void">
				<signature>System.Data.DataView.IndexListChangedInternal(System.ComponentModel.ListChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRowView):System.Int32">
				<signature>System.Data.DataView.IndexOf(System.Data.DataRowView):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IndexOfDataRowView" uniqueID="IndexOfDataRowView(System.Data.DataRowView):System.Int32">
				<signature>System.Data.DataView.IndexOfDataRowView(System.Data.DataRowView):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MaintainDataView" uniqueID="MaintainDataView(System.ComponentModel.ListChangedType;System.Data.DataRow;System.Boolean):System.Void">
				<signature>System.Data.DataView.MaintainDataView(System.ComponentModel.ListChangedType;System.Data.DataRow;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnInitialized" uniqueID="OnInitialized():System.Void">
				<signature>System.Data.DataView.OnInitialized():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnListChanged" uniqueID="OnListChanged(System.ComponentModel.ListChangedEventArgs):System.Void">
				<signature>System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Open" uniqueID="Open():System.Void">
				<signature>System.Data.DataView.Open():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ParentRelationCollectionChanged" uniqueID="ParentRelationCollectionChanged(System.Object;System.ComponentModel.CollectionChangeEventArgs):System.Void">
				<signature>System.Data.DataView.ParentRelationCollectionChanged(System.Object;System.ComponentModel.CollectionChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Reset" uniqueID="Reset():System.Void">
				<signature>System.Data.DataView.Reset():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetRowViewCache" uniqueID="ResetRowViewCache():System.Void">
				<signature>System.Data.DataView.ResetRowViewCache():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetSort" uniqueID="ResetSort():System.Void">
				<signature>System.Data.DataView.ResetSort():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RowExist" uniqueID="RowExist(System.Collections.Generic.List&lt;System.Object[]&gt;;System.Object[]):System.Boolean">
				<signature>System.Data.DataView.RowExist(System.Collections.Generic.List&lt;System.Object[]&gt;;System.Object[]):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetDataViewManager" uniqueID="SetDataViewManager(System.Data.DataViewManager):System.Void">
				<signature>System.Data.DataView.SetDataViewManager(System.Data.DataViewManager):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetIndex" uniqueID="SetIndex(System.String;System.Data.DataViewRowState;System.Data.IFilter):System.Void">
				<signature>System.Data.DataView.SetIndex(System.String;System.Data.DataViewRowState;System.Data.IFilter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetIndex2" uniqueID="SetIndex2(System.String;System.Data.DataViewRowState;System.Data.IFilter;System.Boolean):System.Void">
				<signature>System.Data.DataView.SetIndex2(System.String;System.Data.DataViewRowState;System.Data.IFilter;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializeSort" uniqueID="ShouldSerializeSort():System.Boolean">
				<signature>System.Data.DataView.ShouldSerializeSort():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Data.DataView.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Data.DataView.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Data.DataView.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Data.DataView.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Data.DataView.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Data.DataView.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Data.DataView.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Data.DataView.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Data.DataView.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Data.DataView.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Data.DataView.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Data.DataView.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Data.DataView.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.AddIndex" uniqueID="System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor):System.Void">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.AddNew" uniqueID="System.ComponentModel.IBindingList.AddNew():System.Object">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.AddNew():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.ApplySort" uniqueID="System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor;System.ComponentModel.ListSortDirection):System.Void">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor;System.ComponentModel.ListSortDirection):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.Find" uniqueID="System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor;System.Object):System.Int32">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.RemoveIndex" uniqueID="System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor):System.Void">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.RemoveSort" uniqueID="System.ComponentModel.IBindingList.RemoveSort():System.Void">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.RemoveSort():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.get_AllowEdit" uniqueID="System.ComponentModel.IBindingList.get_AllowEdit():System.Boolean">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.get_AllowEdit():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.get_AllowNew" uniqueID="System.ComponentModel.IBindingList.get_AllowNew():System.Boolean">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.get_AllowNew():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.get_AllowRemove" uniqueID="System.ComponentModel.IBindingList.get_AllowRemove():System.Boolean">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.get_AllowRemove():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.get_IsSorted" uniqueID="System.ComponentModel.IBindingList.get_IsSorted():System.Boolean">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.get_IsSorted():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.get_SortDirection" uniqueID="System.ComponentModel.IBindingList.get_SortDirection():System.ComponentModel.ListSortDirection">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.get_SortDirection():System.ComponentModel.ListSortDirection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.get_SortProperty" uniqueID="System.ComponentModel.IBindingList.get_SortProperty():System.ComponentModel.PropertyDescriptor">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.get_SortProperty():System.ComponentModel.PropertyDescriptor</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.get_SupportsChangeNotification" uniqueID="System.ComponentModel.IBindingList.get_SupportsChangeNotification():System.Boolean">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.get_SupportsChangeNotification():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.get_SupportsSearching" uniqueID="System.ComponentModel.IBindingList.get_SupportsSearching():System.Boolean">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.get_SupportsSearching():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingList.get_SupportsSorting" uniqueID="System.ComponentModel.IBindingList.get_SupportsSorting():System.Boolean">
				<signature>System.Data.DataView.System.ComponentModel.IBindingList.get_SupportsSorting():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingListView.ApplySort" uniqueID="System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection):System.Void">
				<signature>System.Data.DataView.System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingListView.RemoveFilter" uniqueID="System.ComponentModel.IBindingListView.RemoveFilter():System.Void">
				<signature>System.Data.DataView.System.ComponentModel.IBindingListView.RemoveFilter():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingListView.get_Filter" uniqueID="System.ComponentModel.IBindingListView.get_Filter():System.String">
				<signature>System.Data.DataView.System.ComponentModel.IBindingListView.get_Filter():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingListView.get_SortDescriptions" uniqueID="System.ComponentModel.IBindingListView.get_SortDescriptions():System.ComponentModel.ListSortDescriptionCollection">
				<signature>System.Data.DataView.System.ComponentModel.IBindingListView.get_SortDescriptions():System.ComponentModel.ListSortDescriptionCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingListView.get_SupportsAdvancedSorting" uniqueID="System.ComponentModel.IBindingListView.get_SupportsAdvancedSorting():System.Boolean">
				<signature>System.Data.DataView.System.ComponentModel.IBindingListView.get_SupportsAdvancedSorting():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingListView.get_SupportsFiltering" uniqueID="System.ComponentModel.IBindingListView.get_SupportsFiltering():System.Boolean">
				<signature>System.Data.DataView.System.ComponentModel.IBindingListView.get_SupportsFiltering():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.IBindingListView.set_Filter" uniqueID="System.ComponentModel.IBindingListView.set_Filter(System.String):System.Void">
				<signature>System.Data.DataView.System.ComponentModel.IBindingListView.set_Filter(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.ITypedList.GetItemProperties" uniqueID="System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[]):System.ComponentModel.PropertyDescriptorCollection">
				<signature>System.Data.DataView.System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[]):System.ComponentModel.PropertyDescriptorCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ComponentModel.ITypedList.GetListName" uniqueID="System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[]):System.String">
				<signature>System.Data.DataView.System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[]):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToTable" uniqueID="ToTable():System.Data.DataTable">
				<signature>System.Data.DataView.ToTable():System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToTable" uniqueID="ToTable(System.Boolean;System.String[]):System.Data.DataTable">
				<signature>System.Data.DataView.ToTable(System.Boolean;System.String[]):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToTable" uniqueID="ToTable(System.String):System.Data.DataTable">
				<signature>System.Data.DataView.ToTable(System.String):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToTable" uniqueID="ToTable(System.String;System.Boolean;System.String[]):System.Data.DataTable">
				<signature>System.Data.DataView.ToTable(System.String;System.Boolean;System.String[]):System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UpdateIndex" uniqueID="UpdateIndex():System.Void">
				<signature>System.Data.DataView.UpdateIndex():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UpdateIndex" uniqueID="UpdateIndex(System.Boolean):System.Void">
				<signature>System.Data.DataView.UpdateIndex(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UpdateIndex" uniqueID="UpdateIndex(System.Boolean;System.Boolean):System.Void">
				<signature>System.Data.DataView.UpdateIndex(System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Initialized" uniqueID="add_Initialized(System.EventHandler):System.Void">
				<signature>System.Data.DataView.add_Initialized(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_ListChanged" uniqueID="add_ListChanged(System.ComponentModel.ListChangedEventHandler):System.Void">
				<signature>System.Data.DataView.add_ListChanged(System.ComponentModel.ListChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowDelete" uniqueID="get_AllowDelete():System.Boolean">
				<signature>System.Data.DataView.get_AllowDelete():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowEdit" uniqueID="get_AllowEdit():System.Boolean">
				<signature>System.Data.DataView.get_AllowEdit():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowNew" uniqueID="get_AllowNew():System.Boolean">
				<signature>System.Data.DataView.get_AllowNew():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ApplyDefaultSort" uniqueID="get_ApplyDefaultSort():System.Boolean">
				<signature>System.Data.DataView.get_ApplyDefaultSort():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Data.DataView.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_CountFromIndex" uniqueID="get_CountFromIndex():System.Int32">
				<signature>System.Data.DataView.get_CountFromIndex():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataViewManager" uniqueID="get_DataViewManager():System.Data.DataViewManager">
				<signature>System.Data.DataView.get_DataViewManager():System.Data.DataViewManager</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInitialized" uniqueID="get_IsInitialized():System.Boolean">
				<signature>System.Data.DataView.get_IsInitialized():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsOpen" uniqueID="get_IsOpen():System.Boolean">
				<signature>System.Data.DataView.get_IsOpen():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataRowView">
				<signature>System.Data.DataView.get_Item(System.Int32):System.Data.DataRowView</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ObjectID" uniqueID="get_ObjectID():System.Int32">
				<signature>System.Data.DataView.get_ObjectID():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RowFilter" uniqueID="get_RowFilter():System.String">
				<signature>System.Data.DataView.get_RowFilter():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RowPredicate" uniqueID="get_RowPredicate():System.Predicate&lt;System.Data.DataRow&gt;">
				<signature>System.Data.DataView.get_RowPredicate():System.Predicate&lt;System.Data.DataRow&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RowStateFilter" uniqueID="get_RowStateFilter():System.Data.DataViewRowState">
				<signature>System.Data.DataView.get_RowStateFilter():System.Data.DataViewRowState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Sort" uniqueID="get_Sort():System.String">
				<signature>System.Data.DataView.get_Sort():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SortComparison" uniqueID="get_SortComparison():System.Comparison&lt;System.Data.DataRow&gt;">
				<signature>System.Data.DataView.get_SortComparison():System.Comparison&lt;System.Data.DataRow&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Table" uniqueID="get_Table():System.Data.DataTable">
				<signature>System.Data.DataView.get_Table():System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Initialized" uniqueID="remove_Initialized(System.EventHandler):System.Void">
				<signature>System.Data.DataView.remove_Initialized(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_ListChanged" uniqueID="remove_ListChanged(System.ComponentModel.ListChangedEventHandler):System.Void">
				<signature>System.Data.DataView.remove_ListChanged(System.ComponentModel.ListChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowDelete" uniqueID="set_AllowDelete(System.Boolean):System.Void">
				<signature>System.Data.DataView.set_AllowDelete(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowEdit" uniqueID="set_AllowEdit(System.Boolean):System.Void">
				<signature>System.Data.DataView.set_AllowEdit(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowNew" uniqueID="set_AllowNew(System.Boolean):System.Void">
				<signature>System.Data.DataView.set_AllowNew(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ApplyDefaultSort" uniqueID="set_ApplyDefaultSort(System.Boolean):System.Void">
				<signature>System.Data.DataView.set_ApplyDefaultSort(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RowFilter" uniqueID="set_RowFilter(System.String):System.Void">
				<signature>System.Data.DataView.set_RowFilter(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_RowPredicate" uniqueID="set_RowPredicate(System.Predicate&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Data.DataView.set_RowPredicate(System.Predicate&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RowStateFilter" uniqueID="set_RowStateFilter(System.Data.DataViewRowState):System.Void">
				<signature>System.Data.DataView.set_RowStateFilter(System.Data.DataViewRowState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Sort" uniqueID="set_Sort(System.String):System.Void">
				<signature>System.Data.DataView.set_Sort(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SortComparison" uniqueID="set_SortComparison(System.Comparison&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Data.DataView.set_SortComparison(System.Comparison&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Table" uniqueID="set_Table(System.Data.DataTable):System.Void">
				<signature>System.Data.DataView.set_Table(System.Data.DataTable):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.IO">
		<class name="StreamReader" uniqueID="System.IO.StreamReader">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.IO.StreamReader.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_DefaultBufferSize" uniqueID="get_DefaultBufferSize():System.Int32">
				<signature>System.IO.StreamReader.get_DefaultBufferSize():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckAsyncTaskInProgress" uniqueID="CheckAsyncTaskInProgress():System.Void">
				<signature>System.IO.StreamReader.CheckAsyncTaskInProgress():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.IO.StreamReader.Close():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CompressBuffer" uniqueID="CompressBuffer(System.Int32):System.Void">
				<signature>System.IO.StreamReader.CompressBuffer(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DetectEncoding" uniqueID="DetectEncoding():System.Void">
				<signature>System.IO.StreamReader.DetectEncoding():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DiscardBufferedData" uniqueID="DiscardBufferedData():System.Void">
				<signature>System.IO.StreamReader.DiscardBufferedData():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.IO.StreamReader.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Init" uniqueID="Init(System.IO.Stream):System.Void">
				<signature>System.IO.StreamReader.Init(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Init" uniqueID="Init(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.Init(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsPreamble" uniqueID="IsPreamble():System.Boolean">
				<signature>System.IO.StreamReader.IsPreamble():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Peek" uniqueID="Peek():System.Int32">
				<signature>System.IO.StreamReader.Peek():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read():System.Int32">
				<signature>System.IO.StreamReader.Read():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.IO.StreamReader.Read(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadAsync" uniqueID="ReadAsync(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.IO.StreamReader.ReadAsync(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadAsyncInternal" uniqueID="ReadAsyncInternal(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.IO.StreamReader.ReadAsyncInternal(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadBlock" uniqueID="ReadBlock(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.IO.StreamReader.ReadBlock(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadBlockAsync" uniqueID="ReadBlockAsync(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.IO.StreamReader.ReadBlockAsync(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadBuffer" uniqueID="ReadBuffer():System.Int32">
				<signature>System.IO.StreamReader.ReadBuffer():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadBuffer" uniqueID="ReadBuffer(System.Char[];System.Int32;System.Int32;System.Boolean):System.Int32">
				<signature>System.IO.StreamReader.ReadBuffer(System.Char[];System.Int32;System.Int32;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadBufferAsync" uniqueID="ReadBufferAsync():System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.IO.StreamReader.ReadBufferAsync():System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadLine" uniqueID="ReadLine():System.String">
				<signature>System.IO.StreamReader.ReadLine():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadLineAsync" uniqueID="ReadLineAsync():System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.IO.StreamReader.ReadLineAsync():System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadLineAsyncInternal" uniqueID="ReadLineAsyncInternal():System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.IO.StreamReader.ReadLineAsyncInternal():System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadToEnd" uniqueID="ReadToEnd():System.String">
				<signature>System.IO.StreamReader.ReadToEnd():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadToEndAsync" uniqueID="ReadToEndAsync():System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.IO.StreamReader.ReadToEndAsync():System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadToEndAsyncInternal" uniqueID="ReadToEndAsyncInternal():System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.IO.StreamReader.ReadToEndAsyncInternal():System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StreamReader" uniqueID="StreamReader():System.Void">
				<signature>System.IO.StreamReader.StreamReader():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream;System.Text.Encoding):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream;System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.IO.Stream;System.Text.Encoding;System.Boolean;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.String):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.String;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.String;System.Text.Encoding):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.String;System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.String;System.Text.Encoding;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.String;System.Text.Encoding;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.String;System.Text.Encoding;System.Boolean;System.Int32):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.String;System.Text.Encoding;System.Boolean;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StreamReader" uniqueID="StreamReader(System.String;System.Text.Encoding;System.Boolean;System.Int32;System.Boolean):System.Void">
				<signature>System.IO.StreamReader.StreamReader(System.String;System.Text.Encoding;System.Boolean;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BaseStream" uniqueID="get_BaseStream():System.IO.Stream">
				<signature>System.IO.StreamReader.get_BaseStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ByteBuffer_Prop" uniqueID="get_ByteBuffer_Prop():System.Byte[]">
				<signature>System.IO.StreamReader.get_ByteBuffer_Prop():System.Byte[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ByteLen_Prop" uniqueID="get_ByteLen_Prop():System.Int32">
				<signature>System.IO.StreamReader.get_ByteLen_Prop():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_BytePos_Prop" uniqueID="get_BytePos_Prop():System.Int32">
				<signature>System.IO.StreamReader.get_BytePos_Prop():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_CharBuffer_Prop" uniqueID="get_CharBuffer_Prop():System.Char[]">
				<signature>System.IO.StreamReader.get_CharBuffer_Prop():System.Char[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_CharLen_Prop" uniqueID="get_CharLen_Prop():System.Int32">
				<signature>System.IO.StreamReader.get_CharLen_Prop():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_CharPos_Prop" uniqueID="get_CharPos_Prop():System.Int32">
				<signature>System.IO.StreamReader.get_CharPos_Prop():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_CheckPreamble_Prop" uniqueID="get_CheckPreamble_Prop():System.Boolean">
				<signature>System.IO.StreamReader.get_CheckPreamble_Prop():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentEncoding" uniqueID="get_CurrentEncoding():System.Text.Encoding">
				<signature>System.IO.StreamReader.get_CurrentEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_Decoder_Prop" uniqueID="get_Decoder_Prop():System.Text.Decoder">
				<signature>System.IO.StreamReader.get_Decoder_Prop():System.Text.Decoder</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DetectEncoding_Prop" uniqueID="get_DetectEncoding_Prop():System.Boolean">
				<signature>System.IO.StreamReader.get_DetectEncoding_Prop():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EndOfStream" uniqueID="get_EndOfStream():System.Boolean">
				<signature>System.IO.StreamReader.get_EndOfStream():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_IsBlocked_Prop" uniqueID="get_IsBlocked_Prop():System.Boolean">
				<signature>System.IO.StreamReader.get_IsBlocked_Prop():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LeaveOpen" uniqueID="get_LeaveOpen():System.Boolean">
				<signature>System.IO.StreamReader.get_LeaveOpen():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_MaxCharsPerBuffer_Prop" uniqueID="get_MaxCharsPerBuffer_Prop():System.Int32">
				<signature>System.IO.StreamReader.get_MaxCharsPerBuffer_Prop():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_Preamble_Prop" uniqueID="get_Preamble_Prop():System.Byte[]">
				<signature>System.IO.StreamReader.get_Preamble_Prop():System.Byte[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_Stream_Prop" uniqueID="get_Stream_Prop():System.IO.Stream">
				<signature>System.IO.StreamReader.get_Stream_Prop():System.IO.Stream</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_ByteLen_Prop" uniqueID="set_ByteLen_Prop(System.Int32):System.Void">
				<signature>System.IO.StreamReader.set_ByteLen_Prop(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_BytePos_Prop" uniqueID="set_BytePos_Prop(System.Int32):System.Void">
				<signature>System.IO.StreamReader.set_BytePos_Prop(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_CharLen_Prop" uniqueID="set_CharLen_Prop(System.Int32):System.Void">
				<signature>System.IO.StreamReader.set_CharLen_Prop(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_CharPos_Prop" uniqueID="set_CharPos_Prop(System.Int32):System.Void">
				<signature>System.IO.StreamReader.set_CharPos_Prop(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_IsBlocked_Prop" uniqueID="set_IsBlocked_Prop(System.Boolean):System.Void">
				<signature>System.IO.StreamReader.set_IsBlocked_Prop(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="TextReader" uniqueID="System.IO.TextReader">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__b" uniqueID="&lt;.cctor&gt;b__b(System.Object):System.String">
				<signature>System.IO.TextReader.&lt;.cctor&gt;b__b(System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__c" uniqueID="&lt;.cctor&gt;b__c(System.Object):System.Int32">
				<signature>System.IO.TextReader.&lt;.cctor&gt;b__c(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.IO.TextReader.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.IO.TextReader):System.IO.TextReader">
				<signature>System.IO.TextReader.Synchronized(System.IO.TextReader):System.IO.TextReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.IO.TextReader.Close():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.IO.TextReader.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.IO.TextReader.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Peek" uniqueID="Peek():System.Int32">
				<signature>System.IO.TextReader.Peek():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read():System.Int32">
				<signature>System.IO.TextReader.Read():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.IO.TextReader.Read(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadAsync" uniqueID="ReadAsync(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.IO.TextReader.ReadAsync(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReadAsyncInternal" uniqueID="ReadAsyncInternal(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.IO.TextReader.ReadAsyncInternal(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadBlock" uniqueID="ReadBlock(System.Char[];System.Int32;System.Int32):System.Int32">
				<signature>System.IO.TextReader.ReadBlock(System.Char[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadBlockAsync" uniqueID="ReadBlockAsync(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.IO.TextReader.ReadBlockAsync(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadBlockAsyncInternal" uniqueID="ReadBlockAsyncInternal(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.IO.TextReader.ReadBlockAsyncInternal(System.Char[];System.Int32;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadLine" uniqueID="ReadLine():System.String">
				<signature>System.IO.TextReader.ReadLine():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadLineAsync" uniqueID="ReadLineAsync():System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.IO.TextReader.ReadLineAsync():System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadToEnd" uniqueID="ReadToEnd():System.String">
				<signature>System.IO.TextReader.ReadToEnd():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadToEndAsync" uniqueID="ReadToEndAsync():System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.IO.TextReader.ReadToEndAsync():System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TextReader" uniqueID="TextReader():System.Void">
				<signature>System.IO.TextReader.TextReader():System.Void</signature>
			</method>
		</class>
	</package>
	<package name="Microsoft.Win32">
		<class name="NativeMethods+NtModuleInfo" uniqueID="Microsoft.Win32.NativeMethods+NtModuleInfo">
			<method accessibility="Public" methodKind="Member" name="NativeMethods+NtModuleInfo" uniqueID="NativeMethods+NtModuleInfo():System.Void">
				<signature>Microsoft.Win32.NativeMethods+NtModuleInfo.NativeMethods+NtModuleInfo():System.Void</signature>
			</method>
		</class>
		<class name="Win32Native" uniqueID="Microsoft.Win32.Win32Native">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>Microsoft.Win32.Win32Native.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AdjustTokenPrivileges" uniqueID="AdjustTokenPrivileges(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Boolean;Microsoft.Win32.Win32Native+TOKEN_PRIVILEGE;System.UInt32;Microsoft.Win32.Win32Native+TOKEN_PRIVILEGE;System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.AdjustTokenPrivileges(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Boolean;Microsoft.Win32.Win32Native+TOKEN_PRIVILEGE;System.UInt32;Microsoft.Win32.Win32Native+TOKEN_PRIVILEGE;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AllocateLocallyUniqueId" uniqueID="AllocateLocallyUniqueId(Microsoft.Win32.Win32Native+LUID):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.AllocateLocallyUniqueId(Microsoft.Win32.Win32Native+LUID):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="BCryptGetFipsAlgorithmMode" uniqueID="BCryptGetFipsAlgorithmMode(System.Boolean):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.BCryptGetFipsAlgorithmMode(System.Boolean):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Beep" uniqueID="Beep(System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.Beep(System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CancelIoEx" uniqueID="CancelIoEx(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Threading.NativeOverlapped):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.CancelIoEx(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Threading.NativeOverlapped):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CheckTokenMembership" uniqueID="CheckTokenMembership(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Byte[];System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.CheckTokenMembership(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Byte[];System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CloseHandle" uniqueID="CloseHandle(System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.CloseHandle(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CoCreateGuid" uniqueID="CoCreateGuid(System.Guid):System.Int32">
				<signature>Microsoft.Win32.Win32Native.CoCreateGuid(System.Guid):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CoTaskMemAlloc" uniqueID="CoTaskMemAlloc(System.UIntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.CoTaskMemAlloc(System.UIntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CoTaskMemFree" uniqueID="CoTaskMemFree(System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native.CoTaskMemFree(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CoTaskMemRealloc" uniqueID="CoTaskMemRealloc(System.IntPtr;System.UIntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.CoTaskMemRealloc(System.IntPtr;System.UIntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ConvertSdToStringSd" uniqueID="ConvertSdToStringSd(System.Byte[];System.UInt32;System.UInt32;System.IntPtr;System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ConvertSdToStringSd(System.Byte[];System.UInt32;System.UInt32;System.IntPtr;System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ConvertSidToStringSid" uniqueID="ConvertSidToStringSid(System.IntPtr;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ConvertSidToStringSid(System.IntPtr;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ConvertStringSdToSd" uniqueID="ConvertStringSdToSd(System.String;System.UInt32;System.IntPtr;System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ConvertStringSdToSd(System.String;System.UInt32;System.IntPtr;System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ConvertStringSidToSid" uniqueID="ConvertStringSidToSid(System.String;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ConvertStringSidToSid(System.String;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CopyFile" uniqueID="CopyFile(System.String;System.String;System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.CopyFile(System.String;System.String;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateAssemblyEnum" uniqueID="CreateAssemblyEnum(Microsoft.Win32.IAssemblyEnum;Microsoft.Win32.IApplicationContext;Microsoft.Win32.IAssemblyName;System.UInt32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.CreateAssemblyEnum(Microsoft.Win32.IAssemblyEnum;Microsoft.Win32.IApplicationContext;Microsoft.Win32.IAssemblyName;System.UInt32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateAssemblyNameObject" uniqueID="CreateAssemblyNameObject(Microsoft.Win32.IAssemblyName;System.String;System.UInt32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.CreateAssemblyNameObject(Microsoft.Win32.IAssemblyName;System.String;System.UInt32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateDirectory" uniqueID="CreateDirectory(System.String;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.CreateDirectory(System.String;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateEvent" uniqueID="CreateEvent(Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.Boolean;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle">
				<signature>Microsoft.Win32.Win32Native.CreateEvent(Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.Boolean;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateFile" uniqueID="CreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle">
				<signature>Microsoft.Win32.Win32Native.CreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateFileMapping" uniqueID="CreateFileMapping(Microsoft.Win32.SafeHandles.SafeFileHandle;System.IntPtr;System.UInt32;System.UInt32;System.UInt32;System.String):Microsoft.Win32.SafeHandles.SafeFileMappingHandle">
				<signature>Microsoft.Win32.Win32Native.CreateFileMapping(Microsoft.Win32.SafeHandles.SafeFileHandle;System.IntPtr;System.UInt32;System.UInt32;System.UInt32;System.String):Microsoft.Win32.SafeHandles.SafeFileMappingHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateMutex" uniqueID="CreateMutex(Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle">
				<signature>Microsoft.Win32.Win32Native.CreateMutex(Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateSemaphore" uniqueID="CreateSemaphore(Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.Int32;System.Int32;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle">
				<signature>Microsoft.Win32.Win32Native.CreateSemaphore(Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.Int32;System.Int32;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateWellKnownSid" uniqueID="CreateWellKnownSid(System.Int32;System.Byte[];System.Byte[];System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.CreateWellKnownSid(System.Int32;System.Byte[];System.Byte[];System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DecryptFile" uniqueID="DecryptFile(System.String;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DecryptFile(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DeleteFile" uniqueID="DeleteFile(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DeleteFile(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DeleteVolumeMountPoint" uniqueID="DeleteVolumeMountPoint(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DeleteVolumeMountPoint(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DoesWin32MethodExist" uniqueID="DoesWin32MethodExist(System.String;System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DoesWin32MethodExist(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DuplicateHandle" uniqueID="DuplicateHandle(System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.Boolean;System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DuplicateHandle(System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.Boolean;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DuplicateHandle" uniqueID="DuplicateHandle(System.IntPtr;System.IntPtr;System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.Boolean;System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DuplicateHandle(System.IntPtr;System.IntPtr;System.IntPtr;Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.Boolean;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DuplicateTokenEx" uniqueID="DuplicateTokenEx(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Security.Principal.TokenAccessLevels;System.IntPtr;Microsoft.Win32.Win32Native+SECURITY_IMPERSONATION_LEVEL;System.Security.Principal.TokenType;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DuplicateTokenEx(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.Security.Principal.TokenAccessLevels;System.IntPtr;Microsoft.Win32.Win32Native+SECURITY_IMPERSONATION_LEVEL;System.Security.Principal.TokenType;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DuplicateTokenEx" uniqueID="DuplicateTokenEx(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.IntPtr;System.UInt32;System.UInt32;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.DuplicateTokenEx(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;System.IntPtr;System.UInt32;System.UInt32;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EncryptFile" uniqueID="EncryptFile(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.EncryptFile(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ExpandEnvironmentStrings" uniqueID="ExpandEnvironmentStrings(System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ExpandEnvironmentStrings(System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FillConsoleOutputAttribute" uniqueID="FillConsoleOutputAttribute(System.IntPtr;System.Int16;System.Int32;Microsoft.Win32.Win32Native+COORD;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.FillConsoleOutputAttribute(System.IntPtr;System.Int16;System.Int32;Microsoft.Win32.Win32Native+COORD;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FillConsoleOutputCharacter" uniqueID="FillConsoleOutputCharacter(System.IntPtr;System.Char;System.Int32;Microsoft.Win32.Win32Native+COORD;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.FillConsoleOutputCharacter(System.IntPtr;System.Char;System.Int32;Microsoft.Win32.Win32Native+COORD;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FindClose" uniqueID="FindClose(System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.FindClose(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FindFirstFile" uniqueID="FindFirstFile(System.String;Microsoft.Win32.Win32Native+WIN32_FIND_DATA):Microsoft.Win32.SafeHandles.SafeFindHandle">
				<signature>Microsoft.Win32.Win32Native.FindFirstFile(System.String;Microsoft.Win32.Win32Native+WIN32_FIND_DATA):Microsoft.Win32.SafeHandles.SafeFindHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FindNextFile" uniqueID="FindNextFile(Microsoft.Win32.SafeHandles.SafeFindHandle;Microsoft.Win32.Win32Native+WIN32_FIND_DATA):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.FindNextFile(Microsoft.Win32.SafeHandles.SafeFindHandle;Microsoft.Win32.Win32Native+WIN32_FIND_DATA):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FlushFileBuffers" uniqueID="FlushFileBuffers(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.FlushFileBuffers(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FormatMessage" uniqueID="FormatMessage(System.Int32;System.IntPtr;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.FormatMessage(System.Int32;System.IntPtr;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FreeEnvironmentStrings" uniqueID="FreeEnvironmentStrings(System.Char):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.FreeEnvironmentStrings(System.Char):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetACP" uniqueID="GetACP():System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetACP():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetComputerName" uniqueID="GetComputerName(System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetComputerName(System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetConsoleCP" uniqueID="GetConsoleCP():System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetConsoleCP():System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetConsoleCursorInfo" uniqueID="GetConsoleCursorInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_CURSOR_INFO):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetConsoleCursorInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_CURSOR_INFO):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetConsoleMode" uniqueID="GetConsoleMode(System.IntPtr;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetConsoleMode(System.IntPtr;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetConsoleOutputCP" uniqueID="GetConsoleOutputCP():System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetConsoleOutputCP():System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetConsoleScreenBufferInfo" uniqueID="GetConsoleScreenBufferInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetConsoleScreenBufferInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCurrentDirectory" uniqueID="GetCurrentDirectory(System.Int32;System.Text.StringBuilder):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetCurrentDirectory(System.Int32;System.Text.StringBuilder):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCurrentProcess" uniqueID="GetCurrentProcess():System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.GetCurrentProcess():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCurrentProcessId" uniqueID="GetCurrentProcessId():System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetCurrentProcessId():System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetCurrentThread" uniqueID="GetCurrentThread():System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.GetCurrentThread():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetDiskFreeSpaceEx" uniqueID="GetDiskFreeSpaceEx(System.String;System.Int64;System.Int64;System.Int64):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetDiskFreeSpaceEx(System.String;System.Int64;System.Int64;System.Int64):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetDriveType" uniqueID="GetDriveType(System.String):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetDriveType(System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetEnvironmentStrings" uniqueID="GetEnvironmentStrings():System.Char">
				<signature>Microsoft.Win32.Win32Native.GetEnvironmentStrings():System.Char</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetEnvironmentVariable" uniqueID="GetEnvironmentVariable(System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetEnvironmentVariable(System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFileAttributesEx" uniqueID="GetFileAttributesEx(System.String;System.Int32;Microsoft.Win32.Win32Native+WIN32_FILE_ATTRIBUTE_DATA):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetFileAttributesEx(System.String;System.Int32;Microsoft.Win32.Win32Native+WIN32_FILE_ATTRIBUTE_DATA):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFileSize" uniqueID="GetFileSize(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetFileSize(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFileType" uniqueID="GetFileType(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetFileType(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFullPathName" uniqueID="GetFullPathName(System.Char;System.Int32;System.Char;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetFullPathName(System.Char;System.Int32;System.Char;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetFullPathName" uniqueID="GetFullPathName(System.String;System.Int32;System.Text.StringBuilder;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetFullPathName(System.String;System.Int32;System.Text.StringBuilder;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetKeyState" uniqueID="GetKeyState(System.Int32):System.Int16">
				<signature>Microsoft.Win32.Win32Native.GetKeyState(System.Int32):System.Int16</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLargestConsoleWindowSize" uniqueID="GetLargestConsoleWindowSize(System.IntPtr):Microsoft.Win32.Win32Native+COORD">
				<signature>Microsoft.Win32.Win32Native.GetLargestConsoleWindowSize(System.IntPtr):Microsoft.Win32.Win32Native+COORD</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLogicalDrives" uniqueID="GetLogicalDrives():System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetLogicalDrives():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLongPathName" uniqueID="GetLongPathName(System.Char;System.Char;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetLongPathName(System.Char;System.Char;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLongPathName" uniqueID="GetLongPathName(System.String;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetLongPathName(System.String;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetMessage" uniqueID="GetMessage(System.Int32):System.String">
				<signature>Microsoft.Win32.Win32Native.GetMessage(System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetModuleHandle" uniqueID="GetModuleHandle(System.String):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.GetModuleHandle(System.String):System.IntPtr</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetProcAddress" uniqueID="GetProcAddress(System.IntPtr;System.String):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.GetProcAddress(System.IntPtr;System.String):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetProcessWindowStation" uniqueID="GetProcessWindowStation():System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.GetProcessWindowStation():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSecurityDescriptorLength" uniqueID="GetSecurityDescriptorLength(System.IntPtr):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetSecurityDescriptorLength(System.IntPtr):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSecurityInfoByHandle" uniqueID="GetSecurityInfoByHandle(System.Runtime.InteropServices.SafeHandle;System.UInt32;System.UInt32;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetSecurityInfoByHandle(System.Runtime.InteropServices.SafeHandle;System.UInt32;System.UInt32;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSecurityInfoByName" uniqueID="GetSecurityInfoByName(System.String;System.UInt32;System.UInt32;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetSecurityInfoByName(System.String;System.UInt32;System.UInt32;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetStdHandle" uniqueID="GetStdHandle(System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.GetStdHandle(System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSystemDirectory" uniqueID="GetSystemDirectory(System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetSystemDirectory(System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetSystemInfo" uniqueID="GetSystemInfo(Microsoft.Win32.Win32Native+SYSTEM_INFO):System.Void">
				<signature>Microsoft.Win32.Win32Native.GetSystemInfo(Microsoft.Win32.Win32Native+SYSTEM_INFO):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTempFileName" uniqueID="GetTempFileName(System.String;System.String;System.UInt32;System.Text.StringBuilder):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetTempFileName(System.String;System.String;System.UInt32;System.Text.StringBuilder):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTempPath" uniqueID="GetTempPath(System.Int32;System.Text.StringBuilder):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.GetTempPath(System.Int32;System.Text.StringBuilder):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTokenInformation" uniqueID="GetTokenInformation(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;Microsoft.Win32.SafeHandles.SafeLocalAllocHandle;System.UInt32;System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetTokenInformation(Microsoft.Win32.SafeHandles.SafeTokenHandle;System.UInt32;Microsoft.Win32.SafeHandles.SafeLocalAllocHandle;System.UInt32;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTokenInformation" uniqueID="GetTokenInformation(System.IntPtr;System.UInt32;Microsoft.Win32.SafeHandles.SafeLocalAllocHandle;System.UInt32;System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetTokenInformation(System.IntPtr;System.UInt32;Microsoft.Win32.SafeHandles.SafeLocalAllocHandle;System.UInt32;System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetUserName" uniqueID="GetUserName(System.Text.StringBuilder;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetUserName(System.Text.StringBuilder;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetUserNameEx" uniqueID="GetUserNameEx(System.Int32;System.Text.StringBuilder;System.UInt32):System.Byte">
				<signature>Microsoft.Win32.Win32Native.GetUserNameEx(System.Int32;System.Text.StringBuilder;System.UInt32):System.Byte</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetUserObjectInformation" uniqueID="GetUserObjectInformation(System.IntPtr;System.Int32;Microsoft.Win32.Win32Native+USEROBJECTFLAGS;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetUserObjectInformation(System.IntPtr;System.Int32;Microsoft.Win32.Win32Native+USEROBJECTFLAGS;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetVolumeInformation" uniqueID="GetVolumeInformation(System.String;System.Text.StringBuilder;System.Int32;System.Int32;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GetVolumeInformation(System.String;System.Text.StringBuilder;System.Int32;System.Int32;System.Int32;System.Int32;System.Text.StringBuilder;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetWindowsAccountDomainSid" uniqueID="GetWindowsAccountDomainSid(System.Byte[];System.Byte[];System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetWindowsAccountDomainSid(System.Byte[];System.Byte[];System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetWindowsDirectory" uniqueID="GetWindowsDirectory(System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.GetWindowsDirectory(System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GlobalMemoryStatusEx" uniqueID="GlobalMemoryStatusEx(Microsoft.Win32.Win32Native+MEMORYSTATUSEX):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.GlobalMemoryStatusEx(Microsoft.Win32.Win32Native+MEMORYSTATUSEX):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsEqualDomainSid" uniqueID="IsEqualDomainSid(System.Byte[];System.Byte[];System.Boolean):System.Int32">
				<signature>Microsoft.Win32.Win32Native.IsEqualDomainSid(System.Byte[];System.Byte[];System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsWellKnownSid" uniqueID="IsWellKnownSid(System.Byte[];System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.IsWellKnownSid(System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsWow64Process" uniqueID="IsWow64Process(System.IntPtr;System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.IsWow64Process(System.IntPtr;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LocalAlloc" uniqueID="LocalAlloc(System.Int32;System.UIntPtr):Microsoft.Win32.SafeHandles.SafeLocalAllocHandle">
				<signature>Microsoft.Win32.Win32Native.LocalAlloc(System.Int32;System.UIntPtr):Microsoft.Win32.SafeHandles.SafeLocalAllocHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LocalAlloc_NoSafeHandle" uniqueID="LocalAlloc_NoSafeHandle(System.Int32;System.UIntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.LocalAlloc_NoSafeHandle(System.Int32;System.UIntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LocalFree" uniqueID="LocalFree(System.IntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.LocalFree(System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LocalReAlloc" uniqueID="LocalReAlloc(System.IntPtr;System.IntPtr;System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.LocalReAlloc(System.IntPtr;System.IntPtr;System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LockFile" uniqueID="LockFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.LockFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LookupAccountName" uniqueID="LookupAccountName(System.String;System.String;System.Byte[];System.Int32;System.Text.StringBuilder;System.UInt32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.LookupAccountName(System.String;System.String;System.Byte[];System.Int32;System.Text.StringBuilder;System.UInt32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LookupPrivilegeValue" uniqueID="LookupPrivilegeValue(System.String;System.String;Microsoft.Win32.Win32Native+LUID):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.LookupPrivilegeValue(System.String;System.String;Microsoft.Win32.Win32Native+LUID):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaClose" uniqueID="LsaClose(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaClose(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaConnectUntrusted" uniqueID="LsaConnectUntrusted(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaConnectUntrusted(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaDeregisterLogonProcess" uniqueID="LsaDeregisterLogonProcess(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaDeregisterLogonProcess(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaFreeMemory" uniqueID="LsaFreeMemory(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaFreeMemory(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaFreeReturnBuffer" uniqueID="LsaFreeReturnBuffer(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaFreeReturnBuffer(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaGetLogonSessionData" uniqueID="LsaGetLogonSessionData(Microsoft.Win32.Win32Native+LUID;Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaGetLogonSessionData(Microsoft.Win32.Win32Native+LUID;Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaLogonUser" uniqueID="LsaLogonUser(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;System.UInt32;System.UInt32;System.IntPtr;System.UInt32;System.IntPtr;Microsoft.Win32.Win32Native+TOKEN_SOURCE;Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle;System.UInt32;Microsoft.Win32.Win32Native+LUID;Microsoft.Win32.SafeHandles.SafeTokenHandle;Microsoft.Win32.Win32Native+QUOTA_LIMITS;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaLogonUser(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;System.UInt32;System.UInt32;System.IntPtr;System.UInt32;System.IntPtr;Microsoft.Win32.Win32Native+TOKEN_SOURCE;Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle;System.UInt32;Microsoft.Win32.Win32Native+LUID;Microsoft.Win32.SafeHandles.SafeTokenHandle;Microsoft.Win32.Win32Native+QUOTA_LIMITS;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaLookupAuthenticationPackage" uniqueID="LsaLookupAuthenticationPackage(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaLookupAuthenticationPackage(Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaLookupNames" uniqueID="LsaLookupNames(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;Microsoft.Win32.Win32Native+UNICODE_STRING[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.LsaLookupNames(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;Microsoft.Win32.Win32Native+UNICODE_STRING[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaLookupNames2" uniqueID="LsaLookupNames2(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;System.Int32;Microsoft.Win32.Win32Native+UNICODE_STRING[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.LsaLookupNames2(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;System.Int32;Microsoft.Win32.Win32Native+UNICODE_STRING[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaLookupSids" uniqueID="LsaLookupSids(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;System.IntPtr[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.LsaLookupSids(Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle;System.Int32;System.IntPtr[];Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle;Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaNtStatusToWinError" uniqueID="LsaNtStatusToWinError(System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaNtStatusToWinError(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaOpenPolicy" uniqueID="LsaOpenPolicy(System.String;Microsoft.Win32.Win32Native+LSA_OBJECT_ATTRIBUTES;System.Int32;Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.LsaOpenPolicy(System.String;Microsoft.Win32.Win32Native+LSA_OBJECT_ATTRIBUTES;System.Int32;Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="LsaRegisterLogonProcess" uniqueID="LsaRegisterLogonProcess(Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.LsaRegisterLogonProcess(Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING;Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="MakeHRFromErrorCode" uniqueID="MakeHRFromErrorCode(System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.MakeHRFromErrorCode(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="MapViewOfFile" uniqueID="MapViewOfFile(Microsoft.Win32.SafeHandles.SafeFileMappingHandle;System.UInt32;System.UInt32;System.UInt32;System.UIntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.MapViewOfFile(Microsoft.Win32.SafeHandles.SafeFileMappingHandle;System.UInt32;System.UInt32;System.UInt32;System.UIntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="MoveFile" uniqueID="MoveFile(System.String;System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.MoveFile(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="OpenEvent" uniqueID="OpenEvent(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle">
				<signature>Microsoft.Win32.Win32Native.OpenEvent(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="OpenMutex" uniqueID="OpenMutex(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle">
				<signature>Microsoft.Win32.Win32Native.OpenMutex(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="OpenProcessToken" uniqueID="OpenProcessToken(System.IntPtr;System.Security.Principal.TokenAccessLevels;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.OpenProcessToken(System.IntPtr;System.Security.Principal.TokenAccessLevels;Microsoft.Win32.SafeHandles.SafeTokenHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="PeekConsoleInput" uniqueID="PeekConsoleInput(System.IntPtr;Microsoft.Win32.Win32Native+InputRecord;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.PeekConsoleInput(System.IntPtr;Microsoft.Win32.Win32Native+InputRecord;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="QueryPerformanceCounter" uniqueID="QueryPerformanceCounter(System.Int64):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.QueryPerformanceCounter(System.Int64):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="QueryPerformanceFrequency" uniqueID="QueryPerformanceFrequency(System.Int64):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.QueryPerformanceFrequency(System.Int64):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="QueryUnbiasedInterruptTime" uniqueID="QueryUnbiasedInterruptTime(System.UInt64):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.QueryUnbiasedInterruptTime(System.UInt64):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReadConsoleInput" uniqueID="ReadConsoleInput(System.IntPtr;Microsoft.Win32.Win32Native+InputRecord;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ReadConsoleInput(System.IntPtr;Microsoft.Win32.Win32Native+InputRecord;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReadConsoleOutput" uniqueID="ReadConsoleOutput(System.IntPtr;Microsoft.Win32.Win32Native+CHAR_INFO;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ReadConsoleOutput(System.IntPtr;Microsoft.Win32.Win32Native+CHAR_INFO;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReadConsoleW" uniqueID="ReadConsoleW(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ReadConsoleW(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReadFile" uniqueID="ReadFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ReadFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReadFile" uniqueID="ReadFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.IntPtr;System.Threading.NativeOverlapped):System.Int32">
				<signature>Microsoft.Win32.Win32Native.ReadFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.IntPtr;System.Threading.NativeOverlapped):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegConnectRegistry" uniqueID="RegConnectRegistry(System.String;Microsoft.Win32.SafeHandles.SafeRegistryHandle;Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegConnectRegistry(System.String;Microsoft.Win32.SafeHandles.SafeRegistryHandle;Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegCreateKeyEx" uniqueID="RegCreateKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;System.String;System.Int32;System.Int32;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegCreateKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;System.String;System.Int32;System.Int32;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegDeleteKey" uniqueID="RegDeleteKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegDeleteKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegDeleteKeyEx" uniqueID="RegDeleteKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegDeleteKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegDeleteValue" uniqueID="RegDeleteValue(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegDeleteValue(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegEnumKeyEx" uniqueID="RegEnumKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32;System.Char;System.Int32;System.Int32[];System.Text.StringBuilder;System.Int32[];System.Int64[]):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegEnumKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32;System.Char;System.Int32;System.Int32[];System.Text.StringBuilder;System.Int32[];System.Int64[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegEnumValue" uniqueID="RegEnumValue(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32;System.Char;System.Int32;System.IntPtr;System.Int32[];System.Byte[];System.Int32[]):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegEnumValue(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Int32;System.Char;System.Int32;System.IntPtr;System.Int32[];System.Byte[];System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegFlushKey" uniqueID="RegFlushKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegFlushKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegOpenKeyEx" uniqueID="RegOpenKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;System.Int32;Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegOpenKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;System.Int32;Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegOpenKeyEx" uniqueID="RegOpenKeyEx(System.IntPtr;System.String;System.Int32;System.Int32;Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegOpenKeyEx(System.IntPtr;System.String;System.Int32;System.Int32;Microsoft.Win32.SafeHandles.SafeRegistryHandle):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryInfoKey" uniqueID="RegQueryInfoKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Text.StringBuilder;System.Int32[];System.IntPtr;System.Int32;System.Int32[];System.Int32[];System.Int32;System.Int32[];System.Int32[];System.Int32[];System.Int32[]):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryInfoKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.Text.StringBuilder;System.Int32[];System.IntPtr;System.Int32;System.Int32[];System.Int32[];System.Int32;System.Int32[];System.Int32[];System.Int32[];System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryValueEx" uniqueID="RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Byte[];System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryValueEx" uniqueID="RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Char[];System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Char[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryValueEx" uniqueID="RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Int32;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryValueEx" uniqueID="RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Int64;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Int64;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegQueryValueEx" uniqueID="RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegQueryValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32[];System.Int32;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegSetValueEx" uniqueID="RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Byte[];System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegSetValueEx" uniqueID="RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Int32;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegSetValueEx" uniqueID="RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Int64;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.Int64;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RegSetValueEx" uniqueID="RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.String;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.RegSetValueEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle;System.String;System.Int32;Microsoft.Win32.RegistryValueKind;System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReleaseMutex" uniqueID="ReleaseMutex(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ReleaseMutex(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReleaseSemaphore" uniqueID="ReleaseSemaphore(Microsoft.Win32.SafeHandles.SafeWaitHandle;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ReleaseSemaphore(Microsoft.Win32.SafeHandles.SafeWaitHandle;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RemoveDirectory" uniqueID="RemoveDirectory(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.RemoveDirectory(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReplaceFile" uniqueID="ReplaceFile(System.String;System.String;System.String;System.Int32;System.IntPtr;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ReplaceFile(System.String;System.String;System.String;System.Int32;System.IntPtr;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ResetEvent" uniqueID="ResetEvent(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.ResetEvent(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SHGetFolderPath" uniqueID="SHGetFolderPath(System.IntPtr;System.Int32;System.IntPtr;System.Int32;System.Text.StringBuilder):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SHGetFolderPath(System.IntPtr;System.Int32;System.IntPtr;System.Int32;System.Text.StringBuilder):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SafeCreateFile" uniqueID="SafeCreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle">
				<signature>Microsoft.Win32.Win32Native.SafeCreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SendMessageTimeout" uniqueID="SendMessageTimeout(System.IntPtr;System.Int32;System.IntPtr;System.String;System.UInt32;System.UInt32;System.IntPtr):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.SendMessageTimeout(System.IntPtr;System.Int32;System.IntPtr;System.String;System.UInt32;System.UInt32;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleCP" uniqueID="SetConsoleCP(System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleCP(System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleCtrlHandler" uniqueID="SetConsoleCtrlHandler(Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine;System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleCtrlHandler(Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleCursorInfo" uniqueID="SetConsoleCursorInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_CURSOR_INFO):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleCursorInfo(System.IntPtr;Microsoft.Win32.Win32Native+CONSOLE_CURSOR_INFO):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleCursorPosition" uniqueID="SetConsoleCursorPosition(System.IntPtr;Microsoft.Win32.Win32Native+COORD):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleCursorPosition(System.IntPtr;Microsoft.Win32.Win32Native+COORD):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleMode" uniqueID="SetConsoleMode(System.IntPtr;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleMode(System.IntPtr;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleOutputCP" uniqueID="SetConsoleOutputCP(System.UInt32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleOutputCP(System.UInt32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleScreenBufferSize" uniqueID="SetConsoleScreenBufferSize(System.IntPtr;Microsoft.Win32.Win32Native+COORD):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleScreenBufferSize(System.IntPtr;Microsoft.Win32.Win32Native+COORD):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleTextAttribute" uniqueID="SetConsoleTextAttribute(System.IntPtr;System.Int16):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleTextAttribute(System.IntPtr;System.Int16):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleTitle" uniqueID="SetConsoleTitle(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleTitle(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConsoleWindowInfo" uniqueID="SetConsoleWindowInfo(System.IntPtr;System.Boolean;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetConsoleWindowInfo(System.IntPtr;System.Boolean;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetCurrentDirectory" uniqueID="SetCurrentDirectory(System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetCurrentDirectory(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetEndOfFile" uniqueID="SetEndOfFile(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetEndOfFile(Microsoft.Win32.SafeHandles.SafeFileHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetEnvironmentVariable" uniqueID="SetEnvironmentVariable(System.String;System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetEnvironmentVariable(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetErrorMode" uniqueID="SetErrorMode(System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SetErrorMode(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="SetErrorMode_VistaAndOlder" uniqueID="SetErrorMode_VistaAndOlder(System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SetErrorMode_VistaAndOlder(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="SetErrorMode_Win7AndNewer" uniqueID="SetErrorMode_Win7AndNewer(System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetErrorMode_Win7AndNewer(System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetEvent" uniqueID="SetEvent(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetEvent(Microsoft.Win32.SafeHandles.SafeWaitHandle):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetFileAttributes" uniqueID="SetFileAttributes(System.String;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetFileAttributes(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetFilePointer" uniqueID="SetFilePointer(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int64;System.IO.SeekOrigin;System.Int32):System.Int64">
				<signature>Microsoft.Win32.Win32Native.SetFilePointer(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int64;System.IO.SeekOrigin;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="SetFilePointerWin32" uniqueID="SetFilePointerWin32(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SetFilePointerWin32(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetFileTime" uniqueID="SetFileTime(Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.Win32Native+FILE_TIME;Microsoft.Win32.Win32Native+FILE_TIME;Microsoft.Win32.Win32Native+FILE_TIME):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetFileTime(Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.Win32Native+FILE_TIME;Microsoft.Win32.Win32Native+FILE_TIME;Microsoft.Win32.Win32Native+FILE_TIME):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetSecurityInfoByHandle" uniqueID="SetSecurityInfoByHandle(System.Runtime.InteropServices.SafeHandle;System.UInt32;System.UInt32;System.Byte[];System.Byte[];System.Byte[];System.Byte[]):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.SetSecurityInfoByHandle(System.Runtime.InteropServices.SafeHandle;System.UInt32;System.UInt32;System.Byte[];System.Byte[];System.Byte[];System.Byte[]):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetSecurityInfoByName" uniqueID="SetSecurityInfoByName(System.String;System.UInt32;System.UInt32;System.Byte[];System.Byte[];System.Byte[];System.Byte[]):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.SetSecurityInfoByName(System.String;System.UInt32;System.UInt32;System.Byte[];System.Byte[];System.Byte[];System.Byte[]):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetVolumeLabel" uniqueID="SetVolumeLabel(System.String;System.String):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.SetVolumeLabel(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SysAllocStringByteLen" uniqueID="SysAllocStringByteLen(System.Byte[];System.UInt32):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.SysAllocStringByteLen(System.Byte[];System.UInt32):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SysAllocStringLen" uniqueID="SysAllocStringLen(System.String;System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.Win32Native.SysAllocStringLen(System.String;System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SysFreeString" uniqueID="SysFreeString(System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native.SysFreeString(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SysStringByteLen" uniqueID="SysStringByteLen(System.IntPtr):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.SysStringByteLen(System.IntPtr):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SysStringLen" uniqueID="SysStringLen(System.IntPtr):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.SysStringLen(System.IntPtr):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SysStringLen" uniqueID="SysStringLen(System.Security.SafeBSTRHandle):System.UInt32">
				<signature>Microsoft.Win32.Win32Native.SysStringLen(System.Security.SafeBSTRHandle):System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SystemFunction040" uniqueID="SystemFunction040(System.Security.SafeBSTRHandle;System.UInt32;System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SystemFunction040(System.Security.SafeBSTRHandle;System.UInt32;System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SystemFunction041" uniqueID="SystemFunction041(System.Security.SafeBSTRHandle;System.UInt32;System.UInt32):System.Int32">
				<signature>Microsoft.Win32.Win32Native.SystemFunction041(System.Security.SafeBSTRHandle;System.UInt32;System.UInt32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnlockFile" uniqueID="UnlockFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.UnlockFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Int32;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnmapViewOfFile" uniqueID="UnmapViewOfFile(System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.UnmapViewOfFile(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="UnsafeCreateFile" uniqueID="UnsafeCreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle">
				<signature>Microsoft.Win32.Win32Native.UnsafeCreateFile(System.String;System.Int32;System.IO.FileShare;Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES;System.IO.FileMode;System.Int32;System.IntPtr):Microsoft.Win32.SafeHandles.SafeFileHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="VirtualAlloc" uniqueID="VirtualAlloc(System.Void;System.UIntPtr;System.Int32;System.Int32):System.Void">
				<signature>Microsoft.Win32.Win32Native.VirtualAlloc(System.Void;System.UIntPtr;System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="VirtualFree" uniqueID="VirtualFree(System.Void;System.UIntPtr;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.VirtualFree(System.Void;System.UIntPtr;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="VirtualQuery" uniqueID="VirtualQuery(System.Void;Microsoft.Win32.Win32Native+MEMORY_BASIC_INFORMATION;System.UIntPtr):System.UIntPtr">
				<signature>Microsoft.Win32.Win32Native.VirtualQuery(System.Void;Microsoft.Win32.Win32Native+MEMORY_BASIC_INFORMATION;System.UIntPtr):System.UIntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="WideCharToMultiByte" uniqueID="WideCharToMultiByte(System.UInt32;System.UInt32;System.Char;System.Int32;System.Byte;System.Int32;System.IntPtr;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.WideCharToMultiByte(System.UInt32;System.UInt32;System.Char;System.Int32;System.Byte;System.Int32;System.IntPtr;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="WriteConsoleOutput" uniqueID="WriteConsoleOutput(System.IntPtr;Microsoft.Win32.Win32Native+CHAR_INFO;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.WriteConsoleOutput(System.IntPtr;Microsoft.Win32.Win32Native+CHAR_INFO;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+COORD;Microsoft.Win32.Win32Native+SMALL_RECT):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="WriteConsoleW" uniqueID="WriteConsoleW(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.Win32Native.WriteConsoleW(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="WriteFile" uniqueID="WriteFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.WriteFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.Int32;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="WriteFile" uniqueID="WriteFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.IntPtr;System.Threading.NativeOverlapped):System.Int32">
				<signature>Microsoft.Win32.Win32Native.WriteFile(Microsoft.Win32.SafeHandles.SafeFileHandle;System.Byte;System.Int32;System.IntPtr;System.Threading.NativeOverlapped):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ZeroMemory" uniqueID="ZeroMemory(System.IntPtr;System.UIntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native.ZeroMemory(System.IntPtr;System.UIntPtr):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="lstrlenA" uniqueID="lstrlenA(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.lstrlenA(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="lstrlenW" uniqueID="lstrlenW(System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.Win32Native.lstrlenW(System.IntPtr):System.Int32</signature>
			</method>
		</class>
		<class name="Win32Native+SECURITY_ATTRIBUTES" uniqueID="Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES">
			<method accessibility="Public" methodKind="Member" name="Win32Native+SECURITY_ATTRIBUTES" uniqueID="Win32Native+SECURITY_ATTRIBUTES():System.Void">
				<signature>Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES.Win32Native+SECURITY_ATTRIBUTES():System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+USEROBJECTFLAGS" uniqueID="Microsoft.Win32.Win32Native+USEROBJECTFLAGS">
			<method accessibility="Public" methodKind="Member" name="Win32Native+USEROBJECTFLAGS" uniqueID="Win32Native+USEROBJECTFLAGS():System.Void">
				<signature>Microsoft.Win32.Win32Native+USEROBJECTFLAGS.Win32Native+USEROBJECTFLAGS():System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+ConsoleCtrlHandlerRoutine" uniqueID="Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine.BeginInvoke(System.Int32;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Int32):System.Boolean">
				<signature>Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine.Invoke(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Win32Native+ConsoleCtrlHandlerRoutine" uniqueID="Win32Native+ConsoleCtrlHandlerRoutine(System.Object;System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native+ConsoleCtrlHandlerRoutine.Win32Native+ConsoleCtrlHandlerRoutine(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+UNICODE_INTPTR_STRING" uniqueID="Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING">
			<method accessibility="Protected" methodKind="Member" name="Win32Native+UNICODE_INTPTR_STRING" uniqueID="Win32Native+UNICODE_INTPTR_STRING(System.Int32;Microsoft.Win32.SafeHandles.SafeLocalAllocHandle):System.Void">
				<signature>Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING.Win32Native+UNICODE_INTPTR_STRING(System.Int32;Microsoft.Win32.SafeHandles.SafeLocalAllocHandle):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Win32Native+UNICODE_INTPTR_STRING" uniqueID="Win32Native+UNICODE_INTPTR_STRING(System.Int32;System.IntPtr):System.Void">
				<signature>Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING.Win32Native+UNICODE_INTPTR_STRING(System.Int32;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+FILE_TIME" uniqueID="Microsoft.Win32.Win32Native+FILE_TIME">
			<method accessibility="Public" methodKind="Member" name="ToTicks" uniqueID="ToTicks():System.Int64">
				<signature>Microsoft.Win32.Win32Native+FILE_TIME.ToTicks():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Win32Native+FILE_TIME" uniqueID="Win32Native+FILE_TIME(System.Int64):System.Void">
				<signature>Microsoft.Win32.Win32Native+FILE_TIME.Win32Native+FILE_TIME(System.Int64):System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+WIN32_FIND_DATA" uniqueID="Microsoft.Win32.Win32Native+WIN32_FIND_DATA">
			<method accessibility="Public" methodKind="Member" name="Win32Native+WIN32_FIND_DATA" uniqueID="Win32Native+WIN32_FIND_DATA():System.Void">
				<signature>Microsoft.Win32.Win32Native+WIN32_FIND_DATA.Win32Native+WIN32_FIND_DATA():System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+MEMORYSTATUSEX" uniqueID="Microsoft.Win32.Win32Native+MEMORYSTATUSEX">
			<method accessibility="Protected" methodKind="Member" name="Win32Native+MEMORYSTATUSEX" uniqueID="Win32Native+MEMORYSTATUSEX():System.Void">
				<signature>Microsoft.Win32.Win32Native+MEMORYSTATUSEX.Win32Native+MEMORYSTATUSEX():System.Void</signature>
			</method>
		</class>
		<class name="Win32Native+WIN32_FILE_ATTRIBUTE_DATA" uniqueID="Microsoft.Win32.Win32Native+WIN32_FILE_ATTRIBUTE_DATA">
			<method accessibility="Protected" methodKind="Member" name="PopulateFrom" uniqueID="PopulateFrom(Microsoft.Win32.Win32Native+WIN32_FIND_DATA):System.Void">
				<signature>Microsoft.Win32.Win32Native+WIN32_FILE_ATTRIBUTE_DATA.PopulateFrom(Microsoft.Win32.Win32Native+WIN32_FIND_DATA):System.Void</signature>
			</method>
		</class>
		<class name="NativeMethods" uniqueID="Microsoft.Win32.NativeMethods">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>Microsoft.Win32.NativeMethods.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="AdjustTokenPrivileges" uniqueID="AdjustTokenPrivileges(System.Runtime.InteropServices.HandleRef;System.Boolean;Microsoft.Win32.NativeMethods+TokenPrivileges;System.Int32;System.IntPtr;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.AdjustTokenPrivileges(System.Runtime.InteropServices.HandleRef;System.Boolean;Microsoft.Win32.NativeMethods+TokenPrivileges;System.Int32;System.IntPtr;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateFile" uniqueID="CreateFile(System.String;System.Int32;System.Int32;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Int32;System.Int32;Microsoft.Win32.SafeHandles.SafeFileHandle):Microsoft.Win32.SafeHandles.SafeFileHandle">
				<signature>Microsoft.Win32.NativeMethods.CreateFile(System.String;System.Int32;System.Int32;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Int32;System.Int32;Microsoft.Win32.SafeHandles.SafeFileHandle):Microsoft.Win32.SafeHandles.SafeFileHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateFileMapping" uniqueID="CreateFileMapping(System.IntPtr;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Int32;System.Int32;System.Int32;System.String):Microsoft.Win32.SafeHandles.SafeFileMappingHandle">
				<signature>Microsoft.Win32.NativeMethods.CreateFileMapping(System.IntPtr;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Int32;System.Int32;System.Int32;System.String):Microsoft.Win32.SafeHandles.SafeFileMappingHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreatePipe" uniqueID="CreatePipe(Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.CreatePipe(Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateProcess" uniqueID="CreateProcess(System.String;System.Text.StringBuilder;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Boolean;System.Int32;System.IntPtr;System.String;Microsoft.Win32.NativeMethods+STARTUPINFO;Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.CreateProcess(System.String;System.Text.StringBuilder;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Boolean;System.Int32;System.IntPtr;System.String;Microsoft.Win32.NativeMethods+STARTUPINFO;Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateProcessAsUser" uniqueID="CreateProcessAsUser(System.Runtime.InteropServices.SafeHandle;System.String;System.String;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Boolean;System.Int32;System.Runtime.InteropServices.HandleRef;System.String;Microsoft.Win32.NativeMethods+STARTUPINFO;Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.CreateProcessAsUser(System.Runtime.InteropServices.SafeHandle;System.String;System.String;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Boolean;System.Int32;System.Runtime.InteropServices.HandleRef;System.String;Microsoft.Win32.NativeMethods+STARTUPINFO;Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateProcessWithLogonW" uniqueID="CreateProcessWithLogonW(System.String;System.String;System.IntPtr;Microsoft.Win32.NativeMethods+LogonFlags;System.String;System.Text.StringBuilder;System.Int32;System.IntPtr;System.String;Microsoft.Win32.NativeMethods+STARTUPINFO;Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.CreateProcessWithLogonW(System.String;System.String;System.IntPtr;Microsoft.Win32.NativeMethods+LogonFlags;System.String;System.Text.StringBuilder;System.Int32;System.IntPtr;System.String;Microsoft.Win32.NativeMethods+STARTUPINFO;Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateToolhelp32Snapshot" uniqueID="CreateToolhelp32Snapshot(System.Int32;System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.NativeMethods.CreateToolhelp32Snapshot(System.Int32;System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="DuplicateHandle" uniqueID="DuplicateHandle(System.Runtime.InteropServices.HandleRef;System.Runtime.InteropServices.SafeHandle;System.Runtime.InteropServices.HandleRef;Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Boolean;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.DuplicateHandle(System.Runtime.InteropServices.HandleRef;System.Runtime.InteropServices.SafeHandle;System.Runtime.InteropServices.HandleRef;Microsoft.Win32.SafeHandles.SafeFileHandle;System.Int32;System.Boolean;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="DuplicateHandle" uniqueID="DuplicateHandle(System.Runtime.InteropServices.HandleRef;System.Runtime.InteropServices.SafeHandle;System.Runtime.InteropServices.HandleRef;Microsoft.Win32.SafeHandles.SafeWaitHandle;System.Int32;System.Boolean;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.DuplicateHandle(System.Runtime.InteropServices.HandleRef;System.Runtime.InteropServices.SafeHandle;System.Runtime.InteropServices.HandleRef;Microsoft.Win32.SafeHandles.SafeWaitHandle;System.Int32;System.Boolean;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="EnumProcessModules" uniqueID="EnumProcessModules(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.IntPtr;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.EnumProcessModules(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.IntPtr;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="EnumProcesses" uniqueID="EnumProcesses(System.Int32[];System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.EnumProcesses(System.Int32[];System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="EnumWindows" uniqueID="EnumWindows(Microsoft.Win32.NativeMethods+EnumThreadWindowsCallback;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.EnumWindows(Microsoft.Win32.NativeMethods+EnumThreadWindowsCallback;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCurrentProcess" uniqueID="GetCurrentProcess():System.IntPtr">
				<signature>Microsoft.Win32.NativeMethods.GetCurrentProcess():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCurrentProcessId" uniqueID="GetCurrentProcessId():System.Int32">
				<signature>Microsoft.Win32.NativeMethods.GetCurrentProcessId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetExitCodeProcess" uniqueID="GetExitCodeProcess(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.GetExitCodeProcess(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetLocalPath" uniqueID="GetLocalPath(System.String):System.String">
				<signature>Microsoft.Win32.NativeMethods.GetLocalPath(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetModuleBaseName" uniqueID="GetModuleBaseName(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Runtime.InteropServices.HandleRef;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.GetModuleBaseName(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Runtime.InteropServices.HandleRef;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetModuleFileNameEx" uniqueID="GetModuleFileNameEx(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Runtime.InteropServices.HandleRef;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.GetModuleFileNameEx(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Runtime.InteropServices.HandleRef;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetModuleFileNameEx" uniqueID="GetModuleFileNameEx(System.Runtime.InteropServices.HandleRef;System.Runtime.InteropServices.HandleRef;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.GetModuleFileNameEx(System.Runtime.InteropServices.HandleRef;System.Runtime.InteropServices.HandleRef;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetModuleInformation" uniqueID="GetModuleInformation(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Runtime.InteropServices.HandleRef;Microsoft.Win32.NativeMethods+NtModuleInfo;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.GetModuleInformation(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Runtime.InteropServices.HandleRef;Microsoft.Win32.NativeMethods+NtModuleInfo;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetPriorityClass" uniqueID="GetPriorityClass(Microsoft.Win32.SafeHandles.SafeProcessHandle):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.GetPriorityClass(Microsoft.Win32.SafeHandles.SafeProcessHandle):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetProcessAffinityMask" uniqueID="GetProcessAffinityMask(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.IntPtr;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.GetProcessAffinityMask(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.IntPtr;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetProcessPriorityBoost" uniqueID="GetProcessPriorityBoost(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.GetProcessPriorityBoost(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetProcessTimes" uniqueID="GetProcessTimes(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int64;System.Int64;System.Int64;System.Int64):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.GetProcessTimes(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int64;System.Int64;System.Int64;System.Int64):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetProcessWorkingSetSize" uniqueID="GetProcessWorkingSetSize(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.IntPtr;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.GetProcessWorkingSetSize(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.IntPtr;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetStdHandle" uniqueID="GetStdHandle(System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.NativeMethods.GetStdHandle(System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetThreadPriority" uniqueID="GetThreadPriority(Microsoft.Win32.SafeHandles.SafeThreadHandle):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.GetThreadPriority(Microsoft.Win32.SafeHandles.SafeThreadHandle):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetThreadPriorityBoost" uniqueID="GetThreadPriorityBoost(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.GetThreadPriorityBoost(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetThreadTimes" uniqueID="GetThreadTimes(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Int64;System.Int64;System.Int64;System.Int64):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.GetThreadTimes(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Int64;System.Int64;System.Int64;System.Int64):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetWindow" uniqueID="GetWindow(System.Runtime.InteropServices.HandleRef;System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.NativeMethods.GetWindow(System.Runtime.InteropServices.HandleRef;System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetWindowLong" uniqueID="GetWindowLong(System.Runtime.InteropServices.HandleRef;System.Int32):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.GetWindowLong(System.Runtime.InteropServices.HandleRef;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetWindowText" uniqueID="GetWindowText(System.Runtime.InteropServices.HandleRef;System.Text.StringBuilder;System.Int32):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.GetWindowText(System.Runtime.InteropServices.HandleRef;System.Text.StringBuilder;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetWindowTextLength" uniqueID="GetWindowTextLength(System.Runtime.InteropServices.HandleRef):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.GetWindowTextLength(System.Runtime.InteropServices.HandleRef):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetWindowThreadProcessId" uniqueID="GetWindowThreadProcessId(System.Runtime.InteropServices.HandleRef;System.Int32):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.GetWindowThreadProcessId(System.Runtime.InteropServices.HandleRef;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsWindowVisible" uniqueID="IsWindowVisible(System.Runtime.InteropServices.HandleRef):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.IsWindowVisible(System.Runtime.InteropServices.HandleRef):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LookupPrivilegeValue" uniqueID="LookupPrivilegeValue(System.String;System.String;Microsoft.Win32.NativeMethods+LUID):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.LookupPrivilegeValue(System.String;System.String;Microsoft.Win32.NativeMethods+LUID):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Module32First" uniqueID="Module32First(System.Runtime.InteropServices.HandleRef;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.Module32First(System.Runtime.InteropServices.HandleRef;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Module32Next" uniqueID="Module32Next(System.Runtime.InteropServices.HandleRef;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.Module32Next(System.Runtime.InteropServices.HandleRef;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="NtQueryInformationProcess" uniqueID="NtQueryInformationProcess(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int32;Microsoft.Win32.NativeMethods+NtProcessBasicInfo;System.Int32;System.Int32[]):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.NtQueryInformationProcess(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int32;Microsoft.Win32.NativeMethods+NtProcessBasicInfo;System.Int32;System.Int32[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="NtQuerySystemInformation" uniqueID="NtQuerySystemInformation(System.Int32;System.IntPtr;System.Int32;System.Int32):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.NtQuerySystemInformation(System.Int32;System.IntPtr;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="OpenFileMapping" uniqueID="OpenFileMapping(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeFileMappingHandle">
				<signature>Microsoft.Win32.NativeMethods.OpenFileMapping(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeFileMappingHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenProcess" uniqueID="OpenProcess(System.Int32;System.Boolean;System.Int32):Microsoft.Win32.SafeHandles.SafeProcessHandle">
				<signature>Microsoft.Win32.NativeMethods.OpenProcess(System.Int32;System.Boolean;System.Int32):Microsoft.Win32.SafeHandles.SafeProcessHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenProcessToken" uniqueID="OpenProcessToken(System.Runtime.InteropServices.HandleRef;System.Int32;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.OpenProcessToken(System.Runtime.InteropServices.HandleRef;System.Int32;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenThread" uniqueID="OpenThread(System.Int32;System.Boolean;System.Int32):Microsoft.Win32.SafeHandles.SafeThreadHandle">
				<signature>Microsoft.Win32.NativeMethods.OpenThread(System.Int32;System.Boolean;System.Int32):Microsoft.Win32.SafeHandles.SafeThreadHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="PostMessage" uniqueID="PostMessage(System.Runtime.InteropServices.HandleRef;System.Int32;System.IntPtr;System.IntPtr):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.PostMessage(System.Runtime.InteropServices.HandleRef;System.Int32;System.IntPtr;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Process32First" uniqueID="Process32First(System.Runtime.InteropServices.HandleRef;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.Process32First(System.Runtime.InteropServices.HandleRef;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Process32Next" uniqueID="Process32Next(System.Runtime.InteropServices.HandleRef;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.Process32Next(System.Runtime.InteropServices.HandleRef;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SendMessageTimeout" uniqueID="SendMessageTimeout(System.Runtime.InteropServices.HandleRef;System.Int32;System.IntPtr;System.IntPtr;System.Int32;System.Int32;System.IntPtr):System.IntPtr">
				<signature>Microsoft.Win32.NativeMethods.SendMessageTimeout(System.Runtime.InteropServices.HandleRef;System.Int32;System.IntPtr;System.IntPtr;System.Int32;System.Int32;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetPriorityClass" uniqueID="SetPriorityClass(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.SetPriorityClass(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetProcessAffinityMask" uniqueID="SetProcessAffinityMask(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.SetProcessAffinityMask(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetProcessPriorityBoost" uniqueID="SetProcessPriorityBoost(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.SetProcessPriorityBoost(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetProcessWorkingSetSize" uniqueID="SetProcessWorkingSetSize(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.IntPtr;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.SetProcessWorkingSetSize(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.IntPtr;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetThreadAffinityMask" uniqueID="SetThreadAffinityMask(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Runtime.InteropServices.HandleRef):System.IntPtr">
				<signature>Microsoft.Win32.NativeMethods.SetThreadAffinityMask(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Runtime.InteropServices.HandleRef):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetThreadIdealProcessor" uniqueID="SetThreadIdealProcessor(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Int32):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.SetThreadIdealProcessor(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetThreadPriority" uniqueID="SetThreadPriority(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.SetThreadPriority(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="SetThreadPriorityBoost" uniqueID="SetThreadPriorityBoost(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.SetThreadPriorityBoost(Microsoft.Win32.SafeHandles.SafeThreadHandle;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ShellExecuteEx" uniqueID="ShellExecuteEx(Microsoft.Win32.NativeMethods+ShellExecuteInfo):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.ShellExecuteEx(Microsoft.Win32.NativeMethods+ShellExecuteInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="TerminateProcess" uniqueID="TerminateProcess(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.TerminateProcess(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Thread32First" uniqueID="Thread32First(System.Runtime.InteropServices.HandleRef;Microsoft.Win32.NativeMethods+WinThreadEntry):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.Thread32First(System.Runtime.InteropServices.HandleRef;Microsoft.Win32.NativeMethods+WinThreadEntry):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Thread32Next" uniqueID="Thread32Next(System.Runtime.InteropServices.HandleRef;Microsoft.Win32.NativeMethods+WinThreadEntry):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods.Thread32Next(System.Runtime.InteropServices.HandleRef;Microsoft.Win32.NativeMethods+WinThreadEntry):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="VirtualQuery" uniqueID="VirtualQuery(Microsoft.Win32.SafeHandles.SafeFileMapViewHandle;Microsoft.Win32.NativeMethods+MEMORY_BASIC_INFORMATION;System.IntPtr):System.IntPtr">
				<signature>Microsoft.Win32.NativeMethods.VirtualQuery(Microsoft.Win32.SafeHandles.SafeFileMapViewHandle;Microsoft.Win32.NativeMethods+MEMORY_BASIC_INFORMATION;System.IntPtr):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WaitForInputIdle" uniqueID="WaitForInputIdle(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int32):System.Int32">
				<signature>Microsoft.Win32.NativeMethods.WaitForInputIdle(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Int32):System.Int32</signature>
			</method>
		</class>
		<class name="SafeNativeMethods+PROCESS_INFORMATION" uniqueID="Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION">
			<method accessibility="Public" methodKind="Member" name="SafeNativeMethods+PROCESS_INFORMATION" uniqueID="SafeNativeMethods+PROCESS_INFORMATION():System.Void">
				<signature>Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION.SafeNativeMethods+PROCESS_INFORMATION():System.Void</signature>
			</method>
		</class>
		<class name="NativeMethods+EnumThreadWindowsCallback" uniqueID="Microsoft.Win32.NativeMethods+EnumThreadWindowsCallback">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.IntPtr;System.IntPtr;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>Microsoft.Win32.NativeMethods+EnumThreadWindowsCallback.BeginInvoke(System.IntPtr;System.IntPtr;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods+EnumThreadWindowsCallback.EndInvoke(System.IAsyncResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.IntPtr;System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.NativeMethods+EnumThreadWindowsCallback.Invoke(System.IntPtr;System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NativeMethods+EnumThreadWindowsCallback" uniqueID="NativeMethods+EnumThreadWindowsCallback(System.Object;System.IntPtr):System.Void">
				<signature>Microsoft.Win32.NativeMethods+EnumThreadWindowsCallback.NativeMethods+EnumThreadWindowsCallback(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="NativeMethods+NtProcessBasicInfo" uniqueID="Microsoft.Win32.NativeMethods+NtProcessBasicInfo">
			<method accessibility="Public" methodKind="Member" name="NativeMethods+NtProcessBasicInfo" uniqueID="NativeMethods+NtProcessBasicInfo():System.Void">
				<signature>Microsoft.Win32.NativeMethods+NtProcessBasicInfo.NativeMethods+NtProcessBasicInfo():System.Void</signature>
			</method>
		</class>
		<class name="NativeMethods+SECURITY_ATTRIBUTES" uniqueID="Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES">
			<method accessibility="Public" methodKind="Member" name="NativeMethods+SECURITY_ATTRIBUTES" uniqueID="NativeMethods+SECURITY_ATTRIBUTES():System.Void">
				<signature>Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES.NativeMethods+SECURITY_ATTRIBUTES():System.Void</signature>
			</method>
		</class>
		<class name="NativeMethods+PDH_FMT_COUNTERVALUE" uniqueID="Microsoft.Win32.NativeMethods+PDH_FMT_COUNTERVALUE">
			<method accessibility="Public" methodKind="Member" name="NativeMethods+PDH_FMT_COUNTERVALUE" uniqueID="NativeMethods+PDH_FMT_COUNTERVALUE():System.Void">
				<signature>Microsoft.Win32.NativeMethods+PDH_FMT_COUNTERVALUE.NativeMethods+PDH_FMT_COUNTERVALUE():System.Void</signature>
			</method>
		</class>
		<class name="NativeMethods+PDH_RAW_COUNTER" uniqueID="Microsoft.Win32.NativeMethods+PDH_RAW_COUNTER">
			<method accessibility="Public" methodKind="Member" name="NativeMethods+PDH_RAW_COUNTER" uniqueID="NativeMethods+PDH_RAW_COUNTER():System.Void">
				<signature>Microsoft.Win32.NativeMethods+PDH_RAW_COUNTER.NativeMethods+PDH_RAW_COUNTER():System.Void</signature>
			</method>
		</class>
		<class name="NativeMethods+STARTUPINFO" uniqueID="Microsoft.Win32.NativeMethods+STARTUPINFO">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>Microsoft.Win32.NativeMethods+STARTUPINFO.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NativeMethods+STARTUPINFO" uniqueID="NativeMethods+STARTUPINFO():System.Void">
				<signature>Microsoft.Win32.NativeMethods+STARTUPINFO.NativeMethods+STARTUPINFO():System.Void</signature>
			</method>
		</class>
		<class name="NativeMethods+ShellExecuteInfo" uniqueID="Microsoft.Win32.NativeMethods+ShellExecuteInfo">
			<method accessibility="Public" methodKind="Member" name="NativeMethods+ShellExecuteInfo" uniqueID="NativeMethods+ShellExecuteInfo():System.Void">
				<signature>Microsoft.Win32.NativeMethods+ShellExecuteInfo.NativeMethods+ShellExecuteInfo():System.Void</signature>
			</method>
		</class>
		<class name="NativeMethods+TEXTMETRIC" uniqueID="Microsoft.Win32.NativeMethods+TEXTMETRIC">
			<method accessibility="Public" methodKind="Member" name="NativeMethods+TEXTMETRIC" uniqueID="NativeMethods+TEXTMETRIC():System.Void">
				<signature>Microsoft.Win32.NativeMethods+TEXTMETRIC.NativeMethods+TEXTMETRIC():System.Void</signature>
			</method>
		</class>
		<class name="NativeMethods+TokenPrivileges" uniqueID="Microsoft.Win32.NativeMethods+TokenPrivileges">
			<method accessibility="Public" methodKind="Member" name="NativeMethods+TokenPrivileges" uniqueID="NativeMethods+TokenPrivileges():System.Void">
				<signature>Microsoft.Win32.NativeMethods+TokenPrivileges.NativeMethods+TokenPrivileges():System.Void</signature>
			</method>
		</class>
		<class name="NativeMethods+WinThreadEntry" uniqueID="Microsoft.Win32.NativeMethods+WinThreadEntry">
			<method accessibility="Public" methodKind="Member" name="NativeMethods+WinThreadEntry" uniqueID="NativeMethods+WinThreadEntry():System.Void">
				<signature>Microsoft.Win32.NativeMethods+WinThreadEntry.NativeMethods+WinThreadEntry():System.Void</signature>
			</method>
		</class>
		<class name="SafeNativeMethods" uniqueID="Microsoft.Win32.SafeNativeMethods">
			<method accessibility="Public" methodKind="Static" name="CloseHandle" uniqueID="CloseHandle(System.IntPtr):System.Boolean">
				<signature>Microsoft.Win32.SafeNativeMethods.CloseHandle(System.IntPtr):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateSemaphore" uniqueID="CreateSemaphore(Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Int32;System.Int32;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle">
				<signature>Microsoft.Win32.SafeNativeMethods.CreateSemaphore(Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Int32;System.Int32;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FormatFromRawValue" uniqueID="FormatFromRawValue(System.UInt32;System.UInt32;System.Int64;Microsoft.Win32.NativeMethods+PDH_RAW_COUNTER;Microsoft.Win32.NativeMethods+PDH_RAW_COUNTER;Microsoft.Win32.NativeMethods+PDH_FMT_COUNTERVALUE):System.Int32">
				<signature>Microsoft.Win32.SafeNativeMethods.FormatFromRawValue(System.UInt32;System.UInt32;System.Int64;Microsoft.Win32.NativeMethods+PDH_RAW_COUNTER;Microsoft.Win32.NativeMethods+PDH_RAW_COUNTER;Microsoft.Win32.NativeMethods+PDH_FMT_COUNTERVALUE):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FormatMessage" uniqueID="FormatMessage(System.Int32;Microsoft.Win32.SafeHandles.SafeLibraryHandle;System.UInt32;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr[]):System.Int32">
				<signature>Microsoft.Win32.SafeNativeMethods.FormatMessage(System.Int32;Microsoft.Win32.SafeHandles.SafeLibraryHandle;System.UInt32;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FormatMessage" uniqueID="FormatMessage(System.Int32;System.IntPtr;System.UInt32;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr[]):System.Int32">
				<signature>Microsoft.Win32.SafeNativeMethods.FormatMessage(System.Int32;System.IntPtr;System.UInt32;System.Int32;System.Text.StringBuilder;System.Int32;System.IntPtr[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="FreeLibrary" uniqueID="FreeLibrary(System.Runtime.InteropServices.HandleRef):System.Boolean">
				<signature>Microsoft.Win32.SafeNativeMethods.FreeLibrary(System.Runtime.InteropServices.HandleRef):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetComputerName" uniqueID="GetComputerName(System.Text.StringBuilder;System.Int32[]):System.Boolean">
				<signature>Microsoft.Win32.SafeNativeMethods.GetComputerName(System.Text.StringBuilder;System.Int32[]):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetStockObject" uniqueID="GetStockObject(System.Int32):System.IntPtr">
				<signature>Microsoft.Win32.SafeNativeMethods.GetStockObject(System.Int32):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetTextMetrics" uniqueID="GetTextMetrics(System.IntPtr;Microsoft.Win32.NativeMethods+TEXTMETRIC):System.Boolean">
				<signature>Microsoft.Win32.SafeNativeMethods.GetTextMetrics(System.IntPtr;Microsoft.Win32.NativeMethods+TEXTMETRIC):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="InterlockedCompareExchange" uniqueID="InterlockedCompareExchange(System.IntPtr;System.Int32;System.Int32):System.Int32">
				<signature>Microsoft.Win32.SafeNativeMethods.InterlockedCompareExchange(System.IntPtr;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="IsWow64Process" uniqueID="IsWow64Process(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Boolean):System.Boolean">
				<signature>Microsoft.Win32.SafeNativeMethods.IsWow64Process(Microsoft.Win32.SafeHandles.SafeProcessHandle;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LoadLibrary" uniqueID="LoadLibrary(System.String):System.IntPtr">
				<signature>Microsoft.Win32.SafeNativeMethods.LoadLibrary(System.String):System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="MessageBox" uniqueID="MessageBox(System.IntPtr;System.String;System.String;System.Int32):System.Int32">
				<signature>Microsoft.Win32.SafeNativeMethods.MessageBox(System.IntPtr;System.String;System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="MessageBoxSystem" uniqueID="MessageBoxSystem(System.IntPtr;System.String;System.String;System.Int32):System.Int32">
				<signature>Microsoft.Win32.SafeNativeMethods.MessageBoxSystem(System.IntPtr;System.String;System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="OpenSemaphore" uniqueID="OpenSemaphore(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle">
				<signature>Microsoft.Win32.SafeNativeMethods.OpenSemaphore(System.Int32;System.Boolean;System.String):Microsoft.Win32.SafeHandles.SafeWaitHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OutputDebugString" uniqueID="OutputDebugString(System.String):System.Void">
				<signature>Microsoft.Win32.SafeNativeMethods.OutputDebugString(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="QueryPerformanceCounter" uniqueID="QueryPerformanceCounter(System.Int64):System.Boolean">
				<signature>Microsoft.Win32.SafeNativeMethods.QueryPerformanceCounter(System.Int64):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="QueryPerformanceFrequency" uniqueID="QueryPerformanceFrequency(System.Int64):System.Boolean">
				<signature>Microsoft.Win32.SafeNativeMethods.QueryPerformanceFrequency(System.Int64):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterWindowMessage" uniqueID="RegisterWindowMessage(System.String):System.Int32">
				<signature>Microsoft.Win32.SafeNativeMethods.RegisterWindowMessage(System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ReleaseSemaphore" uniqueID="ReleaseSemaphore(Microsoft.Win32.SafeHandles.SafeWaitHandle;System.Int32;System.Int32):System.Boolean">
				<signature>Microsoft.Win32.SafeNativeMethods.ReleaseSemaphore(Microsoft.Win32.SafeHandles.SafeWaitHandle;System.Int32;System.Int32):System.Boolean</signature>
			</method>
		</class>
	</package>
	<package name="System.Collections.Generic">
		<class name="ICollection&lt;System.Data.DataColumn&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.DataColumn&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataColumn):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataColumn&gt;.Add(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataColumn&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataColumn):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataColumn&gt;.Contains(System.Data.DataColumn):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataColumn[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataColumn&gt;.CopyTo(System.Data.DataColumn[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataColumn):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataColumn&gt;.Remove(System.Data.DataColumn):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataColumn&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataColumn&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.UI.RegisteredDisposeScript&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.UI.RegisteredDisposeScript&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredDisposeScript&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.UI.RegisteredDisposeScript&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredDisposeScript&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.UI.RegisteredExpandoAttribute):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.Add(System.Web.UI.RegisteredExpandoAttribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.RegisteredExpandoAttribute):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.Contains(System.Web.UI.RegisteredExpandoAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.RegisteredExpandoAttribute[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.CopyTo(System.Web.UI.RegisteredExpandoAttribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.UI.RegisteredExpandoAttribute):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.Remove(System.Web.UI.RegisteredExpandoAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IList&lt;System.Web.UI.RegisteredScript&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Web.UI.RegisteredScript&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.RegisteredScript):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredScript&gt;.IndexOf(System.Web.UI.RegisteredScript):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.UI.RegisteredScript):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredScript&gt;.Insert(System.Int32;System.Web.UI.RegisteredScript):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredScript&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredScript">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredScript&gt;.get_Item(System.Int32):System.Web.UI.RegisteredScript</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.UI.RegisteredScript):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredScript&gt;.set_Item(System.Int32;System.Web.UI.RegisteredScript):System.Void</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+ValueCollection" uniqueID="Dictionary`2+ValueCollection(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.Dictionary`2+ValueCollection(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.String):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Data.DataRelation&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Data.DataRelation&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Data.DataRelation;System.Data.DataRelation):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Data.DataRelation&gt;.Compare(System.Data.DataRelation;System.Data.DataRelation):System.Int32</signature>
			</method>
		</class>
		<class name="IDictionary&lt;System.String,System.String&gt;" uniqueID="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.String):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;.Add(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;.TryGetValue(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.String">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;.get_Item(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.String):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;.set_Item(System.String;System.String):System.Void</signature>
			</method>
		</class>
		<class name="Dictionary&lt;System.String,System.String&gt;" uniqueID="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleKey" uniqueID="IsCompatibleKey(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.IsCompatibleKey(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.String):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Add(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsValue" uniqueID="ContainsValue(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.ContainsValue(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.String&gt;" uniqueID="Dictionary&lt;System.String,System.String&gt;():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Dictionary&lt;System.String,System.String&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.String&gt;" uniqueID="Dictionary&lt;System.String,System.String&gt;(System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Dictionary&lt;System.String,System.String&gt;(System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.String&gt;" uniqueID="Dictionary&lt;System.String,System.String&gt;(System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Dictionary&lt;System.String,System.String&gt;(System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.String&gt;" uniqueID="Dictionary&lt;System.String,System.String&gt;(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Dictionary&lt;System.String,System.String&gt;(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.String&gt;" uniqueID="Dictionary&lt;System.String,System.String&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Dictionary&lt;System.String,System.String&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.String,System.String&gt;" uniqueID="Dictionary&lt;System.String,System.String&gt;(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Dictionary&lt;System.String,System.String&gt;(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dictionary&lt;System.String,System.String&gt;" uniqueID="Dictionary&lt;System.String,System.String&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Dictionary&lt;System.String,System.String&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindEntry" uniqueID="FindEntry(System.String):System.Int32">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.FindEntry(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.String):System.String">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.GetValueOrDefault(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Initialize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Insert" uniqueID="Insert(System.String;System.String;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Insert(System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Resize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize(System.Int32;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.Resize(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Add" uniqueID="System.Collections.IDictionary.Add(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.IDictionary.Add(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Contains" uniqueID="System.Collections.IDictionary.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.IDictionary.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.GetEnumerator" uniqueID="System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Remove" uniqueID="System.Collections.IDictionary.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.IDictionary.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsFixedSize" uniqueID="System.Collections.IDictionary.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.IDictionary.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsReadOnly" uniqueID="System.Collections.IDictionary.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.IDictionary.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Item" uniqueID="System.Collections.IDictionary.get_Item(System.Object):System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.IDictionary.get_Item(System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Keys" uniqueID="System.Collections.IDictionary.get_Keys():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.IDictionary.get_Keys():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Values" uniqueID="System.Collections.IDictionary.get_Values():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.IDictionary.get_Values():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.set_Item" uniqueID="System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.TryGetValue(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Comparer" uniqueID="get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.String">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.get_Item(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.String):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;.set_Item(System.String;System.String):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Type;System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Add(System.Type;System.AttributeUsageAttribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.Type):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.ContainsKey(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Type):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Remove(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Type):System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Item(System.Type):System.AttributeUsageAttribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Type;System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.set_Item(System.Type;System.AttributeUsageAttribute):System.Void</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IReadOnlyDictionary&lt;System.String,System.String&gt;" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.String):System.Boolean">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;.TryGetValue(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.String">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;.get_Item(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.IEnumerable&lt;System.String&gt;">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.String&gt;</signature>
			</method>
		</class>
		<class name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleKey" uniqueID="IsCompatibleKey(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.IsCompatibleKey(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Type;System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Add(System.Type;System.AttributeUsageAttribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.ContainsKey(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsValue" uniqueID="ContainsValue(System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.ContainsValue(System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.AttributeUsageAttribute&gt;;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IDictionary&lt;System.Type;System.AttributeUsageAttribute&gt;;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindEntry" uniqueID="FindEntry(System.Type):System.Int32">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.FindEntry(System.Type):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.Type):System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.GetValueOrDefault(System.Type):System.AttributeUsageAttribute</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Initialize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Insert" uniqueID="Insert(System.Type;System.AttributeUsageAttribute;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Insert(System.Type;System.AttributeUsageAttribute;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Remove(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize():System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Resize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize(System.Int32;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.Resize(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Add" uniqueID="System.Collections.IDictionary.Add(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.Add(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Contains" uniqueID="System.Collections.IDictionary.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.GetEnumerator" uniqueID="System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Remove" uniqueID="System.Collections.IDictionary.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsFixedSize" uniqueID="System.Collections.IDictionary.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsReadOnly" uniqueID="System.Collections.IDictionary.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Item" uniqueID="System.Collections.IDictionary.get_Item(System.Object):System.Object">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.get_Item(System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Keys" uniqueID="System.Collections.IDictionary.get_Keys():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.get_Keys():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Values" uniqueID="System.Collections.IDictionary.get_Values():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.get_Values():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.set_Item" uniqueID="System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Comparer" uniqueID="get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Type):System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Item(System.Type):System.AttributeUsageAttribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Type;System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.Dictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.set_Item(System.Type;System.AttributeUsageAttribute):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.SqlClient.SqlParameter):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;.IndexOf(System.Data.SqlClient.SqlParameter):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;.Insert(System.Int32;System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.SqlClient.SqlParameter">
				<signature>System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;.get_Item(System.Int32):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;.set_Item(System.Int32;System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.DataColumn&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.DataColumn&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataColumn&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.DataColumn&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataColumn&gt;</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.Type):System.Boolean">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.ContainsKey(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.TryGetValue(System.Type;System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Type):System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Item(System.Type):System.AttributeUsageAttribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2" uniqueID="System.Collections.Generic.Dictionary`2">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleKey" uniqueID="IsCompatibleKey(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.IsCompatibleKey(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.String):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Add(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsValue" uniqueID="ContainsValue(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.ContainsValue(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2():System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Int32;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2" uniqueID="Dictionary`2(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Dictionary`2(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindEntry" uniqueID="FindEntry(System.String):System.Int32">
				<signature>System.Collections.Generic.Dictionary`2.FindEntry(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2.GetEnumerator():System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetValueOrDefault" uniqueID="GetValueOrDefault(System.String):System.String">
				<signature>System.Collections.Generic.Dictionary`2.GetValueOrDefault(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Initialize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Insert" uniqueID="Insert(System.String;System.String;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Insert(System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize():System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Resize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Resize" uniqueID="Resize(System.Int32;System.Boolean):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.Resize(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;&gt;">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Keys():System.Collections.Generic.IEnumerable&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values" uniqueID="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.get_Values():System.Collections.Generic.IEnumerable&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Add" uniqueID="System.Collections.IDictionary.Add(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.Add(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Contains" uniqueID="System.Collections.IDictionary.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.GetEnumerator" uniqueID="System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.Remove" uniqueID="System.Collections.IDictionary.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsFixedSize" uniqueID="System.Collections.IDictionary.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_IsReadOnly" uniqueID="System.Collections.IDictionary.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Item" uniqueID="System.Collections.IDictionary.get_Item(System.Object):System.Object">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.get_Item(System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Keys" uniqueID="System.Collections.IDictionary.get_Keys():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.get_Keys():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.get_Values" uniqueID="System.Collections.IDictionary.get_Values():System.Collections.ICollection">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.get_Values():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionary.set_Item" uniqueID="System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2.TryGetValue(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Comparer" uniqueID="get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2.get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.String">
				<signature>System.Collections.Generic.Dictionary`2.get_Item(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2.get_Keys():System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2.get_Values():System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.String):System.Void">
				<signature>System.Collections.Generic.Dictionary`2.set_Item(System.String;System.String):System.Void</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+KeyCollection" uniqueID="Dictionary`2+KeyCollection(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.Dictionary`2+KeyCollection(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.String):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.Add(System.AttributeUsageAttribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.Contains(System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.AttributeUsageAttribute[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.CopyTo(System.AttributeUsageAttribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.Remove(System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.AttributeUsageAttribute&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2+Enumerator&lt;System.String,System.String&gt;" uniqueID="System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.String&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+Enumerator&lt;System.String,System.String&gt;" uniqueID="Dictionary`2+Enumerator&lt;System.String,System.String&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.String&gt;.Dictionary`2+Enumerator&lt;System.String,System.String&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.String&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.String&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Entry" uniqueID="System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.String&gt;.System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Key" uniqueID="System.Collections.IDictionaryEnumerator.get_Key():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.String&gt;.System.Collections.IDictionaryEnumerator.get_Key():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Value" uniqueID="System.Collections.IDictionaryEnumerator.get_Value():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.String&gt;.System.Collections.IDictionaryEnumerator.get_Value():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.String&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.String&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.String,System.String&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.String&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection&lt;System.String,System.String&gt;" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+KeyCollection&lt;System.String,System.String&gt;" uniqueID="Dictionary`2+KeyCollection&lt;System.String,System.String&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.String):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.String,System.String&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.Add(System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.Contains(System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.TemplateControl+AsyncEventMethodInfo[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.CopyTo(System.Web.UI.TemplateControl+AsyncEventMethodInfo[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.Remove(System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Entry" uniqueID="System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Key" uniqueID="System.Collections.IDictionaryEnumerator.get_Key():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionaryEnumerator.get_Key():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IDictionaryEnumerator.get_Value" uniqueID="System.Collections.IDictionaryEnumerator.get_Value():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IDictionaryEnumerator.get_Value():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary`2+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Object[]&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Object[]&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object[]):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Object[]&gt;.Add(System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Object[]&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object[]):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Object[]&gt;.Contains(System.Object[]):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Object[][];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Object[]&gt;.CopyTo(System.Object[][];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object[]):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Object[]&gt;.Remove(System.Object[]):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Object[]&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Object[]&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.String&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.String&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.String&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.String&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.String">
				<signature>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current():System.String</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.String&gt;" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.String&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.String&gt;" uniqueID="Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.String&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.String&gt;.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.String&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.String&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.String&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.String&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.String&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.String">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.String,System.String&gt;.get_Current():System.String</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.DataView&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.DataView&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataView):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataView&gt;.Add(System.Data.DataView):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataView&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataView):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataView&gt;.Contains(System.Data.DataView):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataView[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataView&gt;.CopyTo(System.Data.DataView[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataView):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataView&gt;.Remove(System.Data.DataView):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataView&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataView&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Type&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Type&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Type">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Type&gt;.get_Current():System.Type</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Type">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Current():System.Type</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Type&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Type&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Type&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Type&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Type&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Type&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Type&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Type):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.Add(System.Type):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Type):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.Contains(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Type[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.CopyTo(System.Type[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Type):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.Remove(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Type&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Char&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Char&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Char">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Char&gt;.get_Current():System.Char</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Attribute;System.Attribute):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Attribute&gt;.Compare(System.Attribute;System.Attribute):System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Object[]&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Object[]&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Object[]&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Object[]&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Object[]&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Type[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.CopyTo(System.Type[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.Type):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Add(System.Type):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.Type):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Type&gt;">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Type&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+KeyCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.String&gt;" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.String&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.String&gt;" uniqueID="Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.String&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.String&gt;.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.String&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.String&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.String&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.String&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.String&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.String">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String,System.String&gt;.get_Current():System.String</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;.get_Current():System.AttributeUsageAttribute</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Protected" methodKind="Member" name="Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Current():System.AttributeUsageAttribute</signature>
			</method>
		</class>
		<class name="ISet&lt;System.String&gt;" uniqueID="System.Collections.Generic.ISet&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String):System.Boolean">
				<signature>System.Collections.Generic.ISet&lt;System.String&gt;.Add(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExceptWith" uniqueID="ExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.ISet&lt;System.String&gt;.ExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IntersectWith" uniqueID="IntersectWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.ISet&lt;System.String&gt;.IntersectWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsProperSubsetOf" uniqueID="IsProperSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.ISet&lt;System.String&gt;.IsProperSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsProperSupersetOf" uniqueID="IsProperSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.ISet&lt;System.String&gt;.IsProperSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSubsetOf" uniqueID="IsSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.ISet&lt;System.String&gt;.IsSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSupersetOf" uniqueID="IsSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.ISet&lt;System.String&gt;.IsSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Overlaps" uniqueID="Overlaps(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.ISet&lt;System.String&gt;.Overlaps(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetEquals" uniqueID="SetEquals(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.ISet&lt;System.String&gt;.SetEquals(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SymmetricExceptWith" uniqueID="SymmetricExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.ISet&lt;System.String&gt;.SymmetricExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnionWith" uniqueID="UnionWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.ISet&lt;System.String&gt;.UnionWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection&lt;System.String,System.String&gt;" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+ValueCollection&lt;System.String,System.String&gt;" uniqueID="Dictionary`2+ValueCollection&lt;System.String,System.String&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;(System.Collections.Generic.Dictionary&lt;System.String;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.String):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.String,System.String&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;.Add(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.DataViewListener&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataViewListener&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.DataViewListener&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataViewListener&gt;</signature>
			</method>
		</class>
		<class name="IList&lt;System.Exception&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Exception&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Exception):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Exception&gt;.IndexOf(System.Exception):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Exception):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Exception&gt;.Insert(System.Int32;System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Exception&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Exception">
				<signature>System.Collections.Generic.IList&lt;System.Exception&gt;.get_Item(System.Int32):System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Exception):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Exception&gt;.set_Item(System.Int32;System.Exception):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.AttributeUsageAttribute&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
		</class>
		<class name="Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.AttributeUsageAttribute[];System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.CopyTo(System.AttributeUsageAttribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Collections.Generic.Dictionary&lt;System.Type;System.AttributeUsageAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.GetEnumerator():System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator&lt;System.Type;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Add(System.AttributeUsageAttribute):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.AttributeUsageAttribute):System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(System.AttributeUsageAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.Generic.IEnumerable&lt;TValue&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.AttributeUsageAttribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.Dictionary`2+ValueCollection&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.DataView&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.DataView&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataView&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.DataView&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataView&gt;</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Attribute&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="ICollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Collections.Generic.ICollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Add(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Contains(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(Microsoft.SqlServer.Server.SmiExtendedMetaData[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.CopyTo(Microsoft.SqlServer.Server.SmiExtendedMetaData[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Remove(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.DataRelation&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.DataRelation&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRelation&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.DataRelation&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRelation&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.UI.RegisteredDisposeScript&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredDisposeScript&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.UI.RegisteredDisposeScript">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredDisposeScript&gt;.get_Current():System.Web.UI.RegisteredDisposeScript</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.DataViewListener&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataViewListener):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataViewListener&gt;.Add(System.Data.DataViewListener):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataViewListener&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataViewListener):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataViewListener&gt;.Contains(System.Data.DataViewListener):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataViewListener[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataViewListener&gt;.CopyTo(System.Data.DataViewListener[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataViewListener):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataViewListener&gt;.Remove(System.Data.DataViewListener):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataViewListener&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataViewListener&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;</signature>
			</method>
		</class>
		<class name="IList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.RegisteredExpandoAttribute):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.IndexOf(System.Web.UI.RegisteredExpandoAttribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.UI.RegisteredExpandoAttribute):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.Insert(System.Int32;System.Web.UI.RegisteredExpandoAttribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredExpandoAttribute">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.get_Item(System.Int32):System.Web.UI.RegisteredExpandoAttribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.UI.RegisteredExpandoAttribute):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.set_Item(System.Int32;System.Web.UI.RegisteredExpandoAttribute):System.Void</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Attribute):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.Add(System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Attribute):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.Contains(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Attribute[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.CopyTo(System.Attribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Attribute):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.Remove(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Attribute&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.ScriptManagerProxy">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Item(System.Int32):System.Web.UI.ScriptManagerProxy</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Exception&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Exception&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Exception):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Exception&gt;.Add(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Exception&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Exception):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Exception&gt;.Contains(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Exception[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Exception&gt;.CopyTo(System.Exception[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Exception):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Exception&gt;.Remove(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Exception&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Exception&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.DataRelation&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.DataRelation&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataRelation):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRelation&gt;.Add(System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRelation&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataRelation):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRelation&gt;.Contains(System.Data.DataRelation):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataRelation[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRelation&gt;.CopyTo(System.Data.DataRelation[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataRelation):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRelation&gt;.Remove(System.Data.DataRelation):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRelation&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRelation&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Threading.Tasks.Task">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Threading.Tasks.Task&gt;.get_Current():System.Threading.Tasks.Task</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Web.UI.RegisteredHiddenField&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.RegisteredHiddenField&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredHiddenField">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.RegisteredHiddenField&gt;.get_Item(System.Int32):System.Web.UI.RegisteredHiddenField</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.DataRow&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.DataRow&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRow&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.DataRow&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRow&gt;</signature>
			</method>
		</class>
		<class name="List&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Synchronized(System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Add(System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Web.UI.ScriptManagerProxy;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.BinarySearch(System.Int32;System.Int32;System.Web.UI.ScriptManagerProxy;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Web.UI.ScriptManagerProxy):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.BinarySearch(System.Web.UI.ScriptManagerProxy):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Web.UI.ScriptManagerProxy;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.BinarySearch(System.Web.UI.ScriptManagerProxy;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.ScriptManagerProxy):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Contains(System.Web.UI.ScriptManagerProxy):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Web.UI.ScriptManagerProxy[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.CopyTo(System.Int32;System.Web.UI.ScriptManagerProxy[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.ScriptManagerProxy[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.CopyTo(System.Web.UI.ScriptManagerProxy[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.ScriptManagerProxy[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.CopyTo(System.Web.UI.ScriptManagerProxy[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Exists(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Web.UI.ScriptManagerProxy">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Find(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Web.UI.ScriptManagerProxy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.FindAll(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.FindIndex(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Web.UI.ScriptManagerProxy">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.FindLast(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Web.UI.ScriptManagerProxy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.FindLastIndex(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.ForEach(System.Action&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.ScriptManagerProxy):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.IndexOf(System.Web.UI.ScriptManagerProxy):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.ScriptManagerProxy;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.IndexOf(System.Web.UI.ScriptManagerProxy;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.ScriptManagerProxy;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.IndexOf(System.Web.UI.ScriptManagerProxy;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Insert(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Web.UI.ScriptManagerProxy):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.LastIndexOf(System.Web.UI.ScriptManagerProxy):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Web.UI.ScriptManagerProxy;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.LastIndexOf(System.Web.UI.ScriptManagerProxy;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Web.UI.ScriptManagerProxy;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.LastIndexOf(System.Web.UI.ScriptManagerProxy;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="List&lt;System.Web.UI.ScriptManagerProxy&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.List&lt;System.Web.UI.ScriptManagerProxy&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="List&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.List&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="List&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.List&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.UI.ScriptManagerProxy):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Remove(System.Web.UI.ScriptManagerProxy):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.RemoveAll(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Sort(System.Comparison&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptManagerProxy&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptManagerProxy&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Web.UI.ScriptManagerProxy[]">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.ToArray():System.Web.UI.ScriptManagerProxy[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.TrueForAll(System.Predicate&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.ScriptManagerProxy">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Item(System.Int32):System.Web.UI.ScriptManagerProxy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;.set_Item(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.DataRow&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.DataRow&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataRow):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRow&gt;.Add(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRow&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataRow):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRow&gt;.Contains(System.Data.DataRow):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataRow[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRow&gt;.CopyTo(System.Data.DataRow[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataRow):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRow&gt;.Remove(System.Data.DataRow):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRow&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataRow&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.DataTable&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.DataTable&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataTable&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.DataTable&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataTable&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.DataTable&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.DataTable&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataTable):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataTable&gt;.Add(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataTable&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataTable):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataTable&gt;.Contains(System.Data.DataTable):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataTable[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataTable&gt;.CopyTo(System.Data.DataTable[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataTable):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataTable&gt;.Remove(System.Data.DataTable):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataTable&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.DataTable&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Exception&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Exception&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Exception&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.SqlClient.SqlParameter&gt;.Add(System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.SqlClient.SqlParameter&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.SqlClient.SqlParameter):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.SqlClient.SqlParameter&gt;.Contains(System.Data.SqlClient.SqlParameter):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.SqlClient.SqlParameter[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.SqlClient.SqlParameter&gt;.CopyTo(System.Data.SqlClient.SqlParameter[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.SqlClient.SqlParameter):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.SqlClient.SqlParameter&gt;.Remove(System.Data.SqlClient.SqlParameter):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.SqlClient.SqlParameter&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.SqlClient.SqlParameter&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="KeyValuePair&lt;System.String,System.String&gt;" uniqueID="System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="KeyValuePair&lt;System.String,System.String&gt;" uniqueID="KeyValuePair&lt;System.String,System.String&gt;(System.String;System.String):System.Void">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;.KeyValuePair&lt;System.String,System.String&gt;(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;.get_Key():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;.get_Value():System.String</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Threading.Tasks.Task&gt;.Add(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Threading.Tasks.Task&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Threading.Tasks.Task&gt;.Contains(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Threading.Tasks.Task[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Threading.Tasks.Task&gt;.CopyTo(System.Threading.Tasks.Task[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Threading.Tasks.Task&gt;.Remove(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Threading.Tasks.Task&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Threading.Tasks.Task&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.Index&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.Index&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Index&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.Index&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Index&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.UI.TemplateControl+AsyncEventMethodInfo">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.get_Current():System.Web.UI.TemplateControl+AsyncEventMethodInfo</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Data.Index&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Data.Index&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.Index):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Index&gt;.Add(System.Data.Index):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Index&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Index):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Index&gt;.Contains(System.Data.Index):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Index[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Index&gt;.CopyTo(System.Data.Index[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.Index):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Index&gt;.Remove(System.Data.Index):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Index&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Data.Index&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.SqlClient.SqlParameter&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Data.SqlClient.SqlParameter&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.SqlClient.SqlParameter&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Exception&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Exception&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Exception&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Exception&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Reflection.CustomAttributeData&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.CustomAttributeData&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.CustomAttributeData&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Reflection.CustomAttributeData&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Reflection.CustomAttributeData):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.Add(System.Reflection.CustomAttributeData):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Reflection.CustomAttributeData):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.Contains(System.Reflection.CustomAttributeData):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Reflection.CustomAttributeData[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.CopyTo(System.Reflection.CustomAttributeData[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Reflection.CustomAttributeData):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.Remove(System.Reflection.CustomAttributeData):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Reflection.CustomAttributeData&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.UI.RegisteredArrayDeclaration):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.Add(System.Web.UI.RegisteredArrayDeclaration):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.RegisteredArrayDeclaration):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.Contains(System.Web.UI.RegisteredArrayDeclaration):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.RegisteredArrayDeclaration[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.CopyTo(System.Web.UI.RegisteredArrayDeclaration[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.UI.RegisteredArrayDeclaration):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.Remove(System.Web.UI.RegisteredArrayDeclaration):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.Add(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.Contains(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Runtime.ExceptionServices.ExceptionDispatchInfo[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.CopyTo(System.Runtime.ExceptionServices.ExceptionDispatchInfo[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.Remove(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.UI.RegisteredArrayDeclaration&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.UI.RegisteredArrayDeclaration&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredArrayDeclaration&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredArrayDeclaration&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.UI.RegisteredDisposeScript&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredDisposeScript&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.UI.RegisteredDisposeScript):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.Add(System.Web.UI.RegisteredDisposeScript):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.RegisteredDisposeScript):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.Contains(System.Web.UI.RegisteredDisposeScript):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.RegisteredDisposeScript[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.CopyTo(System.Web.UI.RegisteredDisposeScript[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.UI.RegisteredDisposeScript):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.Remove(System.Web.UI.RegisteredDisposeScript):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.UI.RegisteredExpandoAttribute&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.UI.RegisteredExpandoAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredExpandoAttribute&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredExpandoAttribute&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.UI.RegisteredHiddenField&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.UI.RegisteredHiddenField&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredHiddenField&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.UI.RegisteredHiddenField&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredHiddenField&gt;</signature>
			</method>
		</class>
		<class name="KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;" uniqueID="System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;" uniqueID="KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;(System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Void">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;(System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.get_Key():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Web.UI.TemplateControl+AsyncEventMethodInfo">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.get_Value():System.Web.UI.TemplateControl+AsyncEventMethodInfo</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.UI.RegisteredHiddenField&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredHiddenField&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.UI.RegisteredHiddenField):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredHiddenField&gt;.Add(System.Web.UI.RegisteredHiddenField):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredHiddenField&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.RegisteredHiddenField):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredHiddenField&gt;.Contains(System.Web.UI.RegisteredHiddenField):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.RegisteredHiddenField[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredHiddenField&gt;.CopyTo(System.Web.UI.RegisteredHiddenField[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.UI.RegisteredHiddenField):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredHiddenField&gt;.Remove(System.Web.UI.RegisteredHiddenField):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredHiddenField&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredHiddenField&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.UI.RegisteredScript&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.UI.RegisteredScript&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredScript&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.UI.RegisteredScript&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredScript&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.UI.RegisteredScript&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredScript&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.UI.RegisteredScript):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredScript&gt;.Add(System.Web.UI.RegisteredScript):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredScript&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.RegisteredScript):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredScript&gt;.Contains(System.Web.UI.RegisteredScript):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.RegisteredScript[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredScript&gt;.CopyTo(System.Web.UI.RegisteredScript[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.UI.RegisteredScript):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredScript&gt;.Remove(System.Web.UI.RegisteredScript):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredScript&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.RegisteredScript&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptManagerProxy&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptManagerProxy&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptManagerProxy&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptManagerProxy&gt;.Add(System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptManagerProxy&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.ScriptManagerProxy):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptManagerProxy&gt;.Contains(System.Web.UI.ScriptManagerProxy):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.ScriptManagerProxy[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptManagerProxy&gt;.CopyTo(System.Web.UI.ScriptManagerProxy[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.UI.ScriptManagerProxy):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptManagerProxy&gt;.Remove(System.Web.UI.ScriptManagerProxy):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptManagerProxy&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Data.DataTable&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataTable&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataTable&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptReferenceBase&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReferenceBase&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptReferenceBase&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.UI.ScriptReferenceBase):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptReferenceBase&gt;.Add(System.Web.UI.ScriptReferenceBase):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptReferenceBase&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.ScriptReferenceBase):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptReferenceBase&gt;.Contains(System.Web.UI.ScriptReferenceBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.ScriptReferenceBase[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptReferenceBase&gt;.CopyTo(System.Web.UI.ScriptReferenceBase[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.UI.ScriptReferenceBase):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptReferenceBase&gt;.Remove(System.Web.UI.ScriptReferenceBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.ScriptReferenceBase&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IList&lt;System.Data.DataColumn&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataColumn):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;.IndexOf(System.Data.DataColumn):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataColumn):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;.Insert(System.Int32;System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataColumn">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;.get_Item(System.Int32):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataColumn):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;.set_Item(System.Int32;System.Data.DataColumn):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;</signature>
			</method>
		</class>
		<class name="ICollection&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;" uniqueID="System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.Add(System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.Contains(System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.TemplateControl+SyncEventMethodInfo[];System.Int32):System.Void">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.CopyTo(System.Web.UI.TemplateControl+SyncEventMethodInfo[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.Remove(System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
		</class>
		<class name="IComparer&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Collections.Generic.IComparer&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(Microsoft.SqlServer.Server.SmiExtendedMetaData;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Compare(Microsoft.SqlServer.Server.SmiExtendedMetaData;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Data.DataColumn&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Data.DataColumn&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Data.DataColumn;System.Data.DataColumn):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Data.DataColumn&gt;.Compare(System.Data.DataColumn;System.Data.DataColumn):System.Int32</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Attribute&gt;" uniqueID="List`1+Enumerator&lt;System.Attribute&gt;(System.Collections.Generic.List&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.List`1+Enumerator&lt;System.Attribute&gt;(System.Collections.Generic.List&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Attribute">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;.get_Current():System.Attribute</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Data.DataRow&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Data.DataRow&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Data.DataRow;System.Data.DataRow):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Data.DataRow&gt;.Compare(System.Data.DataRow;System.Data.DataRow):System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.ScriptReferenceBase">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Item(System.Int32):System.Web.UI.ScriptReferenceBase</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Data.DataTable&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Data.DataTable&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Data.DataTable;System.Data.DataTable):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Data.DataTable&gt;.Compare(System.Data.DataTable;System.Data.DataTable):System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Data.Index&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Data.Index&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Index">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Data.Index&gt;.get_Item(System.Int32):System.Data.Index</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Data.DataView&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Data.DataView&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Data.DataView;System.Data.DataView):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Data.DataView&gt;.Compare(System.Data.DataView;System.Data.DataView):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Data.DataViewListener&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Data.DataViewListener;System.Data.DataViewListener):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Data.DataViewListener&gt;.Compare(System.Data.DataViewListener;System.Data.DataViewListener):System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Reflection.CustomAttributeData&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Reflection.CustomAttributeData&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Reflection.CustomAttributeData">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Reflection.CustomAttributeData&gt;.get_Current():System.Reflection.CustomAttributeData</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Data.Index&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Data.Index&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Data.Index;System.Data.Index):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Data.Index&gt;.Compare(System.Data.Index;System.Data.Index):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Data.SqlClient.SqlParameter;System.Data.SqlClient.SqlParameter):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Data.SqlClient.SqlParameter&gt;.Compare(System.Data.SqlClient.SqlParameter;System.Data.SqlClient.SqlParameter):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Exception&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Exception&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Exception;System.Exception):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Exception&gt;.Compare(System.Exception;System.Exception):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Object[]&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Object[]&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Object[];System.Object[]):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Object[]&gt;.Compare(System.Object[];System.Object[]):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Threading.Tasks.Task;System.Threading.Tasks.Task):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;.Compare(System.Threading.Tasks.Task;System.Threading.Tasks.Task):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Web.UI.ScriptManagerProxy;System.Web.UI.ScriptManagerProxy):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptManagerProxy&gt;.Compare(System.Web.UI.ScriptManagerProxy;System.Web.UI.ScriptManagerProxy):System.Int32</signature>
			</method>
		</class>
		<class name="IComparer&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Public" methodKind="Member" name="Compare" uniqueID="Compare(System.Web.UI.ScriptReferenceBase;System.Web.UI.ScriptReferenceBase):System.Int32">
				<signature>System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptReferenceBase&gt;.Compare(System.Web.UI.ScriptReferenceBase;System.Web.UI.ScriptReferenceBase):System.Int32</signature>
			</method>
		</class>
		<class name="IDictionary&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;" uniqueID="System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.Add(System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.TryGetValue(System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Web.UI.TemplateControl+AsyncEventMethodInfo">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.get_Item(System.String):System.Web.UI.TemplateControl+AsyncEventMethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;.set_Item(System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo):System.Void</signature>
			</method>
		</class>
		<class name="IDictionary&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;" uniqueID="System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.Add(System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TryGetValue" uniqueID="TryGetValue(System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Boolean">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.TryGetValue(System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Web.UI.TemplateControl+SyncEventMethodInfo">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.get_Item(System.String):System.Web.UI.TemplateControl+SyncEventMethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.get_Keys():System.Collections.Generic.ICollection&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.get_Values():System.Collections.Generic.ICollection&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Void">
				<signature>System.Collections.Generic.IDictionary&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.set_Item(System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Char&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Char&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Char&gt;</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Data.DataViewListener&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataViewListener&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerable&lt;System.Reflection.Assembly&gt;" uniqueID="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.Assembly&gt;">
				<signature>System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Reflection.Assembly&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Attribute">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;.get_Current():System.Attribute</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Data.DataRow&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Data.DataRow&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataRow">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Data.DataRow&gt;.get_Item(System.Int32):System.Data.DataRow</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Web.UI.RegisteredScript&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.RegisteredScript&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredScript">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.RegisteredScript&gt;.get_Item(System.Int32):System.Web.UI.RegisteredScript</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():Microsoft.SqlServer.Server.SmiExtendedMetaData">
				<signature>System.Collections.Generic.IEnumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Current():Microsoft.SqlServer.Server.SmiExtendedMetaData</signature>
			</method>
		</class>
		<class name="IList&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.ScriptReferenceBase):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;.IndexOf(System.Web.UI.ScriptReferenceBase):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;.Insert(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.ScriptReferenceBase">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Item(System.Int32):System.Web.UI.ScriptReferenceBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;.set_Item(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;&gt;.get_Current():System.Collections.Generic.KeyValuePair&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.DataColumn&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.DataColumn&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataColumn">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.DataColumn&gt;.get_Current():System.Data.DataColumn</signature>
			</method>
		</class>
		<class name="IEqualityComparer&lt;System.String&gt;" uniqueID="System.Collections.Generic.IEqualityComparer&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.String;System.String):System.Boolean">
				<signature>System.Collections.Generic.IEqualityComparer&lt;System.String&gt;.Equals(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode(System.String):System.Int32">
				<signature>System.Collections.Generic.IEqualityComparer&lt;System.String&gt;.GetHashCode(System.String):System.Int32</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.DataRelation&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.DataRelation&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataRelation">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.DataRelation&gt;.get_Current():System.Data.DataRelation</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.DataRow&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.DataRow&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataRow">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.DataRow&gt;.get_Current():System.Data.DataRow</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.DataTable&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.DataTable&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataTable">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.DataTable&gt;.get_Current():System.Data.DataTable</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.DataView&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.DataView&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataView">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.DataView&gt;.get_Current():System.Data.DataView</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.DataViewListener&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataViewListener">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.DataViewListener&gt;.get_Current():System.Data.DataViewListener</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.Index&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.Index&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.Index">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.Index&gt;.get_Current():System.Data.Index</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.SqlClient.SqlParameter">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Data.SqlClient.SqlParameter&gt;.get_Current():System.Data.SqlClient.SqlParameter</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Exception&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Exception&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Exception">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Exception&gt;.get_Current():System.Exception</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Object[]&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Object[]&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Object[]">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Object[]&gt;.get_Current():System.Object[]</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Reflection.Assembly&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Reflection.Assembly&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Reflection.Assembly">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Reflection.Assembly&gt;.get_Current():System.Reflection.Assembly</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Runtime.ExceptionServices.ExceptionDispatchInfo">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.get_Current():System.Runtime.ExceptionServices.ExceptionDispatchInfo</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.UI.RegisteredArrayDeclaration&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredArrayDeclaration&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.UI.RegisteredArrayDeclaration">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.get_Current():System.Web.UI.RegisteredArrayDeclaration</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.UI.RegisteredExpandoAttribute&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredExpandoAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.UI.RegisteredExpandoAttribute">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.get_Current():System.Web.UI.RegisteredExpandoAttribute</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.UI.RegisteredHiddenField&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredHiddenField&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.UI.RegisteredHiddenField">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredHiddenField&gt;.get_Current():System.Web.UI.RegisteredHiddenField</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.UI.RegisteredScript&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredScript&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.UI.RegisteredScript">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredScript&gt;.get_Current():System.Web.UI.RegisteredScript</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.UI.ScriptManagerProxy">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Current():System.Web.UI.ScriptManagerProxy</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.UI.ScriptReferenceBase">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Current():System.Web.UI.ScriptReferenceBase</signature>
			</method>
		</class>
		<class name="IEnumerator&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;" uniqueID="System.Collections.Generic.IEnumerator&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.UI.TemplateControl+SyncEventMethodInfo">
				<signature>System.Collections.Generic.IEnumerator&lt;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.get_Current():System.Web.UI.TemplateControl+SyncEventMethodInfo</signature>
			</method>
		</class>
		<class name="IEqualityComparer&lt;System.Collections.Generic.HashSet&lt;System.String&gt;&gt;" uniqueID="System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.HashSet&lt;System.String&gt;&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.HashSet&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.HashSet&lt;System.String&gt;&gt;.Equals(System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.HashSet&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.HashSet&lt;System.String&gt;&gt;.GetHashCode(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Int32</signature>
			</method>
		</class>
		<class name="IEqualityComparer&lt;System.Type&gt;" uniqueID="System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Type;System.Type):System.Boolean">
				<signature>System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;.Equals(System.Type;System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode(System.Type):System.Int32">
				<signature>System.Collections.Generic.IEqualityComparer&lt;System.Type&gt;.GetHashCode(System.Type):System.Int32</signature>
			</method>
		</class>
		<class name="IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32">
				<signature>System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.IndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void">
				<signature>System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Insert(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):Microsoft.SqlServer.Server.SmiExtendedMetaData">
				<signature>System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Item(System.Int32):Microsoft.SqlServer.Server.SmiExtendedMetaData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void">
				<signature>System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.set_Item(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Object[]&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Object[]&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object[]">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Object[]&gt;.get_Item(System.Int32):System.Object[]</signature>
			</method>
		</class>
		<class name="List&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Synchronized(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Web.UI.ScriptReferenceBase):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Add(System.Web.UI.ScriptReferenceBase):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Web.UI.ScriptReferenceBase;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.BinarySearch(System.Int32;System.Int32;System.Web.UI.ScriptReferenceBase;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Web.UI.ScriptReferenceBase):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.BinarySearch(System.Web.UI.ScriptReferenceBase):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Web.UI.ScriptReferenceBase;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.BinarySearch(System.Web.UI.ScriptReferenceBase;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.ScriptReferenceBase):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Contains(System.Web.UI.ScriptReferenceBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Web.UI.ScriptReferenceBase[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.CopyTo(System.Int32;System.Web.UI.ScriptReferenceBase[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.ScriptReferenceBase[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.CopyTo(System.Web.UI.ScriptReferenceBase[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.ScriptReferenceBase[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.CopyTo(System.Web.UI.ScriptReferenceBase[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Exists(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Web.UI.ScriptReferenceBase">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Find(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Web.UI.ScriptReferenceBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.FindAll(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.FindIndex(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Web.UI.ScriptReferenceBase">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.FindLast(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Web.UI.ScriptReferenceBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.FindLastIndex(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.ForEach(System.Action&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.ScriptReferenceBase):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.IndexOf(System.Web.UI.ScriptReferenceBase):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.ScriptReferenceBase;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.IndexOf(System.Web.UI.ScriptReferenceBase;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.ScriptReferenceBase;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.IndexOf(System.Web.UI.ScriptReferenceBase;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Insert(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Web.UI.ScriptReferenceBase):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.LastIndexOf(System.Web.UI.ScriptReferenceBase):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Web.UI.ScriptReferenceBase;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.LastIndexOf(System.Web.UI.ScriptReferenceBase;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Web.UI.ScriptReferenceBase;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.LastIndexOf(System.Web.UI.ScriptReferenceBase;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="List&lt;System.Web.UI.ScriptReferenceBase&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.List&lt;System.Web.UI.ScriptReferenceBase&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="List&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.List&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="List&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.List&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Web.UI.ScriptReferenceBase):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Remove(System.Web.UI.ScriptReferenceBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.RemoveAll(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Sort(System.Comparison&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptReferenceBase&gt;">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptReferenceBase&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Web.UI.ScriptReferenceBase[]">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.ToArray():System.Web.UI.ScriptReferenceBase[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.TrueForAll(System.Predicate&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.ScriptReferenceBase">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Item(System.Int32):System.Web.UI.ScriptReferenceBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;.set_Item(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Attribute):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Attribute&gt;.IndexOf(System.Attribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Attribute&gt;.Insert(System.Int32;System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Attribute&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Attribute">
				<signature>System.Collections.Generic.IList&lt;System.Attribute&gt;.get_Item(System.Int32):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Attribute&gt;.set_Item(System.Int32;System.Attribute):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Threading.Tasks.Task">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Threading.Tasks.Task&gt;.get_Item(System.Int32):System.Threading.Tasks.Task</signature>
			</method>
		</class>
		<class name="IList&lt;System.Data.DataRelation&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRelation):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;.IndexOf(System.Data.DataRelation):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataRelation):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;.Insert(System.Int32;System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataRelation">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;.get_Item(System.Int32):System.Data.DataRelation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataRelation):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;.set_Item(System.Int32;System.Data.DataRelation):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Data.DataRow&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Data.DataRow&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRow):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataRow&gt;.IndexOf(System.Data.DataRow):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataRow):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataRow&gt;.Insert(System.Int32;System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataRow&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataRow">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataRow&gt;.get_Item(System.Int32):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataRow):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataRow&gt;.set_Item(System.Int32;System.Data.DataRow):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.RegisteredArrayDeclaration):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.IndexOf(System.Web.UI.RegisteredArrayDeclaration):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.UI.RegisteredArrayDeclaration):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.Insert(System.Int32;System.Web.UI.RegisteredArrayDeclaration):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredArrayDeclaration">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.get_Item(System.Int32):System.Web.UI.RegisteredArrayDeclaration</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.UI.RegisteredArrayDeclaration):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.set_Item(System.Int32;System.Web.UI.RegisteredArrayDeclaration):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Data.DataTable&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Data.DataTable&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataTable):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataTable&gt;.IndexOf(System.Data.DataTable):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataTable):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataTable&gt;.Insert(System.Int32;System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataTable&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataTable">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataTable&gt;.get_Item(System.Int32):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataTable):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataTable&gt;.set_Item(System.Int32;System.Data.DataTable):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Data.DataRow&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataRow&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataRow&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IList&lt;System.Data.DataView&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Data.DataView&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataView):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataView&gt;.IndexOf(System.Data.DataView):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataView):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataView&gt;.Insert(System.Int32;System.Data.DataView):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataView&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataView">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataView&gt;.get_Item(System.Int32):System.Data.DataView</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataView):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataView&gt;.set_Item(System.Int32;System.Data.DataView):System.Void</signature>
			</method>
		</class>
		<class name="HashSet`1" uniqueID="System.Collections.Generic.HashSet`1">
			<method accessibility="Private" methodKind="Static" name="AreEqualityComparersEqual" uniqueID="AreEqualityComparersEqual(System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.HashSet&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.AreEqualityComparersEqual(System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.HashSet&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateSetComparer" uniqueID="CreateSetComparer():System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.HashSet&lt;System.String&gt;&gt;">
				<signature>System.Collections.Generic.HashSet`1.CreateSetComparer():System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.HashSet&lt;System.String&gt;&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="HashSetEquals" uniqueID="HashSetEquals(System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.HashSetEquals(System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.Add(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddIfNotPresent" uniqueID="AddIfNotPresent(System.String):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.AddIfNotPresent(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddOrGetLocation" uniqueID="AddOrGetLocation(System.String;System.Int32):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.AddOrGetLocation(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckUniqueAndUnfoundElements" uniqueID="CheckUniqueAndUnfoundElements(System.Collections.Generic.IEnumerable&lt;System.String&gt;;System.Boolean):System.Collections.Generic.HashSet`1+ElementCount&lt;System.String&gt;">
				<signature>System.Collections.Generic.HashSet`1.CheckUniqueAndUnfoundElements(System.Collections.Generic.IEnumerable&lt;System.String&gt;;System.Boolean):System.Collections.Generic.HashSet`1+ElementCount&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.HashSet`1.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ContainsAllElements" uniqueID="ContainsAllElements(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.ContainsAllElements(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[]):System.Void">
				<signature>System.Collections.Generic.HashSet`1.CopyTo(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.HashSet`1.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.HashSet`1.CopyTo(System.String[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExceptWith" uniqueID="ExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.HashSet`1+Enumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.HashSet`1.GetEnumerator():System.Collections.Generic.HashSet`1+Enumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HashSet`1" uniqueID="HashSet`1():System.Void">
				<signature>System.Collections.Generic.HashSet`1.HashSet`1():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HashSet`1" uniqueID="HashSet`1(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1.HashSet`1(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HashSet`1" uniqueID="HashSet`1(System.Collections.Generic.IEnumerable&lt;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1.HashSet`1(System.Collections.Generic.IEnumerable&lt;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HashSet`1" uniqueID="HashSet`1(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1.HashSet`1(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HashSet`1" uniqueID="HashSet`1(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.HashSet`1.HashSet`1(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IncreaseCapacity" uniqueID="IncreaseCapacity():System.Void">
				<signature>System.Collections.Generic.HashSet`1.IncreaseCapacity():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Int32):System.Void">
				<signature>System.Collections.Generic.HashSet`1.Initialize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalGetHashCode" uniqueID="InternalGetHashCode(System.String):System.Int32">
				<signature>System.Collections.Generic.HashSet`1.InternalGetHashCode(System.String):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalIndexOf" uniqueID="InternalIndexOf(System.String):System.Int32">
				<signature>System.Collections.Generic.HashSet`1.InternalIndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IntersectWith" uniqueID="IntersectWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IntersectWithEnumerable" uniqueID="IntersectWithEnumerable(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1.IntersectWithEnumerable(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IntersectWithHashSetWithSameEC" uniqueID="IntersectWithHashSetWithSameEC(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1.IntersectWithHashSetWithSameEC(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsProperSubsetOf" uniqueID="IsProperSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsProperSupersetOf" uniqueID="IsProperSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSubsetOf" uniqueID="IsSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsSubsetOfHashSetWithSameEC" uniqueID="IsSubsetOfHashSetWithSameEC(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.IsSubsetOfHashSetWithSameEC(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSupersetOf" uniqueID="IsSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Collections.Generic.HashSet`1.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Overlaps" uniqueID="Overlaps(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveWhere" uniqueID="RemoveWhere(System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetCapacity" uniqueID="SetCapacity(System.Int32;System.Boolean):System.Void">
				<signature>System.Collections.Generic.HashSet`1.SetCapacity(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetEquals" uniqueID="SetEquals(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SymmetricExceptWith" uniqueID="SymmetricExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SymmetricExceptWithEnumerable" uniqueID="SymmetricExceptWithEnumerable(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1.SymmetricExceptWithEnumerable(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SymmetricExceptWithUniqueHashSet" uniqueID="SymmetricExceptWithUniqueHashSet(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1.SymmetricExceptWithUniqueHashSet(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.String):System.Void">
				<signature>System.Collections.Generic.HashSet`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.HashSet`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.HashSet`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.HashSet`1.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ToArray" uniqueID="ToArray():System.String[]">
				<signature>System.Collections.Generic.HashSet`1.ToArray():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.HashSet`1.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnionWith" uniqueID="UnionWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Comparer" uniqueID="get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;">
				<signature>System.Collections.Generic.HashSet`1.get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.HashSet`1.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IList&lt;System.Data.DataViewListener&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataViewListener):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;.IndexOf(System.Data.DataViewListener):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataViewListener):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;.Insert(System.Int32;System.Data.DataViewListener):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataViewListener">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;.get_Item(System.Int32):System.Data.DataViewListener</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataViewListener):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;.set_Item(System.Int32;System.Data.DataViewListener):System.Void</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Exception&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Exception&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Exception&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Exception&gt;" uniqueID="List`1+Enumerator&lt;System.Exception&gt;(System.Collections.Generic.List&lt;System.Exception&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Exception&gt;.List`1+Enumerator&lt;System.Exception&gt;(System.Collections.Generic.List&lt;System.Exception&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Exception&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Exception&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Exception&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Exception&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Exception">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Exception&gt;.get_Current():System.Exception</signature>
			</method>
		</class>
		<class name="IList&lt;System.Data.Index&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Data.Index&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Index):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Data.Index&gt;.IndexOf(System.Data.Index):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.Index):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Index&gt;.Insert(System.Int32;System.Data.Index):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Index&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Index">
				<signature>System.Collections.Generic.IList&lt;System.Data.Index&gt;.get_Item(System.Int32):System.Data.Index</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.Index):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Data.Index&gt;.set_Item(System.Int32;System.Data.Index):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Object[]&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Object[]&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object[]):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Object[]&gt;.IndexOf(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Object[]):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Object[]&gt;.Insert(System.Int32;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Object[]&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object[]">
				<signature>System.Collections.Generic.IList&lt;System.Object[]&gt;.get_Item(System.Int32):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Object[]):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Object[]&gt;.set_Item(System.Int32;System.Object[]):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Reflection.CustomAttributeData&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Reflection.CustomAttributeData):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;.IndexOf(System.Reflection.CustomAttributeData):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Reflection.CustomAttributeData):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;.Insert(System.Int32;System.Reflection.CustomAttributeData):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Reflection.CustomAttributeData">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;.get_Item(System.Int32):System.Reflection.CustomAttributeData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Reflection.CustomAttributeData):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;.set_Item(System.Int32;System.Reflection.CustomAttributeData):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.IndexOf(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.Insert(System.Int32;System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Runtime.ExceptionServices.ExceptionDispatchInfo">
				<signature>System.Collections.Generic.IList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.get_Item(System.Int32):System.Runtime.ExceptionServices.ExceptionDispatchInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.set_Item(System.Int32;System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Threading.Tasks.Task):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;.IndexOf(System.Threading.Tasks.Task):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;.Insert(System.Int32;System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Threading.Tasks.Task">
				<signature>System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;.get_Item(System.Int32):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;.set_Item(System.Int32;System.Threading.Tasks.Task):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Web.UI.RegisteredDisposeScript&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Web.UI.RegisteredDisposeScript&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.RegisteredDisposeScript):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredDisposeScript&gt;.IndexOf(System.Web.UI.RegisteredDisposeScript):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.UI.RegisteredDisposeScript):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredDisposeScript&gt;.Insert(System.Int32;System.Web.UI.RegisteredDisposeScript):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredDisposeScript&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredDisposeScript">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredDisposeScript&gt;.get_Item(System.Int32):System.Web.UI.RegisteredDisposeScript</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.UI.RegisteredDisposeScript):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredDisposeScript&gt;.set_Item(System.Int32;System.Web.UI.RegisteredDisposeScript):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Web.UI.RegisteredHiddenField&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Web.UI.RegisteredHiddenField&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.RegisteredHiddenField):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredHiddenField&gt;.IndexOf(System.Web.UI.RegisteredHiddenField):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.UI.RegisteredHiddenField):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredHiddenField&gt;.Insert(System.Int32;System.Web.UI.RegisteredHiddenField):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredHiddenField&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredHiddenField">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredHiddenField&gt;.get_Item(System.Int32):System.Web.UI.RegisteredHiddenField</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.UI.RegisteredHiddenField):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.RegisteredHiddenField&gt;.set_Item(System.Int32;System.Web.UI.RegisteredHiddenField):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.List&lt;System.Attribute&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Attribute&gt;):System.Collections.Generic.IList&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Synchronized(System.Collections.Generic.List&lt;System.Attribute&gt;):System.Collections.Generic.IList&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Attribute):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Add(System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Attribute):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.BinarySearch(System.Attribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Attribute;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.BinarySearch(System.Attribute;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Attribute;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.BinarySearch(System.Int32;System.Int32;System.Attribute;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Attribute):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Contains(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Attribute[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.CopyTo(System.Attribute[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Attribute[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.CopyTo(System.Attribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Attribute[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.CopyTo(System.Int32;System.Attribute[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Attribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Exists(System.Predicate&lt;System.Attribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Attribute&gt;):System.Attribute">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Find(System.Predicate&lt;System.Attribute&gt;):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Attribute&gt;):System.Collections.Generic.List&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindAll(System.Predicate&lt;System.Attribute&gt;):System.Collections.Generic.List&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindIndex(System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Attribute&gt;):System.Attribute">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindLast(System.Predicate&lt;System.Attribute&gt;):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.FindLastIndex(System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.ForEach(System.Action&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Attribute):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.IndexOf(System.Attribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Attribute;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.IndexOf(System.Attribute;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Attribute;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.IndexOf(System.Attribute;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Insert(System.Int32;System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Attribute):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.LastIndexOf(System.Attribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Attribute;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.LastIndexOf(System.Attribute;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Attribute;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.LastIndexOf(System.Attribute;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Attribute&gt;" uniqueID="List&lt;System.Attribute&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.List&lt;System.Attribute&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Attribute&gt;" uniqueID="List&lt;System.Attribute&gt;(System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.List&lt;System.Attribute&gt;(System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Attribute&gt;" uniqueID="List&lt;System.Attribute&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.List&lt;System.Attribute&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Attribute):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Remove(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Attribute&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.RemoveAll(System.Predicate&lt;System.Attribute&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Sort(System.Comparison&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Attribute[]">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.ToArray():System.Attribute[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Attribute&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.TrueForAll(System.Predicate&lt;System.Attribute&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Attribute">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.get_Item(System.Int32):System.Attribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Attribute&gt;.set_Item(System.Int32;System.Attribute):System.Void</signature>
			</method>
		</class>
		<class name="IList&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.ScriptManagerProxy):System.Int32">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;.IndexOf(System.Web.UI.ScriptManagerProxy):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;.Insert(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.ScriptManagerProxy">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Item(System.Int32):System.Web.UI.ScriptManagerProxy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;.set_Item(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Data.DataColumn&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataColumn&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataColumn&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="HashSet&lt;System.String&gt;" uniqueID="System.Collections.Generic.HashSet&lt;System.String&gt;">
			<method accessibility="Private" methodKind="Static" name="AreEqualityComparersEqual" uniqueID="AreEqualityComparersEqual(System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.HashSet&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.AreEqualityComparersEqual(System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.HashSet&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateSetComparer" uniqueID="CreateSetComparer():System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.HashSet&lt;System.String&gt;&gt;">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.CreateSetComparer():System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.HashSet&lt;System.String&gt;&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="HashSetEquals" uniqueID="HashSetEquals(System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.HashSetEquals(System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.HashSet&lt;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.Add(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddIfNotPresent" uniqueID="AddIfNotPresent(System.String):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.AddIfNotPresent(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddOrGetLocation" uniqueID="AddOrGetLocation(System.String;System.Int32):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.AddOrGetLocation(System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckUniqueAndUnfoundElements" uniqueID="CheckUniqueAndUnfoundElements(System.Collections.Generic.IEnumerable&lt;System.String&gt;;System.Boolean):System.Collections.Generic.HashSet`1+ElementCount&lt;System.String&gt;">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.CheckUniqueAndUnfoundElements(System.Collections.Generic.IEnumerable&lt;System.String&gt;;System.Boolean):System.Collections.Generic.HashSet`1+ElementCount&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ContainsAllElements" uniqueID="ContainsAllElements(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.ContainsAllElements(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[]):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.CopyTo(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.CopyTo(System.String[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.String[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.CopyTo(System.String[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExceptWith" uniqueID="ExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.ExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.HashSet`1+Enumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.GetEnumerator():System.Collections.Generic.HashSet`1+Enumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HashSet&lt;System.String&gt;" uniqueID="HashSet&lt;System.String&gt;():System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.HashSet&lt;System.String&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HashSet&lt;System.String&gt;" uniqueID="HashSet&lt;System.String&gt;(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.HashSet&lt;System.String&gt;(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HashSet&lt;System.String&gt;" uniqueID="HashSet&lt;System.String&gt;(System.Collections.Generic.IEnumerable&lt;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.HashSet&lt;System.String&gt;(System.Collections.Generic.IEnumerable&lt;System.String&gt;;System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HashSet&lt;System.String&gt;" uniqueID="HashSet&lt;System.String&gt;(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.HashSet&lt;System.String&gt;(System.Collections.Generic.IEqualityComparer&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HashSet&lt;System.String&gt;" uniqueID="HashSet&lt;System.String&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.HashSet&lt;System.String&gt;(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IncreaseCapacity" uniqueID="IncreaseCapacity():System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.IncreaseCapacity():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Initialize" uniqueID="Initialize(System.Int32):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.Initialize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalGetHashCode" uniqueID="InternalGetHashCode(System.String):System.Int32">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.InternalGetHashCode(System.String):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalIndexOf" uniqueID="InternalIndexOf(System.String):System.Int32">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.InternalIndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IntersectWith" uniqueID="IntersectWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.IntersectWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IntersectWithEnumerable" uniqueID="IntersectWithEnumerable(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.IntersectWithEnumerable(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IntersectWithHashSetWithSameEC" uniqueID="IntersectWithHashSetWithSameEC(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.IntersectWithHashSetWithSameEC(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsProperSubsetOf" uniqueID="IsProperSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.IsProperSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsProperSupersetOf" uniqueID="IsProperSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.IsProperSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSubsetOf" uniqueID="IsSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.IsSubsetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsSubsetOfHashSetWithSameEC" uniqueID="IsSubsetOfHashSetWithSameEC(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.IsSubsetOfHashSetWithSameEC(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSupersetOf" uniqueID="IsSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.IsSupersetOf(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Overlaps" uniqueID="Overlaps(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.Overlaps(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.Remove(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveWhere" uniqueID="RemoveWhere(System.Predicate&lt;System.String&gt;):System.Int32">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.RemoveWhere(System.Predicate&lt;System.String&gt;):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetCapacity" uniqueID="SetCapacity(System.Int32;System.Boolean):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.SetCapacity(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetEquals" uniqueID="SetEquals(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.SetEquals(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SymmetricExceptWith" uniqueID="SymmetricExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.SymmetricExceptWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SymmetricExceptWithEnumerable" uniqueID="SymmetricExceptWithEnumerable(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.SymmetricExceptWithEnumerable(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SymmetricExceptWithUniqueHashSet" uniqueID="SymmetricExceptWithUniqueHashSet(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.SymmetricExceptWithUniqueHashSet(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.String):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ToArray" uniqueID="ToArray():System.String[]">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.ToArray():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnionWith" uniqueID="UnionWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.UnionWith(System.Collections.Generic.IEnumerable&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Comparer" uniqueID="get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.get_Comparer():System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.HashSet&lt;System.String&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Data.DataRelation&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataRelation&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataRelation&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Data.DataView&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataView&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Data.DataView&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Data.Index&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Data.Index&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Data.Index&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Object[]&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Object[]&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Object[]&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="List&lt;System.Data.DataViewListener&gt;" uniqueID="System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;):System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Synchronized(System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;):System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataViewListener):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Add(System.Data.DataViewListener):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataViewListener&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataViewListener&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataViewListener):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.BinarySearch(System.Data.DataViewListener):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataViewListener;System.Collections.Generic.IComparer&lt;System.Data.DataViewListener&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.BinarySearch(System.Data.DataViewListener;System.Collections.Generic.IComparer&lt;System.Data.DataViewListener&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Data.DataViewListener;System.Collections.Generic.IComparer&lt;System.Data.DataViewListener&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.BinarySearch(System.Int32;System.Int32;System.Data.DataViewListener;System.Collections.Generic.IComparer&lt;System.Data.DataViewListener&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataViewListener):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Contains(System.Data.DataViewListener):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataViewListener[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.CopyTo(System.Data.DataViewListener[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataViewListener[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.CopyTo(System.Data.DataViewListener[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Data.DataViewListener[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.CopyTo(System.Int32;System.Data.DataViewListener[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Exists(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Data.DataViewListener">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Find(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Data.DataViewListener</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.FindAll(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.FindIndex(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Data.DataViewListener">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.FindLast(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Data.DataViewListener</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.FindLastIndex(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Data.DataViewListener&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.ForEach(System.Action&lt;System.Data.DataViewListener&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataViewListener&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataViewListener&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataViewListener):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.IndexOf(System.Data.DataViewListener):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataViewListener;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.IndexOf(System.Data.DataViewListener;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataViewListener;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.IndexOf(System.Data.DataViewListener;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataViewListener):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Insert(System.Int32;System.Data.DataViewListener):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataViewListener&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataViewListener&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataViewListener):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.LastIndexOf(System.Data.DataViewListener):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataViewListener;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.LastIndexOf(System.Data.DataViewListener;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataViewListener;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.LastIndexOf(System.Data.DataViewListener;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataViewListener&gt;" uniqueID="List&lt;System.Data.DataViewListener&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.List&lt;System.Data.DataViewListener&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataViewListener&gt;" uniqueID="List&lt;System.Data.DataViewListener&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataViewListener&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.List&lt;System.Data.DataViewListener&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataViewListener&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataViewListener&gt;" uniqueID="List&lt;System.Data.DataViewListener&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.List&lt;System.Data.DataViewListener&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataViewListener):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Remove(System.Data.DataViewListener):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.RemoveAll(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Data.DataViewListener&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Data.DataViewListener&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Data.DataViewListener&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Sort(System.Comparison&lt;System.Data.DataViewListener&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataViewListener&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataViewListener&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataViewListener&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataViewListener&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Data.DataViewListener[]">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.ToArray():System.Data.DataViewListener[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.TrueForAll(System.Predicate&lt;System.Data.DataViewListener&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataViewListener">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.get_Item(System.Int32):System.Data.DataViewListener</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataViewListener):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;.set_Item(System.Int32;System.Data.DataViewListener):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.IReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Count():System.Int32</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):Microsoft.SqlServer.Server.SmiExtendedMetaData">
				<signature>System.Collections.Generic.IReadOnlyList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Item(System.Int32):Microsoft.SqlServer.Server.SmiExtendedMetaData</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Attribute&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Attribute&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Attribute">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Attribute&gt;.get_Item(System.Int32):System.Attribute</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Data.DataColumn&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Data.DataColumn&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataColumn">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Data.DataColumn&gt;.get_Item(System.Int32):System.Data.DataColumn</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Data.DataRelation&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Data.DataRelation&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataRelation">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Data.DataRelation&gt;.get_Item(System.Int32):System.Data.DataRelation</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Data.DataTable&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Data.DataTable&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataTable">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Data.DataTable&gt;.get_Item(System.Int32):System.Data.DataTable</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Data.DataView&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Data.DataView&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataView">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Data.DataView&gt;.get_Item(System.Int32):System.Data.DataView</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Data.DataViewListener&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataViewListener">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Data.DataViewListener&gt;.get_Item(System.Int32):System.Data.DataViewListener</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.SqlClient.SqlParameter">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Data.SqlClient.SqlParameter&gt;.get_Item(System.Int32):System.Data.SqlClient.SqlParameter</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Exception&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Exception&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Exception">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Exception&gt;.get_Item(System.Int32):System.Exception</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Runtime.ExceptionServices.ExceptionDispatchInfo">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.get_Item(System.Int32):System.Runtime.ExceptionServices.ExceptionDispatchInfo</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredArrayDeclaration">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.get_Item(System.Int32):System.Web.UI.RegisteredArrayDeclaration</signature>
			</method>
		</class>
		<class name="List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Synchronized(System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Add(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.BinarySearch(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Collections.Generic.IComparer&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.BinarySearch(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Collections.Generic.IComparer&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Collections.Generic.IComparer&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.BinarySearch(System.Int32;System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Collections.Generic.IComparer&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Contains(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(Microsoft.SqlServer.Server.SmiExtendedMetaData[]):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.CopyTo(Microsoft.SqlServer.Server.SmiExtendedMetaData[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(Microsoft.SqlServer.Server.SmiExtendedMetaData[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.CopyTo(Microsoft.SqlServer.Server.SmiExtendedMetaData[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.CopyTo(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Exists(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):Microsoft.SqlServer.Server.SmiExtendedMetaData">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Find(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):Microsoft.SqlServer.Server.SmiExtendedMetaData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.FindAll(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.FindIndex(System.Int32;System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.FindIndex(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):Microsoft.SqlServer.Server.SmiExtendedMetaData">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.FindLast(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):Microsoft.SqlServer.Server.SmiExtendedMetaData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.FindLastIndex(System.Int32;System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.FindLastIndex(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.ForEach(System.Action&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.IndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.IndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.IndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Insert(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.LastIndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.LastIndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.LastIndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Remove(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.RemoveAll(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Sort(System.Collections.Generic.IComparer&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Sort(System.Comparison&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():Microsoft.SqlServer.Server.SmiExtendedMetaData[]">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.ToArray():Microsoft.SqlServer.Server.SmiExtendedMetaData[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.TrueForAll(System.Predicate&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):Microsoft.SqlServer.Server.SmiExtendedMetaData">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Item(System.Int32):Microsoft.SqlServer.Server.SmiExtendedMetaData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void">
				<signature>System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.set_Item(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Web.UI.RegisteredDisposeScript&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.RegisteredDisposeScript&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredDisposeScript">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.RegisteredDisposeScript&gt;.get_Item(System.Int32):System.Web.UI.RegisteredDisposeScript</signature>
			</method>
		</class>
		<class name="IReadOnlyList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;" uniqueID="System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredExpandoAttribute">
				<signature>System.Collections.Generic.IReadOnlyList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.get_Item(System.Int32):System.Web.UI.RegisteredExpandoAttribute</signature>
			</method>
		</class>
		<class name="KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;" uniqueID="System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;">
			<method accessibility="Public" methodKind="Member" name="KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;" uniqueID="KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;(System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Void">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;(System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.get_Key():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Web.UI.TemplateControl+SyncEventMethodInfo">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.String,System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;.get_Value():System.Web.UI.TemplateControl+SyncEventMethodInfo</signature>
			</method>
		</class>
		<class name="KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;">
			<method accessibility="Public" methodKind="Member" name="KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;" uniqueID="KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Type;System.AttributeUsageAttribute):System.Void">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;(System.Type;System.AttributeUsageAttribute):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.Type">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Key():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.AttributeUsageAttribute">
				<signature>System.Collections.Generic.KeyValuePair&lt;System.Type,System.AttributeUsageAttribute&gt;.get_Value():System.AttributeUsageAttribute</signature>
			</method>
		</class>
		<class name="List&lt;System.Data.DataColumn&gt;" uniqueID="System.Collections.Generic.List&lt;System.Data.DataColumn&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Data.DataColumn&gt;):System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Synchronized(System.Collections.Generic.List&lt;System.Data.DataColumn&gt;):System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataColumn):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Add(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataColumn&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataColumn&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataColumn):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.BinarySearch(System.Data.DataColumn):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataColumn;System.Collections.Generic.IComparer&lt;System.Data.DataColumn&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.BinarySearch(System.Data.DataColumn;System.Collections.Generic.IComparer&lt;System.Data.DataColumn&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Data.DataColumn;System.Collections.Generic.IComparer&lt;System.Data.DataColumn&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.BinarySearch(System.Int32;System.Int32;System.Data.DataColumn;System.Collections.Generic.IComparer&lt;System.Data.DataColumn&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataColumn):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Contains(System.Data.DataColumn):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataColumn[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.CopyTo(System.Data.DataColumn[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataColumn[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.CopyTo(System.Data.DataColumn[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Data.DataColumn[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.CopyTo(System.Int32;System.Data.DataColumn[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Data.DataColumn&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Exists(System.Predicate&lt;System.Data.DataColumn&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Data.DataColumn&gt;):System.Data.DataColumn">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Find(System.Predicate&lt;System.Data.DataColumn&gt;):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Data.DataColumn&gt;):System.Collections.Generic.List&lt;System.Data.DataColumn&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.FindAll(System.Predicate&lt;System.Data.DataColumn&gt;):System.Collections.Generic.List&lt;System.Data.DataColumn&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.FindIndex(System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Data.DataColumn&gt;):System.Data.DataColumn">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.FindLast(System.Predicate&lt;System.Data.DataColumn&gt;):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.FindLastIndex(System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Data.DataColumn&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.ForEach(System.Action&lt;System.Data.DataColumn&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataColumn&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataColumn&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataColumn&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataColumn&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataColumn):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.IndexOf(System.Data.DataColumn):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataColumn;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.IndexOf(System.Data.DataColumn;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataColumn;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.IndexOf(System.Data.DataColumn;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataColumn):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Insert(System.Int32;System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataColumn&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataColumn&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataColumn):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.LastIndexOf(System.Data.DataColumn):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataColumn;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.LastIndexOf(System.Data.DataColumn;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataColumn;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.LastIndexOf(System.Data.DataColumn;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataColumn&gt;" uniqueID="List&lt;System.Data.DataColumn&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.List&lt;System.Data.DataColumn&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataColumn&gt;" uniqueID="List&lt;System.Data.DataColumn&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataColumn&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.List&lt;System.Data.DataColumn&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataColumn&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataColumn&gt;" uniqueID="List&lt;System.Data.DataColumn&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.List&lt;System.Data.DataColumn&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataColumn):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Remove(System.Data.DataColumn):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.RemoveAll(System.Predicate&lt;System.Data.DataColumn&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Data.DataColumn&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Data.DataColumn&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Data.DataColumn&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Sort(System.Comparison&lt;System.Data.DataColumn&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataColumn&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataColumn&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataColumn&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataColumn&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Data.DataColumn[]">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.ToArray():System.Data.DataColumn[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Data.DataColumn&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.TrueForAll(System.Predicate&lt;System.Data.DataColumn&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataColumn">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.get_Item(System.Int32):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataColumn):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataColumn&gt;.set_Item(System.Int32;System.Data.DataColumn):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Data.DataRelation&gt;" uniqueID="System.Collections.Generic.List&lt;System.Data.DataRelation&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Data.DataRelation&gt;):System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Synchronized(System.Collections.Generic.List&lt;System.Data.DataRelation&gt;):System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataRelation):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Add(System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataRelation&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataRelation&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataRelation):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.BinarySearch(System.Data.DataRelation):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataRelation;System.Collections.Generic.IComparer&lt;System.Data.DataRelation&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.BinarySearch(System.Data.DataRelation;System.Collections.Generic.IComparer&lt;System.Data.DataRelation&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Data.DataRelation;System.Collections.Generic.IComparer&lt;System.Data.DataRelation&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.BinarySearch(System.Int32;System.Int32;System.Data.DataRelation;System.Collections.Generic.IComparer&lt;System.Data.DataRelation&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataRelation):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Contains(System.Data.DataRelation):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataRelation[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.CopyTo(System.Data.DataRelation[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataRelation[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.CopyTo(System.Data.DataRelation[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Data.DataRelation[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.CopyTo(System.Int32;System.Data.DataRelation[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Data.DataRelation&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Exists(System.Predicate&lt;System.Data.DataRelation&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Data.DataRelation&gt;):System.Data.DataRelation">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Find(System.Predicate&lt;System.Data.DataRelation&gt;):System.Data.DataRelation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Data.DataRelation&gt;):System.Collections.Generic.List&lt;System.Data.DataRelation&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.FindAll(System.Predicate&lt;System.Data.DataRelation&gt;):System.Collections.Generic.List&lt;System.Data.DataRelation&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.FindIndex(System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Data.DataRelation&gt;):System.Data.DataRelation">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.FindLast(System.Predicate&lt;System.Data.DataRelation&gt;):System.Data.DataRelation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.FindLastIndex(System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Data.DataRelation&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.ForEach(System.Action&lt;System.Data.DataRelation&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRelation&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRelation&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataRelation&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataRelation&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRelation):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.IndexOf(System.Data.DataRelation):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRelation;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.IndexOf(System.Data.DataRelation;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRelation;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.IndexOf(System.Data.DataRelation;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataRelation):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Insert(System.Int32;System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataRelation&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataRelation&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataRelation):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.LastIndexOf(System.Data.DataRelation):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataRelation;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.LastIndexOf(System.Data.DataRelation;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataRelation;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.LastIndexOf(System.Data.DataRelation;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataRelation&gt;" uniqueID="List&lt;System.Data.DataRelation&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.List&lt;System.Data.DataRelation&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataRelation&gt;" uniqueID="List&lt;System.Data.DataRelation&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataRelation&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.List&lt;System.Data.DataRelation&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataRelation&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataRelation&gt;" uniqueID="List&lt;System.Data.DataRelation&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.List&lt;System.Data.DataRelation&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataRelation):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Remove(System.Data.DataRelation):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.RemoveAll(System.Predicate&lt;System.Data.DataRelation&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Data.DataRelation&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Data.DataRelation&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Data.DataRelation&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Sort(System.Comparison&lt;System.Data.DataRelation&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataRelation&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataRelation&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRelation&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRelation&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Data.DataRelation[]">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.ToArray():System.Data.DataRelation[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Data.DataRelation&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.TrueForAll(System.Predicate&lt;System.Data.DataRelation&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataRelation">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.get_Item(System.Int32):System.Data.DataRelation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataRelation):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRelation&gt;.set_Item(System.Int32;System.Data.DataRelation):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Data.DataRow&gt;" uniqueID="System.Collections.Generic.List&lt;System.Data.DataRow&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Data.DataRow&gt;):System.Collections.Generic.IList&lt;System.Data.DataRow&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Synchronized(System.Collections.Generic.List&lt;System.Data.DataRow&gt;):System.Collections.Generic.IList&lt;System.Data.DataRow&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataRow):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Add(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataRow):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.BinarySearch(System.Data.DataRow):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataRow;System.Collections.Generic.IComparer&lt;System.Data.DataRow&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.BinarySearch(System.Data.DataRow;System.Collections.Generic.IComparer&lt;System.Data.DataRow&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Data.DataRow;System.Collections.Generic.IComparer&lt;System.Data.DataRow&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.BinarySearch(System.Int32;System.Int32;System.Data.DataRow;System.Collections.Generic.IComparer&lt;System.Data.DataRow&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataRow):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Contains(System.Data.DataRow):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataRow[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.CopyTo(System.Data.DataRow[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataRow[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.CopyTo(System.Data.DataRow[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Data.DataRow[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.CopyTo(System.Int32;System.Data.DataRow[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Data.DataRow&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Exists(System.Predicate&lt;System.Data.DataRow&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Data.DataRow&gt;):System.Data.DataRow">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Find(System.Predicate&lt;System.Data.DataRow&gt;):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Data.DataRow&gt;):System.Collections.Generic.List&lt;System.Data.DataRow&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.FindAll(System.Predicate&lt;System.Data.DataRow&gt;):System.Collections.Generic.List&lt;System.Data.DataRow&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataRow&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataRow&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Data.DataRow&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Data.DataRow&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Data.DataRow&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.FindIndex(System.Predicate&lt;System.Data.DataRow&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Data.DataRow&gt;):System.Data.DataRow">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.FindLast(System.Predicate&lt;System.Data.DataRow&gt;):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataRow&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataRow&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataRow&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataRow&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Data.DataRow&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.FindLastIndex(System.Predicate&lt;System.Data.DataRow&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.ForEach(System.Action&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRow&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRow&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataRow&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataRow&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRow):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.IndexOf(System.Data.DataRow):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRow;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.IndexOf(System.Data.DataRow;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRow;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.IndexOf(System.Data.DataRow;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataRow):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Insert(System.Int32;System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataRow):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.LastIndexOf(System.Data.DataRow):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataRow;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.LastIndexOf(System.Data.DataRow;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataRow;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.LastIndexOf(System.Data.DataRow;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataRow&gt;" uniqueID="List&lt;System.Data.DataRow&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.List&lt;System.Data.DataRow&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataRow&gt;" uniqueID="List&lt;System.Data.DataRow&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.List&lt;System.Data.DataRow&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataRow&gt;" uniqueID="List&lt;System.Data.DataRow&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.List&lt;System.Data.DataRow&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataRow):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Remove(System.Data.DataRow):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Data.DataRow&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.RemoveAll(System.Predicate&lt;System.Data.DataRow&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Sort(System.Comparison&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRow&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRow&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Data.DataRow[]">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.ToArray():System.Data.DataRow[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Data.DataRow&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.TrueForAll(System.Predicate&lt;System.Data.DataRow&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataRow">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.get_Item(System.Int32):System.Data.DataRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataRow):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataRow&gt;.set_Item(System.Int32;System.Data.DataRow):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Data.DataTable&gt;" uniqueID="System.Collections.Generic.List&lt;System.Data.DataTable&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.Collections.Generic.IList&lt;System.Data.DataTable&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Synchronized(System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.Collections.Generic.IList&lt;System.Data.DataTable&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataTable):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Add(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataTable&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataTable&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataTable):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.BinarySearch(System.Data.DataTable):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataTable;System.Collections.Generic.IComparer&lt;System.Data.DataTable&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.BinarySearch(System.Data.DataTable;System.Collections.Generic.IComparer&lt;System.Data.DataTable&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Data.DataTable;System.Collections.Generic.IComparer&lt;System.Data.DataTable&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.BinarySearch(System.Int32;System.Int32;System.Data.DataTable;System.Collections.Generic.IComparer&lt;System.Data.DataTable&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataTable):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Contains(System.Data.DataTable):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataTable[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.CopyTo(System.Data.DataTable[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataTable[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.CopyTo(System.Data.DataTable[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Data.DataTable[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.CopyTo(System.Int32;System.Data.DataTable[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Data.DataTable&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Exists(System.Predicate&lt;System.Data.DataTable&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Data.DataTable&gt;):System.Data.DataTable">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Find(System.Predicate&lt;System.Data.DataTable&gt;):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Data.DataTable&gt;):System.Collections.Generic.List&lt;System.Data.DataTable&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.FindAll(System.Predicate&lt;System.Data.DataTable&gt;):System.Collections.Generic.List&lt;System.Data.DataTable&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataTable&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataTable&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Data.DataTable&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Data.DataTable&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Data.DataTable&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.FindIndex(System.Predicate&lt;System.Data.DataTable&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Data.DataTable&gt;):System.Data.DataTable">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.FindLast(System.Predicate&lt;System.Data.DataTable&gt;):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataTable&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataTable&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataTable&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataTable&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Data.DataTable&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.FindLastIndex(System.Predicate&lt;System.Data.DataTable&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Data.DataTable&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.ForEach(System.Action&lt;System.Data.DataTable&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataTable&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataTable&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataTable&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataTable&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataTable):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.IndexOf(System.Data.DataTable):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataTable;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.IndexOf(System.Data.DataTable;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataTable;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.IndexOf(System.Data.DataTable;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataTable):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Insert(System.Int32;System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataTable&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataTable&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataTable):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.LastIndexOf(System.Data.DataTable):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataTable;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.LastIndexOf(System.Data.DataTable;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataTable;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.LastIndexOf(System.Data.DataTable;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataTable&gt;" uniqueID="List&lt;System.Data.DataTable&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.List&lt;System.Data.DataTable&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataTable&gt;" uniqueID="List&lt;System.Data.DataTable&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataTable&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.List&lt;System.Data.DataTable&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataTable&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataTable&gt;" uniqueID="List&lt;System.Data.DataTable&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.List&lt;System.Data.DataTable&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataTable):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Remove(System.Data.DataTable):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Data.DataTable&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.RemoveAll(System.Predicate&lt;System.Data.DataTable&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Data.DataTable&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Data.DataTable&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Data.DataTable&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Sort(System.Comparison&lt;System.Data.DataTable&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataTable&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataTable&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataTable&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataTable&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Data.DataTable[]">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.ToArray():System.Data.DataTable[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Data.DataTable&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.TrueForAll(System.Predicate&lt;System.Data.DataTable&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataTable">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.get_Item(System.Int32):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataTable):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataTable&gt;.set_Item(System.Int32;System.Data.DataTable):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Data.DataView&gt;" uniqueID="System.Collections.Generic.List&lt;System.Data.DataView&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Data.DataView&gt;):System.Collections.Generic.IList&lt;System.Data.DataView&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Synchronized(System.Collections.Generic.List&lt;System.Data.DataView&gt;):System.Collections.Generic.IList&lt;System.Data.DataView&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.DataView):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Add(System.Data.DataView):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataView&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.DataView&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataView):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.BinarySearch(System.Data.DataView):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.DataView;System.Collections.Generic.IComparer&lt;System.Data.DataView&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.BinarySearch(System.Data.DataView;System.Collections.Generic.IComparer&lt;System.Data.DataView&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Data.DataView;System.Collections.Generic.IComparer&lt;System.Data.DataView&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.BinarySearch(System.Int32;System.Int32;System.Data.DataView;System.Collections.Generic.IComparer&lt;System.Data.DataView&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataView):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Contains(System.Data.DataView):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataView[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.CopyTo(System.Data.DataView[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataView[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.CopyTo(System.Data.DataView[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Data.DataView[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.CopyTo(System.Int32;System.Data.DataView[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Data.DataView&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Exists(System.Predicate&lt;System.Data.DataView&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Data.DataView&gt;):System.Data.DataView">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Find(System.Predicate&lt;System.Data.DataView&gt;):System.Data.DataView</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Data.DataView&gt;):System.Collections.Generic.List&lt;System.Data.DataView&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.FindAll(System.Predicate&lt;System.Data.DataView&gt;):System.Collections.Generic.List&lt;System.Data.DataView&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataView&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataView&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Data.DataView&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Data.DataView&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Data.DataView&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.FindIndex(System.Predicate&lt;System.Data.DataView&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Data.DataView&gt;):System.Data.DataView">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.FindLast(System.Predicate&lt;System.Data.DataView&gt;):System.Data.DataView</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataView&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.DataView&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataView&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Data.DataView&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Data.DataView&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.FindLastIndex(System.Predicate&lt;System.Data.DataView&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Data.DataView&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.ForEach(System.Action&lt;System.Data.DataView&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataView&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataView&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataView&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.DataView&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataView):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.IndexOf(System.Data.DataView):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataView;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.IndexOf(System.Data.DataView;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataView;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.IndexOf(System.Data.DataView;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.DataView):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Insert(System.Int32;System.Data.DataView):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataView&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.DataView&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataView):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.LastIndexOf(System.Data.DataView):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataView;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.LastIndexOf(System.Data.DataView;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.DataView;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.LastIndexOf(System.Data.DataView;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataView&gt;" uniqueID="List&lt;System.Data.DataView&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.List&lt;System.Data.DataView&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataView&gt;" uniqueID="List&lt;System.Data.DataView&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataView&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.List&lt;System.Data.DataView&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.DataView&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.DataView&gt;" uniqueID="List&lt;System.Data.DataView&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.List&lt;System.Data.DataView&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.DataView):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Remove(System.Data.DataView):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Data.DataView&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.RemoveAll(System.Predicate&lt;System.Data.DataView&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Data.DataView&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Data.DataView&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Data.DataView&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Sort(System.Comparison&lt;System.Data.DataView&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataView&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.DataView&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataView&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataView&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Data.DataView[]">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.ToArray():System.Data.DataView[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Data.DataView&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.TrueForAll(System.Predicate&lt;System.Data.DataView&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataView">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.get_Item(System.Int32):System.Data.DataView</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.DataView):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.DataView&gt;.set_Item(System.Int32;System.Data.DataView):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Data.Index&gt;" uniqueID="System.Collections.Generic.List&lt;System.Data.Index&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Data.Index&gt;):System.Collections.Generic.IList&lt;System.Data.Index&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Synchronized(System.Collections.Generic.List&lt;System.Data.Index&gt;):System.Collections.Generic.IList&lt;System.Data.Index&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.Index):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Add(System.Data.Index):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.Index&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.Index&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.Index):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.BinarySearch(System.Data.Index):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.Index;System.Collections.Generic.IComparer&lt;System.Data.Index&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.BinarySearch(System.Data.Index;System.Collections.Generic.IComparer&lt;System.Data.Index&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Data.Index;System.Collections.Generic.IComparer&lt;System.Data.Index&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.BinarySearch(System.Int32;System.Int32;System.Data.Index;System.Collections.Generic.IComparer&lt;System.Data.Index&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Index):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Contains(System.Data.Index):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Index[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.CopyTo(System.Data.Index[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Index[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.CopyTo(System.Data.Index[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Data.Index[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.CopyTo(System.Int32;System.Data.Index[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Data.Index&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Exists(System.Predicate&lt;System.Data.Index&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Data.Index&gt;):System.Data.Index">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Find(System.Predicate&lt;System.Data.Index&gt;):System.Data.Index</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Data.Index&gt;):System.Collections.Generic.List&lt;System.Data.Index&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.FindAll(System.Predicate&lt;System.Data.Index&gt;):System.Collections.Generic.List&lt;System.Data.Index&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.Index&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.Index&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Data.Index&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Data.Index&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Data.Index&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.FindIndex(System.Predicate&lt;System.Data.Index&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Data.Index&gt;):System.Data.Index">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.FindLast(System.Predicate&lt;System.Data.Index&gt;):System.Data.Index</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.Index&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.Index&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Data.Index&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Data.Index&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Data.Index&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.FindLastIndex(System.Predicate&lt;System.Data.Index&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Data.Index&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.ForEach(System.Action&lt;System.Data.Index&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.Index&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.Index&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.Index&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.Index&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Index):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.IndexOf(System.Data.Index):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Index;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.IndexOf(System.Data.Index;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Index;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.IndexOf(System.Data.Index;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.Index):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Insert(System.Int32;System.Data.Index):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.Index&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.Index&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.Index):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.LastIndexOf(System.Data.Index):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.Index;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.LastIndexOf(System.Data.Index;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.Index;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.LastIndexOf(System.Data.Index;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.Index&gt;" uniqueID="List&lt;System.Data.Index&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.List&lt;System.Data.Index&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.Index&gt;" uniqueID="List&lt;System.Data.Index&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.Index&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.List&lt;System.Data.Index&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.Index&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.Index&gt;" uniqueID="List&lt;System.Data.Index&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.List&lt;System.Data.Index&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.Index):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Remove(System.Data.Index):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Data.Index&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.RemoveAll(System.Predicate&lt;System.Data.Index&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Data.Index&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Data.Index&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Data.Index&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Sort(System.Comparison&lt;System.Data.Index&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.Index&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.Index&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Index&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Index&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Data.Index[]">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.ToArray():System.Data.Index[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Data.Index&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.TrueForAll(System.Predicate&lt;System.Data.Index&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Index">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.get_Item(System.Int32):System.Data.Index</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.Index):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.Index&gt;.set_Item(System.Int32;System.Data.Index):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;):System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Synchronized(System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;):System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Add(System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.SqlClient.SqlParameter):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.BinarySearch(System.Data.SqlClient.SqlParameter):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Data.SqlClient.SqlParameter;System.Collections.Generic.IComparer&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.BinarySearch(System.Data.SqlClient.SqlParameter;System.Collections.Generic.IComparer&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Data.SqlClient.SqlParameter;System.Collections.Generic.IComparer&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.BinarySearch(System.Int32;System.Int32;System.Data.SqlClient.SqlParameter;System.Collections.Generic.IComparer&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.SqlClient.SqlParameter):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Contains(System.Data.SqlClient.SqlParameter):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.SqlClient.SqlParameter[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.CopyTo(System.Data.SqlClient.SqlParameter[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.SqlClient.SqlParameter[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.CopyTo(System.Data.SqlClient.SqlParameter[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Data.SqlClient.SqlParameter[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.CopyTo(System.Int32;System.Data.SqlClient.SqlParameter[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Exists(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Data.SqlClient.SqlParameter">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Find(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.FindAll(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.FindIndex(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Data.SqlClient.SqlParameter">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.FindLast(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.FindLastIndex(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.ForEach(System.Action&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.SqlClient.SqlParameter):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.IndexOf(System.Data.SqlClient.SqlParameter):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.SqlClient.SqlParameter;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.IndexOf(System.Data.SqlClient.SqlParameter;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.SqlClient.SqlParameter;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.IndexOf(System.Data.SqlClient.SqlParameter;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Insert(System.Int32;System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.SqlClient.SqlParameter):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.LastIndexOf(System.Data.SqlClient.SqlParameter):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.SqlClient.SqlParameter;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.LastIndexOf(System.Data.SqlClient.SqlParameter;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Data.SqlClient.SqlParameter;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.LastIndexOf(System.Data.SqlClient.SqlParameter;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="List&lt;System.Data.SqlClient.SqlParameter&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.List&lt;System.Data.SqlClient.SqlParameter&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="List&lt;System.Data.SqlClient.SqlParameter&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.List&lt;System.Data.SqlClient.SqlParameter&gt;(System.Collections.Generic.IEnumerable&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="List&lt;System.Data.SqlClient.SqlParameter&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.List&lt;System.Data.SqlClient.SqlParameter&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.SqlClient.SqlParameter):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Remove(System.Data.SqlClient.SqlParameter):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.RemoveAll(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Sort(System.Comparison&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.SqlClient.SqlParameter&gt;">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.SqlClient.SqlParameter&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Data.SqlClient.SqlParameter[]">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.ToArray():System.Data.SqlClient.SqlParameter[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.TrueForAll(System.Predicate&lt;System.Data.SqlClient.SqlParameter&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.SqlClient.SqlParameter">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.get_Item(System.Int32):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;.set_Item(System.Int32;System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Exception&gt;" uniqueID="System.Collections.Generic.List&lt;System.Exception&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Exception&gt;):System.Collections.Generic.IList&lt;System.Exception&gt;">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Synchronized(System.Collections.Generic.List&lt;System.Exception&gt;):System.Collections.Generic.IList&lt;System.Exception&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Exception):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Add(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Exception):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.BinarySearch(System.Exception):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Exception;System.Collections.Generic.IComparer&lt;System.Exception&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.BinarySearch(System.Exception;System.Collections.Generic.IComparer&lt;System.Exception&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Exception;System.Collections.Generic.IComparer&lt;System.Exception&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.BinarySearch(System.Int32;System.Int32;System.Exception;System.Collections.Generic.IComparer&lt;System.Exception&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Exception):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Contains(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Exception[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.CopyTo(System.Exception[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Exception[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.CopyTo(System.Exception[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Exception[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.CopyTo(System.Int32;System.Exception[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Exception&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Exists(System.Predicate&lt;System.Exception&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Exception&gt;):System.Exception">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Find(System.Predicate&lt;System.Exception&gt;):System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Exception&gt;):System.Collections.Generic.List&lt;System.Exception&gt;">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.FindAll(System.Predicate&lt;System.Exception&gt;):System.Collections.Generic.List&lt;System.Exception&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Exception&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Exception&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Exception&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Exception&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Exception&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.FindIndex(System.Predicate&lt;System.Exception&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Exception&gt;):System.Exception">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.FindLast(System.Predicate&lt;System.Exception&gt;):System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Exception&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Exception&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Exception&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Exception&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Exception&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.FindLastIndex(System.Predicate&lt;System.Exception&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Exception&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.ForEach(System.Action&lt;System.Exception&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Exception&gt;">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Exception&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Exception&gt;">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Exception&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Exception):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.IndexOf(System.Exception):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Exception;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.IndexOf(System.Exception;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Exception;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.IndexOf(System.Exception;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Exception):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Insert(System.Int32;System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Exception):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.LastIndexOf(System.Exception):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Exception;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.LastIndexOf(System.Exception;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Exception;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.LastIndexOf(System.Exception;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Exception&gt;" uniqueID="List&lt;System.Exception&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.List&lt;System.Exception&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Exception&gt;" uniqueID="List&lt;System.Exception&gt;(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.List&lt;System.Exception&gt;(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Exception&gt;" uniqueID="List&lt;System.Exception&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.List&lt;System.Exception&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Exception):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Remove(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Exception&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.RemoveAll(System.Predicate&lt;System.Exception&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Exception&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Exception&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Exception&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Sort(System.Comparison&lt;System.Exception&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Exception&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Exception&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Exception&gt;">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Exception&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Exception[]">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.ToArray():System.Exception[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Exception&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.TrueForAll(System.Predicate&lt;System.Exception&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Exception">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.get_Item(System.Int32):System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Exception):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Exception&gt;.set_Item(System.Int32;System.Exception):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Object[]&gt;" uniqueID="System.Collections.Generic.List&lt;System.Object[]&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Object[]&gt;):System.Collections.Generic.IList&lt;System.Object[]&gt;">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Synchronized(System.Collections.Generic.List&lt;System.Object[]&gt;):System.Collections.Generic.IList&lt;System.Object[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Add(System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Object[]&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Object[]&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Object[];System.Collections.Generic.IComparer&lt;System.Object[]&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.BinarySearch(System.Int32;System.Int32;System.Object[];System.Collections.Generic.IComparer&lt;System.Object[]&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Object[]):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.BinarySearch(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Object[];System.Collections.Generic.IComparer&lt;System.Object[]&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.BinarySearch(System.Object[];System.Collections.Generic.IComparer&lt;System.Object[]&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object[]):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Contains(System.Object[]):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Object[][];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.CopyTo(System.Int32;System.Object[][];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Object[][]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.CopyTo(System.Object[][]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Object[][];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.CopyTo(System.Object[][];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Object[]&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Exists(System.Predicate&lt;System.Object[]&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Object[]&gt;):System.Object[]">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Find(System.Predicate&lt;System.Object[]&gt;):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Object[]&gt;):System.Collections.Generic.List&lt;System.Object[]&gt;">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.FindAll(System.Predicate&lt;System.Object[]&gt;):System.Collections.Generic.List&lt;System.Object[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Object[]&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Object[]&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Object[]&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Object[]&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Object[]&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.FindIndex(System.Predicate&lt;System.Object[]&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Object[]&gt;):System.Object[]">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.FindLast(System.Predicate&lt;System.Object[]&gt;):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Object[]&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Object[]&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Object[]&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Object[]&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Object[]&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.FindLastIndex(System.Predicate&lt;System.Object[]&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Object[]&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.ForEach(System.Action&lt;System.Object[]&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Object[]&gt;">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Object[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Object[]&gt;">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Object[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object[]):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.IndexOf(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object[];System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.IndexOf(System.Object[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object[];System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.IndexOf(System.Object[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Object[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Insert(System.Int32;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Object[]&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Object[]&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Object[]):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.LastIndexOf(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Object[];System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.LastIndexOf(System.Object[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Object[];System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.LastIndexOf(System.Object[];System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Object[]&gt;" uniqueID="List&lt;System.Object[]&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.List&lt;System.Object[]&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Object[]&gt;" uniqueID="List&lt;System.Object[]&gt;(System.Collections.Generic.IEnumerable&lt;System.Object[]&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.List&lt;System.Object[]&gt;(System.Collections.Generic.IEnumerable&lt;System.Object[]&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Object[]&gt;" uniqueID="List&lt;System.Object[]&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.List&lt;System.Object[]&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object[]):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Remove(System.Object[]):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Object[]&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.RemoveAll(System.Predicate&lt;System.Object[]&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Object[]&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Object[]&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Object[]&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Sort(System.Comparison&lt;System.Object[]&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Object[]&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Object[]&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Object[]&gt;">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Object[]&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Object[][]">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.ToArray():System.Object[][]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Object[]&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.TrueForAll(System.Predicate&lt;System.Object[]&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object[]">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.get_Item(System.Int32):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Object[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Object[]&gt;.set_Item(System.Int32;System.Object[]):System.Void</signature>
			</method>
		</class>
		<class name="List&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;):System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Synchronized(System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;):System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Add(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Threading.Tasks.Task;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.BinarySearch(System.Int32;System.Int32;System.Threading.Tasks.Task;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Threading.Tasks.Task):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.BinarySearch(System.Threading.Tasks.Task):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Threading.Tasks.Task;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.BinarySearch(System.Threading.Tasks.Task;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Contains(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Threading.Tasks.Task[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.CopyTo(System.Int32;System.Threading.Tasks.Task[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Threading.Tasks.Task[]):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.CopyTo(System.Threading.Tasks.Task[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Threading.Tasks.Task[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.CopyTo(System.Threading.Tasks.Task[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Exists(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Find(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.FindAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.FindIndex(System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.FindIndex(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.FindLast(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.FindLastIndex(System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.FindLastIndex(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.ForEach(System.Action&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Threading.Tasks.Task):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.IndexOf(System.Threading.Tasks.Task):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Threading.Tasks.Task;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.IndexOf(System.Threading.Tasks.Task;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Threading.Tasks.Task;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.IndexOf(System.Threading.Tasks.Task;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Insert(System.Int32;System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Threading.Tasks.Task):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.LastIndexOf(System.Threading.Tasks.Task):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Threading.Tasks.Task;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.LastIndexOf(System.Threading.Tasks.Task;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Threading.Tasks.Task;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.LastIndexOf(System.Threading.Tasks.Task;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Threading.Tasks.Task&gt;" uniqueID="List&lt;System.Threading.Tasks.Task&gt;():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.List&lt;System.Threading.Tasks.Task&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Threading.Tasks.Task&gt;" uniqueID="List&lt;System.Threading.Tasks.Task&gt;(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.List&lt;System.Threading.Tasks.Task&gt;(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List&lt;System.Threading.Tasks.Task&gt;" uniqueID="List&lt;System.Threading.Tasks.Task&gt;(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.List&lt;System.Threading.Tasks.Task&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Remove(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.RemoveAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Sort(System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Sort(System.Comparison&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Threading.Tasks.Task[]">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.ToArray():System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Boolean">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.TrueForAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Threading.Tasks.Task">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.get_Item(System.Int32):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;.set_Item(System.Int32;System.Threading.Tasks.Task):System.Void</signature>
			</method>
		</class>
		<class name="List`1" uniqueID="System.Collections.Generic.List`1">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Generic.List`1.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List`1.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Synchronized" uniqueID="Synchronized(System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;):System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List`1.Synchronized(System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;):System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.Generic.List`1.Add(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AsReadOnly" uniqueID="AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List`1.AsReadOnly():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Int32;System.Int32;System.Threading.Tasks.Task;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.BinarySearch(System.Int32;System.Int32;System.Threading.Tasks.Task;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Threading.Tasks.Task):System.Int32">
				<signature>System.Collections.Generic.List`1.BinarySearch(System.Threading.Tasks.Task):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinarySearch" uniqueID="BinarySearch(System.Threading.Tasks.Task;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.BinarySearch(System.Threading.Tasks.Task;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Generic.List`1.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Collections.Generic.List`1.Contains(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Int32;System.Threading.Tasks.Task[];System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.CopyTo(System.Int32;System.Threading.Tasks.Task[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Threading.Tasks.Task[]):System.Void">
				<signature>System.Collections.Generic.List`1.CopyTo(System.Threading.Tasks.Task[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Threading.Tasks.Task[];System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.CopyTo(System.Threading.Tasks.Task[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureCapacity" uniqueID="EnsureCapacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.EnsureCapacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Exists" uniqueID="Exists(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Boolean">
				<signature>System.Collections.Generic.List`1.Exists(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task">
				<signature>System.Collections.Generic.List`1.Find(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List`1.FindAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindIndex(System.Int32;System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindIndex(System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindIndex" uniqueID="FindIndex(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindIndex(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLast" uniqueID="FindLast(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task">
				<signature>System.Collections.Generic.List`1.FindLast(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindLastIndex(System.Int32;System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindLastIndex(System.Int32;System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindLastIndex" uniqueID="FindLastIndex(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.FindLastIndex(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ForEach" uniqueID="ForEach(System.Action&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.ForEach(System.Action&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List`1.GetEnumerator():System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRange" uniqueID="GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List`1.GetRange(System.Int32;System.Int32):System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Threading.Tasks.Task):System.Int32">
				<signature>System.Collections.Generic.List`1.IndexOf(System.Threading.Tasks.Task):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Threading.Tasks.Task;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.IndexOf(System.Threading.Tasks.Task;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Threading.Tasks.Task;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.IndexOf(System.Threading.Tasks.Task;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.Generic.List`1.Insert(System.Int32;System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertRange" uniqueID="InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.InsertRange(System.Int32;System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Threading.Tasks.Task):System.Int32">
				<signature>System.Collections.Generic.List`1.LastIndexOf(System.Threading.Tasks.Task):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Threading.Tasks.Task;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.LastIndexOf(System.Threading.Tasks.Task;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LastIndexOf" uniqueID="LastIndexOf(System.Threading.Tasks.Task;System.Int32;System.Int32):System.Int32">
				<signature>System.Collections.Generic.List`1.LastIndexOf(System.Threading.Tasks.Task;System.Int32;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List`1" uniqueID="List`1():System.Void">
				<signature>System.Collections.Generic.List`1.List`1():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List`1" uniqueID="List`1(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.List`1(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="List`1" uniqueID="List`1(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.List`1(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Collections.Generic.List`1.Remove(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32">
				<signature>System.Collections.Generic.List`1.RemoveAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveRange" uniqueID="RemoveRange(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.RemoveRange(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse():System.Void">
				<signature>System.Collections.Generic.List`1.Reverse():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reverse" uniqueID="Reverse(System.Int32;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.Reverse(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort():System.Void">
				<signature>System.Collections.Generic.List`1.Sort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Comparison&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.Sort(System.Comparison&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List`1.Sort(System.Int32;System.Int32;System.Collections.Generic.IComparer&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" uniqueID="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.Generic.List`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Generic.List`1.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Generic.List`1.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Generic.List`1.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToArray" uniqueID="ToArray():System.Threading.Tasks.Task[]">
				<signature>System.Collections.Generic.List`1.ToArray():System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrimExcess" uniqueID="TrimExcess():System.Void">
				<signature>System.Collections.Generic.List`1.TrimExcess():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrueForAll" uniqueID="TrueForAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Boolean">
				<signature>System.Collections.Generic.List`1.TrueForAll(System.Predicate&lt;System.Threading.Tasks.Task&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Capacity" uniqueID="get_Capacity():System.Int32">
				<signature>System.Collections.Generic.List`1.get_Capacity():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Generic.List`1.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Threading.Tasks.Task">
				<signature>System.Collections.Generic.List`1.get_Item(System.Int32):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Capacity" uniqueID="set_Capacity(System.Int32):System.Void">
				<signature>System.Collections.Generic.List`1.set_Capacity(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.Generic.List`1.set_Item(System.Int32;System.Threading.Tasks.Task):System.Void</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():Microsoft.SqlServer.Server.SmiExtendedMetaData">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Current():Microsoft.SqlServer.Server.SmiExtendedMetaData</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Data.DataColumn&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataColumn&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataColumn&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Data.DataColumn&gt;" uniqueID="List`1+Enumerator&lt;System.Data.DataColumn&gt;(System.Collections.Generic.List&lt;System.Data.DataColumn&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataColumn&gt;.List`1+Enumerator&lt;System.Data.DataColumn&gt;(System.Collections.Generic.List&lt;System.Data.DataColumn&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataColumn&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataColumn&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataColumn&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataColumn&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataColumn">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataColumn&gt;.get_Current():System.Data.DataColumn</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Data.DataRelation&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRelation&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRelation&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Data.DataRelation&gt;" uniqueID="List`1+Enumerator&lt;System.Data.DataRelation&gt;(System.Collections.Generic.List&lt;System.Data.DataRelation&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRelation&gt;.List`1+Enumerator&lt;System.Data.DataRelation&gt;(System.Collections.Generic.List&lt;System.Data.DataRelation&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRelation&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRelation&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRelation&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRelation&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataRelation">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRelation&gt;.get_Current():System.Data.DataRelation</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Data.DataRow&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRow&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRow&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Data.DataRow&gt;" uniqueID="List`1+Enumerator&lt;System.Data.DataRow&gt;(System.Collections.Generic.List&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRow&gt;.List`1+Enumerator&lt;System.Data.DataRow&gt;(System.Collections.Generic.List&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRow&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRow&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRow&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRow&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataRow">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataRow&gt;.get_Current():System.Data.DataRow</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Data.DataTable&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataTable&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataTable&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Data.DataTable&gt;" uniqueID="List`1+Enumerator&lt;System.Data.DataTable&gt;(System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataTable&gt;.List`1+Enumerator&lt;System.Data.DataTable&gt;(System.Collections.Generic.List&lt;System.Data.DataTable&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataTable&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataTable&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataTable&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataTable&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataTable">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataTable&gt;.get_Current():System.Data.DataTable</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Data.DataView&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataView&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataView&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Data.DataView&gt;" uniqueID="List`1+Enumerator&lt;System.Data.DataView&gt;(System.Collections.Generic.List&lt;System.Data.DataView&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataView&gt;.List`1+Enumerator&lt;System.Data.DataView&gt;(System.Collections.Generic.List&lt;System.Data.DataView&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataView&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataView&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataView&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataView&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataView">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataView&gt;.get_Current():System.Data.DataView</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Data.DataViewListener&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataViewListener&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Data.DataViewListener&gt;" uniqueID="List`1+Enumerator&lt;System.Data.DataViewListener&gt;(System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataViewListener&gt;.List`1+Enumerator&lt;System.Data.DataViewListener&gt;(System.Collections.Generic.List&lt;System.Data.DataViewListener&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataViewListener&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataViewListener&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataViewListener&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataViewListener&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.DataViewListener">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.DataViewListener&gt;.get_Current():System.Data.DataViewListener</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Data.Index&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Data.Index&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Index&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Data.Index&gt;" uniqueID="List`1+Enumerator&lt;System.Data.Index&gt;(System.Collections.Generic.List&lt;System.Data.Index&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Index&gt;.List`1+Enumerator&lt;System.Data.Index&gt;(System.Collections.Generic.List&lt;System.Data.Index&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Index&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Index&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Index&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Index&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.Index">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.Index&gt;.get_Current():System.Data.Index</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;(System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;.List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;(System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Data.SqlClient.SqlParameter">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Data.SqlClient.SqlParameter&gt;.get_Current():System.Data.SqlClient.SqlParameter</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Object[]&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Object[]&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Object[]&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Object[]&gt;" uniqueID="List`1+Enumerator&lt;System.Object[]&gt;(System.Collections.Generic.List&lt;System.Object[]&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Object[]&gt;.List`1+Enumerator&lt;System.Object[]&gt;(System.Collections.Generic.List&lt;System.Object[]&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Object[]&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Object[]&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Object[]&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Object[]&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Object[]">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Object[]&gt;.get_Current():System.Object[]</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;" uniqueID="List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;(System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;(System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Threading.Tasks.Task">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Threading.Tasks.Task&gt;.get_Current():System.Threading.Tasks.Task</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;.List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.UI.ScriptManagerProxy">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Current():System.Web.UI.ScriptManagerProxy</signature>
			</method>
		</class>
		<class name="List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;.List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="MoveNextRare" uniqueID="MoveNextRare():System.Boolean">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;.MoveNextRare():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Web.UI.ScriptReferenceBase">
				<signature>System.Collections.Generic.List`1+Enumerator&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Current():System.Web.UI.ScriptReferenceBase</signature>
			</method>
		</class>
		<class name="HashSet`1+Enumerator&lt;System.String&gt;" uniqueID="System.Collections.Generic.HashSet`1+Enumerator&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Collections.Generic.HashSet`1+Enumerator&lt;System.String&gt;.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HashSet`1+Enumerator&lt;System.String&gt;" uniqueID="HashSet`1+Enumerator&lt;System.String&gt;(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Void">
				<signature>System.Collections.Generic.HashSet`1+Enumerator&lt;System.String&gt;.HashSet`1+Enumerator&lt;System.String&gt;(System.Collections.Generic.HashSet&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.Generic.HashSet`1+Enumerator&lt;System.String&gt;.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.Reset" uniqueID="System.Collections.IEnumerator.Reset():System.Void">
				<signature>System.Collections.Generic.HashSet`1+Enumerator&lt;System.String&gt;.System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerator.get_Current" uniqueID="System.Collections.IEnumerator.get_Current():System.Object">
				<signature>System.Collections.Generic.HashSet`1+Enumerator&lt;System.String&gt;.System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.String">
				<signature>System.Collections.Generic.HashSet`1+Enumerator&lt;System.String&gt;.get_Current():System.String</signature>
			</method>
		</class>
	</package>
	<package name="System.Runtime.InteropServices">
		<class name="_Exception" uniqueID="System.Runtime.InteropServices._Exception">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._Exception.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBaseException" uniqueID="GetBaseException():System.Exception">
				<signature>System.Runtime.InteropServices._Exception.GetBaseException():System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._Exception.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._Exception.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._Exception.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HelpLink" uniqueID="get_HelpLink():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_HelpLink():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InnerException" uniqueID="get_InnerException():System.Exception">
				<signature>System.Runtime.InteropServices._Exception.get_InnerException():System.Exception</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Message" uniqueID="get_Message():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_Message():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Source" uniqueID="get_Source():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_Source():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StackTrace" uniqueID="get_StackTrace():System.String">
				<signature>System.Runtime.InteropServices._Exception.get_StackTrace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TargetSite" uniqueID="get_TargetSite():System.Reflection.MethodBase">
				<signature>System.Runtime.InteropServices._Exception.get_TargetSite():System.Reflection.MethodBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HelpLink" uniqueID="set_HelpLink(System.String):System.Void">
				<signature>System.Runtime.InteropServices._Exception.set_HelpLink(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Source" uniqueID="set_Source(System.String):System.Void">
				<signature>System.Runtime.InteropServices._Exception.set_Source(System.String):System.Void</signature>
			</method>
		</class>
		<class name="_MemberInfo" uniqueID="System.Runtime.InteropServices._MemberInfo">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._MemberInfo.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._MemberInfo.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._MemberInfo.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._MemberInfo.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetIDsOfNames" uniqueID="GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._MemberInfo.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfo" uniqueID="GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfoCount" uniqueID="GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Runtime.InteropServices._MemberInfo.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._MemberInfo.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Runtime.InteropServices._MemberInfo.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Runtime.InteropServices._MemberInfo.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Runtime.InteropServices._MemberInfo.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Runtime.InteropServices._MemberInfo.get_ReflectedType():System.Type</signature>
			</method>
		</class>
		<class name="_Type" uniqueID="System.Runtime.InteropServices._Type">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Type):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.Equals(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindInterfaces" uniqueID="FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]">
				<signature>System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter;System.Object):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindMembers" uniqueID="FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes;System.Reflection.BindingFlags;System.Reflection.MemberFilter;System.Object):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetArrayRank" uniqueID="GetArrayRank():System.Int32">
				<signature>System.Runtime.InteropServices._Type.GetArrayRank():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructor" uniqueID="GetConstructor(System.Type[]):System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.GetConstructor(System.Type[]):System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors():System.Reflection.ConstructorInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetConstructors():System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetConstructors" uniqueID="GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags):System.Reflection.ConstructorInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDefaultMembers" uniqueID="GetDefaultMembers():System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetDefaultMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetElementType" uniqueID="GetElementType():System.Type">
				<signature>System.Runtime.InteropServices._Type.GetElementType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String):System.Reflection.EventInfo">
				<signature>System.Runtime.InteropServices._Type.GetEvent(System.String):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvent" uniqueID="GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo">
				<signature>System.Runtime.InteropServices._Type.GetEvent(System.String;System.Reflection.BindingFlags):System.Reflection.EventInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents():System.Reflection.EventInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetEvents():System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEvents" uniqueID="GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags):System.Reflection.EventInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String):System.Reflection.FieldInfo">
				<signature>System.Runtime.InteropServices._Type.GetField(System.String):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo">
				<signature>System.Runtime.InteropServices._Type.GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields():System.Reflection.FieldInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetFields():System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Runtime.InteropServices._Type.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetIDsOfNames" uniqueID="GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetInterface(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterface" uniqueID="GetInterface(System.String;System.Boolean):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetInterface(System.String;System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaceMap" uniqueID="GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping">
				<signature>System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type):System.Reflection.InterfaceMapping</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInterfaces" uniqueID="GetInterfaces():System.Type[]">
				<signature>System.Runtime.InteropServices._Type.GetInterfaces():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMember(System.String):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMember(System.String;System.Reflection.MemberTypes;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers():System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMembers():System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Reflection.CallingConventions;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Type[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Runtime.InteropServices._Type.GetMethod(System.String;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods():System.Reflection.MethodInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMethods():System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetNestedType(System.String):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedType" uniqueID="GetNestedType(System.String;System.Reflection.BindingFlags):System.Type">
				<signature>System.Runtime.InteropServices._Type.GetNestedType(System.String;System.Reflection.BindingFlags):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes():System.Type[]">
				<signature>System.Runtime.InteropServices._Type.GetNestedTypes():System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNestedTypes" uniqueID="GetNestedTypes(System.Reflection.BindingFlags):System.Type[]">
				<signature>System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags):System.Type[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties():System.Reflection.PropertyInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetProperties():System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]">
				<signature>System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo">
				<signature>System.Runtime.InteropServices._Type.GetProperty(System.String;System.Type[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetType" uniqueID="GetType():System.Type">
				<signature>System.Runtime.InteropServices._Type.GetType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfo" uniqueID="GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeInfoCount" uniqueID="GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Runtime.InteropServices._Type.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object">
				<signature>System.Runtime.InteropServices._Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object">
				<signature>System.Runtime.InteropServices._Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Globalization.CultureInfo):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object">
				<signature>System.Runtime.InteropServices._Type.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsAssignableFrom" uniqueID="IsAssignableFrom(System.Type):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsInstanceOfType" uniqueID="IsInstanceOfType(System.Object):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSubclassOf" uniqueID="IsSubclassOf(System.Type):System.Boolean">
				<signature>System.Runtime.InteropServices._Type.IsSubclassOf(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Runtime.InteropServices._Type.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Assembly" uniqueID="get_Assembly():System.Reflection.Assembly">
				<signature>System.Runtime.InteropServices._Type.get_Assembly():System.Reflection.Assembly</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AssemblyQualifiedName" uniqueID="get_AssemblyQualifiedName():System.String">
				<signature>System.Runtime.InteropServices._Type.get_AssemblyQualifiedName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Reflection.TypeAttributes">
				<signature>System.Runtime.InteropServices._Type.get_Attributes():System.Reflection.TypeAttributes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BaseType" uniqueID="get_BaseType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_BaseType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FullName" uniqueID="get_FullName():System.String">
				<signature>System.Runtime.InteropServices._Type.get_FullName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GUID" uniqueID="get_GUID():System.Guid">
				<signature>System.Runtime.InteropServices._Type.get_GUID():System.Guid</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasElementType" uniqueID="get_HasElementType():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_HasElementType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAbstract" uniqueID="get_IsAbstract():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAbstract():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAnsiClass" uniqueID="get_IsAnsiClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAnsiClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsArray" uniqueID="get_IsArray():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsArray():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoClass" uniqueID="get_IsAutoClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAutoClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAutoLayout" uniqueID="get_IsAutoLayout():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsAutoLayout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsByRef" uniqueID="get_IsByRef():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCOMObject" uniqueID="get_IsCOMObject():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsCOMObject():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClass" uniqueID="get_IsClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsContextful" uniqueID="get_IsContextful():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsContextful():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsEnum" uniqueID="get_IsEnum():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsEnum():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsExplicitLayout" uniqueID="get_IsExplicitLayout():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsExplicitLayout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsImport" uniqueID="get_IsImport():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsImport():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInterface" uniqueID="get_IsInterface():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsInterface():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLayoutSequential" uniqueID="get_IsLayoutSequential():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsLayoutSequential():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsMarshalByRef" uniqueID="get_IsMarshalByRef():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsMarshalByRef():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedAssembly" uniqueID="get_IsNestedAssembly():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedAssembly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamANDAssem" uniqueID="get_IsNestedFamANDAssem():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedFamANDAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamORAssem" uniqueID="get_IsNestedFamORAssem():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedFamORAssem():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedFamily" uniqueID="get_IsNestedFamily():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedFamily():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPrivate" uniqueID="get_IsNestedPrivate():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedPrivate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNestedPublic" uniqueID="get_IsNestedPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNestedPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNotPublic" uniqueID="get_IsNotPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsNotPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPointer" uniqueID="get_IsPointer():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsPointer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPrimitive" uniqueID="get_IsPrimitive():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsPrimitive():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPublic" uniqueID="get_IsPublic():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsPublic():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSealed" uniqueID="get_IsSealed():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsSealed():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSerializable" uniqueID="get_IsSerializable():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsSerializable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSpecialName" uniqueID="get_IsSpecialName():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsSpecialName():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsUnicodeClass" uniqueID="get_IsUnicodeClass():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsUnicodeClass():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsValueType" uniqueID="get_IsValueType():System.Boolean">
				<signature>System.Runtime.InteropServices._Type.get_IsValueType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Runtime.InteropServices._Type.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Module" uniqueID="get_Module():System.Reflection.Module">
				<signature>System.Runtime.InteropServices._Type.get_Module():System.Reflection.Module</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Runtime.InteropServices._Type.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.Runtime.InteropServices._Type.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_ReflectedType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeHandle" uniqueID="get_TypeHandle():System.RuntimeTypeHandle">
				<signature>System.Runtime.InteropServices._Type.get_TypeHandle():System.RuntimeTypeHandle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeInitializer" uniqueID="get_TypeInitializer():System.Reflection.ConstructorInfo">
				<signature>System.Runtime.InteropServices._Type.get_TypeInitializer():System.Reflection.ConstructorInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnderlyingSystemType" uniqueID="get_UnderlyingSystemType():System.Type">
				<signature>System.Runtime.InteropServices._Type.get_UnderlyingSystemType():System.Type</signature>
			</method>
		</class>
	</package>
	<package name="System.Collections">
		<class name="IEnumerable" uniqueID="System.Collections.IEnumerable">
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
		</class>
		<class name="ICollection" uniqueID="System.Collections.ICollection">
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ICollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
		</class>
		<class name="IDictionaryEnumerator" uniqueID="System.Collections.IDictionaryEnumerator">
			<method accessibility="Public" methodKind="Member" name="get_Entry" uniqueID="get_Entry():System.Collections.DictionaryEntry">
				<signature>System.Collections.IDictionaryEnumerator.get_Entry():System.Collections.DictionaryEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Key" uniqueID="get_Key():System.Object">
				<signature>System.Collections.IDictionaryEnumerator.get_Key():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Object">
				<signature>System.Collections.IDictionaryEnumerator.get_Value():System.Object</signature>
			</method>
		</class>
		<class name="IList" uniqueID="System.Collections.IList">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Int32">
				<signature>System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object):System.Boolean">
				<signature>System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object):System.Int32">
				<signature>System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFixedSize" uniqueID="get_IsFixedSize():System.Boolean">
				<signature>System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object">
				<signature>System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IEnumerator" uniqueID="System.Collections.IEnumerator">
			<method accessibility="Public" methodKind="Member" name="MoveNext" uniqueID="MoveNext():System.Boolean">
				<signature>System.Collections.IEnumerator.MoveNext():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reset" uniqueID="Reset():System.Void">
				<signature>System.Collections.IEnumerator.Reset():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Current" uniqueID="get_Current():System.Object">
				<signature>System.Collections.IEnumerator.get_Current():System.Object</signature>
			</method>
		</class>
		<class name="IStructuralComparable" uniqueID="System.Collections.IStructuralComparable">
			<method accessibility="Public" methodKind="Member" name="CompareTo" uniqueID="CompareTo(System.Object;System.Collections.IComparer):System.Int32">
				<signature>System.Collections.IStructuralComparable.CompareTo(System.Object;System.Collections.IComparer):System.Int32</signature>
			</method>
		</class>
		<class name="IDictionary" uniqueID="System.Collections.IDictionary">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object;System.Object):System.Void">
				<signature>System.Collections.IDictionary.Add(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.IDictionary.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object):System.Boolean">
				<signature>System.Collections.IDictionary.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IDictionaryEnumerator">
				<signature>System.Collections.IDictionary.GetEnumerator():System.Collections.IDictionaryEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Collections.IDictionary.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFixedSize" uniqueID="get_IsFixedSize():System.Boolean">
				<signature>System.Collections.IDictionary.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.IDictionary.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Object):System.Object">
				<signature>System.Collections.IDictionary.get_Item(System.Object):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.ICollection">
				<signature>System.Collections.IDictionary.get_Keys():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Collections.ICollection">
				<signature>System.Collections.IDictionary.get_Values():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Object;System.Object):System.Void">
				<signature>System.Collections.IDictionary.set_Item(System.Object;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="IStructuralEquatable" uniqueID="System.Collections.IStructuralEquatable">
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object;System.Collections.IEqualityComparer):System.Boolean">
				<signature>System.Collections.IStructuralEquatable.Equals(System.Object;System.Collections.IEqualityComparer):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode(System.Collections.IEqualityComparer):System.Int32">
				<signature>System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer):System.Int32</signature>
			</method>
		</class>
	</package>
	<package name="System.Reflection">
		<class name="ICustomAttributeProvider" uniqueID="System.Reflection.ICustomAttributeProvider">
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Reflection.ICustomAttributeProvider.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
		</class>
		<class name="IReflect" uniqueID="System.Reflection.IReflect">
			<method accessibility="Public" methodKind="Member" name="GetField" uniqueID="GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo">
				<signature>System.Reflection.IReflect.GetField(System.String;System.Reflection.BindingFlags):System.Reflection.FieldInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFields" uniqueID="GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]">
				<signature>System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags):System.Reflection.FieldInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMember" uniqueID="GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Reflection.IReflect.GetMember(System.String;System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMembers" uniqueID="GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]">
				<signature>System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags):System.Reflection.MemberInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo">
				<signature>System.Reflection.IReflect.GetMethod(System.String;System.Reflection.BindingFlags):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethod" uniqueID="GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo">
				<signature>System.Reflection.IReflect.GetMethod(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetMethods" uniqueID="GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]">
				<signature>System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags):System.Reflection.MethodInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperties" uniqueID="GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]">
				<signature>System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags):System.Reflection.PropertyInfo[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo">
				<signature>System.Reflection.IReflect.GetProperty(System.String;System.Reflection.BindingFlags):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProperty" uniqueID="GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo">
				<signature>System.Reflection.IReflect.GetProperty(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Type;System.Type[];System.Reflection.ParameterModifier[]):System.Reflection.PropertyInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeMember" uniqueID="InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object">
				<signature>System.Reflection.IReflect.InvokeMember(System.String;System.Reflection.BindingFlags;System.Reflection.Binder;System.Object;System.Object[];System.Reflection.ParameterModifier[];System.Globalization.CultureInfo;System.String[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnderlyingSystemType" uniqueID="get_UnderlyingSystemType():System.Type">
				<signature>System.Reflection.IReflect.get_UnderlyingSystemType():System.Type</signature>
			</method>
		</class>
		<class name="MemberInfo" uniqueID="System.Reflection.MemberInfo">
			<method accessibility="Public" methodKind="Static" name="op_Equality" uniqueID="op_Equality(System.Reflection.MemberInfo;System.Reflection.MemberInfo):System.Boolean">
				<signature>System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo;System.Reflection.MemberInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="op_Inequality" uniqueID="op_Inequality(System.Reflection.MemberInfo;System.Reflection.MemberInfo):System.Boolean">
				<signature>System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo;System.Reflection.MemberInfo):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CacheEquals" uniqueID="CacheEquals(System.Object):System.Boolean">
				<signature>System.Reflection.MemberInfo.CacheEquals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Reflection.MemberInfo.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Boolean):System.Object[]">
				<signature>System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributes" uniqueID="GetCustomAttributes(System.Type;System.Boolean):System.Object[]">
				<signature>System.Reflection.MemberInfo.GetCustomAttributes(System.Type;System.Boolean):System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetCustomAttributesData" uniqueID="GetCustomAttributesData():System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;">
				<signature>System.Reflection.MemberInfo.GetCustomAttributesData():System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetFullNameForEtw" uniqueID="GetFullNameForEtw():System.String">
				<signature>System.Reflection.MemberInfo.GetFullNameForEtw():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Reflection.MemberInfo.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDefined" uniqueID="IsDefined(System.Type;System.Boolean):System.Boolean">
				<signature>System.Reflection.MemberInfo.IsDefined(System.Type;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MemberInfo" uniqueID="MemberInfo():System.Void">
				<signature>System.Reflection.MemberInfo.MemberInfo():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetIDsOfNames" uniqueID="System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid;System.IntPtr;System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetType" uniqueID="System.Runtime.InteropServices._MemberInfo.GetType():System.Type">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType():System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetTypeInfo" uniqueID="System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32;System.UInt32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount" uniqueID="System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Runtime.InteropServices._MemberInfo.Invoke" uniqueID="System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32;System.Guid;System.UInt32;System.Int16;System.IntPtr;System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CustomAttributes" uniqueID="get_CustomAttributes():System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;">
				<signature>System.Reflection.MemberInfo.get_CustomAttributes():System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeclaringType" uniqueID="get_DeclaringType():System.Type">
				<signature>System.Reflection.MemberInfo.get_DeclaringType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MemberType" uniqueID="get_MemberType():System.Reflection.MemberTypes">
				<signature>System.Reflection.MemberInfo.get_MemberType():System.Reflection.MemberTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MetadataToken" uniqueID="get_MetadataToken():System.Int32">
				<signature>System.Reflection.MemberInfo.get_MetadataToken():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Module" uniqueID="get_Module():System.Reflection.Module">
				<signature>System.Reflection.MemberInfo.get_Module():System.Reflection.Module</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Reflection.MemberInfo.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReflectedType" uniqueID="get_ReflectedType():System.Type">
				<signature>System.Reflection.MemberInfo.get_ReflectedType():System.Type</signature>
			</method>
		</class>
	</package>
	<package name="System.DirectoryServices">
		<class name="DirectoryEntry" uniqueID="System.DirectoryServices.DirectoryEntry">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Exists" uniqueID="Exists(System.String):System.Boolean">
				<signature>System.DirectoryServices.DirectoryEntry.Exists(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Bind" uniqueID="Bind():System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.Bind():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Bind" uniqueID="Bind(System.Boolean):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.Bind(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CloneBrowsable" uniqueID="CloneBrowsable():System.DirectoryServices.DirectoryEntry">
				<signature>System.DirectoryServices.DirectoryEntry.CloneBrowsable():System.DirectoryServices.DirectoryEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.Close():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CommitChanges" uniqueID="CommitChanges():System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.CommitChanges():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CommitIfNotCaching" uniqueID="CommitIfNotCaching():System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.CommitIfNotCaching():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.DirectoryServices.DirectoryEntry):System.DirectoryServices.DirectoryEntry">
				<signature>System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry):System.DirectoryServices.DirectoryEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.DirectoryServices.DirectoryEntry;System.String):System.DirectoryServices.DirectoryEntry">
				<signature>System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry;System.String):System.DirectoryServices.DirectoryEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DeleteTree" uniqueID="DeleteTree():System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.DeleteTree():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectoryEntry" uniqueID="DirectoryEntry():System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.DirectoryEntry():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectoryEntry" uniqueID="DirectoryEntry(System.Object):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.DirectoryEntry(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DirectoryEntry" uniqueID="DirectoryEntry(System.Object;System.Boolean;System.String;System.String;System.DirectoryServices.AuthenticationTypes):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.DirectoryEntry(System.Object;System.Boolean;System.String;System.String;System.DirectoryServices.AuthenticationTypes):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DirectoryEntry" uniqueID="DirectoryEntry(System.Object;System.Boolean;System.String;System.String;System.DirectoryServices.AuthenticationTypes;System.Boolean):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.DirectoryEntry(System.Object;System.Boolean;System.String;System.String;System.DirectoryServices.AuthenticationTypes;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectoryEntry" uniqueID="DirectoryEntry(System.String):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.DirectoryEntry(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DirectoryEntry" uniqueID="DirectoryEntry(System.String;System.Boolean;System.String;System.String;System.DirectoryServices.AuthenticationTypes):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.DirectoryEntry(System.String;System.Boolean;System.String;System.String;System.DirectoryServices.AuthenticationTypes):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectoryEntry" uniqueID="DirectoryEntry(System.String;System.String;System.String):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.DirectoryEntry(System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectoryEntry" uniqueID="DirectoryEntry(System.String;System.String;System.String;System.DirectoryServices.AuthenticationTypes):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.DirectoryEntry(System.String;System.String;System.String;System.DirectoryServices.AuthenticationTypes):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FillCache" uniqueID="FillCache(System.String):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.FillCache(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetObjectSecurityFromCache" uniqueID="GetObjectSecurityFromCache():System.DirectoryServices.ActiveDirectorySecurity">
				<signature>System.DirectoryServices.DirectoryEntry.GetObjectSecurityFromCache():System.DirectoryServices.ActiveDirectorySecurity</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetPassword" uniqueID="GetPassword():System.String">
				<signature>System.DirectoryServices.DirectoryEntry.GetPassword():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetUsername" uniqueID="GetUsername():System.String">
				<signature>System.DirectoryServices.DirectoryEntry.GetUsername():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitADsObjectOptions" uniqueID="InitADsObjectOptions():System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.InitADsObjectOptions():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.String;System.Object[]):System.Object">
				<signature>System.DirectoryServices.DirectoryEntry.Invoke(System.String;System.Object[]):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeGet" uniqueID="InvokeGet(System.String):System.Object">
				<signature>System.DirectoryServices.DirectoryEntry.InvokeGet(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InvokeSet" uniqueID="InvokeSet(System.String;System.Object[]):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.InvokeSet(System.String;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveTo" uniqueID="MoveTo(System.DirectoryServices.DirectoryEntry):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveTo" uniqueID="MoveTo(System.DirectoryServices.DirectoryEntry;System.String):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RefreshCache" uniqueID="RefreshCache():System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.RefreshCache():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RefreshCache" uniqueID="RefreshCache(System.String[]):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Rename" uniqueID="Rename(System.String):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.Rename(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetObjectSecurityInCache" uniqueID="SetObjectSecurityInCache():System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.SetObjectSecurityInCache():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Unbind" uniqueID="Unbind():System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.Unbind():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AdsObject" uniqueID="get_AdsObject():System.DirectoryServices.Interop.UnsafeNativeMethods+IAds">
				<signature>System.DirectoryServices.DirectoryEntry.get_AdsObject():System.DirectoryServices.Interop.UnsafeNativeMethods+IAds</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AuthenticationType" uniqueID="get_AuthenticationType():System.DirectoryServices.AuthenticationTypes">
				<signature>System.DirectoryServices.DirectoryEntry.get_AuthenticationType():System.DirectoryServices.AuthenticationTypes</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_Bound" uniqueID="get_Bound():System.Boolean">
				<signature>System.DirectoryServices.DirectoryEntry.get_Bound():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Children" uniqueID="get_Children():System.DirectoryServices.DirectoryEntries">
				<signature>System.DirectoryServices.DirectoryEntry.get_Children():System.DirectoryServices.DirectoryEntries</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ContainerObject" uniqueID="get_ContainerObject():System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer">
				<signature>System.DirectoryServices.DirectoryEntry.get_ContainerObject():System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Guid" uniqueID="get_Guid():System.Guid">
				<signature>System.DirectoryServices.DirectoryEntry.get_Guid():System.Guid</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsContainer" uniqueID="get_IsContainer():System.Boolean">
				<signature>System.DirectoryServices.DirectoryEntry.get_IsContainer():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_JustCreated" uniqueID="get_JustCreated():System.Boolean">
				<signature>System.DirectoryServices.DirectoryEntry.get_JustCreated():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.DirectoryServices.DirectoryEntry.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NativeGuid" uniqueID="get_NativeGuid():System.String">
				<signature>System.DirectoryServices.DirectoryEntry.get_NativeGuid():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NativeObject" uniqueID="get_NativeObject():System.Object">
				<signature>System.DirectoryServices.DirectoryEntry.get_NativeObject():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ObjectSecurity" uniqueID="get_ObjectSecurity():System.DirectoryServices.ActiveDirectorySecurity">
				<signature>System.DirectoryServices.DirectoryEntry.get_ObjectSecurity():System.DirectoryServices.ActiveDirectorySecurity</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Options" uniqueID="get_Options():System.DirectoryServices.DirectoryEntryConfiguration">
				<signature>System.DirectoryServices.DirectoryEntry.get_Options():System.DirectoryServices.DirectoryEntryConfiguration</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Parent" uniqueID="get_Parent():System.DirectoryServices.DirectoryEntry">
				<signature>System.DirectoryServices.DirectoryEntry.get_Parent():System.DirectoryServices.DirectoryEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Path" uniqueID="get_Path():System.String">
				<signature>System.DirectoryServices.DirectoryEntry.get_Path():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Properties" uniqueID="get_Properties():System.DirectoryServices.PropertyCollection">
				<signature>System.DirectoryServices.DirectoryEntry.get_Properties():System.DirectoryServices.PropertyCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SchemaClassName" uniqueID="get_SchemaClassName():System.String">
				<signature>System.DirectoryServices.DirectoryEntry.get_SchemaClassName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SchemaEntry" uniqueID="get_SchemaEntry():System.DirectoryServices.DirectoryEntry">
				<signature>System.DirectoryServices.DirectoryEntry.get_SchemaEntry():System.DirectoryServices.DirectoryEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UsePropertyCache" uniqueID="get_UsePropertyCache():System.Boolean">
				<signature>System.DirectoryServices.DirectoryEntry.get_UsePropertyCache():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Username" uniqueID="get_Username():System.String">
				<signature>System.DirectoryServices.DirectoryEntry.get_Username():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AuthenticationType" uniqueID="set_AuthenticationType(System.DirectoryServices.AuthenticationTypes):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.set_AuthenticationType(System.DirectoryServices.AuthenticationTypes):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_JustCreated" uniqueID="set_JustCreated(System.Boolean):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.set_JustCreated(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ObjectSecurity" uniqueID="set_ObjectSecurity(System.DirectoryServices.ActiveDirectorySecurity):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.set_ObjectSecurity(System.DirectoryServices.ActiveDirectorySecurity):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Password" uniqueID="set_Password(System.String):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.set_Password(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Path" uniqueID="set_Path(System.String):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.set_Path(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UsePropertyCache" uniqueID="set_UsePropertyCache(System.Boolean):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.set_UsePropertyCache(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Username" uniqueID="set_Username(System.String):System.Void">
				<signature>System.DirectoryServices.DirectoryEntry.set_Username(System.String):System.Void</signature>
			</method>
		</class>
		<class name="DirectorySearcher" uniqueID="System.DirectoryServices.DirectorySearcher">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="DoSetSearchPrefs" uniqueID="DoSetSearchPrefs(System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch;System.DirectoryServices.Interop.AdsSearchPreferenceInfo[]):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.DoSetSearchPrefs(System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch;System.DirectoryServices.Interop.AdsSearchPreferenceInfo[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectorySearcher" uniqueID="DirectorySearcher():System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.DirectorySearcher():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectorySearcher" uniqueID="DirectorySearcher(System.DirectoryServices.DirectoryEntry):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.DirectorySearcher(System.DirectoryServices.DirectoryEntry):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectorySearcher" uniqueID="DirectorySearcher(System.DirectoryServices.DirectoryEntry;System.String):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.DirectorySearcher(System.DirectoryServices.DirectoryEntry;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectorySearcher" uniqueID="DirectorySearcher(System.DirectoryServices.DirectoryEntry;System.String;System.String[]):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.DirectorySearcher(System.DirectoryServices.DirectoryEntry;System.String;System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectorySearcher" uniqueID="DirectorySearcher(System.DirectoryServices.DirectoryEntry;System.String;System.String[];System.DirectoryServices.SearchScope):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.DirectorySearcher(System.DirectoryServices.DirectoryEntry;System.String;System.String[];System.DirectoryServices.SearchScope):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectorySearcher" uniqueID="DirectorySearcher(System.String):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.DirectorySearcher(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectorySearcher" uniqueID="DirectorySearcher(System.String;System.String[]):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.DirectorySearcher(System.String;System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DirectorySearcher" uniqueID="DirectorySearcher(System.String;System.String[];System.DirectoryServices.SearchScope):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.DirectorySearcher(System.String;System.String[];System.DirectoryServices.SearchScope):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindAll" uniqueID="FindAll():System.DirectoryServices.SearchResultCollection">
				<signature>System.DirectoryServices.DirectorySearcher.FindAll():System.DirectoryServices.SearchResultCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindAll" uniqueID="FindAll(System.Boolean):System.DirectoryServices.SearchResultCollection">
				<signature>System.DirectoryServices.DirectorySearcher.FindAll(System.Boolean):System.DirectoryServices.SearchResultCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindOne" uniqueID="FindOne():System.DirectoryServices.SearchResult">
				<signature>System.DirectoryServices.DirectorySearcher.FindOne():System.DirectoryServices.SearchResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetSearchPreferences" uniqueID="SetSearchPreferences(System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch;System.Boolean):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.SetSearchPreferences(System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Asynchronous" uniqueID="get_Asynchronous():System.Boolean">
				<signature>System.DirectoryServices.DirectorySearcher.get_Asynchronous():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AttributeScopeQuery" uniqueID="get_AttributeScopeQuery():System.String">
				<signature>System.DirectoryServices.DirectorySearcher.get_AttributeScopeQuery():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CacheResults" uniqueID="get_CacheResults():System.Boolean">
				<signature>System.DirectoryServices.DirectorySearcher.get_CacheResults():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientTimeout" uniqueID="get_ClientTimeout():System.TimeSpan">
				<signature>System.DirectoryServices.DirectorySearcher.get_ClientTimeout():System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DerefAlias" uniqueID="get_DerefAlias():System.DirectoryServices.DereferenceAlias">
				<signature>System.DirectoryServices.DirectorySearcher.get_DerefAlias():System.DirectoryServices.DereferenceAlias</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DirectorySynchronization" uniqueID="get_DirectorySynchronization():System.DirectoryServices.DirectorySynchronization">
				<signature>System.DirectoryServices.DirectorySearcher.get_DirectorySynchronization():System.DirectoryServices.DirectorySynchronization</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ExtendedDN" uniqueID="get_ExtendedDN():System.DirectoryServices.ExtendedDN">
				<signature>System.DirectoryServices.DirectorySearcher.get_ExtendedDN():System.DirectoryServices.ExtendedDN</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Filter" uniqueID="get_Filter():System.String">
				<signature>System.DirectoryServices.DirectorySearcher.get_Filter():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PageSize" uniqueID="get_PageSize():System.Int32">
				<signature>System.DirectoryServices.DirectorySearcher.get_PageSize():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PropertiesToLoad" uniqueID="get_PropertiesToLoad():System.Collections.Specialized.StringCollection">
				<signature>System.DirectoryServices.DirectorySearcher.get_PropertiesToLoad():System.Collections.Specialized.StringCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PropertyNamesOnly" uniqueID="get_PropertyNamesOnly():System.Boolean">
				<signature>System.DirectoryServices.DirectorySearcher.get_PropertyNamesOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReferralChasing" uniqueID="get_ReferralChasing():System.DirectoryServices.ReferralChasingOption">
				<signature>System.DirectoryServices.DirectorySearcher.get_ReferralChasing():System.DirectoryServices.ReferralChasingOption</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SearchRoot" uniqueID="get_SearchRoot():System.DirectoryServices.DirectoryEntry">
				<signature>System.DirectoryServices.DirectorySearcher.get_SearchRoot():System.DirectoryServices.DirectoryEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SearchScope" uniqueID="get_SearchScope():System.DirectoryServices.SearchScope">
				<signature>System.DirectoryServices.DirectorySearcher.get_SearchScope():System.DirectoryServices.SearchScope</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SecurityMasks" uniqueID="get_SecurityMasks():System.DirectoryServices.SecurityMasks">
				<signature>System.DirectoryServices.DirectorySearcher.get_SecurityMasks():System.DirectoryServices.SecurityMasks</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ServerPageTimeLimit" uniqueID="get_ServerPageTimeLimit():System.TimeSpan">
				<signature>System.DirectoryServices.DirectorySearcher.get_ServerPageTimeLimit():System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ServerTimeLimit" uniqueID="get_ServerTimeLimit():System.TimeSpan">
				<signature>System.DirectoryServices.DirectorySearcher.get_ServerTimeLimit():System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SizeLimit" uniqueID="get_SizeLimit():System.Int32">
				<signature>System.DirectoryServices.DirectorySearcher.get_SizeLimit():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Sort" uniqueID="get_Sort():System.DirectoryServices.SortOption">
				<signature>System.DirectoryServices.DirectorySearcher.get_Sort():System.DirectoryServices.SortOption</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Tombstone" uniqueID="get_Tombstone():System.Boolean">
				<signature>System.DirectoryServices.DirectorySearcher.get_Tombstone():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_VirtualListView" uniqueID="get_VirtualListView():System.DirectoryServices.DirectoryVirtualListView">
				<signature>System.DirectoryServices.DirectorySearcher.get_VirtualListView():System.DirectoryServices.DirectoryVirtualListView</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Asynchronous" uniqueID="set_Asynchronous(System.Boolean):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_Asynchronous(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AttributeScopeQuery" uniqueID="set_AttributeScopeQuery(System.String):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_AttributeScopeQuery(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CacheResults" uniqueID="set_CacheResults(System.Boolean):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_CacheResults(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ClientTimeout" uniqueID="set_ClientTimeout(System.TimeSpan):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_ClientTimeout(System.TimeSpan):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DerefAlias" uniqueID="set_DerefAlias(System.DirectoryServices.DereferenceAlias):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_DerefAlias(System.DirectoryServices.DereferenceAlias):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DirectorySynchronization" uniqueID="set_DirectorySynchronization(System.DirectoryServices.DirectorySynchronization):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_DirectorySynchronization(System.DirectoryServices.DirectorySynchronization):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ExtendedDN" uniqueID="set_ExtendedDN(System.DirectoryServices.ExtendedDN):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_ExtendedDN(System.DirectoryServices.ExtendedDN):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Filter" uniqueID="set_Filter(System.String):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_Filter(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PageSize" uniqueID="set_PageSize(System.Int32):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_PageSize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PropertyNamesOnly" uniqueID="set_PropertyNamesOnly(System.Boolean):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_PropertyNamesOnly(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ReferralChasing" uniqueID="set_ReferralChasing(System.DirectoryServices.ReferralChasingOption):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_ReferralChasing(System.DirectoryServices.ReferralChasingOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SearchRoot" uniqueID="set_SearchRoot(System.DirectoryServices.DirectoryEntry):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_SearchRoot(System.DirectoryServices.DirectoryEntry):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SearchScope" uniqueID="set_SearchScope(System.DirectoryServices.SearchScope):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_SearchScope(System.DirectoryServices.SearchScope):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SecurityMasks" uniqueID="set_SecurityMasks(System.DirectoryServices.SecurityMasks):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_SecurityMasks(System.DirectoryServices.SecurityMasks):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ServerPageTimeLimit" uniqueID="set_ServerPageTimeLimit(System.TimeSpan):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_ServerPageTimeLimit(System.TimeSpan):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ServerTimeLimit" uniqueID="set_ServerTimeLimit(System.TimeSpan):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_ServerTimeLimit(System.TimeSpan):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SizeLimit" uniqueID="set_SizeLimit(System.Int32):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_SizeLimit(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Sort" uniqueID="set_Sort(System.DirectoryServices.SortOption):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_Sort(System.DirectoryServices.SortOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Tombstone" uniqueID="set_Tombstone(System.Boolean):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_Tombstone(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_VirtualListView" uniqueID="set_VirtualListView(System.DirectoryServices.DirectoryVirtualListView):System.Void">
				<signature>System.DirectoryServices.DirectorySearcher.set_VirtualListView(System.DirectoryServices.DirectoryVirtualListView):System.Void</signature>
			</method>
		</class>
		<class name="SearchResult" uniqueID="System.DirectoryServices.SearchResult">
			<method accessibility="Public" methodKind="Member" name="GetDirectoryEntry" uniqueID="GetDirectoryEntry():System.DirectoryServices.DirectoryEntry">
				<signature>System.DirectoryServices.SearchResult.GetDirectoryEntry():System.DirectoryServices.DirectoryEntry</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SearchResult" uniqueID="SearchResult(System.Net.NetworkCredential;System.DirectoryServices.AuthenticationTypes):System.Void">
				<signature>System.DirectoryServices.SearchResult.SearchResult(System.Net.NetworkCredential;System.DirectoryServices.AuthenticationTypes):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Path" uniqueID="get_Path():System.String">
				<signature>System.DirectoryServices.SearchResult.get_Path():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Properties" uniqueID="get_Properties():System.DirectoryServices.ResultPropertyCollection">
				<signature>System.DirectoryServices.SearchResult.get_Properties():System.DirectoryServices.ResultPropertyCollection</signature>
			</method>
		</class>
		<class name="SearchResultCollection" uniqueID="System.DirectoryServices.SearchResultCollection">
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.DirectoryServices.SearchResult):System.Boolean">
				<signature>System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.DirectoryServices.SearchResult[];System.Int32):System.Void">
				<signature>System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.DirectoryServices.SearchResultCollection.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Finalize" uniqueID="Finalize():System.Void">
				<signature>System.DirectoryServices.SearchResultCollection.Finalize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.DirectoryServices.SearchResultCollection.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.DirectoryServices.SearchResult):System.Int32">
				<signature>System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RetrieveDirectorySynchronizationCookie" uniqueID="RetrieveDirectorySynchronizationCookie():System.Byte[]">
				<signature>System.DirectoryServices.SearchResultCollection.RetrieveDirectorySynchronizationCookie():System.Byte[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RetrieveVLVResponse" uniqueID="RetrieveVLVResponse():System.DirectoryServices.DirectoryVirtualListView">
				<signature>System.DirectoryServices.SearchResultCollection.RetrieveVLVResponse():System.DirectoryServices.DirectoryVirtualListView</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SearchResultCollection" uniqueID="SearchResultCollection(System.DirectoryServices.DirectoryEntry;System.IntPtr;System.String[];System.DirectoryServices.DirectorySearcher):System.Void">
				<signature>System.DirectoryServices.SearchResultCollection.SearchResultCollection(System.DirectoryServices.DirectoryEntry;System.IntPtr;System.String[];System.DirectoryServices.DirectorySearcher):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.DirectoryServices.SearchResultCollection.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.DirectoryServices.SearchResultCollection.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.DirectoryServices.SearchResultCollection.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.DirectoryServices.SearchResultCollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DirsyncCookie" uniqueID="get_DirsyncCookie():System.Byte[]">
				<signature>System.DirectoryServices.SearchResultCollection.get_DirsyncCookie():System.Byte[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Filter" uniqueID="get_Filter():System.String">
				<signature>System.DirectoryServices.SearchResultCollection.get_Filter():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Handle" uniqueID="get_Handle():System.IntPtr">
				<signature>System.DirectoryServices.SearchResultCollection.get_Handle():System.IntPtr</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_InnerList" uniqueID="get_InnerList():System.Collections.ArrayList">
				<signature>System.DirectoryServices.SearchResultCollection.get_InnerList():System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.DirectoryServices.SearchResult">
				<signature>System.DirectoryServices.SearchResultCollection.get_Item(System.Int32):System.DirectoryServices.SearchResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PropertiesLoaded" uniqueID="get_PropertiesLoaded():System.String[]">
				<signature>System.DirectoryServices.SearchResultCollection.get_PropertiesLoaded():System.String[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SearchObject" uniqueID="get_SearchObject():System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch">
				<signature>System.DirectoryServices.SearchResultCollection.get_SearchObject():System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_VLVResponse" uniqueID="get_VLVResponse():System.DirectoryServices.DirectoryVirtualListView">
				<signature>System.DirectoryServices.SearchResultCollection.get_VLVResponse():System.DirectoryServices.DirectoryVirtualListView</signature>
			</method>
		</class>
	</package>
	<package name="System.Runtime.Serialization">
		<class name="ISerializable" uniqueID="System.Runtime.Serialization.ISerializable">
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
		</class>
		<class name="IDeserializationCallback" uniqueID="System.Runtime.Serialization.IDeserializationCallback">
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Collections.ObjectModel">
		<class name="ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.Contains(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(Microsoft.SqlServer.Server.SmiExtendedMetaData[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.CopyTo(Microsoft.SqlServer.Server.SmiExtendedMetaData[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.IndexOf(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;" uniqueID="ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;(System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):Microsoft.SqlServer.Server.SmiExtendedMetaData">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):Microsoft.SqlServer.Server.SmiExtendedMetaData</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;Microsoft.SqlServer.Server.SmiExtendedMetaData):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):Microsoft.SqlServer.Server.SmiExtendedMetaData">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Item(System.Int32):Microsoft.SqlServer.Server.SmiExtendedMetaData</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;.get_Items():System.Collections.Generic.IList&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Data.Index&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.Index):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.Contains(System.Data.Index):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Index[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.CopyTo(System.Data.Index[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Index&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.Index&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.Index):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.IndexOf(System.Data.Index):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Data.Index&gt;" uniqueID="ReadOnlyCollection&lt;System.Data.Index&gt;(System.Collections.Generic.IList&lt;System.Data.Index&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.ReadOnlyCollection&lt;System.Data.Index&gt;(System.Collections.Generic.IList&lt;System.Data.Index&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.Index):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.Index):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.Index):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.Index):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.Index):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.Index):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.Index">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.Index</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.Index):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.Index):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Index">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.get_Item(System.Int32):System.Data.Index</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Data.Index&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Index&gt;.get_Items():System.Collections.Generic.IList&lt;System.Data.Index&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Attribute&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Attribute):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.Contains(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Attribute[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.CopyTo(System.Attribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Attribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Attribute):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.IndexOf(System.Attribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Attribute&gt;" uniqueID="ReadOnlyCollection&lt;System.Attribute&gt;(System.Collections.Generic.IList&lt;System.Attribute&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.ReadOnlyCollection&lt;System.Attribute&gt;(System.Collections.Generic.IList&lt;System.Attribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Attribute):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Attribute):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Attribute):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Attribute">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Attribute</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Attribute):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Attribute):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Attribute">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.get_Item(System.Int32):System.Attribute</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Attribute&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Attribute&gt;.get_Items():System.Collections.Generic.IList&lt;System.Attribute&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Data.DataRow&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataRow):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.Contains(System.Data.DataRow):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataRow[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.CopyTo(System.Data.DataRow[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRow&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRow&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRow):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.IndexOf(System.Data.DataRow):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Data.DataRow&gt;" uniqueID="ReadOnlyCollection&lt;System.Data.DataRow&gt;(System.Collections.Generic.IList&lt;System.Data.DataRow&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.ReadOnlyCollection&lt;System.Data.DataRow&gt;(System.Collections.Generic.IList&lt;System.Data.DataRow&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataRow):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataRow):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataRow):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataRow):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataRow">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataRow</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataRow):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataRow):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataRow">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.get_Item(System.Int32):System.Data.DataRow</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Data.DataRow&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRow&gt;.get_Items():System.Collections.Generic.IList&lt;System.Data.DataRow&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Data.DataView&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataView):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.Contains(System.Data.DataView):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataView[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.CopyTo(System.Data.DataView[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataView&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataView&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataView):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.IndexOf(System.Data.DataView):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Data.DataView&gt;" uniqueID="ReadOnlyCollection&lt;System.Data.DataView&gt;(System.Collections.Generic.IList&lt;System.Data.DataView&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.ReadOnlyCollection&lt;System.Data.DataView&gt;(System.Collections.Generic.IList&lt;System.Data.DataView&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataView):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataView):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataView):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataView):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataView):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataView):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataView">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataView</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataView):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataView):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataView">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.get_Item(System.Int32):System.Data.DataView</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Data.DataView&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataView&gt;.get_Items():System.Collections.Generic.IList&lt;System.Data.DataView&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Data.DataColumn&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataColumn):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.Contains(System.Data.DataColumn):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataColumn[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.CopyTo(System.Data.DataColumn[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataColumn&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataColumn&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataColumn):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.IndexOf(System.Data.DataColumn):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Data.DataColumn&gt;" uniqueID="ReadOnlyCollection&lt;System.Data.DataColumn&gt;(System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.ReadOnlyCollection&lt;System.Data.DataColumn&gt;(System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataColumn):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataColumn):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataColumn):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataColumn):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataColumn">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataColumn):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataColumn):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataColumn">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.get_Item(System.Int32):System.Data.DataColumn</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataColumn&gt;.get_Items():System.Collections.Generic.IList&lt;System.Data.DataColumn&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Data.DataRelation&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataRelation):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.Contains(System.Data.DataRelation):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataRelation[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.CopyTo(System.Data.DataRelation[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRelation&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataRelation&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataRelation):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.IndexOf(System.Data.DataRelation):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Data.DataRelation&gt;" uniqueID="ReadOnlyCollection&lt;System.Data.DataRelation&gt;(System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.ReadOnlyCollection&lt;System.Data.DataRelation&gt;(System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataRelation):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataRelation):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataRelation):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataRelation):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataRelation">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataRelation</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataRelation):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataRelation):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataRelation">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.get_Item(System.Int32):System.Data.DataRelation</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataRelation&gt;.get_Items():System.Collections.Generic.IList&lt;System.Data.DataRelation&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Data.DataTable&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataTable):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.Contains(System.Data.DataTable):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataTable[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.CopyTo(System.Data.DataTable[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataTable&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataTable&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataTable):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.IndexOf(System.Data.DataTable):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Data.DataTable&gt;" uniqueID="ReadOnlyCollection&lt;System.Data.DataTable&gt;(System.Collections.Generic.IList&lt;System.Data.DataTable&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.ReadOnlyCollection&lt;System.Data.DataTable&gt;(System.Collections.Generic.IList&lt;System.Data.DataTable&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataTable):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataTable):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataTable):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataTable):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataTable">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataTable</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataTable):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataTable):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataTable">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.get_Item(System.Int32):System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Data.DataTable&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataTable&gt;.get_Items():System.Collections.Generic.IList&lt;System.Data.DataTable&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Data.DataViewListener&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.DataViewListener):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.Contains(System.Data.DataViewListener):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.DataViewListener[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.CopyTo(System.Data.DataViewListener[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataViewListener&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.DataViewListener&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.DataViewListener):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.IndexOf(System.Data.DataViewListener):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Data.DataViewListener&gt;" uniqueID="ReadOnlyCollection&lt;System.Data.DataViewListener&gt;(System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;(System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataViewListener):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.DataViewListener):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataViewListener):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.DataViewListener):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataViewListener):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.DataViewListener):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataViewListener">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.DataViewListener</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataViewListener):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.DataViewListener):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.DataViewListener">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.get_Item(System.Int32):System.Data.DataViewListener</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.DataViewListener&gt;.get_Items():System.Collections.Generic.IList&lt;System.Data.DataViewListener&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.SqlClient.SqlParameter):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.Contains(System.Data.SqlClient.SqlParameter):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.SqlClient.SqlParameter[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.CopyTo(System.Data.SqlClient.SqlParameter[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.SqlClient.SqlParameter&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Data.SqlClient.SqlParameter&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.SqlClient.SqlParameter):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.IndexOf(System.Data.SqlClient.SqlParameter):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;" uniqueID="ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;(System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;(System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.SqlClient.SqlParameter):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Data.SqlClient.SqlParameter):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.SqlClient.SqlParameter">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.SqlClient.SqlParameter">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.get_Item(System.Int32):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.SqlClient.SqlParameter&gt;.get_Items():System.Collections.Generic.IList&lt;System.Data.SqlClient.SqlParameter&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Exception&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Exception):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.Contains(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Exception[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.CopyTo(System.Exception[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Exception&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Exception&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Exception):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.IndexOf(System.Exception):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Exception&gt;" uniqueID="ReadOnlyCollection&lt;System.Exception&gt;(System.Collections.Generic.IList&lt;System.Exception&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.ReadOnlyCollection&lt;System.Exception&gt;(System.Collections.Generic.IList&lt;System.Exception&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Exception):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Exception):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Exception):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Exception):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Exception">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Exception</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Exception):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Exception):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Exception">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.get_Item(System.Int32):System.Exception</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Exception&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;.get_Items():System.Collections.Generic.IList&lt;System.Exception&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Object[]&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object[]):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.Contains(System.Object[]):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Object[][];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.CopyTo(System.Object[][];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Object[]&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Object[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object[]):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.IndexOf(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Object[]&gt;" uniqueID="ReadOnlyCollection&lt;System.Object[]&gt;(System.Collections.Generic.IList&lt;System.Object[]&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.ReadOnlyCollection&lt;System.Object[]&gt;(System.Collections.Generic.IList&lt;System.Object[]&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Object[]):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Object[]):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Object[]):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Object[]):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Object[]">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Object[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Object[]):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Object[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object[]">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.get_Item(System.Int32):System.Object[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Object[]&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object[]&gt;.get_Items():System.Collections.Generic.IList&lt;System.Object[]&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.Contains(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Runtime.ExceptionServices.ExceptionDispatchInfo[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.CopyTo(System.Runtime.ExceptionServices.ExceptionDispatchInfo[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.IndexOf(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;" uniqueID="ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;(System.Collections.Generic.IList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;(System.Collections.Generic.IList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Runtime.ExceptionServices.ExceptionDispatchInfo">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Runtime.ExceptionServices.ExceptionDispatchInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Runtime.ExceptionServices.ExceptionDispatchInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Runtime.ExceptionServices.ExceptionDispatchInfo">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.get_Item(System.Int32):System.Runtime.ExceptionServices.ExceptionDispatchInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;.get_Items():System.Collections.Generic.IList&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.RegisteredExpandoAttribute):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.Contains(System.Web.UI.RegisteredExpandoAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.RegisteredExpandoAttribute[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.CopyTo(System.Web.UI.RegisteredExpandoAttribute[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredExpandoAttribute&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredExpandoAttribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.RegisteredExpandoAttribute):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.IndexOf(System.Web.UI.RegisteredExpandoAttribute):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;" uniqueID="ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;(System.Collections.Generic.IList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;(System.Collections.Generic.IList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.RegisteredExpandoAttribute):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.RegisteredExpandoAttribute):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.RegisteredExpandoAttribute):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.RegisteredExpandoAttribute):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.RegisteredExpandoAttribute):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.RegisteredExpandoAttribute):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.RegisteredExpandoAttribute">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.RegisteredExpandoAttribute</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.RegisteredExpandoAttribute):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.RegisteredExpandoAttribute):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredExpandoAttribute">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.get_Item(System.Int32):System.Web.UI.RegisteredExpandoAttribute</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;.get_Items():System.Collections.Generic.IList&lt;System.Web.UI.RegisteredExpandoAttribute&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.Contains(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Threading.Tasks.Task[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.CopyTo(System.Threading.Tasks.Task[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Threading.Tasks.Task):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.IndexOf(System.Threading.Tasks.Task):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;" uniqueID="ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;(System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;(System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Threading.Tasks.Task">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Threading.Tasks.Task):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Threading.Tasks.Task">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.get_Item(System.Int32):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Threading.Tasks.Task&gt;.get_Items():System.Collections.Generic.IList&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.RegisteredArrayDeclaration):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.Contains(System.Web.UI.RegisteredArrayDeclaration):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.RegisteredArrayDeclaration[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.CopyTo(System.Web.UI.RegisteredArrayDeclaration[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredArrayDeclaration&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredArrayDeclaration&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.RegisteredArrayDeclaration):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.IndexOf(System.Web.UI.RegisteredArrayDeclaration):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;" uniqueID="ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;(System.Collections.Generic.IList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;(System.Collections.Generic.IList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.RegisteredArrayDeclaration):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.RegisteredArrayDeclaration):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.RegisteredArrayDeclaration):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.RegisteredArrayDeclaration):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.RegisteredArrayDeclaration):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.RegisteredArrayDeclaration):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.RegisteredArrayDeclaration">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.RegisteredArrayDeclaration</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.RegisteredArrayDeclaration):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.RegisteredArrayDeclaration):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredArrayDeclaration">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.get_Item(System.Int32):System.Web.UI.RegisteredArrayDeclaration</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;.get_Items():System.Collections.Generic.IList&lt;System.Web.UI.RegisteredArrayDeclaration&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.RegisteredDisposeScript):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.Contains(System.Web.UI.RegisteredDisposeScript):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.RegisteredDisposeScript[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.CopyTo(System.Web.UI.RegisteredDisposeScript[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredDisposeScript&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredDisposeScript&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.RegisteredDisposeScript):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.IndexOf(System.Web.UI.RegisteredDisposeScript):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;" uniqueID="ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;(System.Collections.Generic.IList&lt;System.Web.UI.RegisteredDisposeScript&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;(System.Collections.Generic.IList&lt;System.Web.UI.RegisteredDisposeScript&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.RegisteredDisposeScript):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.RegisteredDisposeScript):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.RegisteredDisposeScript):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.RegisteredDisposeScript):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.RegisteredDisposeScript):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.RegisteredDisposeScript):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.RegisteredDisposeScript">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.RegisteredDisposeScript</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.RegisteredDisposeScript):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.RegisteredDisposeScript):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredDisposeScript">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.get_Item(System.Int32):System.Web.UI.RegisteredDisposeScript</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Web.UI.RegisteredDisposeScript&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;.get_Items():System.Collections.Generic.IList&lt;System.Web.UI.RegisteredDisposeScript&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.RegisteredHiddenField):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.Contains(System.Web.UI.RegisteredHiddenField):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.RegisteredHiddenField[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.CopyTo(System.Web.UI.RegisteredHiddenField[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredHiddenField&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredHiddenField&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.RegisteredHiddenField):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.IndexOf(System.Web.UI.RegisteredHiddenField):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;" uniqueID="ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;(System.Collections.Generic.IList&lt;System.Web.UI.RegisteredHiddenField&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;(System.Collections.Generic.IList&lt;System.Web.UI.RegisteredHiddenField&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.RegisteredHiddenField):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.RegisteredHiddenField):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.RegisteredHiddenField):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.RegisteredHiddenField):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.RegisteredHiddenField):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.RegisteredHiddenField):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.RegisteredHiddenField">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.RegisteredHiddenField</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.RegisteredHiddenField):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.RegisteredHiddenField):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredHiddenField">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.get_Item(System.Int32):System.Web.UI.RegisteredHiddenField</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Web.UI.RegisteredHiddenField&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;.get_Items():System.Collections.Generic.IList&lt;System.Web.UI.RegisteredHiddenField&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.RegisteredScript):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.Contains(System.Web.UI.RegisteredScript):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.RegisteredScript[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.CopyTo(System.Web.UI.RegisteredScript[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredScript&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.RegisteredScript&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.RegisteredScript):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.IndexOf(System.Web.UI.RegisteredScript):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" uniqueID="ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;(System.Collections.Generic.IList&lt;System.Web.UI.RegisteredScript&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;(System.Collections.Generic.IList&lt;System.Web.UI.RegisteredScript&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.RegisteredScript):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.RegisteredScript):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.RegisteredScript):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.RegisteredScript):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.RegisteredScript):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.RegisteredScript):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.RegisteredScript">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.RegisteredScript</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.RegisteredScript):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.RegisteredScript):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.RegisteredScript">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.get_Item(System.Int32):System.Web.UI.RegisteredScript</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Web.UI.RegisteredScript&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;.get_Items():System.Collections.Generic.IList&lt;System.Web.UI.RegisteredScript&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.ScriptManagerProxy):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.Contains(System.Web.UI.ScriptManagerProxy):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.ScriptManagerProxy[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.CopyTo(System.Web.UI.ScriptManagerProxy[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptManagerProxy&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptManagerProxy&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.ScriptManagerProxy):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.IndexOf(System.Web.UI.ScriptManagerProxy):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;" uniqueID="ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;(System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.ScriptManagerProxy):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.ScriptManagerProxy):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.ScriptManagerProxy">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.ScriptManagerProxy</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.ScriptManagerProxy">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Item(System.Int32):System.Web.UI.ScriptManagerProxy</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptManagerProxy&gt;.get_Items():System.Collections.Generic.IList&lt;System.Web.UI.ScriptManagerProxy&gt;</signature>
			</method>
		</class>
		<class name="ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;">
			<method accessibility="Private" methodKind="Static" name="IsCompatibleObject" uniqueID="IsCompatibleObject(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.IsCompatibleObject(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Web.UI.ScriptReferenceBase):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.Contains(System.Web.UI.ScriptReferenceBase):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Web.UI.ScriptReferenceBase[];System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.CopyTo(System.Web.UI.ScriptReferenceBase[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptReferenceBase&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.GetEnumerator():System.Collections.Generic.IEnumerator&lt;System.Web.UI.ScriptReferenceBase&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Web.UI.ScriptReferenceBase):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.IndexOf(System.Web.UI.ScriptReferenceBase):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;" uniqueID="ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;(System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Add" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.ScriptReferenceBase):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Add(System.Web.UI.ScriptReferenceBase):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Clear" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.Remove" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.ScriptReferenceBase):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Remove(System.Web.UI.ScriptReferenceBase):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly" uniqueID="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.Insert" uniqueID="System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.RemoveAt" uniqueID="System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.get_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.ScriptReferenceBase">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32):System.Web.UI.ScriptReferenceBase</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.Generic.IList&lt;T&gt;.set_Item" uniqueID="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32;System.Web.UI.ScriptReferenceBase):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IEnumerable.GetEnumerator" uniqueID="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Add" uniqueID="System.Collections.IList.Add(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Clear" uniqueID="System.Collections.IList.Clear():System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.Clear():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Contains" uniqueID="System.Collections.IList.Contains(System.Object):System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.IndexOf" uniqueID="System.Collections.IList.IndexOf(System.Object):System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Insert" uniqueID="System.Collections.IList.Insert(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.Remove" uniqueID="System.Collections.IList.Remove(System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.RemoveAt" uniqueID="System.Collections.IList.RemoveAt(System.Int32):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsFixedSize" uniqueID="System.Collections.IList.get_IsFixedSize():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_IsReadOnly" uniqueID="System.Collections.IList.get_IsReadOnly():System.Boolean">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Web.UI.ScriptReferenceBase">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Item(System.Int32):System.Web.UI.ScriptReferenceBase</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;">
				<signature>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.ScriptReferenceBase&gt;.get_Items():System.Collections.Generic.IList&lt;System.Web.UI.ScriptReferenceBase&gt;</signature>
			</method>
		</class>
	</package>
	<package name="System.Data.SqlClient">
		<class name="SqlBuffer" uniqueID="System.Data.SqlClient.SqlBuffer">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="Clear" uniqueID="Clear(System.Data.SqlClient.SqlBuffer[]):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.Clear(System.Data.SqlClient.SqlBuffer[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CloneBufferArray" uniqueID="CloneBufferArray(System.Data.SqlClient.SqlBuffer[]):System.Data.SqlClient.SqlBuffer[]">
				<signature>System.Data.SqlClient.SqlBuffer.CloneBufferArray(System.Data.SqlClient.SqlBuffer[]):System.Data.SqlClient.SqlBuffer[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateBufferArray" uniqueID="CreateBufferArray(System.Int32):System.Data.SqlClient.SqlBuffer[]">
				<signature>System.Data.SqlClient.SqlBuffer.CreateBufferArray(System.Int32):System.Data.SqlClient.SqlBuffer[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FillInTimeInfo" uniqueID="FillInTimeInfo(System.Data.SqlClient.SqlBuffer+TimeInfo;System.Byte[];System.Int32;System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.FillInTimeInfo(System.Data.SqlClient.SqlBuffer+TimeInfo;System.Byte[];System.Int32;System.Byte):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetDateFromByteArray" uniqueID="GetDateFromByteArray(System.Byte[];System.Int32):System.Int32">
				<signature>System.Data.SqlClient.SqlBuffer.GetDateFromByteArray(System.Byte[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetTicksFromDateTime2Info" uniqueID="GetTicksFromDateTime2Info(System.Data.SqlClient.SqlBuffer+DateTime2Info):System.Int64">
				<signature>System.Data.SqlClient.SqlBuffer.GetTicksFromDateTime2Info(System.Data.SqlClient.SqlBuffer+DateTime2Info):System.Int64</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.Clear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTypeFromStorageType" uniqueID="GetTypeFromStorageType(System.Boolean):System.Type">
				<signature>System.Data.SqlClient.SqlBuffer.GetTypeFromStorageType(System.Boolean):System.Type</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToDate" uniqueID="SetToDate(System.Byte[]):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToDate(System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToDate" uniqueID="SetToDate(System.DateTime):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToDate(System.DateTime):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToDateTime" uniqueID="SetToDateTime(System.Int32;System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToDateTime(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToDateTime2" uniqueID="SetToDateTime2(System.Byte[];System.Int32;System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToDateTime2(System.Byte[];System.Int32;System.Byte):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToDateTime2" uniqueID="SetToDateTime2(System.DateTime;System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToDateTime2(System.DateTime;System.Byte):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToDateTimeOffset" uniqueID="SetToDateTimeOffset(System.Byte[];System.Int32;System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToDateTimeOffset(System.Byte[];System.Int32;System.Byte):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToDateTimeOffset" uniqueID="SetToDateTimeOffset(System.DateTimeOffset;System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToDateTimeOffset(System.DateTimeOffset;System.Byte):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToDecimal" uniqueID="SetToDecimal(System.Byte;System.Byte;System.Boolean;System.Int32[]):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToDecimal(System.Byte;System.Byte;System.Boolean;System.Int32[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToMoney" uniqueID="SetToMoney(System.Int64):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToMoney(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToNullOfType" uniqueID="SetToNullOfType(System.Data.SqlClient.SqlBuffer+StorageType):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToNullOfType(System.Data.SqlClient.SqlBuffer+StorageType):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToString" uniqueID="SetToString(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToString(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToTime" uniqueID="SetToTime(System.Byte[];System.Int32;System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToTime(System.Byte[];System.Int32;System.Byte):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetToTime" uniqueID="SetToTime(System.TimeSpan;System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SetToTime(System.TimeSpan;System.Byte):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SqlBuffer" uniqueID="SqlBuffer():System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SqlBuffer():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SqlBuffer" uniqueID="SqlBuffer(System.Data.SqlClient.SqlBuffer):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.SqlBuffer(System.Data.SqlClient.SqlBuffer):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ThrowIfNull" uniqueID="ThrowIfNull():System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.ThrowIfNull():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Boolean" uniqueID="get_Boolean():System.Boolean">
				<signature>System.Data.SqlClient.SqlBuffer.get_Boolean():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Byte" uniqueID="get_Byte():System.Byte">
				<signature>System.Data.SqlClient.SqlBuffer.get_Byte():System.Byte</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ByteArray" uniqueID="get_ByteArray():System.Byte[]">
				<signature>System.Data.SqlClient.SqlBuffer.get_ByteArray():System.Byte[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DateTime" uniqueID="get_DateTime():System.DateTime">
				<signature>System.Data.SqlClient.SqlBuffer.get_DateTime():System.DateTime</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DateTimeOffset" uniqueID="get_DateTimeOffset():System.DateTimeOffset">
				<signature>System.Data.SqlClient.SqlBuffer.get_DateTimeOffset():System.DateTimeOffset</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Decimal" uniqueID="get_Decimal():System.Decimal">
				<signature>System.Data.SqlClient.SqlBuffer.get_Decimal():System.Decimal</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Double" uniqueID="get_Double():System.Double">
				<signature>System.Data.SqlClient.SqlBuffer.get_Double():System.Double</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Guid" uniqueID="get_Guid():System.Guid">
				<signature>System.Data.SqlClient.SqlBuffer.get_Guid():System.Guid</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Int16" uniqueID="get_Int16():System.Int16">
				<signature>System.Data.SqlClient.SqlBuffer.get_Int16():System.Int16</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Int32" uniqueID="get_Int32():System.Int32">
				<signature>System.Data.SqlClient.SqlBuffer.get_Int32():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Int64" uniqueID="get_Int64():System.Int64">
				<signature>System.Data.SqlClient.SqlBuffer.get_Int64():System.Int64</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsEmpty" uniqueID="get_IsEmpty():System.Boolean">
				<signature>System.Data.SqlClient.SqlBuffer.get_IsEmpty():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsNull" uniqueID="get_IsNull():System.Boolean">
				<signature>System.Data.SqlClient.SqlBuffer.get_IsNull():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_KatmaiDateTimeSqlString" uniqueID="get_KatmaiDateTimeSqlString():System.Data.SqlTypes.SqlString">
				<signature>System.Data.SqlClient.SqlBuffer.get_KatmaiDateTimeSqlString():System.Data.SqlTypes.SqlString</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_KatmaiDateTimeString" uniqueID="get_KatmaiDateTimeString():System.String">
				<signature>System.Data.SqlClient.SqlBuffer.get_KatmaiDateTimeString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Single" uniqueID="get_Single():System.Single">
				<signature>System.Data.SqlClient.SqlBuffer.get_Single():System.Single</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlBinary" uniqueID="get_SqlBinary():System.Data.SqlTypes.SqlBinary">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlBinary():System.Data.SqlTypes.SqlBinary</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlBoolean" uniqueID="get_SqlBoolean():System.Data.SqlTypes.SqlBoolean">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlBoolean():System.Data.SqlTypes.SqlBoolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlByte" uniqueID="get_SqlByte():System.Data.SqlTypes.SqlByte">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlByte():System.Data.SqlTypes.SqlByte</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlCachedBuffer" uniqueID="get_SqlCachedBuffer():System.Data.SqlClient.SqlCachedBuffer">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlCachedBuffer():System.Data.SqlClient.SqlCachedBuffer</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlDateTime" uniqueID="get_SqlDateTime():System.Data.SqlTypes.SqlDateTime">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlDateTime():System.Data.SqlTypes.SqlDateTime</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlDecimal" uniqueID="get_SqlDecimal():System.Data.SqlTypes.SqlDecimal">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlDecimal():System.Data.SqlTypes.SqlDecimal</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlDouble" uniqueID="get_SqlDouble():System.Data.SqlTypes.SqlDouble">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlDouble():System.Data.SqlTypes.SqlDouble</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlGuid" uniqueID="get_SqlGuid():System.Data.SqlTypes.SqlGuid">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlGuid():System.Data.SqlTypes.SqlGuid</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlInt16" uniqueID="get_SqlInt16():System.Data.SqlTypes.SqlInt16">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlInt16():System.Data.SqlTypes.SqlInt16</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlInt32" uniqueID="get_SqlInt32():System.Data.SqlTypes.SqlInt32">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlInt32():System.Data.SqlTypes.SqlInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlInt64" uniqueID="get_SqlInt64():System.Data.SqlTypes.SqlInt64">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlInt64():System.Data.SqlTypes.SqlInt64</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlMoney" uniqueID="get_SqlMoney():System.Data.SqlTypes.SqlMoney">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlMoney():System.Data.SqlTypes.SqlMoney</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlSingle" uniqueID="get_SqlSingle():System.Data.SqlTypes.SqlSingle">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlSingle():System.Data.SqlTypes.SqlSingle</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlString" uniqueID="get_SqlString():System.Data.SqlTypes.SqlString">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlString():System.Data.SqlTypes.SqlString</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlValue" uniqueID="get_SqlValue():System.Object">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlValue():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SqlXml" uniqueID="get_SqlXml():System.Data.SqlTypes.SqlXml">
				<signature>System.Data.SqlClient.SqlBuffer.get_SqlXml():System.Data.SqlTypes.SqlXml</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_String" uniqueID="get_String():System.String">
				<signature>System.Data.SqlClient.SqlBuffer.get_String():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Time" uniqueID="get_Time():System.TimeSpan">
				<signature>System.Data.SqlClient.SqlBuffer.get_Time():System.TimeSpan</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Object">
				<signature>System.Data.SqlClient.SqlBuffer.get_Value():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_VariantInternalStorageType" uniqueID="get_VariantInternalStorageType():System.Data.SqlClient.SqlBuffer+StorageType">
				<signature>System.Data.SqlClient.SqlBuffer.get_VariantInternalStorageType():System.Data.SqlClient.SqlBuffer+StorageType</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Boolean" uniqueID="set_Boolean(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.set_Boolean(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Byte" uniqueID="set_Byte(System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.set_Byte(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Double" uniqueID="set_Double(System.Double):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.set_Double(System.Double):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Int16" uniqueID="set_Int16(System.Int16):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.set_Int16(System.Int16):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Int32" uniqueID="set_Int32(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.set_Int32(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Int64" uniqueID="set_Int64(System.Int64):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.set_Int64(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Single" uniqueID="set_Single(System.Single):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.set_Single(System.Single):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SqlBinary" uniqueID="set_SqlBinary(System.Data.SqlTypes.SqlBinary):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.set_SqlBinary(System.Data.SqlTypes.SqlBinary):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SqlCachedBuffer" uniqueID="set_SqlCachedBuffer(System.Data.SqlClient.SqlCachedBuffer):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.set_SqlCachedBuffer(System.Data.SqlClient.SqlCachedBuffer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SqlGuid" uniqueID="set_SqlGuid(System.Data.SqlTypes.SqlGuid):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.set_SqlGuid(System.Data.SqlTypes.SqlGuid):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SqlXml" uniqueID="set_SqlXml(System.Data.SqlTypes.SqlXml):System.Void">
				<signature>System.Data.SqlClient.SqlBuffer.set_SqlXml(System.Data.SqlTypes.SqlXml):System.Void</signature>
			</method>
		</class>
		<class name="SqlCommand+CommandEventSink" uniqueID="System.Data.SqlClient.SqlCommand+CommandEventSink">
			<method accessibility="Protected" methodKind="Member" name="BatchCompleted" uniqueID="BatchCompleted():System.Void">
				<signature>System.Data.SqlClient.SqlCommand+CommandEventSink.BatchCompleted():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ParameterAvailable" uniqueID="ParameterAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData;Microsoft.SqlServer.Server.SmiTypedGetterSetter;System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlCommand+CommandEventSink.ParameterAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData;Microsoft.SqlServer.Server.SmiTypedGetterSetter;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ParametersAvailable" uniqueID="ParametersAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData[];Microsoft.SqlServer.Server.ITypedGettersV3):System.Void">
				<signature>System.Data.SqlClient.SqlCommand+CommandEventSink.ParametersAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData[];Microsoft.SqlServer.Server.ITypedGettersV3):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SqlCommand+CommandEventSink" uniqueID="SqlCommand+CommandEventSink(System.Data.SqlClient.SqlCommand):System.Void">
				<signature>System.Data.SqlClient.SqlCommand+CommandEventSink.SqlCommand+CommandEventSink(System.Data.SqlClient.SqlCommand):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StatementCompleted" uniqueID="StatementCompleted(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlCommand+CommandEventSink.StatementCompleted(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="SqlCommand" uniqueID="System.Data.SqlClient.SqlCommand">
			<method accessibility="Private" methodKind="Static" name="&lt;ExecuteDbDataReaderAsync&gt;b__24" uniqueID="&lt;ExecuteDbDataReaderAsync&gt;b__24(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;):System.Data.Common.DbDataReader">
				<signature>System.Data.SqlClient.SqlCommand.&lt;ExecuteDbDataReaderAsync&gt;b__24(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;RunExecuteNonQueryTds&gt;b__38" uniqueID="&lt;RunExecuteNonQueryTds&gt;b__38():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.&lt;RunExecuteNonQueryTds&gt;b__38():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;RunExecuteReaderTds&gt;b__43" uniqueID="&lt;RunExecuteReaderTds&gt;b__43():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.&lt;RunExecuteReaderTds&gt;b__43():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ShouldSendParameter" uniqueID="ShouldSendParameter(System.Data.SqlClient.SqlParameter):System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand.ShouldSendParameter(System.Data.SqlClient.SqlParameter):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SqlNotificationContext" uniqueID="SqlNotificationContext():System.String">
				<signature>System.Data.SqlClient.SqlCommand.SqlNotificationContext():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="UnquoteProcedureName" uniqueID="UnquoteProcedureName(System.String;System.Object):System.String">
				<signature>System.Data.SqlClient.SqlCommand.UnquoteProcedureName(System.String;System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="UnquoteProcedurePart" uniqueID="UnquoteProcedurePart(System.String):System.String">
				<signature>System.Data.SqlClient.SqlCommand.UnquoteProcedurePart(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="&lt;RunExecuteReaderTds&gt;b__45" uniqueID="&lt;RunExecuteReaderTds&gt;b__45(System.Exception):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.&lt;RunExecuteReaderTds&gt;b__45(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddBatchCommand" uniqueID="AddBatchCommand(System.String;System.Data.SqlClient.SqlParameterCollection;System.Data.CommandType):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.AddBatchCommand(System.String;System.Data.SqlClient.SqlParameterCollection;System.Data.CommandType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginExecuteNonQuery" uniqueID="BeginExecuteNonQuery():System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery():System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginExecuteNonQuery" uniqueID="BeginExecuteNonQuery(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginExecuteNonQueryAsync" uniqueID="BeginExecuteNonQueryAsync(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteNonQueryAsync(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginExecuteNonQueryInternal" uniqueID="BeginExecuteNonQueryInternal(System.AsyncCallback;System.Object;System.Int32;System.Boolean):System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteNonQueryInternal(System.AsyncCallback;System.Object;System.Int32;System.Boolean):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginExecuteNonQueryInternalReadStage" uniqueID="BeginExecuteNonQueryInternalReadStage(System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteNonQueryInternalReadStage(System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginExecuteReader" uniqueID="BeginExecuteReader():System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteReader():System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginExecuteReader" uniqueID="BeginExecuteReader(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginExecuteReader" uniqueID="BeginExecuteReader(System.AsyncCallback;System.Object;System.Data.CommandBehavior):System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback;System.Object;System.Data.CommandBehavior):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginExecuteReader" uniqueID="BeginExecuteReader(System.Data.CommandBehavior):System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginExecuteReaderAsync" uniqueID="BeginExecuteReaderAsync(System.Data.CommandBehavior;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteReaderAsync(System.Data.CommandBehavior;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginExecuteReaderInternal" uniqueID="BeginExecuteReaderInternal(System.Data.CommandBehavior;System.AsyncCallback;System.Object;System.Int32;System.Boolean):System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteReaderInternal(System.Data.CommandBehavior;System.AsyncCallback;System.Object;System.Int32;System.Boolean):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginExecuteReaderInternalReadStage" uniqueID="BeginExecuteReaderInternalReadStage(System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteReaderInternalReadStage(System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginExecuteXmlReader" uniqueID="BeginExecuteXmlReader():System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader():System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginExecuteXmlReader" uniqueID="BeginExecuteXmlReader(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginExecuteXmlReaderAsync" uniqueID="BeginExecuteXmlReaderAsync(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteXmlReaderAsync(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginExecuteXmlReaderInternal" uniqueID="BeginExecuteXmlReaderInternal(System.AsyncCallback;System.Object;System.Int32;System.Boolean):System.IAsyncResult">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteXmlReaderInternal(System.AsyncCallback;System.Object;System.Int32;System.Boolean):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BeginExecuteXmlReaderInternalReadStage" uniqueID="BeginExecuteXmlReaderInternalReadStage(System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.BeginExecuteXmlReaderInternalReadStage(System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BuildExecute" uniqueID="BuildExecute(System.Boolean):System.Data.SqlClient._SqlRPC">
				<signature>System.Data.SqlClient.SqlCommand.BuildExecute(System.Boolean):System.Data.SqlClient._SqlRPC</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BuildExecuteSql" uniqueID="BuildExecuteSql(System.Data.CommandBehavior;System.String;System.Data.SqlClient.SqlParameterCollection;System.Data.SqlClient._SqlRPC):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.BuildExecuteSql(System.Data.CommandBehavior;System.String;System.Data.SqlClient.SqlParameterCollection;System.Data.SqlClient._SqlRPC):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BuildParamList" uniqueID="BuildParamList(System.Data.SqlClient.TdsParser;System.Data.SqlClient.SqlParameterCollection):System.String">
				<signature>System.Data.SqlClient.SqlCommand.BuildParamList(System.Data.SqlClient.TdsParser;System.Data.SqlClient.SqlParameterCollection):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BuildPrepExec" uniqueID="BuildPrepExec(System.Data.CommandBehavior):System.Data.SqlClient._SqlRPC">
				<signature>System.Data.SqlClient.SqlCommand.BuildPrepExec(System.Data.CommandBehavior):System.Data.SqlClient._SqlRPC</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BuildPrepare" uniqueID="BuildPrepare(System.Data.CommandBehavior):System.Data.SqlClient._SqlRPC">
				<signature>System.Data.SqlClient.SqlCommand.BuildPrepare(System.Data.CommandBehavior):System.Data.SqlClient._SqlRPC</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BuildRPC" uniqueID="BuildRPC(System.Boolean;System.Data.SqlClient.SqlParameterCollection;System.Data.SqlClient._SqlRPC):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.BuildRPC(System.Boolean;System.Data.SqlClient.SqlParameterCollection;System.Data.SqlClient._SqlRPC):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BuildUnprepare" uniqueID="BuildUnprepare():System.Data.SqlClient._SqlRPC">
				<signature>System.Data.SqlClient.SqlCommand.BuildUnprepare():System.Data.SqlClient._SqlRPC</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Cancel" uniqueID="Cancel():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.Cancel():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckNotificationStateAndAutoEnlist" uniqueID="CheckNotificationStateAndAutoEnlist():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.CheckNotificationStateAndAutoEnlist():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckThrowSNIException" uniqueID="CheckThrowSNIException():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.CheckThrowSNIException():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearBatchCommand" uniqueID="ClearBatchCommand():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.ClearBatchCommand():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Data.SqlClient.SqlCommand">
				<signature>System.Data.SqlClient.SqlCommand.Clone():System.Data.SqlClient.SqlCommand</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CompleteAsyncExecuteReader" uniqueID="CompleteAsyncExecuteReader():System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.CompleteAsyncExecuteReader():System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CompleteExecuteScalar" uniqueID="CompleteExecuteScalar(System.Data.SqlClient.SqlDataReader;System.Boolean):System.Object">
				<signature>System.Data.SqlClient.SqlCommand.CompleteExecuteScalar(System.Data.SqlClient.SqlDataReader;System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CompleteXmlReader" uniqueID="CompleteXmlReader(System.Data.SqlClient.SqlDataReader):System.Xml.XmlReader">
				<signature>System.Data.SqlClient.SqlCommand.CompleteXmlReader(System.Data.SqlClient.SqlDataReader):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CountSendableParameters" uniqueID="CountSendableParameters(System.Data.SqlClient.SqlParameterCollection):System.Int32">
				<signature>System.Data.SqlClient.SqlCommand.CountSendableParameters(System.Data.SqlClient.SqlParameterCollection):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateDbParameter" uniqueID="CreateDbParameter():System.Data.Common.DbParameter">
				<signature>System.Data.SqlClient.SqlCommand.CreateDbParameter():System.Data.Common.DbParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateParameter" uniqueID="CreateParameter():System.Data.SqlClient.SqlParameter">
				<signature>System.Data.SqlClient.SqlCommand.CreateParameter():System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DeriveParameters" uniqueID="DeriveParameters():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.DeriveParameters():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndExecuteNonQuery" uniqueID="EndExecuteNonQuery(System.IAsyncResult):System.Int32">
				<signature>System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EndExecuteNonQueryAsync" uniqueID="EndExecuteNonQueryAsync(System.IAsyncResult):System.Int32">
				<signature>System.Data.SqlClient.SqlCommand.EndExecuteNonQueryAsync(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EndExecuteNonQueryInternal" uniqueID="EndExecuteNonQueryInternal(System.IAsyncResult):System.Int32">
				<signature>System.Data.SqlClient.SqlCommand.EndExecuteNonQueryInternal(System.IAsyncResult):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndExecuteReader" uniqueID="EndExecuteReader(System.IAsyncResult):System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EndExecuteReaderAsync" uniqueID="EndExecuteReaderAsync(System.IAsyncResult):System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.EndExecuteReaderAsync(System.IAsyncResult):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EndExecuteReaderInternal" uniqueID="EndExecuteReaderInternal(System.IAsyncResult):System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.EndExecuteReaderInternal(System.IAsyncResult):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndExecuteXmlReader" uniqueID="EndExecuteXmlReader(System.IAsyncResult):System.Xml.XmlReader">
				<signature>System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EndExecuteXmlReaderAsync" uniqueID="EndExecuteXmlReaderAsync(System.IAsyncResult):System.Xml.XmlReader">
				<signature>System.Data.SqlClient.SqlCommand.EndExecuteXmlReaderAsync(System.IAsyncResult):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EndExecuteXmlReaderInternal" uniqueID="EndExecuteXmlReaderInternal(System.IAsyncResult):System.Xml.XmlReader">
				<signature>System.Data.SqlClient.SqlCommand.EndExecuteXmlReaderInternal(System.IAsyncResult):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteBatchRPCCommand" uniqueID="ExecuteBatchRPCCommand():System.Int32">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteBatchRPCCommand():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteDbDataReader" uniqueID="ExecuteDbDataReader(System.Data.CommandBehavior):System.Data.Common.DbDataReader">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteDbDataReaderAsync" uniqueID="ExecuteDbDataReaderAsync(System.Data.CommandBehavior;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteNonQuery" uniqueID="ExecuteNonQuery():System.Int32">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteNonQuery():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteNonQueryAsync" uniqueID="ExecuteNonQueryAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReader" uniqueID="ExecuteReader():System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteReader():System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReader" uniqueID="ExecuteReader(System.Data.CommandBehavior):System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteReader" uniqueID="ExecuteReader(System.Data.CommandBehavior;System.String):System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior;System.String):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReaderAsync" uniqueID="ExecuteReaderAsync():System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteReaderAsync():System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReaderAsync" uniqueID="ExecuteReaderAsync(System.Data.CommandBehavior):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReaderAsync" uniqueID="ExecuteReaderAsync(System.Data.CommandBehavior;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReaderAsync" uniqueID="ExecuteReaderAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteScalar" uniqueID="ExecuteScalar():System.Object">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteScalar():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteScalarAsync" uniqueID="ExecuteScalarAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteToPipe" uniqueID="ExecuteToPipe(Microsoft.SqlServer.Server.SmiContext):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteToPipe(Microsoft.SqlServer.Server.SmiContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteXmlReader" uniqueID="ExecuteXmlReader():System.Xml.XmlReader">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteXmlReader():System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteXmlReaderAsync" uniqueID="ExecuteXmlReaderAsync():System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync():System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteXmlReaderAsync" uniqueID="ExecuteXmlReaderAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FinishExecuteReader" uniqueID="FinishExecuteReader(System.Data.SqlClient.SqlDataReader;System.Data.SqlClient.RunBehavior;System.String):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.FinishExecuteReader(System.Data.SqlClient.SqlDataReader;System.Data.SqlClient.RunBehavior;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetCommandText" uniqueID="GetCommandText(System.Data.CommandBehavior):System.String">
				<signature>System.Data.SqlClient.SqlCommand.GetCommandText(System.Data.CommandBehavior):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetCurrentParameterCollection" uniqueID="GetCurrentParameterCollection():System.Data.SqlClient.SqlParameterCollection">
				<signature>System.Data.SqlClient.SqlCommand.GetCurrentParameterCollection():System.Data.SqlClient.SqlParameterCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetErrors" uniqueID="GetErrors(System.Int32):System.Data.SqlClient.SqlException">
				<signature>System.Data.SqlClient.SqlCommand.GetErrors(System.Int32):System.Data.SqlClient.SqlException</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetParameterCount" uniqueID="GetParameterCount(System.Data.SqlClient.SqlParameterCollection):System.Int32">
				<signature>System.Data.SqlClient.SqlCommand.GetParameterCount(System.Data.SqlClient.SqlParameterCollection):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetParameterForOutputValueExtraction" uniqueID="GetParameterForOutputValueExtraction(System.Data.SqlClient.SqlParameterCollection;System.String;System.Int32):System.Data.SqlClient.SqlParameter">
				<signature>System.Data.SqlClient.SqlCommand.GetParameterForOutputValueExtraction(System.Data.SqlClient.SqlParameterCollection;System.String;System.Int32):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetRPCObject" uniqueID="GetRPCObject(System.Int32;System.Data.SqlClient._SqlRPC):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.GetRPCObject(System.Int32;System.Data.SqlClient._SqlRPC):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRecordsAffected" uniqueID="GetRecordsAffected(System.Int32):System.Nullable&lt;System.Int32&gt;">
				<signature>System.Data.SqlClient.SqlCommand.GetRecordsAffected(System.Int32):System.Nullable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetResetOptionsString" uniqueID="GetResetOptionsString(System.Data.CommandBehavior):System.String">
				<signature>System.Data.SqlClient.SqlCommand.GetResetOptionsString(System.Data.CommandBehavior):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetSetOptionsString" uniqueID="GetSetOptionsString(System.Data.CommandBehavior):System.String">
				<signature>System.Data.SqlClient.SqlCommand.GetSetOptionsString(System.Data.CommandBehavior):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetStateObject" uniqueID="GetStateObject(System.Data.SqlClient.TdsParser):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.GetStateObject(System.Data.SqlClient.TdsParser):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalEndExecuteReader" uniqueID="InternalEndExecuteReader(System.IAsyncResult;System.String):System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.InternalEndExecuteReader(System.IAsyncResult;System.String):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalExecuteNonQuery" uniqueID="InternalExecuteNonQuery(System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;;System.String;System.Boolean;System.Int32;System.Boolean):System.Threading.Tasks.Task">
				<signature>System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;;System.String;System.Boolean;System.Int32;System.Boolean):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InternalPrepare" uniqueID="InternalPrepare():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.InternalPrepare():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="NotifyDependency" uniqueID="NotifyDependency():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.NotifyDependency():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnConnectionClosed" uniqueID="OnConnectionClosed():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.OnConnectionClosed():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDoneProc" uniqueID="OnDoneProc():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.OnDoneProc():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnParameterAvailableSmi" uniqueID="OnParameterAvailableSmi(Microsoft.SqlServer.Server.SmiParameterMetaData;Microsoft.SqlServer.Server.ITypedGettersV3;System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.OnParameterAvailableSmi(Microsoft.SqlServer.Server.SmiParameterMetaData;Microsoft.SqlServer.Server.ITypedGettersV3;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnParametersAvailableSmi" uniqueID="OnParametersAvailableSmi(Microsoft.SqlServer.Server.SmiParameterMetaData[];Microsoft.SqlServer.Server.ITypedGettersV3):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.OnParametersAvailableSmi(Microsoft.SqlServer.Server.SmiParameterMetaData[];Microsoft.SqlServer.Server.ITypedGettersV3):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnReturnStatus" uniqueID="OnReturnStatus(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.OnReturnStatus(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnReturnValue" uniqueID="OnReturnValue(System.Data.SqlClient.SqlReturnValue):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.OnReturnValue(System.Data.SqlClient.SqlReturnValue):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnStatementCompleted" uniqueID="OnStatementCompleted(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.OnStatementCompleted(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ParameterDirectionFromOleDbDirection" uniqueID="ParameterDirectionFromOleDbDirection(System.Int16):System.Data.ParameterDirection">
				<signature>System.Data.SqlClient.SqlCommand.ParameterDirectionFromOleDbDirection(System.Int16):System.Data.ParameterDirection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ParseAndQuoteIdentifier" uniqueID="ParseAndQuoteIdentifier(System.String;System.Boolean):System.String">
				<signature>System.Data.SqlClient.SqlCommand.ParseAndQuoteIdentifier(System.String;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Prepare" uniqueID="Prepare():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.Prepare():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PropertyChanging" uniqueID="PropertyChanging():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.PropertyChanging():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PutStateObject" uniqueID="PutStateObject():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.PutStateObject():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReliablePutStateObject" uniqueID="ReliablePutStateObject():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.ReliablePutStateObject():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetCommandTimeout" uniqueID="ResetCommandTimeout():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.ResetCommandTimeout():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RunExecuteNonQuerySmi" uniqueID="RunExecuteNonQuerySmi(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.RunExecuteNonQuerySmi(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RunExecuteNonQueryTds" uniqueID="RunExecuteNonQueryTds(System.String;System.Boolean;System.Int32;System.Boolean):System.Threading.Tasks.Task">
				<signature>System.Data.SqlClient.SqlCommand.RunExecuteNonQueryTds(System.String;System.Boolean;System.Int32;System.Boolean):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RunExecuteReader" uniqueID="RunExecuteReader(System.Data.CommandBehavior;System.Data.SqlClient.RunBehavior;System.Boolean;System.String):System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.RunExecuteReader(System.Data.CommandBehavior;System.Data.SqlClient.RunBehavior;System.Boolean;System.String):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RunExecuteReader" uniqueID="RunExecuteReader(System.Data.CommandBehavior;System.Data.SqlClient.RunBehavior;System.Boolean;System.String;System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;;System.Int32;System.Threading.Tasks.Task;System.Boolean):System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.RunExecuteReader(System.Data.CommandBehavior;System.Data.SqlClient.RunBehavior;System.Boolean;System.String;System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;;System.Int32;System.Threading.Tasks.Task;System.Boolean):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RunExecuteReaderSmi" uniqueID="RunExecuteReaderSmi(System.Data.CommandBehavior;System.Data.SqlClient.RunBehavior;System.Boolean):System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.RunExecuteReaderSmi(System.Data.CommandBehavior;System.Data.SqlClient.RunBehavior;System.Boolean):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RunExecuteReaderTds" uniqueID="RunExecuteReaderTds(System.Data.CommandBehavior;System.Data.SqlClient.RunBehavior;System.Boolean;System.Boolean;System.Int32;System.Threading.Tasks.Task;System.Boolean;System.Data.SqlClient.SqlDataReader):System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(System.Data.CommandBehavior;System.Data.SqlClient.RunBehavior;System.Boolean;System.Boolean;System.Int32;System.Threading.Tasks.Task;System.Boolean;System.Data.SqlClient.SqlDataReader):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetUpRPCParameters" uniqueID="SetUpRPCParameters(System.Data.SqlClient._SqlRPC;System.Int32;System.Boolean;System.Data.SqlClient.SqlParameterCollection):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.SetUpRPCParameters(System.Data.SqlClient._SqlRPC;System.Int32;System.Boolean;System.Data.SqlClient.SqlParameterCollection):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetUpSmiRequest" uniqueID="SetUpSmiRequest(System.Data.SqlClient.SqlInternalConnectionSmi):Microsoft.SqlServer.Server.SmiRequestExecutor">
				<signature>System.Data.SqlClient.SqlCommand.SetUpSmiRequest(System.Data.SqlClient.SqlInternalConnectionSmi):Microsoft.SqlServer.Server.SmiRequestExecutor</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializeCommandTimeout" uniqueID="ShouldSerializeCommandTimeout():System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand.ShouldSerializeCommandTimeout():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlCommand" uniqueID="SqlCommand():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.SqlCommand():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SqlCommand" uniqueID="SqlCommand(System.Data.SqlClient.SqlCommand):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.SqlCommand(System.Data.SqlClient.SqlCommand):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlCommand" uniqueID="SqlCommand(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.SqlCommand(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlCommand" uniqueID="SqlCommand(System.String;System.Data.SqlClient.SqlConnection):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.SqlCommand(System.String;System.Data.SqlClient.SqlConnection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlCommand" uniqueID="SqlCommand(System.String;System.Data.SqlClient.SqlConnection;System.Data.SqlClient.SqlTransaction):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.SqlCommand(System.String;System.Data.SqlClient.SqlConnection;System.Data.SqlClient.SqlTransaction):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ICloneable.Clone" uniqueID="System.ICloneable.Clone():System.Object">
				<signature>System.Data.SqlClient.SqlCommand.System.ICloneable.Clone():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ThrowIfReconnectionHasBeenCanceled" uniqueID="ThrowIfReconnectionHasBeenCanceled():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.ThrowIfReconnectionHasBeenCanceled():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Unprepare" uniqueID="Unprepare():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.Unprepare():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateAsyncCommand" uniqueID="ValidateAsyncCommand():System.Void">
				<signature>System.Data.SqlClient.SqlCommand.ValidateAsyncCommand():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateCommand" uniqueID="ValidateCommand(System.String;System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.ValidateCommand(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="VerifyEndExecuteState" uniqueID="VerifyEndExecuteState(System.Threading.Tasks.Task;System.String):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.VerifyEndExecuteState(System.Threading.Tasks.Task;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WaitForAsyncResults" uniqueID="WaitForAsyncResults(System.IAsyncResult):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.WaitForAsyncResults(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_StatementCompleted" uniqueID="add_StatementCompleted(System.Data.StatementCompletedEventHandler):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.add_StatementCompleted(System.Data.StatementCompletedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_BatchRPCMode" uniqueID="get_BatchRPCMode():System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand.get_BatchRPCMode():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CommandText" uniqueID="get_CommandText():System.String">
				<signature>System.Data.SqlClient.SqlCommand.get_CommandText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CommandTimeout" uniqueID="get_CommandTimeout():System.Int32">
				<signature>System.Data.SqlClient.SqlCommand.get_CommandTimeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CommandType" uniqueID="get_CommandType():System.Data.CommandType">
				<signature>System.Data.SqlClient.SqlCommand.get_CommandType():System.Data.CommandType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Connection" uniqueID="get_Connection():System.Data.SqlClient.SqlConnection">
				<signature>System.Data.SqlClient.SqlCommand.get_Connection():System.Data.SqlClient.SqlConnection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DbConnection" uniqueID="get_DbConnection():System.Data.Common.DbConnection">
				<signature>System.Data.SqlClient.SqlCommand.get_DbConnection():System.Data.Common.DbConnection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DbParameterCollection" uniqueID="get_DbParameterCollection():System.Data.Common.DbParameterCollection">
				<signature>System.Data.SqlClient.SqlCommand.get_DbParameterCollection():System.Data.Common.DbParameterCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DbTransaction" uniqueID="get_DbTransaction():System.Data.Common.DbTransaction">
				<signature>System.Data.SqlClient.SqlCommand.get_DbTransaction():System.Data.Common.DbTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DesignTimeVisible" uniqueID="get_DesignTimeVisible():System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand.get_DesignTimeVisible():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_EventSink" uniqueID="get_EventSink():System.Data.SqlClient.SqlCommand+CommandEventSink">
				<signature>System.Data.SqlClient.SqlCommand.get_EventSink():System.Data.SqlClient.SqlCommand+CommandEventSink</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InPrepare" uniqueID="get_InPrepare():System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand.get_InPrepare():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalRecordsAffected" uniqueID="get_InternalRecordsAffected():System.Int32">
				<signature>System.Data.SqlClient.SqlCommand.get_InternalRecordsAffected():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_InternalSmiConnection" uniqueID="get_InternalSmiConnection():System.Data.SqlClient.SqlInternalConnectionSmi">
				<signature>System.Data.SqlClient.SqlCommand.get_InternalSmiConnection():System.Data.SqlClient.SqlInternalConnectionSmi</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_InternalTdsConnection" uniqueID="get_InternalTdsConnection():System.Data.SqlClient.SqlInternalConnectionTds">
				<signature>System.Data.SqlClient.SqlCommand.get_InternalTdsConnection():System.Data.SqlClient.SqlInternalConnectionTds</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsDirty" uniqueID="get_IsDirty():System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand.get_IsDirty():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_IsPrepared" uniqueID="get_IsPrepared():System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand.get_IsPrepared():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_IsShiloh" uniqueID="get_IsShiloh():System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand.get_IsShiloh():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_IsUserPrepared" uniqueID="get_IsUserPrepared():System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand.get_IsUserPrepared():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MetaData" uniqueID="get_MetaData():System.Data.SqlClient._SqlMetaDataSet">
				<signature>System.Data.SqlClient.SqlCommand.get_MetaData():System.Data.SqlClient._SqlMetaDataSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Notification" uniqueID="get_Notification():System.Data.Sql.SqlNotificationRequest">
				<signature>System.Data.SqlClient.SqlCommand.get_Notification():System.Data.Sql.SqlNotificationRequest</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NotificationAutoEnlist" uniqueID="get_NotificationAutoEnlist():System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand.get_NotificationAutoEnlist():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_OutParamEventSink" uniqueID="get_OutParamEventSink():Microsoft.SqlServer.Server.SmiEventSink_DeferedProcessing">
				<signature>System.Data.SqlClient.SqlCommand.get_OutParamEventSink():Microsoft.SqlServer.Server.SmiEventSink_DeferedProcessing</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Parameters" uniqueID="get_Parameters():System.Data.SqlClient.SqlParameterCollection">
				<signature>System.Data.SqlClient.SqlCommand.get_Parameters():System.Data.SqlClient.SqlParameterCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_StateObject" uniqueID="get_StateObject():System.Data.SqlClient.TdsParserStateObject">
				<signature>System.Data.SqlClient.SqlCommand.get_StateObject():System.Data.SqlClient.TdsParserStateObject</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Statistics" uniqueID="get_Statistics():System.Data.SqlClient.SqlStatistics">
				<signature>System.Data.SqlClient.SqlCommand.get_Statistics():System.Data.SqlClient.SqlStatistics</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Transaction" uniqueID="get_Transaction():System.Data.SqlClient.SqlTransaction">
				<signature>System.Data.SqlClient.SqlCommand.get_Transaction():System.Data.SqlClient.SqlTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UpdatedRowSource" uniqueID="get_UpdatedRowSource():System.Data.UpdateRowSource">
				<signature>System.Data.SqlClient.SqlCommand.get_UpdatedRowSource():System.Data.UpdateRowSource</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_cachedAsyncState" uniqueID="get_cachedAsyncState():System.Data.SqlClient.SqlCommand+CachedAsyncState">
				<signature>System.Data.SqlClient.SqlCommand.get_cachedAsyncState():System.Data.SqlClient.SqlCommand+CachedAsyncState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_StatementCompleted" uniqueID="remove_StatementCompleted(System.Data.StatementCompletedEventHandler):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.remove_StatementCompleted(System.Data.StatementCompletedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_BatchRPCMode" uniqueID="set_BatchRPCMode(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_BatchRPCMode(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CommandText" uniqueID="set_CommandText(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_CommandText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CommandTimeout" uniqueID="set_CommandTimeout(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_CommandTimeout(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CommandType" uniqueID="set_CommandType(System.Data.CommandType):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_CommandType(System.Data.CommandType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Connection" uniqueID="set_Connection(System.Data.SqlClient.SqlConnection):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_Connection(System.Data.SqlClient.SqlConnection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DbConnection" uniqueID="set_DbConnection(System.Data.Common.DbConnection):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_DbConnection(System.Data.Common.DbConnection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DbTransaction" uniqueID="set_DbTransaction(System.Data.Common.DbTransaction):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_DbTransaction(System.Data.Common.DbTransaction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DesignTimeVisible" uniqueID="set_DesignTimeVisible(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_DesignTimeVisible(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_InternalRecordsAffected" uniqueID="set_InternalRecordsAffected(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_InternalRecordsAffected(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_IsDirty" uniqueID="set_IsDirty(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_IsDirty(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Notification" uniqueID="set_Notification(System.Data.Sql.SqlNotificationRequest):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_Notification(System.Data.Sql.SqlNotificationRequest):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_NotificationAutoEnlist" uniqueID="set_NotificationAutoEnlist(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_NotificationAutoEnlist(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Transaction" uniqueID="set_Transaction(System.Data.SqlClient.SqlTransaction):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_Transaction(System.Data.SqlClient.SqlTransaction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UpdatedRowSource" uniqueID="set_UpdatedRowSource(System.Data.UpdateRowSource):System.Void">
				<signature>System.Data.SqlClient.SqlCommand.set_UpdatedRowSource(System.Data.UpdateRowSource):System.Void</signature>
			</method>
		</class>
		<class name="SqlCommand+CachedAsyncState" uniqueID="System.Data.SqlClient.SqlCommand+CachedAsyncState">
			<method accessibility="Protected" methodKind="Member" name="IsActiveConnectionValid" uniqueID="IsActiveConnectionValid(System.Data.SqlClient.SqlConnection):System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand+CachedAsyncState.IsActiveConnectionValid(System.Data.SqlClient.SqlConnection):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetAsyncState" uniqueID="ResetAsyncState():System.Void">
				<signature>System.Data.SqlClient.SqlCommand+CachedAsyncState.ResetAsyncState():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetActiveConnectionAndResult" uniqueID="SetActiveConnectionAndResult(System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;;System.String;System.Data.SqlClient.SqlConnection):System.Void">
				<signature>System.Data.SqlClient.SqlCommand+CachedAsyncState.SetActiveConnectionAndResult(System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;;System.String;System.Data.SqlClient.SqlConnection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetAsyncReaderState" uniqueID="SetAsyncReaderState(System.Data.SqlClient.SqlDataReader;System.Data.SqlClient.RunBehavior;System.String):System.Void">
				<signature>System.Data.SqlClient.SqlCommand+CachedAsyncState.SetAsyncReaderState(System.Data.SqlClient.SqlDataReader;System.Data.SqlClient.RunBehavior;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SqlCommand+CachedAsyncState" uniqueID="SqlCommand+CachedAsyncState():System.Void">
				<signature>System.Data.SqlClient.SqlCommand+CachedAsyncState.SqlCommand+CachedAsyncState():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CachedAsyncReader" uniqueID="get_CachedAsyncReader():System.Data.SqlClient.SqlDataReader">
				<signature>System.Data.SqlClient.SqlCommand+CachedAsyncState.get_CachedAsyncReader():System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CachedRunBehavior" uniqueID="get_CachedRunBehavior():System.Data.SqlClient.RunBehavior">
				<signature>System.Data.SqlClient.SqlCommand+CachedAsyncState.get_CachedRunBehavior():System.Data.SqlClient.RunBehavior</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CachedSetOptions" uniqueID="get_CachedSetOptions():System.String">
				<signature>System.Data.SqlClient.SqlCommand+CachedAsyncState.get_CachedSetOptions():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EndMethodName" uniqueID="get_EndMethodName():System.String">
				<signature>System.Data.SqlClient.SqlCommand+CachedAsyncState.get_EndMethodName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PendingAsyncOperation" uniqueID="get_PendingAsyncOperation():System.Boolean">
				<signature>System.Data.SqlClient.SqlCommand+CachedAsyncState.get_PendingAsyncOperation():System.Boolean</signature>
			</method>
		</class>
		<class name="SqlConnection" uniqueID="System.Data.SqlClient.SqlConnection">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ChangePassword" uniqueID="ChangePassword(System.String;System.Data.SqlClient.SqlConnectionString;System.Data.SqlClient.SqlCredential;System.String;System.Security.SecureString):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.ChangePassword(System.String;System.Data.SqlClient.SqlConnectionString;System.Data.SqlClient.SqlCredential;System.String;System.Security.SecureString):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ChangePassword" uniqueID="ChangePassword(System.String;System.Data.SqlClient.SqlCredential;System.Security.SecureString):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.ChangePassword(System.String;System.Data.SqlClient.SqlCredential;System.Security.SecureString):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ChangePassword" uniqueID="ChangePassword(System.String;System.String):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.ChangePassword(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ClearAllPools" uniqueID="ClearAllPools():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.ClearAllPools():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ClearPool" uniqueID="ClearPool(System.Data.SqlClient.SqlConnection):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateExecutePermission" uniqueID="CreateExecutePermission():System.Security.CodeAccessPermission">
				<signature>System.Data.SqlClient.SqlConnection.CreateExecutePermission():System.Security.CodeAccessPermission</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FixupDatabaseTransactionName" uniqueID="FixupDatabaseTransactionName(System.String):System.String">
				<signature>System.Data.SqlClient.SqlConnection.FixupDatabaseTransactionName(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="RefreshMemoryMappedData" uniqueID="RefreshMemoryMappedData(System.Data.SqlClient.SqlDebugContext):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.RefreshMemoryMappedData(System.Data.SqlClient.SqlDebugContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="VerifyExecutePermission" uniqueID="VerifyExecutePermission():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.VerifyExecutePermission():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Abort" uniqueID="Abort(System.Exception):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.Abort(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddWeakReference" uniqueID="AddWeakReference(System.Object;System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.AddWeakReference(System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BeginDbTransaction" uniqueID="BeginDbTransaction(System.Data.IsolationLevel):System.Data.Common.DbTransaction">
				<signature>System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel):System.Data.Common.DbTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginTransaction" uniqueID="BeginTransaction():System.Data.SqlClient.SqlTransaction">
				<signature>System.Data.SqlClient.SqlConnection.BeginTransaction():System.Data.SqlClient.SqlTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginTransaction" uniqueID="BeginTransaction(System.Data.IsolationLevel):System.Data.SqlClient.SqlTransaction">
				<signature>System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel):System.Data.SqlClient.SqlTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginTransaction" uniqueID="BeginTransaction(System.Data.IsolationLevel;System.String):System.Data.SqlClient.SqlTransaction">
				<signature>System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel;System.String):System.Data.SqlClient.SqlTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginTransaction" uniqueID="BeginTransaction(System.String):System.Data.SqlClient.SqlTransaction">
				<signature>System.Data.SqlClient.SqlConnection.BeginTransaction(System.String):System.Data.SqlClient.SqlTransaction</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CacheConnectionStringProperties" uniqueID="CacheConnectionStringProperties():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.CacheConnectionStringProperties():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CancelOpenAndWait" uniqueID="CancelOpenAndWait():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.CancelOpenAndWait():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ChangeDatabase" uniqueID="ChangeDatabase(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckAndThrowOnInvalidCombinationOfConnectionStringAndSqlCredential" uniqueID="CheckAndThrowOnInvalidCombinationOfConnectionStringAndSqlCredential(System.Data.SqlClient.SqlConnectionString):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.CheckAndThrowOnInvalidCombinationOfConnectionStringAndSqlCredential(System.Data.SqlClient.SqlConnectionString):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckGetExtendedUDTInfo" uniqueID="CheckGetExtendedUDTInfo(System.Data.SqlClient.SqlMetaDataPriv;System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.CheckGetExtendedUDTInfo(System.Data.SqlClient.SqlMetaDataPriv;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckSQLDebug" uniqueID="CheckSQLDebug():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.CheckSQLDebug():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckSQLDebug" uniqueID="CheckSQLDebug(System.Data.SqlClient.SqlDebugContext):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.CheckSQLDebug(System.Data.SqlClient.SqlDebugContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckSQLDebugOnConnect" uniqueID="CheckSQLDebugOnConnect():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.CheckSQLDebugOnConnect():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.Close():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CloseInnerConnection" uniqueID="CloseInnerConnection():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.CloseInnerConnection():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CompleteOpen" uniqueID="CompleteOpen():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.CompleteOpen():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ConnectionString_Get" uniqueID="ConnectionString_Get():System.String">
				<signature>System.Data.SqlClient.SqlConnection.ConnectionString_Get():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ConnectionString_Set" uniqueID="ConnectionString_Set(System.Data.Common.DbConnectionPoolKey):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.ConnectionString_Set(System.Data.Common.DbConnectionPoolKey):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ConnectionString_Set" uniqueID="ConnectionString_Set(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.ConnectionString_Set(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CopyFrom" uniqueID="CopyFrom(System.Data.SqlClient.SqlConnection):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.CopyFrom(System.Data.SqlClient.SqlConnection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateCommand" uniqueID="CreateCommand():System.Data.SqlClient.SqlCommand">
				<signature>System.Data.SqlClient.SqlConnection.CreateCommand():System.Data.SqlClient.SqlCommand</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateDbCommand" uniqueID="CreateDbCommand():System.Data.Common.DbCommand">
				<signature>System.Data.SqlClient.SqlConnection.CreateDbCommand():System.Data.Common.DbCommand</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DisposeMe" uniqueID="DisposeMe(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.DisposeMe(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EnlistDistributedTransaction" uniqueID="EnlistDistributedTransaction(System.EnterpriseServices.ITransaction):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnlistDistributedTransactionHelper" uniqueID="EnlistDistributedTransactionHelper(System.EnterpriseServices.ITransaction):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.EnlistDistributedTransactionHelper(System.EnterpriseServices.ITransaction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EnlistTransaction" uniqueID="EnlistTransaction(System.Transactions.Transaction):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetBytes" uniqueID="GetBytes(System.Object):System.Byte[]">
				<signature>System.Data.SqlClient.SqlConnection.GetBytes(System.Object):System.Byte[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetBytes" uniqueID="GetBytes(System.Object;Microsoft.SqlServer.Server.Format;System.Int32):System.Byte[]">
				<signature>System.Data.SqlClient.SqlConnection.GetBytes(System.Object;Microsoft.SqlServer.Server.Format;System.Int32):System.Byte[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetMetaDataFactory" uniqueID="GetMetaDataFactory(System.Data.ProviderBase.DbConnectionInternal):System.Data.ProviderBase.DbMetaDataFactory">
				<signature>System.Data.SqlClient.SqlConnection.GetMetaDataFactory(System.Data.ProviderBase.DbConnectionInternal):System.Data.ProviderBase.DbMetaDataFactory</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetMetaDataFactoryInternal" uniqueID="GetMetaDataFactoryInternal(System.Data.ProviderBase.DbConnectionInternal):System.Data.ProviderBase.DbMetaDataFactory">
				<signature>System.Data.SqlClient.SqlConnection.GetMetaDataFactoryInternal(System.Data.ProviderBase.DbConnectionInternal):System.Data.ProviderBase.DbMetaDataFactory</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetOpenConnection" uniqueID="GetOpenConnection():System.Data.SqlClient.SqlInternalConnection">
				<signature>System.Data.SqlClient.SqlConnection.GetOpenConnection():System.Data.SqlClient.SqlInternalConnection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetOpenConnection" uniqueID="GetOpenConnection(System.String):System.Data.SqlClient.SqlInternalConnection">
				<signature>System.Data.SqlClient.SqlConnection.GetOpenConnection(System.String):System.Data.SqlClient.SqlInternalConnection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetOpenTdsConnection" uniqueID="GetOpenTdsConnection():System.Data.SqlClient.SqlInternalConnectionTds">
				<signature>System.Data.SqlClient.SqlConnection.GetOpenTdsConnection():System.Data.SqlClient.SqlInternalConnectionTds</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetOpenTdsConnection" uniqueID="GetOpenTdsConnection(System.String):System.Data.SqlClient.SqlInternalConnectionTds">
				<signature>System.Data.SqlClient.SqlConnection.GetOpenTdsConnection(System.String):System.Data.SqlClient.SqlInternalConnectionTds</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSchema" uniqueID="GetSchema():System.Data.DataTable">
				<signature>System.Data.SqlClient.SqlConnection.GetSchema():System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSchema" uniqueID="GetSchema(System.String):System.Data.DataTable">
				<signature>System.Data.SqlClient.SqlConnection.GetSchema(System.String):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSchema" uniqueID="GetSchema(System.String;System.String[]):System.Data.DataTable">
				<signature>System.Data.SqlClient.SqlConnection.GetSchema(System.String;System.String[]):System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetUdtValue" uniqueID="GetUdtValue(System.Object;System.Data.SqlClient.SqlMetaDataPriv;System.Boolean):System.Object">
				<signature>System.Data.SqlClient.SqlConnection.GetUdtValue(System.Object;System.Data.SqlClient.SqlMetaDataPriv;System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IssueSQLDebug" uniqueID="IssueSQLDebug(System.UInt32;System.String;System.UInt32;System.UInt32;System.String;System.Byte[]):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.IssueSQLDebug(System.UInt32;System.String;System.UInt32;System.UInt32;System.String;System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NotifyWeakReference" uniqueID="NotifyWeakReference(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.NotifyWeakReference(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnError" uniqueID="OnError(System.Data.SqlClient.SqlException;System.Boolean;System.Action&lt;System.Action&gt;):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.OnError(System.Data.SqlClient.SqlException;System.Boolean;System.Action&lt;System.Action&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnInfoMessage" uniqueID="OnInfoMessage(System.Data.SqlClient.SqlInfoMessageEventArgs):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.OnInfoMessage(System.Data.SqlClient.SqlInfoMessageEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnInfoMessage" uniqueID="OnInfoMessage(System.Data.SqlClient.SqlInfoMessageEventArgs;System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.OnInfoMessage(System.Data.SqlClient.SqlInfoMessageEventArgs;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Open" uniqueID="Open():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.Open():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OpenAsync" uniqueID="OpenAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PermissionDemand" uniqueID="PermissionDemand():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.PermissionDemand():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReconnectAsync" uniqueID="ReconnectAsync(System.Int32):System.Threading.Tasks.Task">
				<signature>System.Data.SqlClient.SqlConnection.ReconnectAsync(System.Int32):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterWaitingForReconnect" uniqueID="RegisterWaitingForReconnect(System.Threading.Tasks.Task):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.RegisterWaitingForReconnect(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveWeakReference" uniqueID="RemoveWeakReference(System.Object):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.RemoveWeakReference(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RepairInnerConnection" uniqueID="RepairInnerConnection():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.RepairInnerConnection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetStatistics" uniqueID="ResetStatistics():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.ResetStatistics():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResolveTypeAssembly" uniqueID="ResolveTypeAssembly(System.Reflection.AssemblyName;System.Boolean):System.Reflection.Assembly">
				<signature>System.Data.SqlClient.SqlConnection.ResolveTypeAssembly(System.Reflection.AssemblyName;System.Boolean):System.Reflection.Assembly</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RetrieveStatistics" uniqueID="RetrieveStatistics():System.Collections.IDictionary">
				<signature>System.Data.SqlClient.SqlConnection.RetrieveStatistics():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetInnerConnectionEvent" uniqueID="SetInnerConnectionEvent(System.Data.ProviderBase.DbConnectionInternal):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.SetInnerConnectionEvent(System.Data.ProviderBase.DbConnectionInternal):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetInnerConnectionFrom" uniqueID="SetInnerConnectionFrom(System.Data.ProviderBase.DbConnectionInternal;System.Data.ProviderBase.DbConnectionInternal):System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.SetInnerConnectionFrom(System.Data.ProviderBase.DbConnectionInternal;System.Data.ProviderBase.DbConnectionInternal):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetInnerConnectionTo" uniqueID="SetInnerConnectionTo(System.Data.ProviderBase.DbConnectionInternal):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.SetInnerConnectionTo(System.Data.ProviderBase.DbConnectionInternal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlConnection" uniqueID="SqlConnection():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.SqlConnection():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SqlConnection" uniqueID="SqlConnection(System.Data.SqlClient.SqlConnection):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.SqlConnection(System.Data.SqlClient.SqlConnection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlConnection" uniqueID="SqlConnection(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.SqlConnection(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlConnection" uniqueID="SqlConnection(System.String;System.Data.SqlClient.SqlCredential):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.SqlConnection(System.String;System.Data.SqlClient.SqlCredential):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ICloneable.Clone" uniqueID="System.ICloneable.Clone():System.Object">
				<signature>System.Data.SqlClient.SqlConnection.System.ICloneable.Clone():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryOpen" uniqueID="TryOpen(System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.TryOpen(System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryOpenInner" uniqueID="TryOpenInner(System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.TryOpenInner(System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UpdateStatistics" uniqueID="UpdateStatistics():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.UpdateStatistics():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UsesClearUserIdOrPassword" uniqueID="UsesClearUserIdOrPassword(System.Data.SqlClient.SqlConnectionString):System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.UsesClearUserIdOrPassword(System.Data.SqlClient.SqlConnectionString):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UsesContextConnection" uniqueID="UsesContextConnection(System.Data.SqlClient.SqlConnectionString):System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.UsesContextConnection(System.Data.SqlClient.SqlConnectionString):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UsesIntegratedSecurity" uniqueID="UsesIntegratedSecurity(System.Data.SqlClient.SqlConnectionString):System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.UsesIntegratedSecurity(System.Data.SqlClient.SqlConnectionString):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateAndReconnect" uniqueID="ValidateAndReconnect(System.Action;System.Int32):System.Threading.Tasks.Task">
				<signature>System.Data.SqlClient.SqlConnection.ValidateAndReconnect(System.Action;System.Int32):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateConnectionForExecute" uniqueID="ValidateConnectionForExecute(System.String;System.Data.SqlClient.SqlCommand):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.ValidateConnectionForExecute(System.String;System.Data.SqlClient.SqlCommand):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WaitForPendingReconnection" uniqueID="WaitForPendingReconnection():System.Void">
				<signature>System.Data.SqlClient.SqlConnection.WaitForPendingReconnection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_InfoMessage" uniqueID="add_InfoMessage(System.Data.SqlClient.SqlInfoMessageEventHandler):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.add_InfoMessage(System.Data.SqlClient.SqlInfoMessageEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AsyncCommandInProgress" uniqueID="get_AsyncCommandInProgress():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.get_AsyncCommandInProgress():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Asynchronous" uniqueID="get_Asynchronous():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.get_Asynchronous():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientConnectionId" uniqueID="get_ClientConnectionId():System.Guid">
				<signature>System.Data.SqlClient.SqlConnection.get_ClientConnectionId():System.Guid</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CloseCount" uniqueID="get_CloseCount():System.Int32">
				<signature>System.Data.SqlClient.SqlConnection.get_CloseCount():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ConnectRetryInterval" uniqueID="get_ConnectRetryInterval():System.Int32">
				<signature>System.Data.SqlClient.SqlConnection.get_ConnectRetryInterval():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ConnectionFactory" uniqueID="get_ConnectionFactory():System.Data.ProviderBase.DbConnectionFactory">
				<signature>System.Data.SqlClient.SqlConnection.get_ConnectionFactory():System.Data.ProviderBase.DbConnectionFactory</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ConnectionOptions" uniqueID="get_ConnectionOptions():System.Data.Common.DbConnectionOptions">
				<signature>System.Data.SqlClient.SqlConnection.get_ConnectionOptions():System.Data.Common.DbConnectionOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ConnectionString" uniqueID="get_ConnectionString():System.String">
				<signature>System.Data.SqlClient.SqlConnection.get_ConnectionString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ConnectionTimeout" uniqueID="get_ConnectionTimeout():System.Int32">
				<signature>System.Data.SqlClient.SqlConnection.get_ConnectionTimeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Credential" uniqueID="get_Credential():System.Data.SqlClient.SqlCredential">
				<signature>System.Data.SqlClient.SqlConnection.get_Credential():System.Data.SqlClient.SqlCredential</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataSource" uniqueID="get_DataSource():System.String">
				<signature>System.Data.SqlClient.SqlConnection.get_DataSource():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Database" uniqueID="get_Database():System.String">
				<signature>System.Data.SqlClient.SqlConnection.get_Database():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DbProviderFactory" uniqueID="get_DbProviderFactory():System.Data.Common.DbProviderFactory">
				<signature>System.Data.SqlClient.SqlConnection.get_DbProviderFactory():System.Data.Common.DbProviderFactory</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FireInfoMessageEventOnUserErrors" uniqueID="get_FireInfoMessageEventOnUserErrors():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.get_FireInfoMessageEventOnUserErrors():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasLocalTransaction" uniqueID="get_HasLocalTransaction():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.get_HasLocalTransaction():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasLocalTransactionFromAPI" uniqueID="get_HasLocalTransactionFromAPI():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.get_HasLocalTransactionFromAPI():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InnerConnection" uniqueID="get_InnerConnection():System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Data.SqlClient.SqlConnection.get_InnerConnection():System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsContextConnection" uniqueID="get_IsContextConnection():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.get_IsContextConnection():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsKatmaiOrNewer" uniqueID="get_IsKatmaiOrNewer():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.get_IsKatmaiOrNewer():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsShiloh" uniqueID="get_IsShiloh():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.get_IsShiloh():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsYukonOrNewer" uniqueID="get_IsYukonOrNewer():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.get_IsYukonOrNewer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PacketSize" uniqueID="get_PacketSize():System.Int32">
				<signature>System.Data.SqlClient.SqlConnection.get_PacketSize():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Parser" uniqueID="get_Parser():System.Data.SqlClient.TdsParser">
				<signature>System.Data.SqlClient.SqlConnection.get_Parser():System.Data.SqlClient.TdsParser</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PoolGroup" uniqueID="get_PoolGroup():System.Data.ProviderBase.DbConnectionPoolGroup">
				<signature>System.Data.SqlClient.SqlConnection.get_PoolGroup():System.Data.ProviderBase.DbConnectionPoolGroup</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ReconnectCount" uniqueID="get_ReconnectCount():System.Int32">
				<signature>System.Data.SqlClient.SqlConnection.get_ReconnectCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ServerVersion" uniqueID="get_ServerVersion():System.String">
				<signature>System.Data.SqlClient.SqlConnection.get_ServerVersion():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_State" uniqueID="get_State():System.Data.ConnectionState">
				<signature>System.Data.SqlClient.SqlConnection.get_State():System.Data.ConnectionState</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Statistics" uniqueID="get_Statistics():System.Data.SqlClient.SqlStatistics">
				<signature>System.Data.SqlClient.SqlConnection.get_Statistics():System.Data.SqlClient.SqlStatistics</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StatisticsEnabled" uniqueID="get_StatisticsEnabled():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnection.get_StatisticsEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TransactionBinding" uniqueID="get_TransactionBinding():System.Data.SqlClient.SqlConnectionString+TransactionBindingEnum">
				<signature>System.Data.SqlClient.SqlConnection.get_TransactionBinding():System.Data.SqlClient.SqlConnectionString+TransactionBindingEnum</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TypeSystem" uniqueID="get_TypeSystem():System.Data.SqlClient.SqlConnectionString+TypeSystem">
				<signature>System.Data.SqlClient.SqlConnection.get_TypeSystem():System.Data.SqlClient.SqlConnectionString+TypeSystem</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TypeSystemAssemblyVersion" uniqueID="get_TypeSystemAssemblyVersion():System.Version">
				<signature>System.Data.SqlClient.SqlConnection.get_TypeSystemAssemblyVersion():System.Version</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UserConnectionOptions" uniqueID="get_UserConnectionOptions():System.Data.Common.DbConnectionOptions">
				<signature>System.Data.SqlClient.SqlConnection.get_UserConnectionOptions():System.Data.Common.DbConnectionOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_WorkstationId" uniqueID="get_WorkstationId():System.String">
				<signature>System.Data.SqlClient.SqlConnection.get_WorkstationId():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_InfoMessage" uniqueID="remove_InfoMessage(System.Data.SqlClient.SqlInfoMessageEventHandler):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.remove_InfoMessage(System.Data.SqlClient.SqlInfoMessageEventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AsyncCommandInProgress" uniqueID="set_AsyncCommandInProgress(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.set_AsyncCommandInProgress(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ConnectionString" uniqueID="set_ConnectionString(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.set_ConnectionString(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Credential" uniqueID="set_Credential(System.Data.SqlClient.SqlCredential):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.set_Credential(System.Data.SqlClient.SqlCredential):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_FireInfoMessageEventOnUserErrors" uniqueID="set_FireInfoMessageEventOnUserErrors(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.set_FireInfoMessageEventOnUserErrors(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_PoolGroup" uniqueID="set_PoolGroup(System.Data.ProviderBase.DbConnectionPoolGroup):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.set_PoolGroup(System.Data.ProviderBase.DbConnectionPoolGroup):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_StatisticsEnabled" uniqueID="set_StatisticsEnabled(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlConnection.set_StatisticsEnabled(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="SqlDataReader+SharedState" uniqueID="System.Data.SqlClient.SqlDataReader+SharedState">
			<method accessibility="Public" methodKind="Member" name="SqlDataReader+SharedState" uniqueID="SqlDataReader+SharedState():System.Void">
				<signature>System.Data.SqlClient.SqlDataReader+SharedState.SqlDataReader+SharedState():System.Void</signature>
			</method>
		</class>
		<class name="SqlConnectionString" uniqueID="System.Data.SqlClient.SqlConnectionString">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.SqlClient.SqlConnectionString.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompareHostName" uniqueID="CompareHostName(System.String;System.String;System.Boolean):System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.CompareHostName(System.String;System.String;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetParseSynonyms" uniqueID="GetParseSynonyms():System.Collections.Hashtable">
				<signature>System.Data.SqlClient.SqlConnectionString.GetParseSynonyms():System.Collections.Hashtable</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="NetlibMapping" uniqueID="NetlibMapping():System.Collections.Hashtable">
				<signature>System.Data.SqlClient.SqlConnectionString.NetlibMapping():System.Collections.Hashtable</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ValidProtocal" uniqueID="ValidProtocal(System.String):System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.ValidProtocal(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="VerifyLocalHostAndFixup" uniqueID="VerifyLocalHostAndFixup(System.String;System.Boolean;System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlConnectionString.VerifyLocalHostAndFixup(System.String;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConvertValueToApplicationIntent" uniqueID="ConvertValueToApplicationIntent():System.Data.SqlClient.ApplicationIntent">
				<signature>System.Data.SqlClient.SqlConnectionString.ConvertValueToApplicationIntent():System.Data.SqlClient.ApplicationIntent</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreatePermissionSet" uniqueID="CreatePermissionSet():System.Security.PermissionSet">
				<signature>System.Data.SqlClient.SqlConnectionString.CreatePermissionSet():System.Security.PermissionSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Expand" uniqueID="Expand():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.Expand():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObtainWorkstationId" uniqueID="ObtainWorkstationId():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.ObtainWorkstationId():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SqlConnectionString" uniqueID="SqlConnectionString(System.Data.SqlClient.SqlConnectionString;System.String;System.Boolean;System.Nullable&lt;System.Boolean&gt;):System.Void">
				<signature>System.Data.SqlClient.SqlConnectionString.SqlConnectionString(System.Data.SqlClient.SqlConnectionString;System.String;System.Boolean;System.Nullable&lt;System.Boolean&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SqlConnectionString" uniqueID="SqlConnectionString(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlConnectionString.SqlConnectionString(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateValueLength" uniqueID="ValidateValueLength(System.String;System.Int32;System.String):System.Void">
				<signature>System.Data.SqlClient.SqlConnectionString.ValidateValueLength(System.String;System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ApplicationIntent" uniqueID="get_ApplicationIntent():System.Data.SqlClient.ApplicationIntent">
				<signature>System.Data.SqlClient.SqlConnectionString.get_ApplicationIntent():System.Data.SqlClient.ApplicationIntent</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ApplicationName" uniqueID="get_ApplicationName():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.get_ApplicationName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Asynchronous" uniqueID="get_Asynchronous():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_Asynchronous():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AttachDBFilename" uniqueID="get_AttachDBFilename():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.get_AttachDBFilename():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ConnectRetryCount" uniqueID="get_ConnectRetryCount():System.Int32">
				<signature>System.Data.SqlClient.SqlConnectionString.get_ConnectRetryCount():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ConnectRetryInterval" uniqueID="get_ConnectRetryInterval():System.Int32">
				<signature>System.Data.SqlClient.SqlConnectionString.get_ConnectRetryInterval():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ConnectTimeout" uniqueID="get_ConnectTimeout():System.Int32">
				<signature>System.Data.SqlClient.SqlConnectionString.get_ConnectTimeout():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ConnectionReset" uniqueID="get_ConnectionReset():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_ConnectionReset():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ContextConnection" uniqueID="get_ContextConnection():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_ContextConnection():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CurrentLanguage" uniqueID="get_CurrentLanguage():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.get_CurrentLanguage():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DataSource" uniqueID="get_DataSource():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.get_DataSource():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Encrypt" uniqueID="get_Encrypt():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_Encrypt():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EnforceLocalHost" uniqueID="get_EnforceLocalHost():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_EnforceLocalHost():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Enlist" uniqueID="get_Enlist():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_Enlist():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FailoverPartner" uniqueID="get_FailoverPartner():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.get_FailoverPartner():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InitialCatalog" uniqueID="get_InitialCatalog():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.get_InitialCatalog():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IntegratedSecurity" uniqueID="get_IntegratedSecurity():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_IntegratedSecurity():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LoadBalanceTimeout" uniqueID="get_LoadBalanceTimeout():System.Int32">
				<signature>System.Data.SqlClient.SqlConnectionString.get_LoadBalanceTimeout():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LocalDBInstance" uniqueID="get_LocalDBInstance():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.get_LocalDBInstance():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MARS" uniqueID="get_MARS():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_MARS():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MaxPoolSize" uniqueID="get_MaxPoolSize():System.Int32">
				<signature>System.Data.SqlClient.SqlConnectionString.get_MaxPoolSize():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MinPoolSize" uniqueID="get_MinPoolSize():System.Int32">
				<signature>System.Data.SqlClient.SqlConnectionString.get_MinPoolSize():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MultiSubnetFailover" uniqueID="get_MultiSubnetFailover():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_MultiSubnetFailover():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NetworkLibrary" uniqueID="get_NetworkLibrary():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.get_NetworkLibrary():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PacketSize" uniqueID="get_PacketSize():System.Int32">
				<signature>System.Data.SqlClient.SqlConnectionString.get_PacketSize():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Password" uniqueID="get_Password():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.get_Password():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PersistSecurityInfo" uniqueID="get_PersistSecurityInfo():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_PersistSecurityInfo():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Pooling" uniqueID="get_Pooling():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_Pooling():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Replication" uniqueID="get_Replication():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_Replication():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TransactionBinding" uniqueID="get_TransactionBinding():System.Data.SqlClient.SqlConnectionString+TransactionBindingEnum">
				<signature>System.Data.SqlClient.SqlConnectionString.get_TransactionBinding():System.Data.SqlClient.SqlConnectionString+TransactionBindingEnum</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TrustServerCertificate" uniqueID="get_TrustServerCertificate():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_TrustServerCertificate():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TypeSystemAssemblyVersion" uniqueID="get_TypeSystemAssemblyVersion():System.Version">
				<signature>System.Data.SqlClient.SqlConnectionString.get_TypeSystemAssemblyVersion():System.Version</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TypeSystemVersion" uniqueID="get_TypeSystemVersion():System.Data.SqlClient.SqlConnectionString+TypeSystem">
				<signature>System.Data.SqlClient.SqlConnectionString.get_TypeSystemVersion():System.Data.SqlClient.SqlConnectionString+TypeSystem</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UserID" uniqueID="get_UserID():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.get_UserID():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UserInstance" uniqueID="get_UserInstance():System.Boolean">
				<signature>System.Data.SqlClient.SqlConnectionString.get_UserInstance():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_WorkstationId" uniqueID="get_WorkstationId():System.String">
				<signature>System.Data.SqlClient.SqlConnectionString.get_WorkstationId():System.String</signature>
			</method>
		</class>
		<class name="SqlDataReader" uniqueID="System.Data.SqlClient.SqlDataReader">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AssertReaderState" uniqueID="AssertReaderState(System.Boolean;System.Boolean;System.Nullable&lt;System.Int32&gt;;System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.AssertReaderState(System.Boolean;System.Boolean;System.Nullable&lt;System.Int32&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Bind" uniqueID="Bind(System.Data.SqlClient.TdsParserStateObject):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.Bind(System.Data.SqlClient.TdsParserStateObject):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BuildSchemaTable" uniqueID="BuildSchemaTable():System.Data.DataTable">
				<signature>System.Data.SqlClient.SqlDataReader.BuildSchemaTable():System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Cancel" uniqueID="Cancel(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.Cancel(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckDataIsReady" uniqueID="CheckDataIsReady():System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.CheckDataIsReady():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckDataIsReady" uniqueID="CheckDataIsReady(System.Int32;System.Boolean;System.Boolean;System.String):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.CheckDataIsReady(System.Int32;System.Boolean;System.Boolean;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckHeaderIsReady" uniqueID="CheckHeaderIsReady(System.Int32;System.Boolean;System.String):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.CheckHeaderIsReady(System.Int32;System.Boolean;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckMetaDataIsReady" uniqueID="CheckMetaDataIsReady():System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.CheckMetaDataIsReady():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckMetaDataIsReady" uniqueID="CheckMetaDataIsReady(System.Int32;System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.CheckMetaDataIsReady(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CleanPartialReadReliable" uniqueID="CleanPartialReadReliable():System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.CleanPartialReadReliable():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CleanupAfterAsyncInvocation" uniqueID="CleanupAfterAsyncInvocation(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.CleanupAfterAsyncInvocation(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CleanupAfterAsyncInvocationInternal" uniqueID="CleanupAfterAsyncInvocationInternal(System.Data.SqlClient.TdsParserStateObject;System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.CleanupAfterAsyncInvocationInternal(System.Data.SqlClient.TdsParserStateObject;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ClearMetaData" uniqueID="ClearMetaData():System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.ClearMetaData():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.Close():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CloseActiveSequentialStreamAndTextReader" uniqueID="CloseActiveSequentialStreamAndTextReader():System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.CloseActiveSequentialStreamAndTextReader():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CloseReaderFromConnection" uniqueID="CloseReaderFromConnection():System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.CloseReaderFromConnection():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ColumnDataBytesRemaining" uniqueID="ColumnDataBytesRemaining():System.Int64">
				<signature>System.Data.SqlClient.SqlDataReader.ColumnDataBytesRemaining():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBoolean" uniqueID="GetBoolean(System.Int32):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetByte" uniqueID="GetByte(System.Int32):System.Byte">
				<signature>System.Data.SqlClient.SqlDataReader.GetByte(System.Int32):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBytes" uniqueID="GetBytes(System.Int32;System.Int64;System.Byte[];System.Int32;System.Int32):System.Int64">
				<signature>System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32;System.Int64;System.Byte[];System.Int32;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetBytesAsync" uniqueID="GetBytesAsync(System.Int32;System.Byte[];System.Int32;System.Int32;System.Int32;System.Threading.CancellationToken;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Data.SqlClient.SqlDataReader.GetBytesAsync(System.Int32;System.Byte[];System.Int32;System.Int32;System.Int32;System.Threading.CancellationToken;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetBytesAsyncReadDataStage" uniqueID="GetBytesAsyncReadDataStage(System.Int32;System.Byte[];System.Int32;System.Int32;System.Int32;System.Boolean;System.Threading.CancellationToken;System.Threading.CancellationToken;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Data.SqlClient.SqlDataReader.GetBytesAsyncReadDataStage(System.Int32;System.Byte[];System.Int32;System.Int32;System.Int32;System.Boolean;System.Threading.CancellationToken;System.Threading.CancellationToken;System.Int32):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetBytesInternal" uniqueID="GetBytesInternal(System.Int32;System.Int64;System.Byte[];System.Int32;System.Int32):System.Int64">
				<signature>System.Data.SqlClient.SqlDataReader.GetBytesInternal(System.Int32;System.Int64;System.Byte[];System.Int32;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetBytesInternalSequential" uniqueID="GetBytesInternalSequential(System.Int32;System.Byte[];System.Int32;System.Int32;System.Nullable&lt;System.Int64&gt;):System.Int32">
				<signature>System.Data.SqlClient.SqlDataReader.GetBytesInternalSequential(System.Int32;System.Byte[];System.Int32;System.Int32;System.Nullable&lt;System.Int64&gt;):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChar" uniqueID="GetChar(System.Int32):System.Char">
				<signature>System.Data.SqlClient.SqlDataReader.GetChar(System.Int32):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChars" uniqueID="GetChars(System.Int32;System.Int64;System.Char[];System.Int32;System.Int32):System.Int64">
				<signature>System.Data.SqlClient.SqlDataReader.GetChars(System.Int32;System.Int64;System.Char[];System.Int32;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetCharsFromPlpData" uniqueID="GetCharsFromPlpData(System.Int32;System.Int64;System.Char[];System.Int32;System.Int32):System.Int64">
				<signature>System.Data.SqlClient.SqlDataReader.GetCharsFromPlpData(System.Int32;System.Int64;System.Char[];System.Int32;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDataTypeName" uniqueID="GetDataTypeName(System.Int32):System.String">
				<signature>System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDataTypeNameInternal" uniqueID="GetDataTypeNameInternal(System.Data.SqlClient._SqlMetaData):System.String">
				<signature>System.Data.SqlClient.SqlDataReader.GetDataTypeNameInternal(System.Data.SqlClient._SqlMetaData):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDateTime" uniqueID="GetDateTime(System.Int32):System.DateTime">
				<signature>System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32):System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDateTimeOffset" uniqueID="GetDateTimeOffset(System.Int32):System.DateTimeOffset">
				<signature>System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32):System.DateTimeOffset</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDecimal" uniqueID="GetDecimal(System.Int32):System.Decimal">
				<signature>System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDouble" uniqueID="GetDouble(System.Int32):System.Double">
				<signature>System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.SqlClient.SqlDataReader.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFieldType" uniqueID="GetFieldType(System.Int32):System.Type">
				<signature>System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32):System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetFieldTypeInternal" uniqueID="GetFieldTypeInternal(System.Data.SqlClient._SqlMetaData):System.Type">
				<signature>System.Data.SqlClient.SqlDataReader.GetFieldTypeInternal(System.Data.SqlClient._SqlMetaData):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFloat" uniqueID="GetFloat(System.Int32):System.Single">
				<signature>System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGuid" uniqueID="GetGuid(System.Int32):System.Guid">
				<signature>System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32):System.Guid</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInt16" uniqueID="GetInt16(System.Int32):System.Int16">
				<signature>System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInt32" uniqueID="GetInt32(System.Int32):System.Int32">
				<signature>System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInt64" uniqueID="GetInt64(System.Int32):System.Int64">
				<signature>System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetInternalSmiMetaData" uniqueID="GetInternalSmiMetaData():Microsoft.SqlServer.Server.SmiExtendedMetaData[]">
				<signature>System.Data.SqlClient.SqlDataReader.GetInternalSmiMetaData():Microsoft.SqlServer.Server.SmiExtendedMetaData[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetLocaleId" uniqueID="GetLocaleId(System.Int32):System.Int32">
				<signature>System.Data.SqlClient.SqlDataReader.GetLocaleId(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetName" uniqueID="GetName(System.Int32):System.String">
				<signature>System.Data.SqlClient.SqlDataReader.GetName(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetOrdinal" uniqueID="GetOrdinal(System.String):System.Int32">
				<signature>System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProviderSpecificFieldType" uniqueID="GetProviderSpecificFieldType(System.Int32):System.Type">
				<signature>System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32):System.Type</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetProviderSpecificFieldTypeInternal" uniqueID="GetProviderSpecificFieldTypeInternal(System.Data.SqlClient._SqlMetaData):System.Type">
				<signature>System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldTypeInternal(System.Data.SqlClient._SqlMetaData):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProviderSpecificValue" uniqueID="GetProviderSpecificValue(System.Int32):System.Object">
				<signature>System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProviderSpecificValues" uniqueID="GetProviderSpecificValues(System.Object[]):System.Int32">
				<signature>System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSchemaTable" uniqueID="GetSchemaTable():System.Data.DataTable">
				<signature>System.Data.SqlClient.SqlDataReader.GetSchemaTable():System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlBinary" uniqueID="GetSqlBinary(System.Int32):System.Data.SqlTypes.SqlBinary">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32):System.Data.SqlTypes.SqlBinary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlBoolean" uniqueID="GetSqlBoolean(System.Int32):System.Data.SqlTypes.SqlBoolean">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32):System.Data.SqlTypes.SqlBoolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlByte" uniqueID="GetSqlByte(System.Int32):System.Data.SqlTypes.SqlByte">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32):System.Data.SqlTypes.SqlByte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlBytes" uniqueID="GetSqlBytes(System.Int32):System.Data.SqlTypes.SqlBytes">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32):System.Data.SqlTypes.SqlBytes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlChars" uniqueID="GetSqlChars(System.Int32):System.Data.SqlTypes.SqlChars">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32):System.Data.SqlTypes.SqlChars</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlDateTime" uniqueID="GetSqlDateTime(System.Int32):System.Data.SqlTypes.SqlDateTime">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32):System.Data.SqlTypes.SqlDateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlDecimal" uniqueID="GetSqlDecimal(System.Int32):System.Data.SqlTypes.SqlDecimal">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32):System.Data.SqlTypes.SqlDecimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlDouble" uniqueID="GetSqlDouble(System.Int32):System.Data.SqlTypes.SqlDouble">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32):System.Data.SqlTypes.SqlDouble</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlGuid" uniqueID="GetSqlGuid(System.Int32):System.Data.SqlTypes.SqlGuid">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32):System.Data.SqlTypes.SqlGuid</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlInt16" uniqueID="GetSqlInt16(System.Int32):System.Data.SqlTypes.SqlInt16">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32):System.Data.SqlTypes.SqlInt16</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlInt32" uniqueID="GetSqlInt32(System.Int32):System.Data.SqlTypes.SqlInt32">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32):System.Data.SqlTypes.SqlInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlInt64" uniqueID="GetSqlInt64(System.Int32):System.Data.SqlTypes.SqlInt64">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32):System.Data.SqlTypes.SqlInt64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlMoney" uniqueID="GetSqlMoney(System.Int32):System.Data.SqlTypes.SqlMoney">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32):System.Data.SqlTypes.SqlMoney</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlSingle" uniqueID="GetSqlSingle(System.Int32):System.Data.SqlTypes.SqlSingle">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32):System.Data.SqlTypes.SqlSingle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlString" uniqueID="GetSqlString(System.Int32):System.Data.SqlTypes.SqlString">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32):System.Data.SqlTypes.SqlString</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlValue" uniqueID="GetSqlValue(System.Int32):System.Object">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetSqlValueFromSqlBufferInternal" uniqueID="GetSqlValueFromSqlBufferInternal(System.Data.SqlClient.SqlBuffer;System.Data.SqlClient._SqlMetaData):System.Object">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlValueFromSqlBufferInternal(System.Data.SqlClient.SqlBuffer;System.Data.SqlClient._SqlMetaData):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetSqlValueInternal" uniqueID="GetSqlValueInternal(System.Int32):System.Object">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlValueInternal(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlValues" uniqueID="GetSqlValues(System.Object[]):System.Int32">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSqlXml" uniqueID="GetSqlXml(System.Int32):System.Data.SqlTypes.SqlXml">
				<signature>System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32):System.Data.SqlTypes.SqlXml</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetStream" uniqueID="GetStream(System.Int32):System.IO.Stream">
				<signature>System.Data.SqlClient.SqlDataReader.GetStream(System.Int32):System.IO.Stream</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetStreamingXmlChars" uniqueID="GetStreamingXmlChars(System.Int32;System.Int64;System.Char[];System.Int32;System.Int32):System.Int64">
				<signature>System.Data.SqlClient.SqlDataReader.GetStreamingXmlChars(System.Int32;System.Int64;System.Char[];System.Int32;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetString" uniqueID="GetString(System.Int32):System.String">
				<signature>System.Data.SqlClient.SqlDataReader.GetString(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTextReader" uniqueID="GetTextReader(System.Int32):System.IO.TextReader">
				<signature>System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32):System.IO.TextReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTimeSpan" uniqueID="GetTimeSpan(System.Int32):System.TimeSpan">
				<signature>System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32):System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32):System.Object">
				<signature>System.Data.SqlClient.SqlDataReader.GetValue(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetValueFromSqlBufferInternal" uniqueID="GetValueFromSqlBufferInternal(System.Data.SqlClient.SqlBuffer;System.Data.SqlClient._SqlMetaData):System.Object">
				<signature>System.Data.SqlClient.SqlDataReader.GetValueFromSqlBufferInternal(System.Data.SqlClient.SqlBuffer;System.Data.SqlClient._SqlMetaData):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetValueInternal" uniqueID="GetValueInternal(System.Int32):System.Object">
				<signature>System.Data.SqlClient.SqlDataReader.GetValueInternal(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValues" uniqueID="GetValues(System.Object[]):System.Int32">
				<signature>System.Data.SqlClient.SqlDataReader.GetValues(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetVariantInternalStorageType" uniqueID="GetVariantInternalStorageType(System.Int32):System.Data.SqlClient.SqlBuffer+StorageType">
				<signature>System.Data.SqlClient.SqlDataReader.GetVariantInternalStorageType(System.Int32):System.Data.SqlClient.SqlBuffer+StorageType</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetVersionedMetaType" uniqueID="GetVersionedMetaType(System.Data.SqlClient.MetaType):System.Data.SqlClient.MetaType">
				<signature>System.Data.SqlClient.SqlDataReader.GetVersionedMetaType(System.Data.SqlClient.MetaType):System.Data.SqlClient.MetaType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetXmlReader" uniqueID="GetXmlReader(System.Int32):System.Xml.XmlReader">
				<signature>System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HasActiveStreamOrTextReaderOnColumn" uniqueID="HasActiveStreamOrTextReaderOnColumn(System.Int32):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.HasActiveStreamOrTextReaderOnColumn(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsCommandBehavior" uniqueID="IsCommandBehavior(System.Data.CommandBehavior):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDBNull" uniqueID="IsDBNull(System.Int32):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDBNullAsync" uniqueID="IsDBNullAsync(System.Int32;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsRowToken" uniqueID="IsRowToken(System.Byte):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.IsRowToken(System.Byte):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NextResult" uniqueID="NextResult():System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.NextResult():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NextResultAsync" uniqueID="NextResultAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PrepareAsyncInvocation" uniqueID="PrepareAsyncInvocation(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.PrepareAsyncInvocation(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PrepareForAsyncContinuation" uniqueID="PrepareForAsyncContinuation():System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.PrepareForAsyncContinuation():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read():System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.Read():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadAsync" uniqueID="ReadAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadColumn" uniqueID="ReadColumn(System.Int32;System.Boolean;System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.ReadColumn(System.Int32;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReadColumnHeader" uniqueID="ReadColumnHeader(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.ReadColumnHeader(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RestoreServerSettings" uniqueID="RestoreServerSettings(System.Data.SqlClient.TdsParser;System.Data.SqlClient.TdsParserStateObject):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.RestoreServerSettings(System.Data.SqlClient.TdsParser;System.Data.SqlClient.TdsParserStateObject):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetTimeout" uniqueID="SetTimeout(System.Int64):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.SetTimeout(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SqlDataReader" uniqueID="SqlDataReader(System.Data.SqlClient.SqlCommand;System.Data.CommandBehavior):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.SqlDataReader(System.Data.SqlClient.SqlCommand;System.Data.CommandBehavior):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SwitchToAsyncWithoutSnapshot" uniqueID="SwitchToAsyncWithoutSnapshot():System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.SwitchToAsyncWithoutSnapshot():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDataRecord.GetData" uniqueID="System.Data.IDataRecord.GetData(System.Int32):System.Data.IDataReader">
				<signature>System.Data.SqlClient.SqlDataReader.System.Data.IDataRecord.GetData(System.Int32):System.Data.IDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryCleanPartialRead" uniqueID="TryCleanPartialRead():System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryCleanPartialRead():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryCloseInternal" uniqueID="TryCloseInternal(System.Boolean):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryCloseInternal(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryConsumeMetaData" uniqueID="TryConsumeMetaData():System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryConsumeMetaData():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryGetBytesInternal" uniqueID="TryGetBytesInternal(System.Int32;System.Int64;System.Byte[];System.Int32;System.Int32;System.Int64):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryGetBytesInternal(System.Int32;System.Int64;System.Byte[];System.Int32;System.Int32;System.Int64):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TryGetBytesInternalSequential" uniqueID="TryGetBytesInternalSequential(System.Int32;System.Byte[];System.Int32;System.Int32;System.Int32):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryGetBytesInternalSequential(System.Int32;System.Byte[];System.Int32;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryHasMoreResults" uniqueID="TryHasMoreResults(System.Boolean):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryHasMoreResults(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryHasMoreRows" uniqueID="TryHasMoreRows(System.Boolean):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryHasMoreRows(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryNextResult" uniqueID="TryNextResult(System.Boolean):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryNextResult(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryReadColumn" uniqueID="TryReadColumn(System.Int32;System.Boolean;System.Boolean):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryReadColumn(System.Int32;System.Boolean;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryReadColumnData" uniqueID="TryReadColumnData():System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryReadColumnData():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryReadColumnHeader" uniqueID="TryReadColumnHeader(System.Int32):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryReadColumnHeader(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryReadColumnInternal" uniqueID="TryReadColumnInternal(System.Int32;System.Boolean):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryReadColumnInternal(System.Int32;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryReadInternal" uniqueID="TryReadInternal(System.Boolean;System.Boolean):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryReadInternal(System.Boolean;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryResetBlobState" uniqueID="TryResetBlobState():System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TryResetBlobState():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetAltMetaDataSet" uniqueID="TrySetAltMetaDataSet(System.Data.SqlClient._SqlMetaDataSet;System.Boolean):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TrySetAltMetaDataSet(System.Data.SqlClient._SqlMetaDataSet;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetMetaData" uniqueID="TrySetMetaData(System.Data.SqlClient._SqlMetaDataSet;System.Boolean):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.TrySetMetaData(System.Data.SqlClient._SqlMetaDataSet;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WillHaveEnoughData" uniqueID="WillHaveEnoughData(System.Int32;System.Boolean):System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.WillHaveEnoughData(System.Int32;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Command" uniqueID="get_Command():System.Data.SqlClient.SqlCommand">
				<signature>System.Data.SqlClient.SqlDataReader.get_Command():System.Data.SqlClient.SqlCommand</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Connection" uniqueID="get_Connection():System.Data.SqlClient.SqlConnection">
				<signature>System.Data.SqlClient.SqlDataReader.get_Connection():System.Data.SqlClient.SqlConnection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Depth" uniqueID="get_Depth():System.Int32">
				<signature>System.Data.SqlClient.SqlDataReader.get_Depth():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FieldCount" uniqueID="get_FieldCount():System.Int32">
				<signature>System.Data.SqlClient.SqlDataReader.get_FieldCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasRows" uniqueID="get_HasRows():System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.get_HasRows():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClosed" uniqueID="get_IsClosed():System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.get_IsClosed():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsInitialized" uniqueID="get_IsInitialized():System.Boolean">
				<signature>System.Data.SqlClient.SqlDataReader.get_IsInitialized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object">
				<signature>System.Data.SqlClient.SqlDataReader.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Object">
				<signature>System.Data.SqlClient.SqlDataReader.get_Item(System.String):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MetaData" uniqueID="get_MetaData():System.Data.SqlClient._SqlMetaDataSet">
				<signature>System.Data.SqlClient.SqlDataReader.get_MetaData():System.Data.SqlClient._SqlMetaDataSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RecordsAffected" uniqueID="get_RecordsAffected():System.Int32">
				<signature>System.Data.SqlClient.SqlDataReader.get_RecordsAffected():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_Statistics" uniqueID="get_Statistics():System.Data.SqlClient.SqlStatistics">
				<signature>System.Data.SqlClient.SqlDataReader.get_Statistics():System.Data.SqlClient.SqlStatistics</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TableNames" uniqueID="get_TableNames():System.Data.SqlClient.MultiPartTableName[]">
				<signature>System.Data.SqlClient.SqlDataReader.get_TableNames():System.Data.SqlClient.MultiPartTableName[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_VisibleFieldCount" uniqueID="get_VisibleFieldCount():System.Int32">
				<signature>System.Data.SqlClient.SqlDataReader.get_VisibleFieldCount():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_BrowseModeInfoConsumed" uniqueID="set_BrowseModeInfoConsumed(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.set_BrowseModeInfoConsumed(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_IsInitialized" uniqueID="set_IsInitialized(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.set_IsInitialized(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ResetOptionsString" uniqueID="set_ResetOptionsString(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.set_ResetOptionsString(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_TableNames" uniqueID="set_TableNames(System.Data.SqlClient.MultiPartTableName[]):System.Void">
				<signature>System.Data.SqlClient.SqlDataReader.set_TableNames(System.Data.SqlClient.MultiPartTableName[]):System.Void</signature>
			</method>
		</class>
		<class name="SqlParameter" uniqueID="System.Data.SqlClient.SqlParameter">
			<method accessibility="Private" methodKind="Static" name="BinarySize" uniqueID="BinarySize(System.Object;System.Boolean):System.Int32">
				<signature>System.Data.SqlClient.SqlParameter.BinarySize(System.Object;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CoerceValue" uniqueID="CoerceValue(System.Object;System.Data.SqlClient.MetaType;System.Boolean;System.Boolean;System.Boolean):System.Object">
				<signature>System.Data.SqlClient.SqlParameter.CoerceValue(System.Object;System.Data.SqlClient.MetaType;System.Boolean;System.Boolean;System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ParseTypeName" uniqueID="ParseTypeName(System.String;System.Boolean):System.String[]">
				<signature>System.Data.SqlClient.SqlParameter.ParseTypeName(System.String;System.Boolean):System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="StringSize" uniqueID="StringSize(System.Object;System.Boolean):System.Int32">
				<signature>System.Data.SqlClient.SqlParameter.StringSize(System.Object;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AssertCachedPropertiesAreValid" uniqueID="AssertCachedPropertiesAreValid():System.Void">
				<signature>System.Data.SqlClient.SqlParameter.AssertCachedPropertiesAreValid():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AssertPropertiesAreValid" uniqueID="AssertPropertiesAreValid(System.Object;System.Nullable&lt;System.Boolean&gt;;System.Nullable&lt;System.Boolean&gt;;System.Nullable&lt;System.Boolean&gt;):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.AssertPropertiesAreValid(System.Object;System.Nullable&lt;System.Boolean&gt;;System.Nullable&lt;System.Boolean&gt;;System.Nullable&lt;System.Boolean&gt;):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CloneHelper" uniqueID="CloneHelper(System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.CloneHelper(System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CloneHelperCore" uniqueID="CloneHelperCore(System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.CloneHelperCore(System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CompareExchangeParent" uniqueID="CompareExchangeParent(System.Object;System.Object):System.Object">
				<signature>System.Data.SqlClient.SqlParameter.CompareExchangeParent(System.Object;System.Object):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.Common.DbParameter):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.CopyTo(System.Data.Common.DbParameter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FixStreamDataForNonPLP" uniqueID="FixStreamDataForNonPLP():System.Void">
				<signature>System.Data.SqlClient.SqlParameter.FixStreamDataForNonPLP():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetActualFieldsAndProperties" uniqueID="GetActualFieldsAndProperties(System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;;Microsoft.SqlServer.Server.SmiMetaDataPropertyCollection;System.Data.SqlClient.ParameterPeekAheadValue):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.GetActualFieldsAndProperties(System.Collections.Generic.List&lt;Microsoft.SqlServer.Server.SmiExtendedMetaData&gt;;Microsoft.SqlServer.Server.SmiMetaDataPropertyCollection;System.Data.SqlClient.ParameterPeekAheadValue):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetActualPrecision" uniqueID="GetActualPrecision():System.Byte">
				<signature>System.Data.SqlClient.SqlParameter.GetActualPrecision():System.Byte</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetActualScale" uniqueID="GetActualScale():System.Byte">
				<signature>System.Data.SqlClient.SqlParameter.GetActualScale():System.Byte</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetActualSize" uniqueID="GetActualSize():System.Int32">
				<signature>System.Data.SqlClient.SqlParameter.GetActualSize():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCoercedValue" uniqueID="GetCoercedValue():System.Object">
				<signature>System.Data.SqlClient.SqlParameter.GetCoercedValue():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetMetaSqlDbTypeOnly" uniqueID="GetMetaSqlDbTypeOnly():System.Data.SqlDbType">
				<signature>System.Data.SqlClient.SqlParameter.GetMetaSqlDbTypeOnly():System.Data.SqlDbType</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetMetaTypeOnly" uniqueID="GetMetaTypeOnly():System.Data.SqlClient.MetaType">
				<signature>System.Data.SqlClient.SqlParameter.GetMetaTypeOnly():System.Data.SqlClient.MetaType</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetParameterSize" uniqueID="GetParameterSize():System.Int32">
				<signature>System.Data.SqlClient.SqlParameter.GetParameterSize():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MetaDataForSmi" uniqueID="MetaDataForSmi(System.Data.SqlClient.ParameterPeekAheadValue):Microsoft.SqlServer.Server.SmiParameterMetaData">
				<signature>System.Data.SqlClient.SqlParameter.MetaDataForSmi(System.Data.SqlClient.ParameterPeekAheadValue):Microsoft.SqlServer.Server.SmiParameterMetaData</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Prepare" uniqueID="Prepare(System.Data.SqlClient.SqlCommand):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.Prepare(System.Data.SqlClient.SqlCommand):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PropertyChanging" uniqueID="PropertyChanging():System.Void">
				<signature>System.Data.SqlClient.SqlParameter.PropertyChanging():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PropertyTypeChanging" uniqueID="PropertyTypeChanging():System.Void">
				<signature>System.Data.SqlClient.SqlParameter.PropertyTypeChanging():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetDbType" uniqueID="ResetDbType():System.Void">
				<signature>System.Data.SqlClient.SqlParameter.ResetDbType():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetParent" uniqueID="ResetParent():System.Void">
				<signature>System.Data.SqlClient.SqlParameter.ResetParent():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetSize" uniqueID="ResetSize():System.Void">
				<signature>System.Data.SqlClient.SqlParameter.ResetSize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetSqlDbType" uniqueID="ResetSqlDbType():System.Void">
				<signature>System.Data.SqlClient.SqlParameter.ResetSqlDbType():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetSqlBuffer" uniqueID="SetSqlBuffer(System.Data.SqlClient.SqlBuffer):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.SetSqlBuffer(System.Data.SqlClient.SqlBuffer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetUdtLoadError" uniqueID="SetUdtLoadError(System.Exception):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.SetUdtLoadError(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializePrecision" uniqueID="ShouldSerializePrecision():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameter.ShouldSerializePrecision():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializeScale" uniqueID="ShouldSerializeScale():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameter.ShouldSerializeScale():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializeSize" uniqueID="ShouldSerializeSize():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameter.ShouldSerializeSize():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializeSqlDbType" uniqueID="ShouldSerializeSqlDbType():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameter.ShouldSerializeSqlDbType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlParameter" uniqueID="SqlParameter():System.Void">
				<signature>System.Data.SqlClient.SqlParameter.SqlParameter():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SqlParameter" uniqueID="SqlParameter(System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.SqlParameter(System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlParameter" uniqueID="SqlParameter(System.String;System.Data.SqlDbType):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.SqlParameter(System.String;System.Data.SqlDbType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlParameter" uniqueID="SqlParameter(System.String;System.Data.SqlDbType;System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.SqlParameter(System.String;System.Data.SqlDbType;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlParameter" uniqueID="SqlParameter(System.String;System.Data.SqlDbType;System.Int32;System.Data.ParameterDirection;System.Boolean;System.Byte;System.Byte;System.String;System.Data.DataRowVersion;System.Object):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.SqlParameter(System.String;System.Data.SqlDbType;System.Int32;System.Data.ParameterDirection;System.Boolean;System.Byte;System.Byte;System.String;System.Data.DataRowVersion;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlParameter" uniqueID="SqlParameter(System.String;System.Data.SqlDbType;System.Int32;System.Data.ParameterDirection;System.Byte;System.Byte;System.String;System.Data.DataRowVersion;System.Boolean;System.Object;System.String;System.String;System.String):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.SqlParameter(System.String;System.Data.SqlDbType;System.Int32;System.Data.ParameterDirection;System.Byte;System.Byte;System.String;System.Data.DataRowVersion;System.Boolean;System.Object;System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlParameter" uniqueID="SqlParameter(System.String;System.Data.SqlDbType;System.Int32;System.String):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.SqlParameter(System.String;System.Data.SqlDbType;System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SqlParameter" uniqueID="SqlParameter(System.String;System.Object):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.SqlParameter(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ICloneable.Clone" uniqueID="System.ICloneable.Clone():System.Object">
				<signature>System.Data.SqlClient.SqlParameter.System.ICloneable.Clone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Data.SqlClient.SqlParameter.ToString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Validate" uniqueID="Validate(System.Int32;System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.Validate(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateTypeLengths" uniqueID="ValidateTypeLengths(System.Boolean):System.Data.SqlClient.MetaType">
				<signature>System.Data.SqlClient.SqlParameter.ValidateTypeLengths(System.Boolean):System.Data.SqlClient.MetaType</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValuePrecision" uniqueID="ValuePrecision(System.Object):System.Byte">
				<signature>System.Data.SqlClient.SqlParameter.ValuePrecision(System.Object):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValuePrecisionCore" uniqueID="ValuePrecisionCore(System.Object):System.Byte">
				<signature>System.Data.SqlClient.SqlParameter.ValuePrecisionCore(System.Object):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValueScale" uniqueID="ValueScale(System.Object):System.Byte">
				<signature>System.Data.SqlClient.SqlParameter.ValueScale(System.Object):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValueScaleCore" uniqueID="ValueScaleCore(System.Object):System.Byte">
				<signature>System.Data.SqlClient.SqlParameter.ValueScaleCore(System.Object):System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValueSize" uniqueID="ValueSize(System.Object):System.Int32">
				<signature>System.Data.SqlClient.SqlParameter.ValueSize(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValueSizeCore" uniqueID="ValueSizeCore(System.Object):System.Int32">
				<signature>System.Data.SqlClient.SqlParameter.ValueSizeCore(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_CoercedValue" uniqueID="get_CoercedValue():System.Object">
				<signature>System.Data.SqlClient.SqlParameter.get_CoercedValue():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CoercedValueIsDataFeed" uniqueID="get_CoercedValueIsDataFeed():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameter.get_CoercedValueIsDataFeed():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CoercedValueIsSqlType" uniqueID="get_CoercedValueIsSqlType():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameter.get_CoercedValueIsSqlType():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Collation" uniqueID="get_Collation():System.Data.SqlClient.SqlCollation">
				<signature>System.Data.SqlClient.SqlParameter.get_Collation():System.Data.SqlClient.SqlCollation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CompareInfo" uniqueID="get_CompareInfo():System.Data.SqlTypes.SqlCompareOptions">
				<signature>System.Data.SqlClient.SqlParameter.get_CompareInfo():System.Data.SqlTypes.SqlCompareOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DbType" uniqueID="get_DbType():System.Data.DbType">
				<signature>System.Data.SqlClient.SqlParameter.get_DbType():System.Data.DbType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Direction" uniqueID="get_Direction():System.Data.ParameterDirection">
				<signature>System.Data.SqlClient.SqlParameter.get_Direction():System.Data.ParameterDirection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_InternalMetaType" uniqueID="get_InternalMetaType():System.Data.SqlClient.MetaType">
				<signature>System.Data.SqlClient.SqlParameter.get_InternalMetaType():System.Data.SqlClient.MetaType</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsNull" uniqueID="get_IsNull():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameter.get_IsNull():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNullable" uniqueID="get_IsNullable():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameter.get_IsNullable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LocaleId" uniqueID="get_LocaleId():System.Int32">
				<signature>System.Data.SqlClient.SqlParameter.get_LocaleId():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_MetaData" uniqueID="get_MetaData():Microsoft.SqlServer.Server.SqlMetaData">
				<signature>System.Data.SqlClient.SqlParameter.get_MetaData():Microsoft.SqlServer.Server.SqlMetaData</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Offset" uniqueID="get_Offset():System.Int32">
				<signature>System.Data.SqlClient.SqlParameter.get_Offset():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ParamaterIsSqlType" uniqueID="get_ParamaterIsSqlType():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameter.get_ParamaterIsSqlType():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ParameterName" uniqueID="get_ParameterName():System.String">
				<signature>System.Data.SqlClient.SqlParameter.get_ParameterName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ParameterNameFixed" uniqueID="get_ParameterNameFixed():System.String">
				<signature>System.Data.SqlClient.SqlParameter.get_ParameterNameFixed():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Precision" uniqueID="get_Precision():System.Byte">
				<signature>System.Data.SqlClient.SqlParameter.get_Precision():System.Byte</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PrecisionInternal" uniqueID="get_PrecisionInternal():System.Byte">
				<signature>System.Data.SqlClient.SqlParameter.get_PrecisionInternal():System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scale" uniqueID="get_Scale():System.Byte">
				<signature>System.Data.SqlClient.SqlParameter.get_Scale():System.Byte</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ScaleInternal" uniqueID="get_ScaleInternal():System.Byte">
				<signature>System.Data.SqlClient.SqlParameter.get_ScaleInternal():System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Size" uniqueID="get_Size():System.Int32">
				<signature>System.Data.SqlClient.SqlParameter.get_Size():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SizeInferred" uniqueID="get_SizeInferred():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameter.get_SizeInferred():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SourceColumn" uniqueID="get_SourceColumn():System.String">
				<signature>System.Data.SqlClient.SqlParameter.get_SourceColumn():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SourceColumnNullMapping" uniqueID="get_SourceColumnNullMapping():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameter.get_SourceColumnNullMapping():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SourceVersion" uniqueID="get_SourceVersion():System.Data.DataRowVersion">
				<signature>System.Data.SqlClient.SqlParameter.get_SourceVersion():System.Data.DataRowVersion</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SqlDbType" uniqueID="get_SqlDbType():System.Data.SqlDbType">
				<signature>System.Data.SqlClient.SqlParameter.get_SqlDbType():System.Data.SqlDbType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SqlValue" uniqueID="get_SqlValue():System.Object">
				<signature>System.Data.SqlClient.SqlParameter.get_SqlValue():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypeName" uniqueID="get_TypeName():System.String">
				<signature>System.Data.SqlClient.SqlParameter.get_TypeName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UdtTypeName" uniqueID="get_UdtTypeName():System.String">
				<signature>System.Data.SqlClient.SqlParameter.get_UdtTypeName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Object">
				<signature>System.Data.SqlClient.SqlParameter.get_Value():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ValueAsINullable" uniqueID="get_ValueAsINullable():System.Data.SqlTypes.INullable">
				<signature>System.Data.SqlClient.SqlParameter.get_ValueAsINullable():System.Data.SqlTypes.INullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_XmlSchemaCollectionDatabase" uniqueID="get_XmlSchemaCollectionDatabase():System.String">
				<signature>System.Data.SqlClient.SqlParameter.get_XmlSchemaCollectionDatabase():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_XmlSchemaCollectionName" uniqueID="get_XmlSchemaCollectionName():System.String">
				<signature>System.Data.SqlClient.SqlParameter.get_XmlSchemaCollectionName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_XmlSchemaCollectionOwningSchema" uniqueID="get_XmlSchemaCollectionOwningSchema():System.String">
				<signature>System.Data.SqlClient.SqlParameter.get_XmlSchemaCollectionOwningSchema():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_CoercedValue" uniqueID="set_CoercedValue(System.Object):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_CoercedValue(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Collation" uniqueID="set_Collation(System.Data.SqlClient.SqlCollation):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_Collation(System.Data.SqlClient.SqlCollation):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CompareInfo" uniqueID="set_CompareInfo(System.Data.SqlTypes.SqlCompareOptions):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_CompareInfo(System.Data.SqlTypes.SqlCompareOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DbType" uniqueID="set_DbType(System.Data.DbType):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_DbType(System.Data.DbType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Direction" uniqueID="set_Direction(System.Data.ParameterDirection):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_Direction(System.Data.ParameterDirection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_InternalMetaType" uniqueID="set_InternalMetaType(System.Data.SqlClient.MetaType):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_InternalMetaType(System.Data.SqlClient.MetaType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_IsNullable" uniqueID="set_IsNullable(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_IsNullable(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LocaleId" uniqueID="set_LocaleId(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_LocaleId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Offset" uniqueID="set_Offset(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_Offset(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ParamaterIsSqlType" uniqueID="set_ParamaterIsSqlType(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_ParamaterIsSqlType(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ParameterName" uniqueID="set_ParameterName(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_ParameterName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Precision" uniqueID="set_Precision(System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_Precision(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_PrecisionInternal" uniqueID="set_PrecisionInternal(System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_PrecisionInternal(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Scale" uniqueID="set_Scale(System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_Scale(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ScaleInternal" uniqueID="set_ScaleInternal(System.Byte):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_ScaleInternal(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Size" uniqueID="set_Size(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_Size(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SourceColumn" uniqueID="set_SourceColumn(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_SourceColumn(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SourceColumnNullMapping" uniqueID="set_SourceColumnNullMapping(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_SourceColumnNullMapping(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SourceVersion" uniqueID="set_SourceVersion(System.Data.DataRowVersion):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_SourceVersion(System.Data.DataRowVersion):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SqlDbType" uniqueID="set_SqlDbType(System.Data.SqlDbType):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_SqlDbType(System.Data.SqlDbType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SqlValue" uniqueID="set_SqlValue(System.Object):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_SqlValue(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TypeName" uniqueID="set_TypeName(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_TypeName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UdtTypeName" uniqueID="set_UdtTypeName(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_UdtTypeName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Value" uniqueID="set_Value(System.Object):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_Value(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_XmlSchemaCollectionDatabase" uniqueID="set_XmlSchemaCollectionDatabase(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_XmlSchemaCollectionDatabase(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_XmlSchemaCollectionName" uniqueID="set_XmlSchemaCollectionName(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_XmlSchemaCollectionName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_XmlSchemaCollectionOwningSchema" uniqueID="set_XmlSchemaCollectionOwningSchema(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlParameter.set_XmlSchemaCollectionOwningSchema(System.String):System.Void</signature>
			</method>
		</class>
		<class name="SqlParameterCollection" uniqueID="System.Data.SqlClient.SqlParameterCollection">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IndexOf" uniqueID="IndexOf(System.Collections.IEnumerable;System.String):System.Int32">
				<signature>System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Collections.IEnumerable;System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Data.SqlClient.SqlParameter):System.Data.SqlClient.SqlParameter">
				<signature>System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Int32">
				<signature>System.Data.SqlClient.SqlParameterCollection.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Data.SqlDbType):System.Data.SqlClient.SqlParameter">
				<signature>System.Data.SqlClient.SqlParameterCollection.Add(System.String;System.Data.SqlDbType):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Data.SqlDbType;System.Int32):System.Data.SqlClient.SqlParameter">
				<signature>System.Data.SqlClient.SqlParameterCollection.Add(System.String;System.Data.SqlDbType;System.Int32):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Data.SqlDbType;System.Int32;System.String):System.Data.SqlClient.SqlParameter">
				<signature>System.Data.SqlClient.SqlParameterCollection.Add(System.String;System.Data.SqlDbType;System.Int32;System.String):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Object):System.Data.SqlClient.SqlParameter">
				<signature>System.Data.SqlClient.SqlParameterCollection.Add(System.String;System.Object):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Array):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.AddRange(System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Data.SqlClient.SqlParameter[]):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.AddRange(System.Data.SqlClient.SqlParameter[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddWithValue" uniqueID="AddWithValue(System.String;System.Object):System.Data.SqlClient.SqlParameter">
				<signature>System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String;System.Object):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckName" uniqueID="CheckName(System.String):System.Int32">
				<signature>System.Data.SqlClient.SqlParameterCollection.CheckName(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Data.SqlClient.SqlParameter):System.Boolean">
				<signature>System.Data.SqlClient.SqlParameterCollection.Contains(System.Data.SqlClient.SqlParameter):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object):System.Boolean">
				<signature>System.Data.SqlClient.SqlParameterCollection.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Data.SqlClient.SqlParameterCollection.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Data.SqlClient.SqlParameter[];System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Data.SqlClient.SqlParameter[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.SqlClient.SqlParameterCollection.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetParameter" uniqueID="GetParameter(System.Int32):System.Data.Common.DbParameter">
				<signature>System.Data.SqlClient.SqlParameterCollection.GetParameter(System.Int32):System.Data.Common.DbParameter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetParameter" uniqueID="GetParameter(System.String):System.Data.Common.DbParameter">
				<signature>System.Data.SqlClient.SqlParameterCollection.GetParameter(System.String):System.Data.Common.DbParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Data.SqlClient.SqlParameter):System.Int32">
				<signature>System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Data.SqlClient.SqlParameter):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object):System.Int32">
				<signature>System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32;System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Object):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnChange" uniqueID="OnChange():System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.OnChange():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RangeCheck" uniqueID="RangeCheck(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.RangeCheck(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.Remove(System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.String):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RemoveIndex" uniqueID="RemoveIndex(System.Int32):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.RemoveIndex(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Replace" uniqueID="Replace(System.Int32;System.Object):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.Replace(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetParameter" uniqueID="SetParameter(System.Int32;System.Data.Common.DbParameter):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.SetParameter(System.Int32;System.Data.Common.DbParameter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetParameter" uniqueID="SetParameter(System.String;System.Data.Common.DbParameter):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.SetParameter(System.String;System.Data.Common.DbParameter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SqlParameterCollection" uniqueID="SqlParameterCollection():System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.SqlParameterCollection():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Validate" uniqueID="Validate(System.Int32;System.Object):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.Validate(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateType" uniqueID="ValidateType(System.Object):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.ValidateType(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Data.SqlClient.SqlParameterCollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_InnerList" uniqueID="get_InnerList():System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;">
				<signature>System.Data.SqlClient.SqlParameterCollection.get_InnerList():System.Collections.Generic.List&lt;System.Data.SqlClient.SqlParameter&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsDirty" uniqueID="get_IsDirty():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameterCollection.get_IsDirty():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFixedSize" uniqueID="get_IsFixedSize():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameterCollection.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameterCollection.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Data.SqlClient.SqlParameterCollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.SqlClient.SqlParameter">
				<signature>System.Data.SqlClient.SqlParameterCollection.get_Item(System.Int32):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Data.SqlClient.SqlParameter">
				<signature>System.Data.SqlClient.SqlParameterCollection.get_Item(System.String):System.Data.SqlClient.SqlParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Data.SqlClient.SqlParameterCollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_IsDirty" uniqueID="set_IsDirty(System.Boolean):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.set_IsDirty(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.set_Item(System.Int32;System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Data.SqlClient.SqlParameter):System.Void">
				<signature>System.Data.SqlClient.SqlParameterCollection.set_Item(System.String;System.Data.SqlClient.SqlParameter):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Runtime.CompilerServices">
		<class name="ConfiguredTaskAwaitable&lt;System.Boolean&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Boolean&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable&lt;System.Boolean&gt;" uniqueID="ConfiguredTaskAwaitable&lt;System.Boolean&gt;(System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Boolean&gt;.ConfiguredTaskAwaitable&lt;System.Boolean&gt;(System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Boolean&gt;.GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Data.SqlClient.SqlDataReader">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;.GetResult():System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;" uniqueID="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;(System.Threading.Tasks.Task&lt;System.Object&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;(System.Threading.Tasks.Task&lt;System.Object&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Object">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;.GetResult():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable&lt;System.Data.Common.DbDataReader&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.Common.DbDataReader&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable&lt;System.Data.Common.DbDataReader&gt;" uniqueID="ConfiguredTaskAwaitable&lt;System.Data.Common.DbDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.Common.DbDataReader&gt;.ConfiguredTaskAwaitable&lt;System.Data.Common.DbDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.Common.DbDataReader&gt;.GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="ConfiguredTaskAwaitable&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ConfiguredTaskAwaitable&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.SqlClient.SqlDataReader&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="ConfiguredTaskAwaitable&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.SqlClient.SqlDataReader&gt;.ConfiguredTaskAwaitable&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.SqlClient.SqlDataReader&gt;.GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task[]&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task[]&gt;.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task[]&gt;.GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
		</class>
		<class name="TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;">
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Threading.Tasks.Task[]">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;.GetResult():System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;.TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable&lt;System.Int32&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Int32&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable&lt;System.Int32&gt;" uniqueID="ConfiguredTaskAwaitable&lt;System.Int32&gt;(System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Int32&gt;.ConfiguredTaskAwaitable&lt;System.Int32&gt;(System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Int32&gt;.GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable&lt;System.Object&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Object&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable&lt;System.Object&gt;" uniqueID="ConfiguredTaskAwaitable&lt;System.Object&gt;(System.Threading.Tasks.Task&lt;System.Object&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Object&gt;.ConfiguredTaskAwaitable&lt;System.Object&gt;(System.Threading.Tasks.Task&lt;System.Object&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Object&gt;.GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Object&gt;</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task&gt;" uniqueID="ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task&gt;.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task&gt;.GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable&lt;System.String&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.String&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable&lt;System.String&gt;" uniqueID="ConfiguredTaskAwaitable&lt;System.String&gt;(System.Threading.Tasks.Task&lt;System.String&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.String&gt;.ConfiguredTaskAwaitable&lt;System.String&gt;(System.Threading.Tasks.Task&lt;System.String&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.String&gt;.GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable&lt;System.Xml.XmlReader&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Xml.XmlReader&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable&lt;System.Xml.XmlReader&gt;" uniqueID="ConfiguredTaskAwaitable&lt;System.Xml.XmlReader&gt;(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Xml.XmlReader&gt;.ConfiguredTaskAwaitable&lt;System.Xml.XmlReader&gt;(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Xml.XmlReader&gt;.GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable`1" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable`1" uniqueID="ConfiguredTaskAwaitable`1(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaitable`1(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.GetAwaiter():System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;" uniqueID="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;(System.Threading.Tasks.Task&lt;System.String&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;(System.Threading.Tasks.Task&lt;System.String&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.String">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;.GetResult():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.String&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="INotifyCompletion" uniqueID="System.Runtime.CompilerServices.INotifyCompletion">
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action):System.Void</signature>
			</method>
		</class>
		<class name="ICriticalNotifyCompletion" uniqueID="System.Runtime.CompilerServices.ICriticalNotifyCompletion">
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;" uniqueID="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;(System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;(System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Boolean">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;.GetResult():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Boolean&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="TaskAwaiter&lt;System.Object&gt;" uniqueID="System.Runtime.CompilerServices.TaskAwaiter&lt;System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Object">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Object&gt;.GetResult():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Object&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TaskAwaiter&lt;System.Object&gt;" uniqueID="TaskAwaiter&lt;System.Object&gt;(System.Threading.Tasks.Task&lt;System.Object&gt;):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Object&gt;.TaskAwaiter&lt;System.Object&gt;(System.Threading.Tasks.Task&lt;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Object&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Object&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;" uniqueID="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Data.Common.DbDataReader">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;.GetResult():System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.Common.DbDataReader&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="TaskAwaiter&lt;System.String&gt;" uniqueID="System.Runtime.CompilerServices.TaskAwaiter&lt;System.String&gt;">
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.String">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.String&gt;.GetResult():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.String&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TaskAwaiter&lt;System.String&gt;" uniqueID="TaskAwaiter&lt;System.String&gt;(System.Threading.Tasks.Task&lt;System.String&gt;):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.String&gt;.TaskAwaiter&lt;System.String&gt;(System.Threading.Tasks.Task&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.String&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.String&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.GetResult():System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;" uniqueID="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;(System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;(System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Int32">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;.GetResult():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Int32&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;" uniqueID="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Threading.Tasks.Task">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;.GetResult():System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Threading.Tasks.Task[]">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;.GetResult():System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;" uniqueID="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;">
			<method accessibility="Protected" methodKind="Member" name="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;" uniqueID="ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Boolean):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Xml.XmlReader">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;.GetResult():System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter&lt;System.Xml.XmlReader&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="TaskAwaiter&lt;System.Boolean&gt;" uniqueID="System.Runtime.CompilerServices.TaskAwaiter&lt;System.Boolean&gt;">
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Boolean">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Boolean&gt;.GetResult():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Boolean&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TaskAwaiter&lt;System.Boolean&gt;" uniqueID="TaskAwaiter&lt;System.Boolean&gt;(System.Threading.Tasks.Task&lt;System.Boolean&gt;):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Boolean&gt;.TaskAwaiter&lt;System.Boolean&gt;(System.Threading.Tasks.Task&lt;System.Boolean&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Boolean&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Boolean&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;" uniqueID="System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Data.Common.DbDataReader">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;.GetResult():System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;" uniqueID="TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;.TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.GetResult():System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;">
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Data.SqlClient.SqlDataReader">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;.GetResult():System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;.TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="TaskAwaiter&lt;System.Int32&gt;" uniqueID="System.Runtime.CompilerServices.TaskAwaiter&lt;System.Int32&gt;">
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Int32">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Int32&gt;.GetResult():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Int32&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TaskAwaiter&lt;System.Int32&gt;" uniqueID="TaskAwaiter&lt;System.Int32&gt;(System.Threading.Tasks.Task&lt;System.Int32&gt;):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Int32&gt;.TaskAwaiter&lt;System.Int32&gt;(System.Threading.Tasks.Task&lt;System.Int32&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Int32&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Int32&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="TaskAwaiter&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Threading.Tasks.Task">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task&gt;.GetResult():System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TaskAwaiter&lt;System.Threading.Tasks.Task&gt;" uniqueID="TaskAwaiter&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task&gt;.TaskAwaiter&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
		<class name="TaskAwaiter&lt;System.Xml.XmlReader&gt;" uniqueID="System.Runtime.CompilerServices.TaskAwaiter&lt;System.Xml.XmlReader&gt;">
			<method accessibility="Public" methodKind="Member" name="GetResult" uniqueID="GetResult():System.Xml.XmlReader">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Xml.XmlReader&gt;.GetResult():System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnCompleted" uniqueID="OnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Xml.XmlReader&gt;.OnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TaskAwaiter&lt;System.Xml.XmlReader&gt;" uniqueID="TaskAwaiter&lt;System.Xml.XmlReader&gt;(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Xml.XmlReader&gt;.TaskAwaiter&lt;System.Xml.XmlReader&gt;(System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeOnCompleted" uniqueID="UnsafeOnCompleted(System.Action):System.Void">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Xml.XmlReader&gt;.UnsafeOnCompleted(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Runtime.CompilerServices.TaskAwaiter&lt;System.Xml.XmlReader&gt;.get_IsCompleted():System.Boolean</signature>
			</method>
		</class>
	</package>
	<package name="System.Threading">
		<class name="IThreadPoolWorkItem" uniqueID="System.Threading.IThreadPoolWorkItem">
			<method accessibility="Public" methodKind="Member" name="ExecuteWorkItem" uniqueID="ExecuteWorkItem():System.Void">
				<signature>System.Threading.IThreadPoolWorkItem.ExecuteWorkItem():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MarkAborted" uniqueID="MarkAborted(System.Threading.ThreadAbortException):System.Void">
				<signature>System.Threading.IThreadPoolWorkItem.MarkAborted(System.Threading.ThreadAbortException):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Threading.Tasks">
		<class name="Shared&lt;System.Threading.CancellationTokenRegistration&gt;" uniqueID="System.Threading.Tasks.Shared&lt;System.Threading.CancellationTokenRegistration&gt;">
			<method accessibility="Protected" methodKind="Member" name="Shared&lt;System.Threading.CancellationTokenRegistration&gt;" uniqueID="Shared&lt;System.Threading.CancellationTokenRegistration&gt;(System.Threading.CancellationTokenRegistration):System.Void">
				<signature>System.Threading.Tasks.Shared&lt;System.Threading.CancellationTokenRegistration&gt;.Shared&lt;System.Threading.CancellationTokenRegistration&gt;(System.Threading.CancellationTokenRegistration):System.Void</signature>
			</method>
		</class>
		<class name="Task&lt;System.String&gt;" uniqueID="System.Threading.Tasks.Task&lt;System.String&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__26" uniqueID="&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.String&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.String&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Factory" uniqueID="get_Factory():System.Threading.Tasks.TaskFactory&lt;System.String&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.get_Factory():System.Threading.Tasks.TaskFactory&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConfigureAwait" uniqueID="ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.String&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.String&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DangerousSetResult" uniqueID="DangerousSetResult(System.String):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.DangerousSetResult(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.String&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetResultCore" uniqueID="GetResultCore(System.Boolean):System.String">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.GetResultCore(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvoke" uniqueID="InnerInvoke():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.InnerInvoke():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Boolean;System.String;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Boolean;System.String;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Func&lt;System.Object;System.String&gt;;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Func&lt;System.Object;System.String&gt;;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Func&lt;System.String&gt;):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Func&lt;System.String&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Func&lt;System.String&gt;;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Func&lt;System.String&gt;;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Func&lt;System.String&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Func&lt;System.String&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Func&lt;System.String&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Func&lt;System.String&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Func&lt;System.String&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Func&lt;System.String&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Func&lt;System.String&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Func&lt;System.String&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.String&gt;" uniqueID="Task&lt;System.String&gt;(System.String):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.Task&lt;System.String&gt;(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.TrySetException(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.String):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.TrySetResult(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayMethodDescription" uniqueID="get_DebuggerDisplayMethodDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.get_DebuggerDisplayMethodDescription():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayResultDescription" uniqueID="get_DebuggerDisplayResultDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.get_DebuggerDisplayResultDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Result" uniqueID="get_Result():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.get_Result():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ResultOnSuccess" uniqueID="get_ResultOnSuccess():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.String&gt;.get_ResultOnSuccess():System.String</signature>
			</method>
		</class>
		<class name="TaskFactory&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1d" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1e" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__21" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__22" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAllImpl" uniqueID="ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAnyImpl" uniqueID="ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateCanceledTask" uniqueID="CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromAsyncCoreLogic" uniqueID="FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDefaultScheduler" uniqueID="GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.StartNew(System.Func&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.StartNew(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.StartNew(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.StartNew(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Threading.Tasks.Task&gt;" uniqueID="TaskFactory&lt;System.Threading.Tasks.Task&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.TaskFactory&lt;System.Threading.Tasks.Task&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Threading.Tasks.Task&gt;" uniqueID="TaskFactory&lt;System.Threading.Tasks.Task&gt;(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.TaskFactory&lt;System.Threading.Tasks.Task&gt;(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Threading.Tasks.Task&gt;" uniqueID="TaskFactory&lt;System.Threading.Tasks.Task&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.TaskFactory&lt;System.Threading.Tasks.Task&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Threading.Tasks.Task&gt;" uniqueID="TaskFactory&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.TaskFactory&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Threading.Tasks.Task&gt;" uniqueID="TaskFactory&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.TaskFactory&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CancellationToken" uniqueID="get_CancellationToken():System.Threading.CancellationToken">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.get_CancellationToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContinuationOptions" uniqueID="get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationOptions" uniqueID="get_CreationOptions():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.get_CreationOptions():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DefaultScheduler" uniqueID="get_DefaultScheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.get_DefaultScheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scheduler" uniqueID="get_Scheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;.get_Scheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
		</class>
		<class name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__26" uniqueID="&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Factory" uniqueID="get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConfigureAwait" uniqueID="ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DangerousSetResult" uniqueID="DangerousSetResult(System.Data.ProviderBase.DbConnectionInternal):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.DangerousSetResult(System.Data.ProviderBase.DbConnectionInternal):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetResultCore" uniqueID="GetResultCore(System.Boolean):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.GetResultCore(System.Boolean):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvoke" uniqueID="InnerInvoke():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.InnerInvoke():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Boolean;System.Data.ProviderBase.DbConnectionInternal;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Boolean;System.Data.ProviderBase.DbConnectionInternal;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Data.ProviderBase.DbConnectionInternal):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Data.ProviderBase.DbConnectionInternal):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TrySetException(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.Data.ProviderBase.DbConnectionInternal):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TrySetResult(System.Data.ProviderBase.DbConnectionInternal):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayMethodDescription" uniqueID="get_DebuggerDisplayMethodDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_DebuggerDisplayMethodDescription():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayResultDescription" uniqueID="get_DebuggerDisplayResultDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_DebuggerDisplayResultDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Result" uniqueID="get_Result():System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_Result():System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ResultOnSuccess" uniqueID="get_ResultOnSuccess():System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_ResultOnSuccess():System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
		</class>
		<class name="Task" uniqueID="System.Threading.Tasks.Task">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__1a" uniqueID="&lt;.cctor&gt;b__1a():System.Threading.Tasks.Task+ContingentProperties">
				<signature>System.Threading.Tasks.Task.&lt;.cctor&gt;b__1a():System.Threading.Tasks.Task+ContingentProperties</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__1b" uniqueID="&lt;.cctor&gt;b__1b(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Threading.Tasks.Task.&lt;.cctor&gt;b__1b(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__1c" uniqueID="&lt;.cctor&gt;b__1c(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task.&lt;.cctor&gt;b__1c(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Delay&gt;b__16" uniqueID="&lt;Delay&gt;b__16(System.Object):System.Void">
				<signature>System.Threading.Tasks.Task.&lt;Delay&gt;b__16(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;Delay&gt;b__17" uniqueID="&lt;Delay&gt;b__17(System.Object):System.Void">
				<signature>System.Threading.Tasks.Task.&lt;Delay&gt;b__17(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Threading.Tasks.Task.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AddExceptionsForCompletedTask" uniqueID="AddExceptionsForCompletedTask(System.Collections.Generic.List&lt;System.Exception&gt;;System.Threading.Tasks.Task):System.Void">
				<signature>System.Threading.Tasks.Task.AddExceptionsForCompletedTask(System.Collections.Generic.List&lt;System.Exception&gt;;System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AddToActiveTasks" uniqueID="AddToActiveTasks(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Threading.Tasks.Task.AddToActiveTasks(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AnyTaskRequiresNotifyDebuggerOfWaitCompletion" uniqueID="AnyTaskRequiresNotifyDebuggerOfWaitCompletion(System.Threading.Tasks.Task[]):System.Boolean">
				<signature>System.Threading.Tasks.Task.AnyTaskRequiresNotifyDebuggerOfWaitCompletion(System.Threading.Tasks.Task[]):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CopyExecutionContext" uniqueID="CopyExecutionContext(System.Threading.ExecutionContext):System.Threading.ExecutionContext">
				<signature>System.Threading.Tasks.Task.CopyExecutionContext(System.Threading.ExecutionContext):System.Threading.ExecutionContext</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreationOptionsFromContinuationOptions" uniqueID="CreationOptionsFromContinuationOptions(System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions):System.Void">
				<signature>System.Threading.Tasks.Task.CreationOptionsFromContinuationOptions(System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Delay" uniqueID="Delay(System.Int32):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.Delay(System.Int32):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Delay" uniqueID="Delay(System.Int32;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.Delay(System.Int32;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Delay" uniqueID="Delay(System.TimeSpan):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.Delay(System.TimeSpan):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Delay" uniqueID="Delay(System.TimeSpan;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.Delay(System.TimeSpan;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ExecuteSelfReplicating" uniqueID="ExecuteSelfReplicating(System.Threading.Tasks.Task):System.Void">
				<signature>System.Threading.Tasks.Task.ExecuteSelfReplicating(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ExecutionContextCallback" uniqueID="ExecutionContextCallback(System.Object):System.Void">
				<signature>System.Threading.Tasks.Task.ExecutionContextCallback(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FastWaitAll" uniqueID="FastWaitAll(System.Threading.Tasks.Task[]):System.Void">
				<signature>System.Threading.Tasks.Task.FastWaitAll(System.Threading.Tasks.Task[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromCancellation" uniqueID="FromCancellation(System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.FromCancellation(System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromException" uniqueID="FromException(System.Exception):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.FromException(System.Exception):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetActiveTaskFromId" uniqueID="GetActiveTaskFromId(System.Int32):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.GetActiveTaskFromId(System.Int32):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetActiveTasks" uniqueID="GetActiveTasks():System.Threading.Tasks.Task[]">
				<signature>System.Threading.Tasks.Task.GetActiveTasks():System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetDelegatesFromContinuationObject" uniqueID="GetDelegatesFromContinuationObject(System.Object):System.Delegate[]">
				<signature>System.Threading.Tasks.Task.GetDelegatesFromContinuationObject(System.Object):System.Delegate[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalCurrentIfAttached" uniqueID="InternalCurrentIfAttached(System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.InternalCurrentIfAttached(System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="InternalStartNew" uniqueID="InternalStartNew(System.Threading.Tasks.Task;System.Delegate;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.InternalStartNew(System.Threading.Tasks.Task;System.Delegate;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="InternalWhenAll" uniqueID="InternalWhenAll(System.Threading.Tasks.Task[]):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.InternalWhenAll(System.Threading.Tasks.Task[]):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsCompletedMethod" uniqueID="IsCompletedMethod(System.Int32):System.Boolean">
				<signature>System.Threading.Tasks.Task.IsCompletedMethod(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="NewId" uniqueID="NewId():System.Int32">
				<signature>System.Threading.Tasks.Task.NewId():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="OptionsMethod" uniqueID="OptionsMethod(System.Int32):System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.Task.OptionsMethod(System.Int32):System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="RemoveFromActiveTasks" uniqueID="RemoveFromActiveTasks(System.Int32):System.Void">
				<signature>System.Threading.Tasks.Task.RemoveFromActiveTasks(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Run" uniqueID="Run(System.Action):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.Run(System.Action):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Run" uniqueID="Run(System.Action;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.Run(System.Action;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Run" uniqueID="Run(System.Func&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.Run(System.Func&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Run" uniqueID="Run(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.Run(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TaskCancelCallback" uniqueID="TaskCancelCallback(System.Object):System.Void">
				<signature>System.Threading.Tasks.Task.TaskCancelCallback(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WaitAll" uniqueID="WaitAll(System.Threading.Tasks.Task[]):System.Void">
				<signature>System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WaitAll" uniqueID="WaitAll(System.Threading.Tasks.Task[];System.Int32):System.Boolean">
				<signature>System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[];System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WaitAll" uniqueID="WaitAll(System.Threading.Tasks.Task[];System.Int32;System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[];System.Int32;System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WaitAll" uniqueID="WaitAll(System.Threading.Tasks.Task[];System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[];System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WaitAll" uniqueID="WaitAll(System.Threading.Tasks.Task[];System.TimeSpan):System.Boolean">
				<signature>System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[];System.TimeSpan):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="WaitAllBlockingCore" uniqueID="WaitAllBlockingCore(System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;;System.Int32;System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task.WaitAllBlockingCore(System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;;System.Int32;System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WaitAny" uniqueID="WaitAny(System.Threading.Tasks.Task[]):System.Int32">
				<signature>System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WaitAny" uniqueID="WaitAny(System.Threading.Tasks.Task[];System.Int32):System.Int32">
				<signature>System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[];System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WaitAny" uniqueID="WaitAny(System.Threading.Tasks.Task[];System.Int32;System.Threading.CancellationToken):System.Int32">
				<signature>System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[];System.Int32;System.Threading.CancellationToken):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WaitAny" uniqueID="WaitAny(System.Threading.Tasks.Task[];System.Threading.CancellationToken):System.Int32">
				<signature>System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[];System.Threading.CancellationToken):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WaitAny" uniqueID="WaitAny(System.Threading.Tasks.Task[];System.TimeSpan):System.Int32">
				<signature>System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[];System.TimeSpan):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WhenAll" uniqueID="WhenAll(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WhenAll" uniqueID="WhenAll(System.Threading.Tasks.Task[]):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[]):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WhenAny" uniqueID="WhenAny(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="WhenAny" uniqueID="WhenAny(System.Threading.Tasks.Task[]):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[]):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Yield" uniqueID="Yield():System.Runtime.CompilerServices.YieldAwaitable">
				<signature>System.Threading.Tasks.Task.Yield():System.Runtime.CompilerServices.YieldAwaitable</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_CompletedTask" uniqueID="get_CompletedTask():System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.get_CompletedTask():System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_CurrentId" uniqueID="get_CurrentId():System.Nullable&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.Task.get_CurrentId():System.Nullable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_CurrentStackGuard" uniqueID="get_CurrentStackGuard():System.Threading.Tasks.StackGuard">
				<signature>System.Threading.Tasks.Task.get_CurrentStackGuard():System.Threading.Tasks.StackGuard</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Factory" uniqueID="get_Factory():System.Threading.Tasks.TaskFactory">
				<signature>System.Threading.Tasks.Task.get_Factory():System.Threading.Tasks.TaskFactory</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_InternalCurrent" uniqueID="get_InternalCurrent():System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.get_InternalCurrent():System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddCompletionAction" uniqueID="AddCompletionAction(System.Threading.Tasks.ITaskCompletionAction):System.Void">
				<signature>System.Threading.Tasks.Task.AddCompletionAction(System.Threading.Tasks.ITaskCompletionAction):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddCompletionAction" uniqueID="AddCompletionAction(System.Threading.Tasks.ITaskCompletionAction;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task.AddCompletionAction(System.Threading.Tasks.ITaskCompletionAction;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddException" uniqueID="AddException(System.Object):System.Void">
				<signature>System.Threading.Tasks.Task.AddException(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddException" uniqueID="AddException(System.Object;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task.AddException(System.Object;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddExceptionsFromChildren" uniqueID="AddExceptionsFromChildren():System.Void">
				<signature>System.Threading.Tasks.Task.AddExceptionsFromChildren():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddNewChild" uniqueID="AddNewChild():System.Void">
				<signature>System.Threading.Tasks.Task.AddNewChild():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddTaskContinuation" uniqueID="AddTaskContinuation(System.Object;System.Boolean):System.Boolean">
				<signature>System.Threading.Tasks.Task.AddTaskContinuation(System.Object;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddTaskContinuationComplex" uniqueID="AddTaskContinuationComplex(System.Object;System.Boolean):System.Boolean">
				<signature>System.Threading.Tasks.Task.AddTaskContinuationComplex(System.Object;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AssignCancellationToken" uniqueID="AssignCancellationToken(System.Threading.CancellationToken;System.Threading.Tasks.Task;System.Threading.Tasks.TaskContinuation):System.Void">
				<signature>System.Threading.Tasks.Task.AssignCancellationToken(System.Threading.CancellationToken;System.Threading.Tasks.Task;System.Threading.Tasks.TaskContinuation):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AtomicStateUpdate" uniqueID="AtomicStateUpdate(System.Int32;System.Int32):System.Boolean">
				<signature>System.Threading.Tasks.Task.AtomicStateUpdate(System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AtomicStateUpdate" uniqueID="AtomicStateUpdate(System.Int32;System.Int32;System.Int32):System.Boolean">
				<signature>System.Threading.Tasks.Task.AtomicStateUpdate(System.Int32;System.Int32;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CancellationCleanupLogic" uniqueID="CancellationCleanupLogic():System.Void">
				<signature>System.Threading.Tasks.Task.CancellationCleanupLogic():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConfigureAwait" uniqueID="ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable">
				<signature>System.Threading.Tasks.Task.ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWithCore" uniqueID="ContinueWithCore(System.Threading.Tasks.Task;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions):System.Void">
				<signature>System.Threading.Tasks.Task.ContinueWithCore(System.Threading.Tasks.Task;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateReplicaTask" uniqueID="CreateReplicaTask(System.Action&lt;System.Object&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.Tasks.TaskScheduler;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.CreateReplicaTask(System.Action&lt;System.Object&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.Tasks.TaskScheduler;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Threading.Tasks.Task.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DisregardChild" uniqueID="DisregardChild():System.Void">
				<signature>System.Threading.Tasks.Task.DisregardChild():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureContingentPropertiesInitialized" uniqueID="EnsureContingentPropertiesInitialized(System.Boolean):System.Threading.Tasks.Task+ContingentProperties">
				<signature>System.Threading.Tasks.Task.EnsureContingentPropertiesInitialized(System.Boolean):System.Threading.Tasks.Task+ContingentProperties</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureContingentPropertiesInitializedCore" uniqueID="EnsureContingentPropertiesInitializedCore(System.Boolean):System.Threading.Tasks.Task+ContingentProperties">
				<signature>System.Threading.Tasks.Task.EnsureContingentPropertiesInitializedCore(System.Boolean):System.Threading.Tasks.Task+ContingentProperties</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Execute" uniqueID="Execute():System.Void">
				<signature>System.Threading.Tasks.Task.Execute():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteEntry" uniqueID="ExecuteEntry(System.Boolean):System.Boolean">
				<signature>System.Threading.Tasks.Task.ExecuteEntry(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ExecuteWithThreadLocal" uniqueID="ExecuteWithThreadLocal(System.Threading.Tasks.Task):System.Void">
				<signature>System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Finish" uniqueID="Finish(System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task.Finish(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinishContinuations" uniqueID="FinishContinuations():System.Void">
				<signature>System.Threading.Tasks.Task.FinishContinuations():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinishStageThree" uniqueID="FinishStageThree():System.Void">
				<signature>System.Threading.Tasks.Task.FinishStageThree():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinishStageTwo" uniqueID="FinishStageTwo():System.Void">
				<signature>System.Threading.Tasks.Task.FinishStageTwo():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinishThreadAbortedTask" uniqueID="FinishThreadAbortedTask(System.Boolean;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task.FinishThreadAbortedTask(System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FireTaskScheduledIfNeeded" uniqueID="FireTaskScheduledIfNeeded(System.Threading.Tasks.TaskScheduler):System.Boolean">
				<signature>System.Threading.Tasks.Task.FireTaskScheduledIfNeeded(System.Threading.Tasks.TaskScheduler):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter">
				<signature>System.Threading.Tasks.Task.GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCancellationExceptionDispatchInfo" uniqueID="GetCancellationExceptionDispatchInfo():System.Runtime.ExceptionServices.ExceptionDispatchInfo">
				<signature>System.Threading.Tasks.Task.GetCancellationExceptionDispatchInfo():System.Runtime.ExceptionServices.ExceptionDispatchInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDelegateContinuationsForDebugger" uniqueID="GetDelegateContinuationsForDebugger():System.Delegate[]">
				<signature>System.Threading.Tasks.Task.GetDelegateContinuationsForDebugger():System.Delegate[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetExceptionDispatchInfos" uniqueID="GetExceptionDispatchInfos():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;">
				<signature>System.Threading.Tasks.Task.GetExceptionDispatchInfos():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetExceptions" uniqueID="GetExceptions(System.Boolean):System.AggregateException">
				<signature>System.Threading.Tasks.Task.GetExceptions(System.Boolean):System.AggregateException</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleException" uniqueID="HandleException(System.Exception):System.Void">
				<signature>System.Threading.Tasks.Task.HandleException(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvoke" uniqueID="InnerInvoke():System.Void">
				<signature>System.Threading.Tasks.Task.InnerInvoke():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvokeWithArg" uniqueID="InnerInvokeWithArg(System.Threading.Tasks.Task):System.Void">
				<signature>System.Threading.Tasks.Task.InnerInvokeWithArg(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalCancel" uniqueID="InternalCancel(System.Boolean):System.Boolean">
				<signature>System.Threading.Tasks.Task.InternalCancel(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalRunSynchronously" uniqueID="InternalRunSynchronously(System.Threading.Tasks.TaskScheduler;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task.InternalRunSynchronously(System.Threading.Tasks.TaskScheduler;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalWait" uniqueID="InternalWait(System.Int32;System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task.InternalWait(System.Int32;System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="LogFinishCompletionNotification" uniqueID="LogFinishCompletionNotification():System.Void">
				<signature>System.Threading.Tasks.Task.LogFinishCompletionNotification():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MarkStarted" uniqueID="MarkStarted():System.Boolean">
				<signature>System.Threading.Tasks.Task.MarkStarted():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="NotifyDebuggerOfWaitCompletion" uniqueID="NotifyDebuggerOfWaitCompletion():System.Void">
				<signature>System.Threading.Tasks.Task.NotifyDebuggerOfWaitCompletion():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NotifyDebuggerOfWaitCompletionIfNecessary" uniqueID="NotifyDebuggerOfWaitCompletionIfNecessary():System.Boolean">
				<signature>System.Threading.Tasks.Task.NotifyDebuggerOfWaitCompletionIfNecessary():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PossiblyCaptureContext" uniqueID="PossiblyCaptureContext(System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task.PossiblyCaptureContext(System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ProcessChildCompletion" uniqueID="ProcessChildCompletion(System.Threading.Tasks.Task):System.Void">
				<signature>System.Threading.Tasks.Task.ProcessChildCompletion(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RecordInternalCancellationRequest" uniqueID="RecordInternalCancellationRequest():System.Void">
				<signature>System.Threading.Tasks.Task.RecordInternalCancellationRequest():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RecordInternalCancellationRequest" uniqueID="RecordInternalCancellationRequest(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task.RecordInternalCancellationRequest(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RecordInternalCancellationRequest" uniqueID="RecordInternalCancellationRequest(System.Threading.CancellationToken;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task.RecordInternalCancellationRequest(System.Threading.CancellationToken;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveContinuation" uniqueID="RemoveContinuation(System.Object):System.Void">
				<signature>System.Threading.Tasks.Task.RemoveContinuation(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RunSynchronously" uniqueID="RunSynchronously():System.Void">
				<signature>System.Threading.Tasks.Task.RunSynchronously():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RunSynchronously" uniqueID="RunSynchronously(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ScheduleAndStart" uniqueID="ScheduleAndStart(System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task.ScheduleAndStart(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetCancellationAcknowledged" uniqueID="SetCancellationAcknowledged():System.Void">
				<signature>System.Threading.Tasks.Task.SetCancellationAcknowledged():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetContinuationForAwait" uniqueID="SetContinuationForAwait(System.Action;System.Boolean;System.Boolean;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task.SetContinuationForAwait(System.Action;System.Boolean;System.Boolean;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetNotificationForWaitCompletion" uniqueID="SetNotificationForWaitCompletion(System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task.SetNotificationForWaitCompletion(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ShouldReplicate" uniqueID="ShouldReplicate():System.Boolean">
				<signature>System.Threading.Tasks.Task.ShouldReplicate():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SpinThenBlockingWait" uniqueID="SpinThenBlockingWait(System.Int32;System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task.SpinThenBlockingWait(System.Int32;System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SpinWait" uniqueID="SpinWait(System.Int32):System.Boolean">
				<signature>System.Threading.Tasks.Task.SpinWait(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Start" uniqueID="Start():System.Void">
				<signature>System.Threading.Tasks.Task.Start():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Start" uniqueID="Start(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IAsyncResult.get_AsyncWaitHandle" uniqueID="System.IAsyncResult.get_AsyncWaitHandle():System.Threading.WaitHandle">
				<signature>System.Threading.Tasks.Task.System.IAsyncResult.get_AsyncWaitHandle():System.Threading.WaitHandle</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.IAsyncResult.get_CompletedSynchronously" uniqueID="System.IAsyncResult.get_CompletedSynchronously():System.Boolean">
				<signature>System.Threading.Tasks.Task.System.IAsyncResult.get_CompletedSynchronously():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Threading.IThreadPoolWorkItem.ExecuteWorkItem" uniqueID="System.Threading.IThreadPoolWorkItem.ExecuteWorkItem():System.Void">
				<signature>System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Threading.IThreadPoolWorkItem.MarkAborted" uniqueID="System.Threading.IThreadPoolWorkItem.MarkAborted(System.Threading.ThreadAbortException):System.Void">
				<signature>System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.MarkAborted(System.Threading.ThreadAbortException):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task" uniqueID="Task():System.Void">
				<signature>System.Threading.Tasks.Task.Task():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task" uniqueID="Task(System.Action):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Action):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task" uniqueID="Task(System.Action;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Action;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task" uniqueID="Task(System.Action;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Action;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task" uniqueID="Task(System.Action;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Action;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task" uniqueID="Task(System.Action&lt;System.Object&gt;;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Action&lt;System.Object&gt;;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task" uniqueID="Task(System.Action&lt;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Action&lt;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task" uniqueID="Task(System.Action&lt;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Action&lt;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task" uniqueID="Task(System.Action&lt;System.Object&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Action&lt;System.Object&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task" uniqueID="Task(System.Action&lt;System.Object&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Action&lt;System.Object&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task" uniqueID="Task(System.Boolean;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Boolean;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task" uniqueID="Task(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task" uniqueID="Task(System.Object;System.Threading.Tasks.TaskCreationOptions;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task.Task(System.Object;System.Threading.Tasks.TaskCreationOptions;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TaskConstructorCore" uniqueID="TaskConstructorCore(System.Object;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task.TaskConstructorCore(System.Object;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ThrowIfExceptional" uniqueID="ThrowIfExceptional(System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task.ThrowIfExceptional(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UpdateExceptionObservedStatus" uniqueID="UpdateExceptionObservedStatus():System.Void">
				<signature>System.Threading.Tasks.Task.UpdateExceptionObservedStatus():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Wait" uniqueID="Wait():System.Void">
				<signature>System.Threading.Tasks.Task.Wait():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Wait" uniqueID="Wait(System.Int32):System.Boolean">
				<signature>System.Threading.Tasks.Task.Wait(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Wait" uniqueID="Wait(System.Int32;System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task.Wait(System.Int32;System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Wait" uniqueID="Wait(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Wait" uniqueID="Wait(System.TimeSpan):System.Boolean">
				<signature>System.Threading.Tasks.Task.Wait(System.TimeSpan):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WrappedTryRunInline" uniqueID="WrappedTryRunInline():System.Boolean">
				<signature>System.Threading.Tasks.Task.WrappedTryRunInline():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ActiveChildCount" uniqueID="get_ActiveChildCount():System.Int32">
				<signature>System.Threading.Tasks.Task.get_ActiveChildCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AsyncState" uniqueID="get_AsyncState():System.Object">
				<signature>System.Threading.Tasks.Task.get_AsyncState():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CancellationToken" uniqueID="get_CancellationToken():System.Threading.CancellationToken">
				<signature>System.Threading.Tasks.Task.get_CancellationToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CapturedContext" uniqueID="get_CapturedContext():System.Threading.ExecutionContext">
				<signature>System.Threading.Tasks.Task.get_CapturedContext():System.Threading.ExecutionContext</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CompletedEvent" uniqueID="get_CompletedEvent():System.Threading.ManualResetEventSlim">
				<signature>System.Threading.Tasks.Task.get_CompletedEvent():System.Threading.ManualResetEventSlim</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationOptions" uniqueID="get_CreationOptions():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.Task.get_CreationOptions():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayMethodDescription" uniqueID="get_DebuggerDisplayMethodDescription():System.String">
				<signature>System.Threading.Tasks.Task.get_DebuggerDisplayMethodDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Exception" uniqueID="get_Exception():System.AggregateException">
				<signature>System.Threading.Tasks.Task.get_Exception():System.AggregateException</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ExceptionRecorded" uniqueID="get_ExceptionRecorded():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_ExceptionRecorded():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ExecutingTaskScheduler" uniqueID="get_ExecutingTaskScheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.Task.get_ExecutingTaskScheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HandedOverChildReplica" uniqueID="get_HandedOverChildReplica():System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task.get_HandedOverChildReplica():System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Id" uniqueID="get_Id():System.Int32">
				<signature>System.Threading.Tasks.Task.get_Id():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCanceled" uniqueID="get_IsCanceled():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsCanceled():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsCancellationAcknowledged" uniqueID="get_IsCancellationAcknowledged():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsCancellationAcknowledged():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsCancellationRequested" uniqueID="get_IsCancellationRequested():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsCancellationRequested():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsChildReplica" uniqueID="get_IsChildReplica():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsChildReplica():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCompleted" uniqueID="get_IsCompleted():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsCompleted():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsDelegateInvoked" uniqueID="get_IsDelegateInvoked():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsDelegateInvoked():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsExceptionObservedByParent" uniqueID="get_IsExceptionObservedByParent():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsExceptionObservedByParent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFaulted" uniqueID="get_IsFaulted():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsFaulted():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsRanToCompletion" uniqueID="get_IsRanToCompletion():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsRanToCompletion():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsSelfReplicatingRoot" uniqueID="get_IsSelfReplicatingRoot():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsSelfReplicatingRoot():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsWaitNotificationEnabled" uniqueID="get_IsWaitNotificationEnabled():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsWaitNotificationEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsWaitNotificationEnabledOrNotRanToCompletion" uniqueID="get_IsWaitNotificationEnabledOrNotRanToCompletion():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_IsWaitNotificationEnabledOrNotRanToCompletion():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Options" uniqueID="get_Options():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.Task.get_Options():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SavedStateForNextReplica" uniqueID="get_SavedStateForNextReplica():System.Object">
				<signature>System.Threading.Tasks.Task.get_SavedStateForNextReplica():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SavedStateFromPreviousReplica" uniqueID="get_SavedStateFromPreviousReplica():System.Object">
				<signature>System.Threading.Tasks.Task.get_SavedStateFromPreviousReplica():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ShouldNotifyDebuggerOfWaitCompletion" uniqueID="get_ShouldNotifyDebuggerOfWaitCompletion():System.Boolean">
				<signature>System.Threading.Tasks.Task.get_ShouldNotifyDebuggerOfWaitCompletion():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Status" uniqueID="get_Status():System.Threading.Tasks.TaskStatus">
				<signature>System.Threading.Tasks.Task.get_Status():System.Threading.Tasks.TaskStatus</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_CapturedContext" uniqueID="set_CapturedContext(System.Threading.ExecutionContext):System.Void">
				<signature>System.Threading.Tasks.Task.set_CapturedContext(System.Threading.ExecutionContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_HandedOverChildReplica" uniqueID="set_HandedOverChildReplica(System.Threading.Tasks.Task):System.Void">
				<signature>System.Threading.Tasks.Task.set_HandedOverChildReplica(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SavedStateForNextReplica" uniqueID="set_SavedStateForNextReplica(System.Object):System.Void">
				<signature>System.Threading.Tasks.Task.set_SavedStateForNextReplica(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_SavedStateFromPreviousReplica" uniqueID="set_SavedStateFromPreviousReplica(System.Object):System.Void">
				<signature>System.Threading.Tasks.Task.set_SavedStateFromPreviousReplica(System.Object):System.Void</signature>
			</method>
		</class>
		<class name="Task+ContingentProperties" uniqueID="System.Threading.Tasks.Task+ContingentProperties">
			<method accessibility="Protected" methodKind="Member" name="DeregisterCancellationCallback" uniqueID="DeregisterCancellationCallback():System.Void">
				<signature>System.Threading.Tasks.Task+ContingentProperties.DeregisterCancellationCallback():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCompleted" uniqueID="SetCompleted():System.Void">
				<signature>System.Threading.Tasks.Task+ContingentProperties.SetCompleted():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task+ContingentProperties" uniqueID="Task+ContingentProperties():System.Void">
				<signature>System.Threading.Tasks.Task+ContingentProperties.Task+ContingentProperties():System.Void</signature>
			</method>
		</class>
		<class name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__26" uniqueID="&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Factory" uniqueID="get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConfigureAwait" uniqueID="ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DangerousSetResult" uniqueID="DangerousSetResult(System.Data.SqlClient.SqlDataReader):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.DangerousSetResult(System.Data.SqlClient.SqlDataReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetResultCore" uniqueID="GetResultCore(System.Boolean):System.Data.SqlClient.SqlDataReader">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.GetResultCore(System.Boolean):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvoke" uniqueID="InnerInvoke():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.InnerInvoke():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Boolean;System.Data.SqlClient.SqlDataReader;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Boolean;System.Data.SqlClient.SqlDataReader;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Data.SqlClient.SqlDataReader):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Data.SqlClient.SqlDataReader):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.Task&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.TrySetException(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.Data.SqlClient.SqlDataReader):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.TrySetResult(System.Data.SqlClient.SqlDataReader):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayMethodDescription" uniqueID="get_DebuggerDisplayMethodDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.get_DebuggerDisplayMethodDescription():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayResultDescription" uniqueID="get_DebuggerDisplayResultDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.get_DebuggerDisplayResultDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Result" uniqueID="get_Result():System.Data.SqlClient.SqlDataReader">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.get_Result():System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ResultOnSuccess" uniqueID="get_ResultOnSuccess():System.Data.SqlClient.SqlDataReader">
				<signature>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;.get_ResultOnSuccess():System.Data.SqlClient.SqlDataReader</signature>
			</method>
		</class>
		<class name="Task&lt;System.Object&gt;" uniqueID="System.Threading.Tasks.Task&lt;System.Object&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__26" uniqueID="&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Factory" uniqueID="get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConfigureAwait" uniqueID="ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Object&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DangerousSetResult" uniqueID="DangerousSetResult(System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.DangerousSetResult(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetResultCore" uniqueID="GetResultCore(System.Boolean):System.Object">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.GetResultCore(System.Boolean):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvoke" uniqueID="InnerInvoke():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.InnerInvoke():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Boolean;System.Object;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Boolean;System.Object;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Func&lt;System.Object;System.Object&gt;;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Func&lt;System.Object;System.Object&gt;;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Func&lt;System.Object&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Object&gt;" uniqueID="Task&lt;System.Object&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.Task&lt;System.Object&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.TrySetException(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.TrySetResult(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayMethodDescription" uniqueID="get_DebuggerDisplayMethodDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.get_DebuggerDisplayMethodDescription():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayResultDescription" uniqueID="get_DebuggerDisplayResultDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.get_DebuggerDisplayResultDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Result" uniqueID="get_Result():System.Object">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.get_Result():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ResultOnSuccess" uniqueID="get_ResultOnSuccess():System.Object">
				<signature>System.Threading.Tasks.Task&lt;System.Object&gt;.get_ResultOnSuccess():System.Object</signature>
			</method>
		</class>
		<class name="Task&lt;System.Boolean&gt;" uniqueID="System.Threading.Tasks.Task&lt;System.Boolean&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__26" uniqueID="&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Boolean&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Boolean&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Factory" uniqueID="get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConfigureAwait" uniqueID="ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DangerousSetResult" uniqueID="DangerousSetResult(System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.DangerousSetResult(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetResultCore" uniqueID="GetResultCore(System.Boolean):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.GetResultCore(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvoke" uniqueID="InnerInvoke():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.InnerInvoke():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Boolean):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Boolean;System.Boolean;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Boolean;System.Boolean;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Func&lt;System.Boolean&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Func&lt;System.Object;System.Boolean&gt;;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Func&lt;System.Object;System.Boolean&gt;;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Boolean&gt;" uniqueID="Task&lt;System.Boolean&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.Task&lt;System.Boolean&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.TrySetException(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.Boolean):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.TrySetResult(System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayMethodDescription" uniqueID="get_DebuggerDisplayMethodDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.get_DebuggerDisplayMethodDescription():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayResultDescription" uniqueID="get_DebuggerDisplayResultDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.get_DebuggerDisplayResultDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Result" uniqueID="get_Result():System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.get_Result():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ResultOnSuccess" uniqueID="get_ResultOnSuccess():System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Boolean&gt;.get_ResultOnSuccess():System.Boolean</signature>
			</method>
		</class>
		<class name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__26" uniqueID="&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Factory" uniqueID="get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConfigureAwait" uniqueID="ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DangerousSetResult" uniqueID="DangerousSetResult(System.Data.Common.DbDataReader):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.DangerousSetResult(System.Data.Common.DbDataReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetResultCore" uniqueID="GetResultCore(System.Boolean):System.Data.Common.DbDataReader">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.GetResultCore(System.Boolean):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvoke" uniqueID="InnerInvoke():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.InnerInvoke():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Boolean;System.Data.Common.DbDataReader;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Boolean;System.Data.Common.DbDataReader;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Data.Common.DbDataReader):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Data.Common.DbDataReader):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Data.Common.DbDataReader&gt;" uniqueID="Task&lt;System.Data.Common.DbDataReader&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.Task&lt;System.Data.Common.DbDataReader&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.TrySetException(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.Data.Common.DbDataReader):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.TrySetResult(System.Data.Common.DbDataReader):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayMethodDescription" uniqueID="get_DebuggerDisplayMethodDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.get_DebuggerDisplayMethodDescription():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayResultDescription" uniqueID="get_DebuggerDisplayResultDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.get_DebuggerDisplayResultDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Result" uniqueID="get_Result():System.Data.Common.DbDataReader">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.get_Result():System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ResultOnSuccess" uniqueID="get_ResultOnSuccess():System.Data.Common.DbDataReader">
				<signature>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;.get_ResultOnSuccess():System.Data.Common.DbDataReader</signature>
			</method>
		</class>
		<class name="Task&lt;System.Int32&gt;" uniqueID="System.Threading.Tasks.Task&lt;System.Int32&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__26" uniqueID="&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Int32&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Int32&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Factory" uniqueID="get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConfigureAwait" uniqueID="ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Int32&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DangerousSetResult" uniqueID="DangerousSetResult(System.Int32):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.DangerousSetResult(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetResultCore" uniqueID="GetResultCore(System.Boolean):System.Int32">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.GetResultCore(System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvoke" uniqueID="InnerInvoke():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.InnerInvoke():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Boolean;System.Int32;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Boolean;System.Int32;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Func&lt;System.Int32&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Func&lt;System.Object;System.Int32&gt;;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Func&lt;System.Object;System.Int32&gt;;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Int32):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Int32&gt;" uniqueID="Task&lt;System.Int32&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.Task&lt;System.Int32&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.TrySetException(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.Int32):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.TrySetResult(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayMethodDescription" uniqueID="get_DebuggerDisplayMethodDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.get_DebuggerDisplayMethodDescription():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayResultDescription" uniqueID="get_DebuggerDisplayResultDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.get_DebuggerDisplayResultDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Result" uniqueID="get_Result():System.Int32">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.get_Result():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ResultOnSuccess" uniqueID="get_ResultOnSuccess():System.Int32">
				<signature>System.Threading.Tasks.Task&lt;System.Int32&gt;.get_ResultOnSuccess():System.Int32</signature>
			</method>
		</class>
		<class name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__26" uniqueID="&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Factory" uniqueID="get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConfigureAwait" uniqueID="ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DangerousSetResult" uniqueID="DangerousSetResult(System.Threading.Tasks.Task):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.DangerousSetResult(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetResultCore" uniqueID="GetResultCore(System.Boolean):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.GetResultCore(System.Boolean):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvoke" uniqueID="InnerInvoke():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.InnerInvoke():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Boolean;System.Threading.Tasks.Task;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Boolean;System.Threading.Tasks.Task;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Func&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.Task):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.Task&lt;System.Threading.Tasks.Task&gt;(System.Threading.Tasks.Task):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.TrySetException(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.Threading.Tasks.Task):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.TrySetResult(System.Threading.Tasks.Task):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayMethodDescription" uniqueID="get_DebuggerDisplayMethodDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.get_DebuggerDisplayMethodDescription():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayResultDescription" uniqueID="get_DebuggerDisplayResultDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.get_DebuggerDisplayResultDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Result" uniqueID="get_Result():System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.get_Result():System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ResultOnSuccess" uniqueID="get_ResultOnSuccess():System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;.get_ResultOnSuccess():System.Threading.Tasks.Task</signature>
			</method>
		</class>
		<class name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__26" uniqueID="&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Factory" uniqueID="get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConfigureAwait" uniqueID="ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DangerousSetResult" uniqueID="DangerousSetResult(System.Threading.Tasks.Task[]):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.DangerousSetResult(System.Threading.Tasks.Task[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetResultCore" uniqueID="GetResultCore(System.Boolean):System.Threading.Tasks.Task[]">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.GetResultCore(System.Boolean):System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvoke" uniqueID="InnerInvoke():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.InnerInvoke():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Boolean;System.Threading.Tasks.Task[];System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Boolean;System.Threading.Tasks.Task[];System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="Task&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.Task[]):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.Task&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.Task[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.TrySetException(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.Threading.Tasks.Task[]):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.TrySetResult(System.Threading.Tasks.Task[]):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayMethodDescription" uniqueID="get_DebuggerDisplayMethodDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.get_DebuggerDisplayMethodDescription():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayResultDescription" uniqueID="get_DebuggerDisplayResultDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.get_DebuggerDisplayResultDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Result" uniqueID="get_Result():System.Threading.Tasks.Task[]">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.get_Result():System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ResultOnSuccess" uniqueID="get_ResultOnSuccess():System.Threading.Tasks.Task[]">
				<signature>System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;.get_ResultOnSuccess():System.Threading.Tasks.Task[]</signature>
			</method>
		</class>
		<class name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;.cctor&gt;b__26" uniqueID="&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.&lt;.cctor&gt;b__26(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="StartNew" uniqueID="StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.StartNew(System.Threading.Tasks.Task;System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_Factory" uniqueID="get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.get_Factory():System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConfigureAwait" uniqueID="ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ConfigureAwait(System.Boolean):System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Object&gt;;System.Object;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContinueWith" uniqueID="ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.ContinueWith(System.Action&lt;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;&gt;;System.Threading.Tasks.TaskScheduler;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.StackCrawlMark):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DangerousSetResult" uniqueID="DangerousSetResult(System.Xml.XmlReader):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.DangerousSetResult(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAwaiter" uniqueID="GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.GetAwaiter():System.Runtime.CompilerServices.TaskAwaiter&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetResultCore" uniqueID="GetResultCore(System.Boolean):System.Xml.XmlReader">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.GetResultCore(System.Boolean):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InnerInvoke" uniqueID="InnerInvoke():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.InnerInvoke():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;():System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Boolean;System.Xml.XmlReader;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Boolean;System.Xml.XmlReader;System.Threading.Tasks.TaskCreationOptions;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Delegate;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.Tasks.Task;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.InternalTaskOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Task&lt;System.Xml.XmlReader&gt;" uniqueID="Task&lt;System.Xml.XmlReader&gt;(System.Xml.XmlReader):System.Void">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.Task&lt;System.Xml.XmlReader&gt;(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.TrySetCanceled(System.Threading.CancellationToken;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.TrySetException(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.Xml.XmlReader):System.Boolean">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.TrySetResult(System.Xml.XmlReader):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayMethodDescription" uniqueID="get_DebuggerDisplayMethodDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.get_DebuggerDisplayMethodDescription():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DebuggerDisplayResultDescription" uniqueID="get_DebuggerDisplayResultDescription():System.String">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.get_DebuggerDisplayResultDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Result" uniqueID="get_Result():System.Xml.XmlReader">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.get_Result():System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ResultOnSuccess" uniqueID="get_ResultOnSuccess():System.Xml.XmlReader">
				<signature>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;.get_ResultOnSuccess():System.Xml.XmlReader</signature>
			</method>
		</class>
		<class name="TaskFactory&lt;System.Boolean&gt;" uniqueID="System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1d" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1e" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__21" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__22" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Boolean">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAllImpl" uniqueID="ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Boolean&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Boolean&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAnyImpl" uniqueID="ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Boolean&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Boolean&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateCanceledTask" uniqueID="CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromAsyncCoreLogic" uniqueID="FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Boolean&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Boolean&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Boolean&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Boolean&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Boolean&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Boolean&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Boolean&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Boolean&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Boolean&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Boolean&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Boolean&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Boolean&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Boolean&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Boolean&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Boolean&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Boolean&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Boolean&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Boolean&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Boolean&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Boolean&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDefaultScheduler" uniqueID="GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Boolean&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.StartNew(System.Func&lt;System.Boolean&gt;):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Boolean&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.StartNew(System.Func&lt;System.Boolean&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Boolean&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.StartNew(System.Func&lt;System.Boolean&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Boolean&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.StartNew(System.Func&lt;System.Boolean&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Boolean&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.StartNew(System.Func&lt;System.Object;System.Boolean&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.StartNew(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.StartNew(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.StartNew(System.Func&lt;System.Object;System.Boolean&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Boolean&gt;" uniqueID="TaskFactory&lt;System.Boolean&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.TaskFactory&lt;System.Boolean&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Boolean&gt;" uniqueID="TaskFactory&lt;System.Boolean&gt;(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.TaskFactory&lt;System.Boolean&gt;(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Boolean&gt;" uniqueID="TaskFactory&lt;System.Boolean&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.TaskFactory&lt;System.Boolean&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Boolean&gt;" uniqueID="TaskFactory&lt;System.Boolean&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.TaskFactory&lt;System.Boolean&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Boolean&gt;" uniqueID="TaskFactory&lt;System.Boolean&gt;(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.TaskFactory&lt;System.Boolean&gt;(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CancellationToken" uniqueID="get_CancellationToken():System.Threading.CancellationToken">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.get_CancellationToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContinuationOptions" uniqueID="get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationOptions" uniqueID="get_CreationOptions():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.get_CreationOptions():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DefaultScheduler" uniqueID="get_DefaultScheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.get_DefaultScheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scheduler" uniqueID="get_Scheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Boolean&gt;.get_Scheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
		</class>
		<class name="TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
			<method accessibility="Public" methodKind="Member" name="SetCanceled" uniqueID="SetCanceled():System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.SetCanceled():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetException" uniqueID="SetException(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.SetException(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetException" uniqueID="SetException(System.Exception):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.SetException(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetResult" uniqueID="SetResult(System.Data.ProviderBase.DbConnectionInternal):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.SetResult(System.Data.ProviderBase.DbConnectionInternal):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SpinUntilCompleted" uniqueID="SpinUntilCompleted():System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.SpinUntilCompleted():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled():System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TrySetCanceled():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TrySetException(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Collections.Generic.IEnumerable&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;):System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TrySetException(System.Collections.Generic.IEnumerable&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Exception):System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TrySetException(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.Data.ProviderBase.DbConnectionInternal):System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TrySetResult(System.Data.ProviderBase.DbConnectionInternal):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Task" uniqueID="get_Task():System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_Task():System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
		</class>
		<class name="TaskCompletionSource&lt;System.Object&gt;" uniqueID="System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;">
			<method accessibility="Public" methodKind="Member" name="SetCanceled" uniqueID="SetCanceled():System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.SetCanceled():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetException" uniqueID="SetException(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.SetException(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetException" uniqueID="SetException(System.Exception):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.SetException(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetResult" uniqueID="SetResult(System.Object):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.SetResult(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SpinUntilCompleted" uniqueID="SpinUntilCompleted():System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.SpinUntilCompleted():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskCompletionSource&lt;System.Object&gt;" uniqueID="TaskCompletionSource&lt;System.Object&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.TaskCompletionSource&lt;System.Object&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskCompletionSource&lt;System.Object&gt;" uniqueID="TaskCompletionSource&lt;System.Object&gt;(System.Object):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.TaskCompletionSource&lt;System.Object&gt;(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskCompletionSource&lt;System.Object&gt;" uniqueID="TaskCompletionSource&lt;System.Object&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.TaskCompletionSource&lt;System.Object&gt;(System.Object;System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskCompletionSource&lt;System.Object&gt;" uniqueID="TaskCompletionSource&lt;System.Object&gt;(System.Threading.Tasks.TaskCreationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.TaskCompletionSource&lt;System.Object&gt;(System.Threading.Tasks.TaskCreationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled():System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.TrySetCanceled():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetCanceled" uniqueID="TrySetCanceled(System.Threading.CancellationToken):System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.TrySetCanceled(System.Threading.CancellationToken):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.TrySetException(System.Collections.Generic.IEnumerable&lt;System.Exception&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Collections.Generic.IEnumerable&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;):System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.TrySetException(System.Collections.Generic.IEnumerable&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrySetException" uniqueID="TrySetException(System.Exception):System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.TrySetException(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TrySetResult" uniqueID="TrySetResult(System.Object):System.Boolean">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.TrySetResult(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Task" uniqueID="get_Task():System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskCompletionSource&lt;System.Object&gt;.get_Task():System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
		</class>
		<class name="TaskFactory&lt;System.Data.Common.DbDataReader&gt;" uniqueID="System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1d" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.Common.DbDataReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1e" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.Common.DbDataReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__21" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.Common.DbDataReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__22" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.Common.DbDataReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAllImpl" uniqueID="ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.Common.DbDataReader&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.Common.DbDataReader&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAnyImpl" uniqueID="ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.Common.DbDataReader&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.Common.DbDataReader&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateCanceledTask" uniqueID="CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromAsyncCoreLogic" uniqueID="FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.Common.DbDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.Common.DbDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.Common.DbDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.Common.DbDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDefaultScheduler" uniqueID="GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.Common.DbDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.StartNew(System.Func&lt;System.Data.Common.DbDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.StartNew(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.StartNew(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.StartNew(System.Func&lt;System.Data.Common.DbDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.StartNew(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.StartNew(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.StartNew(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.StartNew(System.Func&lt;System.Object;System.Data.Common.DbDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.Common.DbDataReader&gt;" uniqueID="TaskFactory&lt;System.Data.Common.DbDataReader&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.TaskFactory&lt;System.Data.Common.DbDataReader&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.Common.DbDataReader&gt;" uniqueID="TaskFactory&lt;System.Data.Common.DbDataReader&gt;(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.TaskFactory&lt;System.Data.Common.DbDataReader&gt;(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.Common.DbDataReader&gt;" uniqueID="TaskFactory&lt;System.Data.Common.DbDataReader&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.TaskFactory&lt;System.Data.Common.DbDataReader&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.Common.DbDataReader&gt;" uniqueID="TaskFactory&lt;System.Data.Common.DbDataReader&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.TaskFactory&lt;System.Data.Common.DbDataReader&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.Common.DbDataReader&gt;" uniqueID="TaskFactory&lt;System.Data.Common.DbDataReader&gt;(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.TaskFactory&lt;System.Data.Common.DbDataReader&gt;(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CancellationToken" uniqueID="get_CancellationToken():System.Threading.CancellationToken">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.get_CancellationToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContinuationOptions" uniqueID="get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationOptions" uniqueID="get_CreationOptions():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.get_CreationOptions():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DefaultScheduler" uniqueID="get_DefaultScheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.get_DefaultScheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scheduler" uniqueID="get_Scheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.Common.DbDataReader&gt;.get_Scheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
		</class>
		<class name="TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1d" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1e" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__21" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__22" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.ProviderBase.DbConnectionInternal">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.ProviderBase.DbConnectionInternal</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAllImpl" uniqueID="ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.ProviderBase.DbConnectionInternal&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.ProviderBase.DbConnectionInternal&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAnyImpl" uniqueID="ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateCanceledTask" uniqueID="CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromAsyncCoreLogic" uniqueID="FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.ProviderBase.DbConnectionInternal&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.ProviderBase.DbConnectionInternal&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDefaultScheduler" uniqueID="GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.StartNew(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.StartNew(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.StartNew(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.StartNew(System.Func&lt;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.StartNew(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.StartNew(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.StartNew(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.StartNew(System.Func&lt;System.Object;System.Data.ProviderBase.DbConnectionInternal&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.ProviderBase.DbConnectionInternal&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;" uniqueID="TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CancellationToken" uniqueID="get_CancellationToken():System.Threading.CancellationToken">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_CancellationToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContinuationOptions" uniqueID="get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationOptions" uniqueID="get_CreationOptions():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_CreationOptions():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DefaultScheduler" uniqueID="get_DefaultScheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_DefaultScheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scheduler" uniqueID="get_Scheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.ProviderBase.DbConnectionInternal&gt;.get_Scheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
		</class>
		<class name="TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1d" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.SqlClient.SqlDataReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1e" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.SqlClient.SqlDataReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__21" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.SqlClient.SqlDataReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__22" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.SqlClient.SqlDataReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Data.SqlClient.SqlDataReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAllImpl" uniqueID="ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.SqlClient.SqlDataReader&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.SqlClient.SqlDataReader&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAnyImpl" uniqueID="ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.SqlClient.SqlDataReader&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.SqlClient.SqlDataReader&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateCanceledTask" uniqueID="CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromAsyncCoreLogic" uniqueID="FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.SqlClient.SqlDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.SqlClient.SqlDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.SqlClient.SqlDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.SqlClient.SqlDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDefaultScheduler" uniqueID="GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.StartNew(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.StartNew(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.StartNew(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.StartNew(System.Func&lt;System.Data.SqlClient.SqlDataReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.StartNew(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.StartNew(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.StartNew(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.StartNew(System.Func&lt;System.Object;System.Data.SqlClient.SqlDataReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;" uniqueID="TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CancellationToken" uniqueID="get_CancellationToken():System.Threading.CancellationToken">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.get_CancellationToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContinuationOptions" uniqueID="get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationOptions" uniqueID="get_CreationOptions():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.get_CreationOptions():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DefaultScheduler" uniqueID="get_DefaultScheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.get_DefaultScheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scheduler" uniqueID="get_Scheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Data.SqlClient.SqlDataReader&gt;.get_Scheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
		</class>
		<class name="TaskFactory&lt;System.Int32&gt;" uniqueID="System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1d" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Int32">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1e" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Int32">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__21" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Int32">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__22" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Int32">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAllImpl" uniqueID="ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Int32&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Int32&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAnyImpl" uniqueID="ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Int32&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Int32&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateCanceledTask" uniqueID="CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromAsyncCoreLogic" uniqueID="FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Int32&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Int32&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Int32&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Int32&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Int32&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Int32&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Int32&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Int32&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Int32&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Int32&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Int32&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Int32&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Int32&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Int32&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Int32&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Int32&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Int32&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Int32&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Int32&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Int32&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDefaultScheduler" uniqueID="GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Int32&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.StartNew(System.Func&lt;System.Int32&gt;):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Int32&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.StartNew(System.Func&lt;System.Int32&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Int32&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.StartNew(System.Func&lt;System.Int32&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Int32&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.StartNew(System.Func&lt;System.Int32&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Int32&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.StartNew(System.Func&lt;System.Object;System.Int32&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.StartNew(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.StartNew(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.StartNew(System.Func&lt;System.Object;System.Int32&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Int32&gt;" uniqueID="TaskFactory&lt;System.Int32&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.TaskFactory&lt;System.Int32&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Int32&gt;" uniqueID="TaskFactory&lt;System.Int32&gt;(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.TaskFactory&lt;System.Int32&gt;(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Int32&gt;" uniqueID="TaskFactory&lt;System.Int32&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.TaskFactory&lt;System.Int32&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Int32&gt;" uniqueID="TaskFactory&lt;System.Int32&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.TaskFactory&lt;System.Int32&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Int32&gt;" uniqueID="TaskFactory&lt;System.Int32&gt;(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.TaskFactory&lt;System.Int32&gt;(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CancellationToken" uniqueID="get_CancellationToken():System.Threading.CancellationToken">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.get_CancellationToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContinuationOptions" uniqueID="get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationOptions" uniqueID="get_CreationOptions():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.get_CreationOptions():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DefaultScheduler" uniqueID="get_DefaultScheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.get_DefaultScheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scheduler" uniqueID="get_Scheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Int32&gt;.get_Scheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
		</class>
		<class name="TaskFactory&lt;System.Object&gt;" uniqueID="System.Threading.Tasks.TaskFactory&lt;System.Object&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1d" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Object">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1e" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Object">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__21" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Object">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__22" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Object">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAllImpl" uniqueID="ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Object&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Object&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAnyImpl" uniqueID="ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateCanceledTask" uniqueID="CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromAsyncCoreLogic" uniqueID="FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Object&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Object&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Object&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Object&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Object&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Object&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Object&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Object&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Object&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Object&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Object&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Object&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Object&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Object&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Object&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDefaultScheduler" uniqueID="GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Object&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.StartNew(System.Func&lt;System.Object;System.Object&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.StartNew(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.StartNew(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.StartNew(System.Func&lt;System.Object;System.Object&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.StartNew(System.Func&lt;System.Object&gt;):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.StartNew(System.Func&lt;System.Object&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.StartNew(System.Func&lt;System.Object&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.StartNew(System.Func&lt;System.Object&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Object&gt;" uniqueID="TaskFactory&lt;System.Object&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.TaskFactory&lt;System.Object&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Object&gt;" uniqueID="TaskFactory&lt;System.Object&gt;(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.TaskFactory&lt;System.Object&gt;(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Object&gt;" uniqueID="TaskFactory&lt;System.Object&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.TaskFactory&lt;System.Object&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Object&gt;" uniqueID="TaskFactory&lt;System.Object&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.TaskFactory&lt;System.Object&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Object&gt;" uniqueID="TaskFactory&lt;System.Object&gt;(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.TaskFactory&lt;System.Object&gt;(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CancellationToken" uniqueID="get_CancellationToken():System.Threading.CancellationToken">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.get_CancellationToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContinuationOptions" uniqueID="get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationOptions" uniqueID="get_CreationOptions():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.get_CreationOptions():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DefaultScheduler" uniqueID="get_DefaultScheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.get_DefaultScheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scheduler" uniqueID="get_Scheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Object&gt;.get_Scheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
		</class>
		<class name="TaskFactory&lt;System.String&gt;" uniqueID="System.Threading.Tasks.TaskFactory&lt;System.String&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1d" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.String">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1e" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.String">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__21" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.String">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__22" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.String">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAllImpl" uniqueID="ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.String&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.String&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAnyImpl" uniqueID="ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.String&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.String&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateCanceledTask" uniqueID="CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromAsyncCoreLogic" uniqueID="FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.String&gt;;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.String&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.String&gt;):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.String&gt;):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.String&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.String&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.String&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.String&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.String&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.String&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.String&gt;):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.String&gt;):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.String&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.String&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.String&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.String&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.String&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.String&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Object):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Object):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.String&gt;):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.String&gt;):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.String&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDefaultScheduler" uniqueID="GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.String&gt;;System.Object):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.StartNew(System.Func&lt;System.Object;System.String&gt;;System.Object):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.StartNew(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.StartNew(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.StartNew(System.Func&lt;System.Object;System.String&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.String&gt;):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.StartNew(System.Func&lt;System.String&gt;):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.String&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.StartNew(System.Func&lt;System.String&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.String&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.StartNew(System.Func&lt;System.String&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.String&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.String&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.StartNew(System.Func&lt;System.String&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.String&gt;" uniqueID="TaskFactory&lt;System.String&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.TaskFactory&lt;System.String&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.String&gt;" uniqueID="TaskFactory&lt;System.String&gt;(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.TaskFactory&lt;System.String&gt;(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.String&gt;" uniqueID="TaskFactory&lt;System.String&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.TaskFactory&lt;System.String&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.String&gt;" uniqueID="TaskFactory&lt;System.String&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.TaskFactory&lt;System.String&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.String&gt;" uniqueID="TaskFactory&lt;System.String&gt;(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.TaskFactory&lt;System.String&gt;(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CancellationToken" uniqueID="get_CancellationToken():System.Threading.CancellationToken">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.get_CancellationToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContinuationOptions" uniqueID="get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationOptions" uniqueID="get_CreationOptions():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.get_CreationOptions():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DefaultScheduler" uniqueID="get_DefaultScheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.get_DefaultScheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scheduler" uniqueID="get_Scheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.String&gt;.get_Scheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
		</class>
		<class name="TaskFactory&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1d" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task[]">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1e" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task[]">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__21" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task[]">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__22" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task[]">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Threading.Tasks.Task[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAllImpl" uniqueID="ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task[]&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task[]&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAnyImpl" uniqueID="ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task[]&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task[]&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateCanceledTask" uniqueID="CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromAsyncCoreLogic" uniqueID="FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task[]&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task[]&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task[]&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task[]&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDefaultScheduler" uniqueID="GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.StartNew(System.Func&lt;System.Object;System.Threading.Tasks.Task[]&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Threading.Tasks.Task[]&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.StartNew(System.Func&lt;System.Threading.Tasks.Task[]&gt;):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.StartNew(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.StartNew(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.StartNew(System.Func&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="TaskFactory&lt;System.Threading.Tasks.Task[]&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="TaskFactory&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="TaskFactory&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="TaskFactory&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Threading.Tasks.Task[]&gt;" uniqueID="TaskFactory&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CancellationToken" uniqueID="get_CancellationToken():System.Threading.CancellationToken">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.get_CancellationToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContinuationOptions" uniqueID="get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationOptions" uniqueID="get_CreationOptions():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.get_CreationOptions():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DefaultScheduler" uniqueID="get_DefaultScheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.get_DefaultScheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scheduler" uniqueID="get_Scheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Threading.Tasks.Task[]&gt;.get_Scheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
		</class>
		<class name="TaskFactory&lt;System.Xml.XmlReader&gt;" uniqueID="System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;">
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1d" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Xml.XmlReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.&lt;ContinueWhenAllImpl&gt;b__1d(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAllImpl&gt;b__1e" uniqueID="&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Xml.XmlReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.&lt;ContinueWhenAllImpl&gt;b__1e(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task[]&gt;;System.Object):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__21" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Xml.XmlReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.&lt;ContinueWhenAnyImpl&gt;b__21(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;ContinueWhenAnyImpl&gt;b__22" uniqueID="&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Xml.XmlReader">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.&lt;ContinueWhenAnyImpl&gt;b__22(System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;;System.Object):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAllImpl" uniqueID="ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Xml.XmlReader&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.ContinueWhenAllImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Xml.XmlReader&gt;;System.Action&lt;System.Threading.Tasks.Task[]&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ContinueWhenAnyImpl" uniqueID="ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Xml.XmlReader&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.ContinueWhenAnyImpl(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Xml.XmlReader&gt;;System.Action&lt;System.Threading.Tasks.Task&gt;;System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateCanceledTask" uniqueID="CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="FromAsyncCoreLogic" uniqueID="FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Boolean):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.FromAsyncCoreLogic(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.FromAsyncImpl(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="FromAsyncImpl" uniqueID="FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.FromAsyncImpl(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Action&lt;System.IAsyncResult&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler;System.Threading.StackCrawlMark):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Xml.XmlReader&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Xml.XmlReader&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Xml.XmlReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Xml.XmlReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Xml.XmlReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Xml.XmlReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAll" uniqueID="ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.ContinueWhenAll(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task[];System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Xml.XmlReader&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Xml.XmlReader&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Xml.XmlReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Xml.XmlReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Xml.XmlReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Xml.XmlReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContinueWhenAny" uniqueID="ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.ContinueWhenAny(System.Threading.Tasks.Task[];System.Func&lt;System.Threading.Tasks.Task;System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskContinuationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.FromAsync(System.Func&lt;System.AsyncCallback;System.Object;System.IAsyncResult&gt;;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FromAsync" uniqueID="FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.FromAsync(System.IAsyncResult;System.Func&lt;System.IAsyncResult;System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDefaultScheduler" uniqueID="GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.GetDefaultScheduler(System.Threading.Tasks.Task):System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.StartNew(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.StartNew(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.StartNew(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.StartNew(System.Func&lt;System.Object;System.Xml.XmlReader&gt;;System.Object;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Xml.XmlReader&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.StartNew(System.Func&lt;System.Xml.XmlReader&gt;):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.StartNew(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.StartNew(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskScheduler):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="StartNew" uniqueID="StartNew(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.StartNew(System.Func&lt;System.Xml.XmlReader&gt;;System.Threading.Tasks.TaskCreationOptions):System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Xml.XmlReader&gt;" uniqueID="TaskFactory&lt;System.Xml.XmlReader&gt;():System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.TaskFactory&lt;System.Xml.XmlReader&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Xml.XmlReader&gt;" uniqueID="TaskFactory&lt;System.Xml.XmlReader&gt;(System.Threading.CancellationToken):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.TaskFactory&lt;System.Xml.XmlReader&gt;(System.Threading.CancellationToken):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Xml.XmlReader&gt;" uniqueID="TaskFactory&lt;System.Xml.XmlReader&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.TaskFactory&lt;System.Xml.XmlReader&gt;(System.Threading.CancellationToken;System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions;System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Xml.XmlReader&gt;" uniqueID="TaskFactory&lt;System.Xml.XmlReader&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.TaskFactory&lt;System.Xml.XmlReader&gt;(System.Threading.Tasks.TaskCreationOptions;System.Threading.Tasks.TaskContinuationOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TaskFactory&lt;System.Xml.XmlReader&gt;" uniqueID="TaskFactory&lt;System.Xml.XmlReader&gt;(System.Threading.Tasks.TaskScheduler):System.Void">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.TaskFactory&lt;System.Xml.XmlReader&gt;(System.Threading.Tasks.TaskScheduler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CancellationToken" uniqueID="get_CancellationToken():System.Threading.CancellationToken">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.get_CancellationToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContinuationOptions" uniqueID="get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.get_ContinuationOptions():System.Threading.Tasks.TaskContinuationOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreationOptions" uniqueID="get_CreationOptions():System.Threading.Tasks.TaskCreationOptions">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.get_CreationOptions():System.Threading.Tasks.TaskCreationOptions</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DefaultScheduler" uniqueID="get_DefaultScheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.get_DefaultScheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scheduler" uniqueID="get_Scheduler():System.Threading.Tasks.TaskScheduler">
				<signature>System.Threading.Tasks.TaskFactory&lt;System.Xml.XmlReader&gt;.get_Scheduler():System.Threading.Tasks.TaskScheduler</signature>
			</method>
		</class>
	</package>
	<package name="System.Web.Services">
		<class name="WebMethodAttribute" uniqueID="System.Web.Services.WebMethodAttribute">
			<method accessibility="Public" methodKind="Member" name="WebMethodAttribute" uniqueID="WebMethodAttribute():System.Void">
				<signature>System.Web.Services.WebMethodAttribute.WebMethodAttribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WebMethodAttribute" uniqueID="WebMethodAttribute(System.Boolean):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.WebMethodAttribute(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WebMethodAttribute" uniqueID="WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WebMethodAttribute" uniqueID="WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption;System.Int32):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WebMethodAttribute" uniqueID="WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption;System.Int32;System.Boolean):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.WebMethodAttribute(System.Boolean;System.EnterpriseServices.TransactionOption;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BufferResponse" uniqueID="get_BufferResponse():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_BufferResponse():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_BufferResponseSpecified" uniqueID="get_BufferResponseSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_BufferResponseSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CacheDuration" uniqueID="get_CacheDuration():System.Int32">
				<signature>System.Web.Services.WebMethodAttribute.get_CacheDuration():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CacheDurationSpecified" uniqueID="get_CacheDurationSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_CacheDurationSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Description" uniqueID="get_Description():System.String">
				<signature>System.Web.Services.WebMethodAttribute.get_Description():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DescriptionSpecified" uniqueID="get_DescriptionSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_DescriptionSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableSession" uniqueID="get_EnableSession():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_EnableSession():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EnableSessionSpecified" uniqueID="get_EnableSessionSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_EnableSessionSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MessageName" uniqueID="get_MessageName():System.String">
				<signature>System.Web.Services.WebMethodAttribute.get_MessageName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MessageNameSpecified" uniqueID="get_MessageNameSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_MessageNameSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TransactionEnabled" uniqueID="get_TransactionEnabled():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_TransactionEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TransactionOption" uniqueID="get_TransactionOption():System.EnterpriseServices.TransactionOption">
				<signature>System.Web.Services.WebMethodAttribute.get_TransactionOption():System.EnterpriseServices.TransactionOption</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TransactionOptionSpecified" uniqueID="get_TransactionOptionSpecified():System.Boolean">
				<signature>System.Web.Services.WebMethodAttribute.get_TransactionOptionSpecified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_BufferResponse" uniqueID="set_BufferResponse(System.Boolean):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_BufferResponse(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CacheDuration" uniqueID="set_CacheDuration(System.Int32):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_CacheDuration(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Description" uniqueID="set_Description(System.String):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_Description(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableSession" uniqueID="set_EnableSession(System.Boolean):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_EnableSession(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MessageName" uniqueID="set_MessageName(System.String):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_MessageName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TransactionOption" uniqueID="set_TransactionOption(System.EnterpriseServices.TransactionOption):System.Void">
				<signature>System.Web.Services.WebMethodAttribute.set_TransactionOption(System.EnterpriseServices.TransactionOption):System.Void</signature>
			</method>
		</class>
		<class name="WebServiceAttribute" uniqueID="System.Web.Services.WebServiceAttribute">
			<method accessibility="Public" methodKind="Member" name="WebServiceAttribute" uniqueID="WebServiceAttribute():System.Void">
				<signature>System.Web.Services.WebServiceAttribute.WebServiceAttribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Description" uniqueID="get_Description():System.String">
				<signature>System.Web.Services.WebServiceAttribute.get_Description():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Web.Services.WebServiceAttribute.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.Web.Services.WebServiceAttribute.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Description" uniqueID="set_Description(System.String):System.Void">
				<signature>System.Web.Services.WebServiceAttribute.set_Description(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.Web.Services.WebServiceAttribute.set_Name(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Namespace" uniqueID="set_Namespace(System.String):System.Void">
				<signature>System.Web.Services.WebServiceAttribute.set_Namespace(System.String):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="SampleWebApplication">
		<class name="ADFS" uniqueID="SampleWebApplication.ADFS">
			<method accessibility="Public" methodKind="Member" name="ADFS" uniqueID="ADFS():System.Void">
				<signature>SampleWebApplication.ADFS.ADFS():System.Void</signature>
			</method>
		</class>
		<class name="Account" uniqueID="SampleWebApplication.Account">
			<method accessibility="Private" methodKind="Static" name="GetLDAPInjection" uniqueID="GetLDAPInjection(System.String;System.String;System.String;System.Web.HttpRequest;System.Web.HttpResponse):System.String">
				<signature>SampleWebApplication.Account.GetLDAPInjection(System.String;System.String;System.String;System.Web.HttpRequest;System.Web.HttpResponse):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Account" uniqueID="Account():System.Void">
				<signature>SampleWebApplication.Account.Account():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Page_Load" uniqueID="Page_Load(System.Object;System.EventArgs):System.Void">
				<signature>SampleWebApplication.Account.Page_Load(System.Object;System.EventArgs):System.Void</signature>
			</method>
		</class>
		<class name="Database_aspx" uniqueID="SampleWebApplication.Database_aspx">
			<method accessibility="Public" methodKind="Member" name="Database_aspx" uniqueID="Database_aspx():System.Void">
				<signature>SampleWebApplication.Database_aspx.Database_aspx():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Page_Load" uniqueID="Page_Load(System.Object;System.EventArgs):System.Void">
				<signature>SampleWebApplication.Database_aspx.Page_Load(System.Object;System.EventArgs):System.Void</signature>
			</method>
		</class>
		<class name="Index" uniqueID="SampleWebApplication.Index">
			<method accessibility="Public" methodKind="Member" name="Index" uniqueID="Index():System.Void">
				<signature>SampleWebApplication.Index.Index():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Page_Load" uniqueID="Page_Load(System.Object;System.EventArgs):System.Void">
				<signature>SampleWebApplication.Index.Page_Load(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadFile" uniqueID="ReadFile(System.String):System.String">
				<signature>SampleWebApplication.Index.ReadFile(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Submit" uniqueID="Submit(System.Object;System.EventArgs):System.Void">
				<signature>SampleWebApplication.Index.Submit(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="cmdExecution" uniqueID="cmdExecution(System.String):System.Void">
				<signature>SampleWebApplication.Index.cmdExecution(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="search_Click" uniqueID="search_Click(System.Object;System.EventArgs):System.Void">
				<signature>SampleWebApplication.Index.search_Click(System.Object;System.EventArgs):System.Void</signature>
			</method>
		</class>
		<class name="Login" uniqueID="SampleWebApplication.Login">
			<method accessibility="Public" methodKind="Member" name="Login" uniqueID="Login():System.Void">
				<signature>SampleWebApplication.Login.Login():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Login1_Authenticate" uniqueID="Login1_Authenticate(System.Object;System.Web.UI.WebControls.AuthenticateEventArgs):System.Void">
				<signature>SampleWebApplication.Login.Login1_Authenticate(System.Object;System.Web.UI.WebControls.AuthenticateEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Page_Load" uniqueID="Page_Load(System.Object;System.EventArgs):System.Void">
				<signature>SampleWebApplication.Login.Page_Load(System.Object;System.EventArgs):System.Void</signature>
			</method>
		</class>
		<class name="SampleClass" uniqueID="SampleWebApplication.SampleClass">
			<method accessibility="Private" methodKind="Member" name="InsertData" uniqueID="InsertData():System.Void">
				<signature>SampleWebApplication.SampleClass.InsertData():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SampleClass" uniqueID="SampleClass():System.Void">
				<signature>SampleWebApplication.SampleClass.SampleClass():System.Void</signature>
			</method>
		</class>
		<class name="Search" uniqueID="SampleWebApplication.Search">
			<method accessibility="Protected" methodKind="Member" name="Page_Load" uniqueID="Page_Load(System.Object;System.EventArgs):System.Void">
				<signature>SampleWebApplication.Search.Page_Load(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Search" uniqueID="Search():System.Void">
				<signature>SampleWebApplication.Search.Search():System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Web">
		<class name="HttpRequest" uniqueID="System.Web.HttpRequest">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.HttpRequest.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateCookieFromString" uniqueID="CreateCookieFromString(System.String):System.Web.HttpCookie">
				<signature>System.Web.HttpRequest.CreateCookieFromString(System.String):System.Web.HttpCookie</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetAttributeFromHeader" uniqueID="GetAttributeFromHeader(System.String;System.String):System.String">
				<signature>System.Web.HttpRequest.GetAttributeFromHeader(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetRequestValidationSourceName" uniqueID="GetRequestValidationSourceName(System.Web.Util.RequestValidationSource):System.String">
				<signature>System.Web.HttpRequest.GetRequestValidationSourceName(System.Web.Util.RequestValidationSource):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="MapImageCoordinatatesInternal" uniqueID="MapImageCoordinatatesInternal(System.String;System.Web.HttpVerb;System.Collections.Specialized.NameValueCollection;System.Collections.Specialized.NameValueCollection):System.Double[]">
				<signature>System.Web.HttpRequest.MapImageCoordinatatesInternal(System.String;System.Web.HttpVerb;System.Collections.Specialized.NameValueCollection;System.Collections.Specialized.NameValueCollection):System.Double[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ParseMultivalueHeader" uniqueID="ParseMultivalueHeader(System.String):System.String[]">
				<signature>System.Web.HttpRequest.ParseMultivalueHeader(System.String):System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="RemoveNullCharacters" uniqueID="RemoveNullCharacters(System.String):System.String">
				<signature>System.Web.HttpRequest.RemoveNullCharacters(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ServerVariableNameFromHeader" uniqueID="ServerVariableNameFromHeader(System.String):System.String">
				<signature>System.Web.HttpRequest.ServerVariableNameFromHeader(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="&lt;ValidateCookieCollection&gt;b__7" uniqueID="&lt;ValidateCookieCollection&gt;b__7(System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.&lt;ValidateCookieCollection&gt;b__7(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="&lt;ValidatePostedFileCollection&gt;b__9" uniqueID="&lt;ValidatePostedFileCollection&gt;b__9(System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.&lt;ValidatePostedFileCollection&gt;b__9(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="&lt;get_Url&gt;b__1" uniqueID="&lt;get_Url&gt;b__1():System.String">
				<signature>System.Web.HttpRequest.&lt;get_Url&gt;b__1():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Abort" uniqueID="Abort():System.Void">
				<signature>System.Web.HttpRequest.Abort():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddResponseCookie" uniqueID="AddResponseCookie(System.Web.HttpCookie):System.Void">
				<signature>System.Web.HttpRequest.AddResponseCookie(System.Web.HttpCookie):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddServerVariableToCollection" uniqueID="AddServerVariableToCollection(System.String):System.Void">
				<signature>System.Web.HttpRequest.AddServerVariableToCollection(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddServerVariableToCollection" uniqueID="AddServerVariableToCollection(System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.AddServerVariableToCollection(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddServerVariableToCollection" uniqueID="AddServerVariableToCollection(System.String;System.Web.DynamicServerVariable):System.Void">
				<signature>System.Web.HttpRequest.AddServerVariableToCollection(System.String;System.Web.DynamicServerVariable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AppendToLogQueryString" uniqueID="AppendToLogQueryString(System.String):System.Void">
				<signature>System.Web.HttpRequest.AppendToLogQueryString(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ApplyFilter" uniqueID="ApplyFilter(System.Web.HttpRawUploadedContent;System.Int32):System.Void">
				<signature>System.Web.HttpRequest.ApplyFilter(System.Web.HttpRawUploadedContent;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinaryRead" uniqueID="BinaryRead(System.Int32):System.Byte[]">
				<signature>System.Web.HttpRequest.BinaryRead(System.Int32):System.Byte[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BuildUrl" uniqueID="BuildUrl(System.Func&lt;System.String&gt;):System.Uri">
				<signature>System.Web.HttpRequest.BuildUrl(System.Func&lt;System.String&gt;):System.Uri</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CalcDynamicServerVariable" uniqueID="CalcDynamicServerVariable(System.Web.DynamicServerVariable):System.String">
				<signature>System.Web.HttpRequest.CalcDynamicServerVariable(System.Web.DynamicServerVariable):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CanValidateRequest" uniqueID="CanValidateRequest():System.Boolean">
				<signature>System.Web.HttpRequest.CanValidateRequest():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearReferencesForWebSocketProcessing" uniqueID="ClearReferencesForWebSocketProcessing():System.Void">
				<signature>System.Web.HttpRequest.ClearReferencesForWebSocketProcessing():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CombineAllHeaders" uniqueID="CombineAllHeaders(System.Boolean):System.String">
				<signature>System.Web.HttpRequest.CombineAllHeaders(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateHttpClientCertificateWithAssert" uniqueID="CreateHttpClientCertificateWithAssert():System.Web.HttpClientCertificate">
				<signature>System.Web.HttpRequest.CreateHttpClientCertificateWithAssert():System.Web.HttpClientCertificate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Web.HttpRequest.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnableGranularRequestValidation" uniqueID="EnableGranularRequestValidation():System.Void">
				<signature>System.Web.HttpRequest.EnableGranularRequestValidation():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureCookies" uniqueID="EnsureCookies():System.Web.HttpCookieCollection">
				<signature>System.Web.HttpRequest.EnsureCookies():System.Web.HttpCookieCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureFiles" uniqueID="EnsureFiles():System.Web.HttpFileCollection">
				<signature>System.Web.HttpRequest.EnsureFiles():System.Web.HttpFileCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureForm" uniqueID="EnsureForm():System.Web.HttpValueCollection">
				<signature>System.Web.HttpRequest.EnsureForm():System.Web.HttpValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureHasNotTransitionedToWebSocket" uniqueID="EnsureHasNotTransitionedToWebSocket():System.Void">
				<signature>System.Web.HttpRequest.EnsureHasNotTransitionedToWebSocket():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureHeaders" uniqueID="EnsureHeaders():System.Web.HttpHeaderCollection">
				<signature>System.Web.HttpRequest.EnsureHeaders():System.Web.HttpHeaderCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureQueryString" uniqueID="EnsureQueryString():System.Web.HttpValueCollection">
				<signature>System.Web.HttpRequest.EnsureQueryString():System.Web.HttpValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureRawUrl" uniqueID="EnsureRawUrl():System.String">
				<signature>System.Web.HttpRequest.EnsureRawUrl():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FetchServerVariable" uniqueID="FetchServerVariable(System.String):System.String">
				<signature>System.Web.HttpRequest.FetchServerVariable(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FillInCookiesCollection" uniqueID="FillInCookiesCollection(System.Web.HttpCookieCollection;System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.FillInCookiesCollection(System.Web.HttpCookieCollection;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FillInFilesCollection" uniqueID="FillInFilesCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInFilesCollection():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FillInFormCollection" uniqueID="FillInFormCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInFormCollection():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FillInHeadersCollection" uniqueID="FillInHeadersCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInHeadersCollection():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FillInParamsCollection" uniqueID="FillInParamsCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInParamsCollection():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FillInQueryStringCollection" uniqueID="FillInQueryStringCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInQueryStringCollection():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FillInServerVariablesCollection" uniqueID="FillInServerVariablesCollection():System.Void">
				<signature>System.Web.HttpRequest.FillInServerVariablesCollection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBufferedInputStream" uniqueID="GetBufferedInputStream():System.IO.Stream">
				<signature>System.Web.HttpRequest.GetBufferedInputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBufferlessInputStream" uniqueID="GetBufferlessInputStream():System.IO.Stream">
				<signature>System.Web.HttpRequest.GetBufferlessInputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBufferlessInputStream" uniqueID="GetBufferlessInputStream(System.Boolean):System.IO.Stream">
				<signature>System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean):System.IO.Stream</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetEncodingFromHeaders" uniqueID="GetEncodingFromHeaders():System.Text.Encoding">
				<signature>System.Web.HttpRequest.GetEncodingFromHeaders():System.Text.Encoding</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetEntireRawContent" uniqueID="GetEntireRawContent():System.Web.HttpRawUploadedContent">
				<signature>System.Web.HttpRequest.GetEntireRawContent():System.Web.HttpRawUploadedContent</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetInputStream" uniqueID="GetInputStream(System.Boolean;System.Boolean):System.IO.Stream">
				<signature>System.Web.HttpRequest.GetInputStream(System.Boolean;System.Boolean):System.IO.Stream</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetMultipartBoundary" uniqueID="GetMultipartBoundary():System.Byte[]">
				<signature>System.Web.HttpRequest.GetMultipartBoundary():System.Byte[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetMultipartContent" uniqueID="GetMultipartContent():System.Web.MultipartContentElement[]">
				<signature>System.Web.HttpRequest.GetMultipartContent():System.Web.MultipartContentElement[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetParams" uniqueID="GetParams():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.GetParams():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetParamsWithDemand" uniqueID="GetParamsWithDemand():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.GetParamsWithDemand():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetServerVars" uniqueID="GetServerVars():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.GetServerVars():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetServerVarsWithDemand" uniqueID="GetServerVarsWithDemand():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.GetServerVarsWithDemand():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetServerVarsWithoutDemand" uniqueID="GetServerVarsWithoutDemand():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.GetServerVarsWithoutDemand():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetUnvalidatedPath" uniqueID="GetUnvalidatedPath():System.String">
				<signature>System.Web.HttpRequest.GetUnvalidatedPath():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetUnvalidatedPathInfo" uniqueID="GetUnvalidatedPathInfo():System.String">
				<signature>System.Web.HttpRequest.GetUnvalidatedPathInfo():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HttpRequest" uniqueID="HttpRequest(System.String;System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.HttpRequest(System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpRequest" uniqueID="HttpRequest(System.Web.HttpWorkerRequest;System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpRequest.HttpRequest(System.Web.HttpWorkerRequest;System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpRequest" uniqueID="HttpRequest(System.Web.VirtualPath;System.String):System.Void">
				<signature>System.Web.HttpRequest.HttpRequest(System.Web.VirtualPath;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertEntityBody" uniqueID="InsertEntityBody():System.Void">
				<signature>System.Web.HttpRequest.InsertEntityBody():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertEntityBody" uniqueID="InsertEntityBody(System.Byte[];System.Int32;System.Int32):System.Void">
				<signature>System.Web.HttpRequest.InsertEntityBody(System.Byte[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalRewritePath" uniqueID="InternalRewritePath(System.Web.VirtualPath;System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.InternalRewritePath(System.Web.VirtualPath;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalRewritePath" uniqueID="InternalRewritePath(System.Web.VirtualPath;System.Web.VirtualPath;System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.InternalRewritePath(System.Web.VirtualPath;System.Web.VirtualPath;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InvalidateParams" uniqueID="InvalidateParams():System.Void">
				<signature>System.Web.HttpRequest.InvalidateParams():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapImageCoordinates" uniqueID="MapImageCoordinates(System.String):System.Int32[]">
				<signature>System.Web.HttpRequest.MapImageCoordinates(System.String):System.Int32[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPath" uniqueID="MapPath(System.String):System.String">
				<signature>System.Web.HttpRequest.MapPath(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPath" uniqueID="MapPath(System.String;System.String;System.Boolean):System.String">
				<signature>System.Web.HttpRequest.MapPath(System.String;System.String;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MapPath" uniqueID="MapPath(System.Web.VirtualPath):System.String">
				<signature>System.Web.HttpRequest.MapPath(System.Web.VirtualPath):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MapPath" uniqueID="MapPath(System.Web.VirtualPath;System.Web.VirtualPath;System.Boolean):System.String">
				<signature>System.Web.HttpRequest.MapPath(System.Web.VirtualPath;System.Web.VirtualPath;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapRawImageCoordinates" uniqueID="MapRawImageCoordinates(System.String):System.Double[]">
				<signature>System.Web.HttpRequest.MapRawImageCoordinates(System.String):System.Double[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetCookies" uniqueID="ResetCookies():System.Void">
				<signature>System.Web.HttpRequest.ResetCookies():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SaveAs" uniqueID="SaveAs(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.SaveAs(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetDynamicCompression" uniqueID="SetDynamicCompression(System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.SetDynamicCompression(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetRawContent" uniqueID="SetRawContent(System.Web.HttpRawUploadedContent):System.Void">
				<signature>System.Web.HttpRequest.SetRawContent(System.Web.HttpRawUploadedContent):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetSkipAuthorization" uniqueID="SetSkipAuthorization(System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.SetSkipAuthorization(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StoreReferenceToResponseCookies" uniqueID="StoreReferenceToResponseCookies(System.Web.HttpCookieCollection):System.Void">
				<signature>System.Web.HttpRequest.StoreReferenceToResponseCookies(System.Web.HttpCookieCollection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SwitchCurrentExecutionFilePath" uniqueID="SwitchCurrentExecutionFilePath(System.Web.VirtualPath):System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.SwitchCurrentExecutionFilePath(System.Web.VirtualPath):System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SwitchForm" uniqueID="SwitchForm(System.Web.HttpValueCollection):System.Web.HttpValueCollection">
				<signature>System.Web.HttpRequest.SwitchForm(System.Web.HttpValueCollection):System.Web.HttpValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SynchronizeHeader" uniqueID="SynchronizeHeader(System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.SynchronizeHeader(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SynchronizeServerVariable" uniqueID="SynchronizeServerVariable(System.String;System.String):System.Void">
				<signature>System.Web.HttpRequest.SynchronizeServerVariable(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateCookieCollection" uniqueID="ValidateCookieCollection(System.Web.HttpCookieCollection):System.Void">
				<signature>System.Web.HttpRequest.ValidateCookieCollection(System.Web.HttpCookieCollection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateCookielessHeaderIfRequiredByConfig" uniqueID="ValidateCookielessHeaderIfRequiredByConfig(System.String):System.Void">
				<signature>System.Web.HttpRequest.ValidateCookielessHeaderIfRequiredByConfig(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateHttpValueCollection" uniqueID="ValidateHttpValueCollection(System.Web.HttpValueCollection;System.Web.Util.RequestValidationSource):System.Void">
				<signature>System.Web.HttpRequest.ValidateHttpValueCollection(System.Web.HttpValueCollection;System.Web.Util.RequestValidationSource):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ValidateInput" uniqueID="ValidateInput():System.Void">
				<signature>System.Web.HttpRequest.ValidateInput():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateInputIfRequiredByConfig" uniqueID="ValidateInputIfRequiredByConfig():System.Void">
				<signature>System.Web.HttpRequest.ValidateInputIfRequiredByConfig():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidatePostedFileCollection" uniqueID="ValidatePostedFileCollection(System.Web.HttpFileCollection):System.Void">
				<signature>System.Web.HttpRequest.ValidatePostedFileCollection(System.Web.HttpFileCollection):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateString" uniqueID="ValidateString(System.String;System.String;System.Web.Util.RequestValidationSource):System.Void">
				<signature>System.Web.HttpRequest.ValidateString(System.String;System.String;System.Web.Util.RequestValidationSource):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AcceptTypes" uniqueID="get_AcceptTypes():System.String[]">
				<signature>System.Web.HttpRequest.get_AcceptTypes():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AnonymousID" uniqueID="get_AnonymousID():System.String">
				<signature>System.Web.HttpRequest.get_AnonymousID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AppRelativeCurrentExecutionFilePath" uniqueID="get_AppRelativeCurrentExecutionFilePath():System.String">
				<signature>System.Web.HttpRequest.get_AppRelativeCurrentExecutionFilePath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ApplicationPath" uniqueID="get_ApplicationPath():System.String">
				<signature>System.Web.HttpRequest.get_ApplicationPath():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ApplicationPathObject" uniqueID="get_ApplicationPathObject():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_ApplicationPathObject():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Browser" uniqueID="get_Browser():System.Web.HttpBrowserCapabilities">
				<signature>System.Web.HttpRequest.get_Browser():System.Web.HttpBrowserCapabilities</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientBaseDir" uniqueID="get_ClientBaseDir():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_ClientBaseDir():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientCertificate" uniqueID="get_ClientCertificate():System.Web.HttpClientCertificate">
				<signature>System.Web.HttpRequest.get_ClientCertificate():System.Web.HttpClientCertificate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientFilePath" uniqueID="get_ClientFilePath():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_ClientFilePath():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientTarget" uniqueID="get_ClientTarget():System.String">
				<signature>System.Web.HttpRequest.get_ClientTarget():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentEncoding" uniqueID="get_ContentEncoding():System.Text.Encoding">
				<signature>System.Web.HttpRequest.get_ContentEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentLength" uniqueID="get_ContentLength():System.Int32">
				<signature>System.Web.HttpRequest.get_ContentLength():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentType" uniqueID="get_ContentType():System.String">
				<signature>System.Web.HttpRequest.get_ContentType():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Context" uniqueID="get_Context():System.Web.HttpContext">
				<signature>System.Web.HttpRequest.get_Context():System.Web.HttpContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cookies" uniqueID="get_Cookies():System.Web.HttpCookieCollection">
				<signature>System.Web.HttpRequest.get_Cookies():System.Web.HttpCookieCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentExecutionFilePath" uniqueID="get_CurrentExecutionFilePath():System.String">
				<signature>System.Web.HttpRequest.get_CurrentExecutionFilePath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentExecutionFilePathExtension" uniqueID="get_CurrentExecutionFilePathExtension():System.String">
				<signature>System.Web.HttpRequest.get_CurrentExecutionFilePathExtension():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CurrentExecutionFilePathObject" uniqueID="get_CurrentExecutionFilePathObject():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_CurrentExecutionFilePathObject():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EntityBody" uniqueID="get_EntityBody():System.Byte[]">
				<signature>System.Web.HttpRequest.get_EntityBody():System.Byte[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FilePath" uniqueID="get_FilePath():System.String">
				<signature>System.Web.HttpRequest.get_FilePath():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FilePathObject" uniqueID="get_FilePathObject():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_FilePathObject():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Files" uniqueID="get_Files():System.Web.HttpFileCollection">
				<signature>System.Web.HttpRequest.get_Files():System.Web.HttpFileCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Filter" uniqueID="get_Filter():System.IO.Stream">
				<signature>System.Web.HttpRequest.get_Filter():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Form" uniqueID="get_Form():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.get_Form():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasForm" uniqueID="get_HasForm():System.Boolean">
				<signature>System.Web.HttpRequest.get_HasForm():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasQueryString" uniqueID="get_HasQueryString():System.Boolean">
				<signature>System.Web.HttpRequest.get_HasQueryString():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_HasTransitionedToWebSocketRequest" uniqueID="get_HasTransitionedToWebSocketRequest():System.Boolean">
				<signature>System.Web.HttpRequest.get_HasTransitionedToWebSocketRequest():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Headers" uniqueID="get_Headers():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.get_Headers():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HttpChannelBinding" uniqueID="get_HttpChannelBinding():System.Security.Authentication.ExtendedProtection.ChannelBinding">
				<signature>System.Web.HttpRequest.get_HttpChannelBinding():System.Security.Authentication.ExtendedProtection.ChannelBinding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HttpMethod" uniqueID="get_HttpMethod():System.String">
				<signature>System.Web.HttpRequest.get_HttpMethod():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HttpVerb" uniqueID="get_HttpVerb():System.Web.HttpVerb">
				<signature>System.Web.HttpRequest.get_HttpVerb():System.Web.HttpVerb</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IfModifiedSince" uniqueID="get_IfModifiedSince():System.String">
				<signature>System.Web.HttpRequest.get_IfModifiedSince():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IfNoneMatch" uniqueID="get_IfNoneMatch():System.String">
				<signature>System.Web.HttpRequest.get_IfNoneMatch():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InputStream" uniqueID="get_InputStream():System.IO.Stream">
				<signature>System.Web.HttpRequest.get_InputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAuthenticated" uniqueID="get_IsAuthenticated():System.Boolean">
				<signature>System.Web.HttpRequest.get_IsAuthenticated():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsDebuggingRequest" uniqueID="get_IsDebuggingRequest():System.Boolean">
				<signature>System.Web.HttpRequest.get_IsDebuggingRequest():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsLocal" uniqueID="get_IsLocal():System.Boolean">
				<signature>System.Web.HttpRequest.get_IsLocal():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecureConnection" uniqueID="get_IsSecureConnection():System.Boolean">
				<signature>System.Web.HttpRequest.get_IsSecureConnection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.String">
				<signature>System.Web.HttpRequest.get_Item(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LogonUserIdentity" uniqueID="get_LogonUserIdentity():System.Security.Principal.WindowsIdentity">
				<signature>System.Web.HttpRequest.get_LogonUserIdentity():System.Security.Principal.WindowsIdentity</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NeedToInsertEntityBody" uniqueID="get_NeedToInsertEntityBody():System.Boolean">
				<signature>System.Web.HttpRequest.get_NeedToInsertEntityBody():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Params" uniqueID="get_Params():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.get_Params():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Path" uniqueID="get_Path():System.String">
				<signature>System.Web.HttpRequest.get_Path():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PathInfo" uniqueID="get_PathInfo():System.String">
				<signature>System.Web.HttpRequest.get_PathInfo():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PathInfoObject" uniqueID="get_PathInfoObject():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_PathInfoObject():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PathObject" uniqueID="get_PathObject():System.Web.VirtualPath">
				<signature>System.Web.HttpRequest.get_PathObject():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PathWithQueryString" uniqueID="get_PathWithQueryString():System.String">
				<signature>System.Web.HttpRequest.get_PathWithQueryString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PhysicalApplicationPath" uniqueID="get_PhysicalApplicationPath():System.String">
				<signature>System.Web.HttpRequest.get_PhysicalApplicationPath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PhysicalPath" uniqueID="get_PhysicalPath():System.String">
				<signature>System.Web.HttpRequest.get_PhysicalPath():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PhysicalPathInternal" uniqueID="get_PhysicalPathInternal():System.String">
				<signature>System.Web.HttpRequest.get_PhysicalPathInternal():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_QueryString" uniqueID="get_QueryString():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.get_QueryString():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_QueryStringBytes" uniqueID="get_QueryStringBytes():System.Byte[]">
				<signature>System.Web.HttpRequest.get_QueryStringBytes():System.Byte[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_QueryStringEncoding" uniqueID="get_QueryStringEncoding():System.Text.Encoding">
				<signature>System.Web.HttpRequest.get_QueryStringEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_QueryStringText" uniqueID="get_QueryStringText():System.String">
				<signature>System.Web.HttpRequest.get_QueryStringText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RawUrl" uniqueID="get_RawUrl():System.String">
				<signature>System.Web.HttpRequest.get_RawUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReadEntityBodyMode" uniqueID="get_ReadEntityBodyMode():System.Web.ReadEntityBodyMode">
				<signature>System.Web.HttpRequest.get_ReadEntityBodyMode():System.Web.ReadEntityBodyMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RequestContext" uniqueID="get_RequestContext():System.Web.Routing.RequestContext">
				<signature>System.Web.HttpRequest.get_RequestContext():System.Web.Routing.RequestContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RequestType" uniqueID="get_RequestType():System.String">
				<signature>System.Web.HttpRequest.get_RequestType():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Response" uniqueID="get_Response():System.Web.HttpResponse">
				<signature>System.Web.HttpRequest.get_Response():System.Web.HttpResponse</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RewrittenUrl" uniqueID="get_RewrittenUrl():System.String">
				<signature>System.Web.HttpRequest.get_RewrittenUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ServerVariables" uniqueID="get_ServerVariables():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpRequest.get_ServerVariables():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TimedOutToken" uniqueID="get_TimedOutToken():System.Threading.CancellationToken">
				<signature>System.Web.HttpRequest.get_TimedOutToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TotalBytes" uniqueID="get_TotalBytes():System.Int32">
				<signature>System.Web.HttpRequest.get_TotalBytes():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Unvalidated" uniqueID="get_Unvalidated():System.Web.UnvalidatedRequestValues">
				<signature>System.Web.HttpRequest.get_Unvalidated():System.Web.UnvalidatedRequestValues</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Url" uniqueID="get_Url():System.Uri">
				<signature>System.Web.HttpRequest.get_Url():System.Uri</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UrlInternal" uniqueID="get_UrlInternal():System.String">
				<signature>System.Web.HttpRequest.get_UrlInternal():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UrlReferrer" uniqueID="get_UrlReferrer():System.Uri">
				<signature>System.Web.HttpRequest.get_UrlReferrer():System.Uri</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserAgent" uniqueID="get_UserAgent():System.String">
				<signature>System.Web.HttpRequest.get_UserAgent():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserHostAddress" uniqueID="get_UserHostAddress():System.String">
				<signature>System.Web.HttpRequest.get_UserHostAddress():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserHostName" uniqueID="get_UserHostName():System.String">
				<signature>System.Web.HttpRequest.get_UserHostName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserLanguages" uniqueID="get_UserLanguages():System.String[]">
				<signature>System.Web.HttpRequest.get_UserLanguages():System.String[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ValidateInputWasCalled" uniqueID="get_ValidateInputWasCalled():System.Boolean">
				<signature>System.Web.HttpRequest.get_ValidateInputWasCalled():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AnonymousID" uniqueID="set_AnonymousID(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_AnonymousID(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Browser" uniqueID="set_Browser(System.Web.HttpBrowserCapabilities):System.Void">
				<signature>System.Web.HttpRequest.set_Browser(System.Web.HttpBrowserCapabilities):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ClientFilePath" uniqueID="set_ClientFilePath(System.Web.VirtualPath):System.Void">
				<signature>System.Web.HttpRequest.set_ClientFilePath(System.Web.VirtualPath):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ClientTarget" uniqueID="set_ClientTarget(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_ClientTarget(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentEncoding" uniqueID="set_ContentEncoding(System.Text.Encoding):System.Void">
				<signature>System.Web.HttpRequest.set_ContentEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentType" uniqueID="set_ContentType(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_ContentType(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Context" uniqueID="set_Context(System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpRequest.set_Context(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Filter" uniqueID="set_Filter(System.IO.Stream):System.Void">
				<signature>System.Web.HttpRequest.set_Filter(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_NeedToInsertEntityBody" uniqueID="set_NeedToInsertEntityBody(System.Boolean):System.Void">
				<signature>System.Web.HttpRequest.set_NeedToInsertEntityBody(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_QueryStringText" uniqueID="set_QueryStringText(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_QueryStringText(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_RawUrl" uniqueID="set_RawUrl(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_RawUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RequestContext" uniqueID="set_RequestContext(System.Web.Routing.RequestContext):System.Void">
				<signature>System.Web.HttpRequest.set_RequestContext(System.Web.Routing.RequestContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RequestType" uniqueID="set_RequestType(System.String):System.Void">
				<signature>System.Web.HttpRequest.set_RequestType(System.String):System.Void</signature>
			</method>
		</class>
		<class name="IHttpHandler" uniqueID="System.Web.IHttpHandler">
			<method accessibility="Public" methodKind="Member" name="ProcessRequest" uniqueID="ProcessRequest(System.Web.HttpContext):System.Void">
				<signature>System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReusable" uniqueID="get_IsReusable():System.Boolean">
				<signature>System.Web.IHttpHandler.get_IsReusable():System.Boolean</signature>
			</method>
		</class>
		<class name="HttpResponse" uniqueID="System.Web.HttpResponse">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.HttpResponse.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="AbortCurrentThread" uniqueID="AbortCurrentThread():System.Void">
				<signature>System.Web.HttpResponse.AbortCurrentThread():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RemoveOutputCacheItem" uniqueID="RemoveOutputCacheItem(System.String):System.Void">
				<signature>System.Web.HttpResponse.RemoveOutputCacheItem(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RemoveOutputCacheItem" uniqueID="RemoveOutputCacheItem(System.String;System.String):System.Void">
				<signature>System.Web.HttpResponse.RemoveOutputCacheItem(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="add_Redirecting" uniqueID="add_Redirecting(System.EventHandler):System.Void">
				<signature>System.Web.HttpResponse.add_Redirecting(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="remove_Redirecting" uniqueID="remove_Redirecting(System.EventHandler):System.Void">
				<signature>System.Web.HttpResponse.remove_Redirecting(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="&lt;UpdateNativeResponse&gt;b__0" uniqueID="&lt;UpdateNativeResponse&gt;b__0(System.Action&lt;System.Web.HttpContext&gt;):System.Void">
				<signature>System.Web.HttpResponse.&lt;UpdateNativeResponse&gt;b__0(System.Action&lt;System.Web.HttpContext&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddCacheDependency" uniqueID="AddCacheDependency(System.Web.Caching.CacheDependency[]):System.Void">
				<signature>System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddCacheItemDependencies" uniqueID="AddCacheItemDependencies(System.Collections.ArrayList):System.Void">
				<signature>System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddCacheItemDependencies" uniqueID="AddCacheItemDependencies(System.String[]):System.Void">
				<signature>System.Web.HttpResponse.AddCacheItemDependencies(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddCacheItemDependency" uniqueID="AddCacheItemDependency(System.String):System.Void">
				<signature>System.Web.HttpResponse.AddCacheItemDependency(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddFileDependencies" uniqueID="AddFileDependencies(System.Collections.ArrayList):System.Void">
				<signature>System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddFileDependencies" uniqueID="AddFileDependencies(System.String[]):System.Void">
				<signature>System.Web.HttpResponse.AddFileDependencies(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddFileDependencies" uniqueID="AddFileDependencies(System.String[];System.DateTime):System.Void">
				<signature>System.Web.HttpResponse.AddFileDependencies(System.String[];System.DateTime):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddFileDependency" uniqueID="AddFileDependency(System.String):System.Void">
				<signature>System.Web.HttpResponse.AddFileDependency(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddHeader" uniqueID="AddHeader(System.String;System.String):System.Void">
				<signature>System.Web.HttpResponse.AddHeader(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnSendingHeaders" uniqueID="AddOnSendingHeaders(System.Action&lt;System.Web.HttpContext&gt;):System.Web.ISubscriptionToken">
				<signature>System.Web.HttpResponse.AddOnSendingHeaders(System.Action&lt;System.Web.HttpContext&gt;):System.Web.ISubscriptionToken</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddVirtualPathDependencies" uniqueID="AddVirtualPathDependencies(System.String[]):System.Void">
				<signature>System.Web.HttpResponse.AddVirtualPathDependencies(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AppendCharSetToContentType" uniqueID="AppendCharSetToContentType(System.String):System.String">
				<signature>System.Web.HttpResponse.AppendCharSetToContentType(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendCookie" uniqueID="AppendCookie(System.Web.HttpCookie):System.Void">
				<signature>System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendHeader" uniqueID="AppendHeader(System.String;System.String):System.Void">
				<signature>System.Web.HttpResponse.AppendHeader(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AppendHeader" uniqueID="AppendHeader(System.Web.HttpResponseHeader):System.Void">
				<signature>System.Web.HttpResponse.AppendHeader(System.Web.HttpResponseHeader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendToLog" uniqueID="AppendToLog(System.String):System.Void">
				<signature>System.Web.HttpResponse.AppendToLog(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ApplyAppPathModifier" uniqueID="ApplyAppPathModifier(System.String):System.String">
				<signature>System.Web.HttpResponse.ApplyAppPathModifier(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ApplyRedirectQueryStringIfRequired" uniqueID="ApplyRedirectQueryStringIfRequired(System.String):System.String">
				<signature>System.Web.HttpResponse.ApplyRedirectQueryStringIfRequired(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BeforeCookieCollectionChange" uniqueID="BeforeCookieCollectionChange():System.Void">
				<signature>System.Web.HttpResponse.BeforeCookieCollectionChange():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BeginExecuteUrlForEntireResponse" uniqueID="BeginExecuteUrlForEntireResponse(System.String;System.Collections.Specialized.NameValueCollection;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.HttpResponse.BeginExecuteUrlForEntireResponse(System.String;System.Collections.Specialized.NameValueCollection;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginFlush" uniqueID="BeginFlush(System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.HttpResponse.BeginFlush(System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BinaryWrite" uniqueID="BinaryWrite(System.Byte[]):System.Void">
				<signature>System.Web.HttpResponse.BinaryWrite(System.Byte[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Web.HttpResponse.Clear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearAll" uniqueID="ClearAll():System.Void">
				<signature>System.Web.HttpResponse.ClearAll():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ClearContent" uniqueID="ClearContent():System.Void">
				<signature>System.Web.HttpResponse.ClearContent():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ClearHeaders" uniqueID="ClearHeaders():System.Void">
				<signature>System.Web.HttpResponse.ClearHeaders():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ClearNativeResponse" uniqueID="ClearNativeResponse(System.Boolean;System.Boolean;System.Web.Hosting.IIS7WorkerRequest):System.Void">
				<signature>System.Web.HttpResponse.ClearNativeResponse(System.Boolean;System.Boolean;System.Web.Hosting.IIS7WorkerRequest):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Web.HttpResponse.Close():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CloseConnectionAfterError" uniqueID="CloseConnectionAfterError():System.Void">
				<signature>System.Web.HttpResponse.CloseConnectionAfterError():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ContainsNonShareableCookies" uniqueID="ContainsNonShareableCookies():System.Boolean">
				<signature>System.Web.HttpResponse.ContainsNonShareableCookies():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ConvertToFullyQualifiedRedirectUrlIfRequired" uniqueID="ConvertToFullyQualifiedRedirectUrlIfRequired(System.String):System.String">
				<signature>System.Web.HttpResponse.ConvertToFullyQualifiedRedirectUrlIfRequired(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateCacheDependencyForResponse" uniqueID="CreateCacheDependencyForResponse():System.Web.Caching.CacheDependency">
				<signature>System.Web.HttpResponse.CreateCacheDependencyForResponse():System.Web.Caching.CacheDependency</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DisableKernelCache" uniqueID="DisableKernelCache():System.Void">
				<signature>System.Web.HttpResponse.DisableKernelCache():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DisableUserCache" uniqueID="DisableUserCache():System.Void">
				<signature>System.Web.HttpResponse.DisableUserCache():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Web.HttpResponse.Dispose():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="End" uniqueID="End():System.Void">
				<signature>System.Web.HttpResponse.End():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndExecuteUrlForEntireResponse" uniqueID="EndExecuteUrlForEntireResponse(System.IAsyncResult):System.Void">
				<signature>System.Web.HttpResponse.EndExecuteUrlForEntireResponse(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndFlush" uniqueID="EndFlush(System.IAsyncResult):System.Void">
				<signature>System.Web.HttpResponse.EndFlush(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureSessionStateIfNecessary" uniqueID="EnsureSessionStateIfNecessary():System.Void">
				<signature>System.Web.HttpResponse.EnsureSessionStateIfNecessary():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FilterOutput" uniqueID="FilterOutput():System.Void">
				<signature>System.Web.HttpResponse.FilterOutput():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinalFlushAtTheEndOfRequestProcessing" uniqueID="FinalFlushAtTheEndOfRequestProcessing():System.Void">
				<signature>System.Web.HttpResponse.FinalFlushAtTheEndOfRequestProcessing():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FinalFlushAtTheEndOfRequestProcessing" uniqueID="FinalFlushAtTheEndOfRequestProcessing(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.FinalFlushAtTheEndOfRequestProcessing(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Flush" uniqueID="Flush():System.Void">
				<signature>System.Web.HttpResponse.Flush():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Flush" uniqueID="Flush(System.Boolean;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.Flush(System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GenerateResponseHeaders" uniqueID="GenerateResponseHeaders(System.Boolean):System.Collections.ArrayList">
				<signature>System.Web.HttpResponse.GenerateResponseHeaders(System.Boolean):System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GenerateResponseHeadersForCookies" uniqueID="GenerateResponseHeadersForCookies():System.Void">
				<signature>System.Web.HttpResponse.GenerateResponseHeadersForCookies():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GenerateResponseHeadersForHandler" uniqueID="GenerateResponseHeadersForHandler():System.Void">
				<signature>System.Web.HttpResponse.GenerateResponseHeadersForHandler():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GenerateResponseHeadersIntegrated" uniqueID="GenerateResponseHeadersIntegrated(System.Boolean):System.Collections.ArrayList">
				<signature>System.Web.HttpResponse.GenerateResponseHeadersIntegrated(System.Boolean):System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetBufferedLength" uniqueID="GetBufferedLength():System.Int32">
				<signature>System.Web.HttpResponse.GetBufferedLength():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCookiesNoCreate" uniqueID="GetCookiesNoCreate():System.Web.HttpCookieCollection">
				<signature>System.Web.HttpResponse.GetCookiesNoCreate():System.Web.HttpCookieCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetErrorFormatter" uniqueID="GetErrorFormatter(System.Exception):System.Web.ErrorFormatter">
				<signature>System.Web.HttpResponse.GetErrorFormatter(System.Exception):System.Web.ErrorFormatter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetHttpHeaderContentEncoding" uniqueID="GetHttpHeaderContentEncoding():System.String">
				<signature>System.Web.HttpResponse.GetHttpHeaderContentEncoding():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetNormalizedFilename" uniqueID="GetNormalizedFilename(System.String):System.String">
				<signature>System.Web.HttpResponse.GetNormalizedFilename(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetSnapshot" uniqueID="GetSnapshot():System.Web.HttpRawResponse">
				<signature>System.Web.HttpResponse.GetSnapshot():System.Web.HttpRawResponse</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasCacheItemDependencies" uniqueID="HasCacheItemDependencies():System.Boolean">
				<signature>System.Web.HttpResponse.HasCacheItemDependencies():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasFileDependencies" uniqueID="HasFileDependencies():System.Boolean">
				<signature>System.Web.HttpResponse.HasFileDependencies():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HttpResponse" uniqueID="HttpResponse(System.IO.TextWriter):System.Void">
				<signature>System.Web.HttpResponse.HttpResponse(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpResponse" uniqueID="HttpResponse(System.Web.HttpWorkerRequest;System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpResponse.HttpResponse(System.Web.HttpWorkerRequest;System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IgnoreFurtherWrites" uniqueID="IgnoreFurtherWrites():System.Void">
				<signature>System.Web.HttpResponse.IgnoreFurtherWrites():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitResponseWriter" uniqueID="InitResponseWriter():System.Void">
				<signature>System.Web.HttpResponse.InitResponseWriter():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsBuffered" uniqueID="IsBuffered():System.Boolean">
				<signature>System.Web.HttpResponse.IsBuffered():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsKernelCacheEnabledForVaryByStar" uniqueID="IsKernelCacheEnabledForVaryByStar():System.Boolean">
				<signature>System.Web.HttpResponse.IsKernelCacheEnabledForVaryByStar():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ObserveResponseEndCalled" uniqueID="ObserveResponseEndCalled():System.Void">
				<signature>System.Web.HttpResponse.ObserveResponseEndCalled():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCookieAdd" uniqueID="OnCookieAdd(System.Web.HttpCookie):System.Void">
				<signature>System.Web.HttpResponse.OnCookieAdd(System.Web.HttpCookie):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCookieCollectionChange" uniqueID="OnCookieCollectionChange():System.Void">
				<signature>System.Web.HttpResponse.OnCookieCollectionChange():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Pics" uniqueID="Pics(System.String):System.Void">
				<signature>System.Web.HttpResponse.Pics(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Redirect" uniqueID="Redirect(System.String):System.Void">
				<signature>System.Web.HttpResponse.Redirect(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Redirect" uniqueID="Redirect(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.Redirect(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Redirect" uniqueID="Redirect(System.String;System.Boolean;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.Redirect(System.String;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectPermanent" uniqueID="RedirectPermanent(System.String):System.Void">
				<signature>System.Web.HttpResponse.RedirectPermanent(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectPermanent" uniqueID="RedirectPermanent(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.RedirectPermanent(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RedirectToErrorPage" uniqueID="RedirectToErrorPage(System.String;System.Web.Configuration.CustomErrorsRedirectMode):System.Web.HttpResponse+RedirectToErrorPageStatus">
				<signature>System.Web.HttpResponse.RedirectToErrorPage(System.String;System.Web.Configuration.CustomErrorsRedirectMode):System.Web.HttpResponse+RedirectToErrorPageStatus</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.Object):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String;System.Object):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.String;System.Web.Routing.RouteValueDictionary;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoute" uniqueID="RedirectToRoute(System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.Object):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoutePermanent(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoutePermanent(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String;System.Object):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoutePermanent(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.String;System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoutePermanent(System.String;System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RedirectToRoutePermanent" uniqueID="RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary):System.Void">
				<signature>System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveAppPathModifier" uniqueID="RemoveAppPathModifier(System.String):System.String">
				<signature>System.Web.HttpResponse.RemoveAppPathModifier(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReportRuntimeError" uniqueID="ReportRuntimeError(System.Exception;System.Boolean;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.ReportRuntimeError(System.Exception;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetAllocatorProvider" uniqueID="SetAllocatorProvider(System.Web.IAllocatorProvider):System.Void">
				<signature>System.Web.HttpResponse.SetAllocatorProvider(System.Web.IAllocatorProvider):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetAppPathModifier" uniqueID="SetAppPathModifier(System.String):System.Void">
				<signature>System.Web.HttpResponse.SetAppPathModifier(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetCookie" uniqueID="SetCookie(System.Web.HttpCookie):System.Void">
				<signature>System.Web.HttpResponse.SetCookie(System.Web.HttpCookie):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetOverrideErrorFormatter" uniqueID="SetOverrideErrorFormatter(System.Web.ErrorFormatter):System.Void">
				<signature>System.Web.HttpResponse.SetOverrideErrorFormatter(System.Web.ErrorFormatter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetStatusCode" uniqueID="SetStatusCode(System.Int32;System.Int32):System.Void">
				<signature>System.Web.HttpResponse.SetStatusCode(System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetupKernelCaching" uniqueID="SetupKernelCaching(System.String):System.String">
				<signature>System.Web.HttpResponse.SetupKernelCaching(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SuppressCachingCookiesIfNecessary" uniqueID="SuppressCachingCookiesIfNecessary():System.Void">
				<signature>System.Web.HttpResponse.SuppressCachingCookiesIfNecessary():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SwitchWriter" uniqueID="SwitchWriter(System.IO.TextWriter):System.IO.TextWriter">
				<signature>System.Web.HttpResponse.SwitchWriter(System.IO.TextWriter):System.IO.TextWriter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SyncStatusIntegrated" uniqueID="SyncStatusIntegrated():System.Void">
				<signature>System.Web.HttpResponse.SyncStatusIntegrated():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SynchronizeHeader" uniqueID="SynchronizeHeader(System.Int32;System.String;System.String):System.Void">
				<signature>System.Web.HttpResponse.SynchronizeHeader(System.Int32;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SynchronizeStatus" uniqueID="SynchronizeStatus(System.Int32;System.Int32;System.String):System.Void">
				<signature>System.Web.HttpResponse.SynchronizeStatus(System.Int32;System.Int32;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TransmitFile" uniqueID="TransmitFile(System.String):System.Void">
				<signature>System.Web.HttpResponse.TransmitFile(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TransmitFile" uniqueID="TransmitFile(System.String;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponse.TransmitFile(System.String;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UpdateNativeResponse" uniqueID="UpdateNativeResponse(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.UpdateNativeResponse(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UrlEncodeIDNSafe" uniqueID="UrlEncodeIDNSafe(System.String):System.String">
				<signature>System.Web.HttpResponse.UrlEncodeIDNSafe(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UrlEncodeRedirect" uniqueID="UrlEncodeRedirect(System.String):System.String">
				<signature>System.Web.HttpResponse.UrlEncodeRedirect(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UseSnapshot" uniqueID="UseSnapshot(System.Web.HttpRawResponse;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.UseSnapshot(System.Web.HttpRawResponse;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateFileRange" uniqueID="ValidateFileRange(System.String;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponse.ValidateFileRange(System.String;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char):System.Void">
				<signature>System.Web.HttpResponse.Write(System.Char):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Char[];System.Int32;System.Int32):System.Void">
				<signature>System.Web.HttpResponse.Write(System.Char[];System.Int32;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.Object):System.Void">
				<signature>System.Web.HttpResponse.Write(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Write" uniqueID="Write(System.String):System.Void">
				<signature>System.Web.HttpResponse.Write(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteErrorMessage" uniqueID="WriteErrorMessage(System.Exception;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.WriteErrorMessage(System.Exception;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteExceptionStack" uniqueID="WriteExceptionStack(System.Exception):System.Void">
				<signature>System.Web.HttpResponse.WriteExceptionStack(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.IntPtr;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponse.WriteFile(System.IntPtr;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.String):System.Void">
				<signature>System.Web.HttpResponse.WriteFile(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.String;System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.WriteFile(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteFile" uniqueID="WriteFile(System.String;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponse.WriteFile(System.String;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteHeaders" uniqueID="WriteHeaders():System.Void">
				<signature>System.Web.HttpResponse.WriteHeaders():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteOneExceptionStack" uniqueID="WriteOneExceptionStack(System.Exception):System.Void">
				<signature>System.Web.HttpResponse.WriteOneExceptionStack(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="WriteStreamAsText" uniqueID="WriteStreamAsText(System.IO.Stream;System.Int64;System.Int64):System.Void">
				<signature>System.Web.HttpResponse.WriteStreamAsText(System.IO.Stream;System.Int64;System.Int64):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteSubstitution" uniqueID="WriteSubstitution(System.Web.HttpResponseSubstitutionCallback):System.Void">
				<signature>System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="WriteVirtualFile" uniqueID="WriteVirtualFile(System.Web.Hosting.VirtualFile):System.Void">
				<signature>System.Web.HttpResponse.WriteVirtualFile(System.Web.Hosting.VirtualFile):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Buffer" uniqueID="get_Buffer():System.Boolean">
				<signature>System.Web.HttpResponse.get_Buffer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BufferOutput" uniqueID="get_BufferOutput():System.Boolean">
				<signature>System.Web.HttpResponse.get_BufferOutput():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cache" uniqueID="get_Cache():System.Web.HttpCachePolicy">
				<signature>System.Web.HttpResponse.get_Cache():System.Web.HttpCachePolicy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CacheControl" uniqueID="get_CacheControl():System.String">
				<signature>System.Web.HttpResponse.get_CacheControl():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CanExecuteUrlForEntireResponse" uniqueID="get_CanExecuteUrlForEntireResponse():System.Boolean">
				<signature>System.Web.HttpResponse.get_CanExecuteUrlForEntireResponse():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Charset" uniqueID="get_Charset():System.String">
				<signature>System.Web.HttpResponse.get_Charset():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientDisconnectedToken" uniqueID="get_ClientDisconnectedToken():System.Threading.CancellationToken">
				<signature>System.Web.HttpResponse.get_ClientDisconnectedToken():System.Threading.CancellationToken</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ContentEncoder" uniqueID="get_ContentEncoder():System.Text.Encoder">
				<signature>System.Web.HttpResponse.get_ContentEncoder():System.Text.Encoder</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentEncoding" uniqueID="get_ContentEncoding():System.Text.Encoding">
				<signature>System.Web.HttpResponse.get_ContentEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentType" uniqueID="get_ContentType():System.String">
				<signature>System.Web.HttpResponse.get_ContentType():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Context" uniqueID="get_Context():System.Web.HttpContext">
				<signature>System.Web.HttpResponse.get_Context():System.Web.HttpContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cookies" uniqueID="get_Cookies():System.Web.HttpCookieCollection">
				<signature>System.Web.HttpResponse.get_Cookies():System.Web.HttpCookieCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expires" uniqueID="get_Expires():System.Int32">
				<signature>System.Web.HttpResponse.get_Expires():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ExpiresAbsolute" uniqueID="get_ExpiresAbsolute():System.DateTime">
				<signature>System.Web.HttpResponse.get_ExpiresAbsolute():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Filter" uniqueID="get_Filter():System.IO.Stream">
				<signature>System.Web.HttpResponse.get_Filter():System.IO.Stream</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasCachePolicy" uniqueID="get_HasCachePolicy():System.Boolean">
				<signature>System.Web.HttpResponse.get_HasCachePolicy():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HeaderEncoding" uniqueID="get_HeaderEncoding():System.Text.Encoding">
				<signature>System.Web.HttpResponse.get_HeaderEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Headers" uniqueID="get_Headers():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.HttpResponse.get_Headers():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HeadersWritten" uniqueID="get_HeadersWritten():System.Boolean">
				<signature>System.Web.HttpResponse.get_HeadersWritten():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClientConnected" uniqueID="get_IsClientConnected():System.Boolean">
				<signature>System.Web.HttpResponse.get_IsClientConnected():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsRequestBeingRedirected" uniqueID="get_IsRequestBeingRedirected():System.Boolean">
				<signature>System.Web.HttpResponse.get_IsRequestBeingRedirected():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Output" uniqueID="get_Output():System.IO.TextWriter">
				<signature>System.Web.HttpResponse.get_Output():System.IO.TextWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OutputStream" uniqueID="get_OutputStream():System.IO.Stream">
				<signature>System.Web.HttpResponse.get_OutputStream():System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RedirectLocation" uniqueID="get_RedirectLocation():System.String">
				<signature>System.Web.HttpResponse.get_RedirectLocation():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Request" uniqueID="get_Request():System.Web.HttpRequest">
				<signature>System.Web.HttpResponse.get_Request():System.Web.HttpRequest</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Status" uniqueID="get_Status():System.String">
				<signature>System.Web.HttpResponse.get_Status():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StatusCode" uniqueID="get_StatusCode():System.Int32">
				<signature>System.Web.HttpResponse.get_StatusCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StatusDescription" uniqueID="get_StatusDescription():System.String">
				<signature>System.Web.HttpResponse.get_StatusDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SubStatusCode" uniqueID="get_SubStatusCode():System.Int32">
				<signature>System.Web.HttpResponse.get_SubStatusCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsAsyncFlush" uniqueID="get_SupportsAsyncFlush():System.Boolean">
				<signature>System.Web.HttpResponse.get_SupportsAsyncFlush():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SuppressContent" uniqueID="get_SuppressContent():System.Boolean">
				<signature>System.Web.HttpResponse.get_SuppressContent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SuppressDefaultCacheControlHeader" uniqueID="get_SuppressDefaultCacheControlHeader():System.Boolean">
				<signature>System.Web.HttpResponse.get_SuppressDefaultCacheControlHeader():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SuppressFormsAuthenticationRedirect" uniqueID="get_SuppressFormsAuthenticationRedirect():System.Boolean">
				<signature>System.Web.HttpResponse.get_SuppressFormsAuthenticationRedirect():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TrySkipIisCustomErrors" uniqueID="get_TrySkipIisCustomErrors():System.Boolean">
				<signature>System.Web.HttpResponse.get_TrySkipIisCustomErrors():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UseAdaptiveError" uniqueID="get_UseAdaptiveError():System.Boolean">
				<signature>System.Web.HttpResponse.get_UseAdaptiveError():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UsePathModifier" uniqueID="get_UsePathModifier():System.Boolean">
				<signature>System.Web.HttpResponse.get_UsePathModifier():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_UsingHttpWriter" uniqueID="get_UsingHttpWriter():System.Boolean">
				<signature>System.Web.HttpResponse.get_UsingHttpWriter():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Buffer" uniqueID="set_Buffer(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_Buffer(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_BufferOutput" uniqueID="set_BufferOutput(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_BufferOutput(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CacheControl" uniqueID="set_CacheControl(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_CacheControl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Charset" uniqueID="set_Charset(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_Charset(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentEncoding" uniqueID="set_ContentEncoding(System.Text.Encoding):System.Void">
				<signature>System.Web.HttpResponse.set_ContentEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentType" uniqueID="set_ContentType(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_ContentType(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Context" uniqueID="set_Context(System.Web.HttpContext):System.Void">
				<signature>System.Web.HttpResponse.set_Context(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Expires" uniqueID="set_Expires(System.Int32):System.Void">
				<signature>System.Web.HttpResponse.set_Expires(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ExpiresAbsolute" uniqueID="set_ExpiresAbsolute(System.DateTime):System.Void">
				<signature>System.Web.HttpResponse.set_ExpiresAbsolute(System.DateTime):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Filter" uniqueID="set_Filter(System.IO.Stream):System.Void">
				<signature>System.Web.HttpResponse.set_Filter(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HeaderEncoding" uniqueID="set_HeaderEncoding(System.Text.Encoding):System.Void">
				<signature>System.Web.HttpResponse.set_HeaderEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_HeadersWritten" uniqueID="set_HeadersWritten(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_HeadersWritten(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_IsRequestBeingRedirected" uniqueID="set_IsRequestBeingRedirected(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_IsRequestBeingRedirected(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Output" uniqueID="set_Output(System.IO.TextWriter):System.Void">
				<signature>System.Web.HttpResponse.set_Output(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RedirectLocation" uniqueID="set_RedirectLocation(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_RedirectLocation(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Status" uniqueID="set_Status(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_Status(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_StatusCode" uniqueID="set_StatusCode(System.Int32):System.Void">
				<signature>System.Web.HttpResponse.set_StatusCode(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_StatusDescription" uniqueID="set_StatusDescription(System.String):System.Void">
				<signature>System.Web.HttpResponse.set_StatusDescription(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SubStatusCode" uniqueID="set_SubStatusCode(System.Int32):System.Void">
				<signature>System.Web.HttpResponse.set_SubStatusCode(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SuppressContent" uniqueID="set_SuppressContent(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_SuppressContent(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SuppressDefaultCacheControlHeader" uniqueID="set_SuppressDefaultCacheControlHeader(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_SuppressDefaultCacheControlHeader(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SuppressFormsAuthenticationRedirect" uniqueID="set_SuppressFormsAuthenticationRedirect(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_SuppressFormsAuthenticationRedirect(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TrySkipIisCustomErrors" uniqueID="set_TrySkipIisCustomErrors(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_TrySkipIisCustomErrors(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_UseAdaptiveError" uniqueID="set_UseAdaptiveError(System.Boolean):System.Void">
				<signature>System.Web.HttpResponse.set_UseAdaptiveError(System.Boolean):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.ComponentModel">
		<class name="IComponent" uniqueID="System.ComponentModel.IComponent">
			<method accessibility="Public" methodKind="Member" name="add_Disposed" uniqueID="add_Disposed(System.EventHandler):System.Void">
				<signature>System.ComponentModel.IComponent.add_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Site" uniqueID="get_Site():System.ComponentModel.ISite">
				<signature>System.ComponentModel.IComponent.get_Site():System.ComponentModel.ISite</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Disposed" uniqueID="remove_Disposed(System.EventHandler):System.Void">
				<signature>System.ComponentModel.IComponent.remove_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Site" uniqueID="set_Site(System.ComponentModel.ISite):System.Void">
				<signature>System.ComponentModel.IComponent.set_Site(System.ComponentModel.ISite):System.Void</signature>
			</method>
		</class>
		<class name="Component" uniqueID="System.ComponentModel.Component">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.ComponentModel.Component.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Component" uniqueID="Component():System.Void">
				<signature>System.ComponentModel.Component.Component():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.ComponentModel.Component.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.ComponentModel.Component.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Finalize" uniqueID="Finalize():System.Void">
				<signature>System.ComponentModel.Component.Finalize():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetService" uniqueID="GetService(System.Type):System.Object">
				<signature>System.ComponentModel.Component.GetService(System.Type):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.ComponentModel.Component.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Disposed" uniqueID="add_Disposed(System.EventHandler):System.Void">
				<signature>System.ComponentModel.Component.add_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CanRaiseEvents" uniqueID="get_CanRaiseEvents():System.Boolean">
				<signature>System.ComponentModel.Component.get_CanRaiseEvents():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CanRaiseEventsInternal" uniqueID="get_CanRaiseEventsInternal():System.Boolean">
				<signature>System.ComponentModel.Component.get_CanRaiseEventsInternal():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Container" uniqueID="get_Container():System.ComponentModel.IContainer">
				<signature>System.ComponentModel.Component.get_Container():System.ComponentModel.IContainer</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DesignMode" uniqueID="get_DesignMode():System.Boolean">
				<signature>System.ComponentModel.Component.get_DesignMode():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Events" uniqueID="get_Events():System.ComponentModel.EventHandlerList">
				<signature>System.ComponentModel.Component.get_Events():System.ComponentModel.EventHandlerList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Site" uniqueID="get_Site():System.ComponentModel.ISite">
				<signature>System.ComponentModel.Component.get_Site():System.ComponentModel.ISite</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Disposed" uniqueID="remove_Disposed(System.EventHandler):System.Void">
				<signature>System.ComponentModel.Component.remove_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Site" uniqueID="set_Site(System.ComponentModel.ISite):System.Void">
				<signature>System.ComponentModel.Component.set_Site(System.ComponentModel.ISite):System.Void</signature>
			</method>
		</class>
		<class name="IListSource" uniqueID="System.ComponentModel.IListSource">
			<method accessibility="Public" methodKind="Member" name="GetList" uniqueID="GetList():System.Collections.IList">
				<signature>System.ComponentModel.IListSource.GetList():System.Collections.IList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContainsListCollection" uniqueID="get_ContainsListCollection():System.Boolean">
				<signature>System.ComponentModel.IListSource.get_ContainsListCollection():System.Boolean</signature>
			</method>
		</class>
		<class name="IBindingList" uniqueID="System.ComponentModel.IBindingList">
			<method accessibility="Public" methodKind="Member" name="AddIndex" uniqueID="AddIndex(System.ComponentModel.PropertyDescriptor):System.Void">
				<signature>System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddNew" uniqueID="AddNew():System.Object">
				<signature>System.ComponentModel.IBindingList.AddNew():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ApplySort" uniqueID="ApplySort(System.ComponentModel.PropertyDescriptor;System.ComponentModel.ListSortDirection):System.Void">
				<signature>System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor;System.ComponentModel.ListSortDirection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Find" uniqueID="Find(System.ComponentModel.PropertyDescriptor;System.Object):System.Int32">
				<signature>System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveIndex" uniqueID="RemoveIndex(System.ComponentModel.PropertyDescriptor):System.Void">
				<signature>System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveSort" uniqueID="RemoveSort():System.Void">
				<signature>System.ComponentModel.IBindingList.RemoveSort():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_ListChanged" uniqueID="add_ListChanged(System.ComponentModel.ListChangedEventHandler):System.Void">
				<signature>System.ComponentModel.IBindingList.add_ListChanged(System.ComponentModel.ListChangedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowEdit" uniqueID="get_AllowEdit():System.Boolean">
				<signature>System.ComponentModel.IBindingList.get_AllowEdit():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowNew" uniqueID="get_AllowNew():System.Boolean">
				<signature>System.ComponentModel.IBindingList.get_AllowNew():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowRemove" uniqueID="get_AllowRemove():System.Boolean">
				<signature>System.ComponentModel.IBindingList.get_AllowRemove():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSorted" uniqueID="get_IsSorted():System.Boolean">
				<signature>System.ComponentModel.IBindingList.get_IsSorted():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SortDirection" uniqueID="get_SortDirection():System.ComponentModel.ListSortDirection">
				<signature>System.ComponentModel.IBindingList.get_SortDirection():System.ComponentModel.ListSortDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SortProperty" uniqueID="get_SortProperty():System.ComponentModel.PropertyDescriptor">
				<signature>System.ComponentModel.IBindingList.get_SortProperty():System.ComponentModel.PropertyDescriptor</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsChangeNotification" uniqueID="get_SupportsChangeNotification():System.Boolean">
				<signature>System.ComponentModel.IBindingList.get_SupportsChangeNotification():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsSearching" uniqueID="get_SupportsSearching():System.Boolean">
				<signature>System.ComponentModel.IBindingList.get_SupportsSearching():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsSorting" uniqueID="get_SupportsSorting():System.Boolean">
				<signature>System.ComponentModel.IBindingList.get_SupportsSorting():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_ListChanged" uniqueID="remove_ListChanged(System.ComponentModel.ListChangedEventHandler):System.Void">
				<signature>System.ComponentModel.IBindingList.remove_ListChanged(System.ComponentModel.ListChangedEventHandler):System.Void</signature>
			</method>
		</class>
		<class name="IBindingListView" uniqueID="System.ComponentModel.IBindingListView">
			<method accessibility="Public" methodKind="Member" name="ApplySort" uniqueID="ApplySort(System.ComponentModel.ListSortDescriptionCollection):System.Void">
				<signature>System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveFilter" uniqueID="RemoveFilter():System.Void">
				<signature>System.ComponentModel.IBindingListView.RemoveFilter():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Filter" uniqueID="get_Filter():System.String">
				<signature>System.ComponentModel.IBindingListView.get_Filter():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SortDescriptions" uniqueID="get_SortDescriptions():System.ComponentModel.ListSortDescriptionCollection">
				<signature>System.ComponentModel.IBindingListView.get_SortDescriptions():System.ComponentModel.ListSortDescriptionCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsAdvancedSorting" uniqueID="get_SupportsAdvancedSorting():System.Boolean">
				<signature>System.ComponentModel.IBindingListView.get_SupportsAdvancedSorting():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsFiltering" uniqueID="get_SupportsFiltering():System.Boolean">
				<signature>System.ComponentModel.IBindingListView.get_SupportsFiltering():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Filter" uniqueID="set_Filter(System.String):System.Void">
				<signature>System.ComponentModel.IBindingListView.set_Filter(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ISupportInitialize" uniqueID="System.ComponentModel.ISupportInitialize">
			<method accessibility="Public" methodKind="Member" name="BeginInit" uniqueID="BeginInit():System.Void">
				<signature>System.ComponentModel.ISupportInitialize.BeginInit():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInit" uniqueID="EndInit():System.Void">
				<signature>System.ComponentModel.ISupportInitialize.EndInit():System.Void</signature>
			</method>
		</class>
		<class name="ISupportInitializeNotification" uniqueID="System.ComponentModel.ISupportInitializeNotification">
			<method accessibility="Public" methodKind="Member" name="add_Initialized" uniqueID="add_Initialized(System.EventHandler):System.Void">
				<signature>System.ComponentModel.ISupportInitializeNotification.add_Initialized(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInitialized" uniqueID="get_IsInitialized():System.Boolean">
				<signature>System.ComponentModel.ISupportInitializeNotification.get_IsInitialized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Initialized" uniqueID="remove_Initialized(System.EventHandler):System.Void">
				<signature>System.ComponentModel.ISupportInitializeNotification.remove_Initialized(System.EventHandler):System.Void</signature>
			</method>
		</class>
		<class name="MarshalByValueComponent" uniqueID="System.ComponentModel.MarshalByValueComponent">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.ComponentModel.MarshalByValueComponent.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.ComponentModel.MarshalByValueComponent.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Finalize" uniqueID="Finalize():System.Void">
				<signature>System.ComponentModel.MarshalByValueComponent.Finalize():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetService" uniqueID="GetService(System.Type):System.Object">
				<signature>System.ComponentModel.MarshalByValueComponent.GetService(System.Type):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MarshalByValueComponent" uniqueID="MarshalByValueComponent():System.Void">
				<signature>System.ComponentModel.MarshalByValueComponent.MarshalByValueComponent():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.ComponentModel.MarshalByValueComponent.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Disposed" uniqueID="add_Disposed(System.EventHandler):System.Void">
				<signature>System.ComponentModel.MarshalByValueComponent.add_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Container" uniqueID="get_Container():System.ComponentModel.IContainer">
				<signature>System.ComponentModel.MarshalByValueComponent.get_Container():System.ComponentModel.IContainer</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DesignMode" uniqueID="get_DesignMode():System.Boolean">
				<signature>System.ComponentModel.MarshalByValueComponent.get_DesignMode():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Events" uniqueID="get_Events():System.ComponentModel.EventHandlerList">
				<signature>System.ComponentModel.MarshalByValueComponent.get_Events():System.ComponentModel.EventHandlerList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Site" uniqueID="get_Site():System.ComponentModel.ISite">
				<signature>System.ComponentModel.MarshalByValueComponent.get_Site():System.ComponentModel.ISite</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Disposed" uniqueID="remove_Disposed(System.EventHandler):System.Void">
				<signature>System.ComponentModel.MarshalByValueComponent.remove_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Site" uniqueID="set_Site(System.ComponentModel.ISite):System.Void">
				<signature>System.ComponentModel.MarshalByValueComponent.set_Site(System.ComponentModel.ISite):System.Void</signature>
			</method>
		</class>
		<class name="ITypedList" uniqueID="System.ComponentModel.ITypedList">
			<method accessibility="Public" methodKind="Member" name="GetItemProperties" uniqueID="GetItemProperties(System.ComponentModel.PropertyDescriptor[]):System.ComponentModel.PropertyDescriptorCollection">
				<signature>System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[]):System.ComponentModel.PropertyDescriptorCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetListName" uniqueID="GetListName(System.ComponentModel.PropertyDescriptor[]):System.String">
				<signature>System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[]):System.String</signature>
			</method>
		</class>
	</package>
	<package name="System.Web.UI">
		<class name="IControlBuilderAccessor" uniqueID="System.Web.UI.IControlBuilderAccessor">
			<method accessibility="Public" methodKind="Member" name="get_ControlBuilder" uniqueID="get_ControlBuilder():System.Web.UI.ControlBuilder">
				<signature>System.Web.UI.IControlBuilderAccessor.get_ControlBuilder():System.Web.UI.ControlBuilder</signature>
			</method>
		</class>
		<class name="TemplateControl" uniqueID="System.Web.UI.TemplateControl">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.UI.TemplateControl.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="ReadStringResource" uniqueID="ReadStringResource(System.Type):System.Object">
				<signature>System.Web.UI.TemplateControl.ReadStringResource(System.Type):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddStackContextToHashCode" uniqueID="AddStackContextToHashCode(System.Web.Util.HashCodeCombiner):System.Void">
				<signature>System.Web.UI.TemplateControl.AddStackContextToHashCode(System.Web.Util.HashCodeCombiner):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckPageExists" uniqueID="CheckPageExists():System.Void">
				<signature>System.Web.UI.TemplateControl.CheckPageExists():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Construct" uniqueID="Construct():System.Void">
				<signature>System.Web.UI.TemplateControl.Construct():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateResourceBasedLiteralControl" uniqueID="CreateResourceBasedLiteralControl(System.Int32;System.Int32;System.Boolean):System.Web.UI.LiteralControl">
				<signature>System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32;System.Int32;System.Boolean):System.Web.UI.LiteralControl</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Eval" uniqueID="Eval(System.String):System.Object">
				<signature>System.Web.UI.TemplateControl.Eval(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Eval" uniqueID="Eval(System.String;System.String):System.String">
				<signature>System.Web.UI.TemplateControl.Eval(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FrameworkInitialize" uniqueID="FrameworkInitialize():System.Void">
				<signature>System.Web.UI.TemplateControl.FrameworkInitialize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDelegateInformation" uniqueID="GetDelegateInformation(System.Web.UI.TemplateControl+EventList):System.Void">
				<signature>System.Web.UI.TemplateControl.GetDelegateInformation(System.Web.UI.TemplateControl+EventList):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDelegateInformationFromAsyncMethod" uniqueID="GetDelegateInformationFromAsyncMethod(System.String;System.Collections.Generic.IDictionary&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;):System.Boolean">
				<signature>System.Web.UI.TemplateControl.GetDelegateInformationFromAsyncMethod(System.String;System.Collections.Generic.IDictionary&lt;System.String;System.Web.UI.TemplateControl+AsyncEventMethodInfo&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDelegateInformationFromSyncMethod" uniqueID="GetDelegateInformationFromSyncMethod(System.String;System.Collections.Generic.IDictionary&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;):System.Boolean">
				<signature>System.Web.UI.TemplateControl.GetDelegateInformationFromSyncMethod(System.String;System.Collections.Generic.IDictionary&lt;System.String;System.Web.UI.TemplateControl+SyncEventMethodInfo&gt;):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDelegateInformationWithAssert" uniqueID="GetDelegateInformationWithAssert(System.Web.UI.TemplateControl+EventList):System.Void">
				<signature>System.Web.UI.TemplateControl.GetDelegateInformationWithAssert(System.Web.UI.TemplateControl+EventList):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetDelegateInformationWithNoAssert" uniqueID="GetDelegateInformationWithNoAssert(System.Web.UI.TemplateControl+EventList):System.Void">
				<signature>System.Web.UI.TemplateControl.GetDelegateInformationWithNoAssert(System.Web.UI.TemplateControl+EventList):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetGlobalResourceObject" uniqueID="GetGlobalResourceObject(System.String;System.String):System.Object">
				<signature>System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String;System.String):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetGlobalResourceObject" uniqueID="GetGlobalResourceObject(System.String;System.String;System.Type;System.String):System.Object">
				<signature>System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String;System.String;System.Type;System.String):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetInstanceMethodInfo" uniqueID="GetInstanceMethodInfo(System.Type;System.String):System.Reflection.MethodInfo">
				<signature>System.Web.UI.TemplateControl.GetInstanceMethodInfo(System.Type;System.String):System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetLocalResourceObject" uniqueID="GetLocalResourceObject(System.String):System.Object">
				<signature>System.Web.UI.TemplateControl.GetLocalResourceObject(System.String):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetLocalResourceObject" uniqueID="GetLocalResourceObject(System.String;System.Type;System.String):System.Object">
				<signature>System.Web.UI.TemplateControl.GetLocalResourceObject(System.String;System.Type;System.String):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTemplateControl" uniqueID="GetTemplateControl():System.Web.UI.TemplateControl">
				<signature>System.Web.UI.TemplateControl.GetTemplateControl():System.Web.UI.TemplateControl</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HookUpAutomaticHandlers" uniqueID="HookUpAutomaticHandlers():System.Void">
				<signature>System.Web.UI.TemplateControl.HookUpAutomaticHandlers():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LoadControl" uniqueID="LoadControl(System.String):System.Web.UI.Control">
				<signature>System.Web.UI.TemplateControl.LoadControl(System.String):System.Web.UI.Control</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LoadControl" uniqueID="LoadControl(System.Type;System.Object[]):System.Web.UI.Control">
				<signature>System.Web.UI.TemplateControl.LoadControl(System.Type;System.Object[]):System.Web.UI.Control</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="LoadControl" uniqueID="LoadControl(System.Web.Util.IWebObjectFactory;System.Web.VirtualPath;System.Type;System.Object[]):System.Web.UI.Control">
				<signature>System.Web.UI.TemplateControl.LoadControl(System.Web.Util.IWebObjectFactory;System.Web.VirtualPath;System.Type;System.Object[]):System.Web.UI.Control</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadControl" uniqueID="LoadControl(System.Web.VirtualPath):System.Web.UI.Control">
				<signature>System.Web.UI.TemplateControl.LoadControl(System.Web.VirtualPath):System.Web.UI.Control</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LoadTemplate" uniqueID="LoadTemplate(System.String):System.Web.UI.ITemplate">
				<signature>System.Web.UI.TemplateControl.LoadTemplate(System.String):System.Web.UI.ITemplate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadTemplate" uniqueID="LoadTemplate(System.Web.VirtualPath):System.Web.UI.ITemplate">
				<signature>System.Web.UI.TemplateControl.LoadTemplate(System.Web.VirtualPath):System.Web.UI.ITemplate</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnAbortTransaction" uniqueID="OnAbortTransaction(System.EventArgs):System.Void">
				<signature>System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCommitTransaction" uniqueID="OnCommitTransaction(System.EventArgs):System.Void">
				<signature>System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnError" uniqueID="OnError(System.EventArgs):System.Void">
				<signature>System.Web.UI.TemplateControl.OnError(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ParseControl" uniqueID="ParseControl(System.String):System.Web.UI.Control">
				<signature>System.Web.UI.TemplateControl.ParseControl(System.String):System.Web.UI.Control</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ParseControl" uniqueID="ParseControl(System.String;System.Boolean):System.Web.UI.Control">
				<signature>System.Web.UI.TemplateControl.ParseControl(System.String;System.Boolean):System.Web.UI.Control</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadStringResource" uniqueID="ReadStringResource():System.Object">
				<signature>System.Web.UI.TemplateControl.ReadStringResource():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetNoCompileBuildResult" uniqueID="SetNoCompileBuildResult(System.Web.Compilation.BuildResultNoCompileTemplateControl):System.Void">
				<signature>System.Web.UI.TemplateControl.SetNoCompileBuildResult(System.Web.Compilation.BuildResultNoCompileTemplateControl):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetStringResourcePointer" uniqueID="SetStringResourcePointer(System.Object;System.Int32):System.Void">
				<signature>System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IFilterResolutionService.CompareFilters" uniqueID="System.Web.UI.IFilterResolutionService.CompareFilters(System.String;System.String):System.Int32">
				<signature>System.Web.UI.TemplateControl.System.Web.UI.IFilterResolutionService.CompareFilters(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IFilterResolutionService.EvaluateFilter" uniqueID="System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String):System.Boolean">
				<signature>System.Web.UI.TemplateControl.System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TemplateControl" uniqueID="TemplateControl():System.Void">
				<signature>System.Web.UI.TemplateControl.TemplateControl():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TestDeviceFilter" uniqueID="TestDeviceFilter(System.String):System.Boolean">
				<signature>System.Web.UI.TemplateControl.TestDeviceFilter(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="WriteUTF8ResourceString" uniqueID="WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter;System.Int32;System.Int32;System.Boolean):System.Void">
				<signature>System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter;System.Int32;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPath" uniqueID="XPath(System.String):System.Object">
				<signature>System.Web.UI.TemplateControl.XPath(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPath" uniqueID="XPath(System.String;System.String):System.String">
				<signature>System.Web.UI.TemplateControl.XPath(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPath" uniqueID="XPath(System.String;System.String;System.Xml.IXmlNamespaceResolver):System.String">
				<signature>System.Web.UI.TemplateControl.XPath(System.String;System.String;System.Xml.IXmlNamespaceResolver):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPath" uniqueID="XPath(System.String;System.Xml.IXmlNamespaceResolver):System.Object">
				<signature>System.Web.UI.TemplateControl.XPath(System.String;System.Xml.IXmlNamespaceResolver):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPathSelect" uniqueID="XPathSelect(System.String):System.Collections.IEnumerable">
				<signature>System.Web.UI.TemplateControl.XPathSelect(System.String):System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPathSelect" uniqueID="XPathSelect(System.String;System.Xml.IXmlNamespaceResolver):System.Collections.IEnumerable">
				<signature>System.Web.UI.TemplateControl.XPathSelect(System.String;System.Xml.IXmlNamespaceResolver):System.Collections.IEnumerable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_AbortTransaction" uniqueID="add_AbortTransaction(System.EventHandler):System.Void">
				<signature>System.Web.UI.TemplateControl.add_AbortTransaction(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CommitTransaction" uniqueID="add_CommitTransaction(System.EventHandler):System.Void">
				<signature>System.Web.UI.TemplateControl.add_CommitTransaction(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Error" uniqueID="add_Error(System.EventHandler):System.Void">
				<signature>System.Web.UI.TemplateControl.add_Error(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AppRelativeVirtualPath" uniqueID="get_AppRelativeVirtualPath():System.String">
				<signature>System.Web.UI.TemplateControl.get_AppRelativeVirtualPath():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AutoHandlers" uniqueID="get_AutoHandlers():System.Int32">
				<signature>System.Web.UI.TemplateControl.get_AutoHandlers():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableTheming" uniqueID="get_EnableTheming():System.Boolean">
				<signature>System.Web.UI.TemplateControl.get_EnableTheming():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MaxResourceOffset" uniqueID="get_MaxResourceOffset():System.Int32">
				<signature>System.Web.UI.TemplateControl.get_MaxResourceOffset():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NoCompile" uniqueID="get_NoCompile():System.Boolean">
				<signature>System.Web.UI.TemplateControl.get_NoCompile():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_StringResourcePointer" uniqueID="get_StringResourcePointer():System.IntPtr">
				<signature>System.Web.UI.TemplateControl.get_StringResourcePointer():System.IntPtr</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SupportAutoEvents" uniqueID="get_SupportAutoEvents():System.Boolean">
				<signature>System.Web.UI.TemplateControl.get_SupportAutoEvents():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TemplateControlVirtualPath" uniqueID="get_TemplateControlVirtualPath():System.Web.VirtualPath">
				<signature>System.Web.UI.TemplateControl.get_TemplateControlVirtualPath():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_VirtualPath" uniqueID="get_VirtualPath():System.Web.VirtualPath">
				<signature>System.Web.UI.TemplateControl.get_VirtualPath():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_AbortTransaction" uniqueID="remove_AbortTransaction(System.EventHandler):System.Void">
				<signature>System.Web.UI.TemplateControl.remove_AbortTransaction(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CommitTransaction" uniqueID="remove_CommitTransaction(System.EventHandler):System.Void">
				<signature>System.Web.UI.TemplateControl.remove_CommitTransaction(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Error" uniqueID="remove_Error(System.EventHandler):System.Void">
				<signature>System.Web.UI.TemplateControl.remove_Error(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AppRelativeVirtualPath" uniqueID="set_AppRelativeVirtualPath(System.String):System.Void">
				<signature>System.Web.UI.TemplateControl.set_AppRelativeVirtualPath(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AutoHandlers" uniqueID="set_AutoHandlers(System.Int32):System.Void">
				<signature>System.Web.UI.TemplateControl.set_AutoHandlers(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableTheming" uniqueID="set_EnableTheming(System.Boolean):System.Void">
				<signature>System.Web.UI.TemplateControl.set_EnableTheming(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_TemplateControlVirtualPath" uniqueID="set_TemplateControlVirtualPath(System.Web.VirtualPath):System.Void">
				<signature>System.Web.UI.TemplateControl.set_TemplateControlVirtualPath(System.Web.VirtualPath):System.Void</signature>
			</method>
		</class>
		<class name="Control" uniqueID="System.Web.UI.Control">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.UI.Control.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddParsedSubObject" uniqueID="AddParsedSubObject(System.Object):System.Void">
				<signature>System.Web.UI.Control.AddParsedSubObject(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddedControl" uniqueID="AddedControl(System.Web.UI.Control;System.Int32):System.Void">
				<signature>System.Web.UI.Control.AddedControl(System.Web.UI.Control;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ApplySkin" uniqueID="ApplySkin(System.Web.UI.Page):System.Void">
				<signature>System.Web.UI.Control.ApplySkin(System.Web.UI.Page):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ApplyStyleSheetSkin" uniqueID="ApplyStyleSheetSkin(System.Web.UI.Page):System.Void">
				<signature>System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BeginRenderTracing" uniqueID="BeginRenderTracing(System.IO.TextWriter;System.Object):System.Void">
				<signature>System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BuildProfileTree" uniqueID="BuildProfileTree(System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.Control.BuildProfileTree(System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CalculateEffectiveValidateRequest" uniqueID="CalculateEffectiveValidateRequest():System.Boolean">
				<signature>System.Web.UI.Control.CalculateEffectiveValidateRequest():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearCachedClientID" uniqueID="ClearCachedClientID():System.Void">
				<signature>System.Web.UI.Control.ClearCachedClientID():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ClearCachedUniqueIDRecursive" uniqueID="ClearCachedUniqueIDRecursive():System.Void">
				<signature>System.Web.UI.Control.ClearCachedUniqueIDRecursive():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearChildControlState" uniqueID="ClearChildControlState():System.Void">
				<signature>System.Web.UI.Control.ClearChildControlState():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearChildState" uniqueID="ClearChildState():System.Void">
				<signature>System.Web.UI.Control.ClearChildState():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearChildViewState" uniqueID="ClearChildViewState():System.Void">
				<signature>System.Web.UI.Control.ClearChildViewState():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearEffectiveClientIDMode" uniqueID="ClearEffectiveClientIDMode():System.Void">
				<signature>System.Web.UI.Control.ClearEffectiveClientIDMode():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ClearNamingContainer" uniqueID="ClearNamingContainer():System.Void">
				<signature>System.Web.UI.Control.ClearNamingContainer():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Control" uniqueID="Control():System.Void">
				<signature>System.Web.UI.Control.Control():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateChildControls" uniqueID="CreateChildControls():System.Void">
				<signature>System.Web.UI.Control.CreateChildControls():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateControlCollection" uniqueID="CreateControlCollection():System.Web.UI.ControlCollection">
				<signature>System.Web.UI.Control.CreateControlCollection():System.Web.UI.ControlCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataBind" uniqueID="DataBind():System.Void">
				<signature>System.Web.UI.Control.DataBind():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DataBind" uniqueID="DataBind(System.Boolean):System.Void">
				<signature>System.Web.UI.Control.DataBind(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DataBindChildren" uniqueID="DataBindChildren():System.Void">
				<signature>System.Web.UI.Control.DataBindChildren():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DirtyNameTable" uniqueID="DirtyNameTable():System.Void">
				<signature>System.Web.UI.Control.DirtyNameTable():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Web.UI.Control.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndRenderTracing" uniqueID="EndRenderTracing(System.IO.TextWriter;System.Object):System.Void">
				<signature>System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureChildControls" uniqueID="EnsureChildControls():System.Void">
				<signature>System.Web.UI.Control.EnsureChildControls():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureID" uniqueID="EnsureID():System.Void">
				<signature>System.Web.UI.Control.EnsureID():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureNamedControlsTable" uniqueID="EnsureNamedControlsTable():System.Void">
				<signature>System.Web.UI.Control.EnsureNamedControlsTable():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureOccasionalFields" uniqueID="EnsureOccasionalFields():System.Void">
				<signature>System.Web.UI.Control.EnsureOccasionalFields():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EstimateStateSize" uniqueID="EstimateStateSize(System.Object):System.Int32">
				<signature>System.Web.UI.Control.EstimateStateSize(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FillNamedControlsTable" uniqueID="FillNamedControlsTable(System.Web.UI.Control;System.Web.UI.ControlCollection):System.Void">
				<signature>System.Web.UI.Control.FillNamedControlsTable(System.Web.UI.Control;System.Web.UI.ControlCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindControl" uniqueID="FindControl(System.String):System.Web.UI.Control">
				<signature>System.Web.UI.Control.FindControl(System.String):System.Web.UI.Control</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindControl" uniqueID="FindControl(System.String;System.Int32):System.Web.UI.Control">
				<signature>System.Web.UI.Control.FindControl(System.String;System.Int32):System.Web.UI.Control</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FindControlFromPageIfNecessary" uniqueID="FindControlFromPageIfNecessary(System.String):System.Web.UI.Control">
				<signature>System.Web.UI.Control.FindControlFromPageIfNecessary(System.String):System.Web.UI.Control</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Focus" uniqueID="Focus():System.Void">
				<signature>System.Web.UI.Control.Focus():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GenerateAutomaticID" uniqueID="GenerateAutomaticID():System.Void">
				<signature>System.Web.UI.Control.GenerateAutomaticID():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetClientID" uniqueID="GetClientID():System.String">
				<signature>System.Web.UI.Control.GetClientID():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDesignModeState" uniqueID="GetDesignModeState():System.Collections.IDictionary">
				<signature>System.Web.UI.Control.GetDesignModeState():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetPredictableClientIDPrefix" uniqueID="GetPredictableClientIDPrefix():System.String">
				<signature>System.Web.UI.Control.GetPredictableClientIDPrefix():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetPredictableClientIDSuffix" uniqueID="GetPredictableClientIDSuffix():System.String">
				<signature>System.Web.UI.Control.GetPredictableClientIDSuffix():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRouteUrl" uniqueID="GetRouteUrl(System.Object):System.String">
				<signature>System.Web.UI.Control.GetRouteUrl(System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRouteUrl" uniqueID="GetRouteUrl(System.String;System.Object):System.String">
				<signature>System.Web.UI.Control.GetRouteUrl(System.String;System.Object):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRouteUrl" uniqueID="GetRouteUrl(System.String;System.Web.Routing.RouteValueDictionary):System.String">
				<signature>System.Web.UI.Control.GetRouteUrl(System.String;System.Web.Routing.RouteValueDictionary):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRouteUrl" uniqueID="GetRouteUrl(System.Web.Routing.RouteValueDictionary):System.String">
				<signature>System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTemplateControl" uniqueID="GetTemplateControl():System.Web.UI.TemplateControl">
				<signature>System.Web.UI.Control.GetTemplateControl():System.Web.UI.TemplateControl</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetUniqueIDPrefix" uniqueID="GetUniqueIDPrefix():System.String">
				<signature>System.Web.UI.Control.GetUniqueIDPrefix():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetUniqueIDRelativeTo" uniqueID="GetUniqueIDRelativeTo(System.Web.UI.Control):System.String">
				<signature>System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetXhtmlConformanceSection" uniqueID="GetXhtmlConformanceSection():System.Web.Configuration.XhtmlConformanceSection">
				<signature>System.Web.UI.Control.GetXhtmlConformanceSection():System.Web.Configuration.XhtmlConformanceSection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HasControls" uniqueID="HasControls():System.Boolean">
				<signature>System.Web.UI.Control.HasControls():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasEvents" uniqueID="HasEvents():System.Boolean">
				<signature>System.Web.UI.Control.HasEvents():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasRenderDelegate" uniqueID="HasRenderDelegate():System.Boolean">
				<signature>System.Web.UI.Control.HasRenderDelegate():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HasRenderingData" uniqueID="HasRenderingData():System.Boolean">
				<signature>System.Web.UI.Control.HasRenderingData():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitRecursive" uniqueID="InitRecursive(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Control.InitRecursive(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitRecursiveAsync" uniqueID="InitRecursiveAsync(System.Web.UI.Control;System.Web.UI.Page):System.Threading.Tasks.Task">
				<signature>System.Web.UI.Control.InitRecursiveAsync(System.Web.UI.Control;System.Web.UI.Page):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsDescendentOf" uniqueID="IsDescendentOf(System.Web.UI.Control):System.Boolean">
				<signature>System.Web.UI.Control.IsDescendentOf(System.Web.UI.Control):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsLiteralContent" uniqueID="IsLiteralContent():System.Boolean">
				<signature>System.Web.UI.Control.IsLiteralContent():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadChildViewStateByID" uniqueID="LoadChildViewStateByID(System.Collections.ArrayList):System.Void">
				<signature>System.Web.UI.Control.LoadChildViewStateByID(System.Collections.ArrayList):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadChildViewStateByIndex" uniqueID="LoadChildViewStateByIndex(System.Collections.ArrayList):System.Void">
				<signature>System.Web.UI.Control.LoadChildViewStateByIndex(System.Collections.ArrayList):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LoadControlState" uniqueID="LoadControlState(System.Object):System.Void">
				<signature>System.Web.UI.Control.LoadControlState(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadControlStateInternal" uniqueID="LoadControlStateInternal(System.Object):System.Void">
				<signature>System.Web.UI.Control.LoadControlStateInternal(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadRecursive" uniqueID="LoadRecursive():System.Void">
				<signature>System.Web.UI.Control.LoadRecursive():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadRecursiveAsync" uniqueID="LoadRecursiveAsync(System.Web.UI.Page):System.Threading.Tasks.Task">
				<signature>System.Web.UI.Control.LoadRecursiveAsync(System.Web.UI.Page):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadViewState" uniqueID="LoadViewState(System.Object):System.Void">
				<signature>System.Web.UI.Control.LoadViewState(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadViewStateRecursive" uniqueID="LoadViewStateRecursive(System.Object):System.Void">
				<signature>System.Web.UI.Control.LoadViewStateRecursive(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPathSecure" uniqueID="MapPathSecure(System.String):System.String">
				<signature>System.Web.UI.Control.MapPathSecure(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnBubbleEvent" uniqueID="OnBubbleEvent(System.Object;System.EventArgs):System.Boolean">
				<signature>System.Web.UI.Control.OnBubbleEvent(System.Object;System.EventArgs):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDataBinding" uniqueID="OnDataBinding(System.EventArgs):System.Void">
				<signature>System.Web.UI.Control.OnDataBinding(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnInit" uniqueID="OnInit(System.EventArgs):System.Void">
				<signature>System.Web.UI.Control.OnInit(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnLoad" uniqueID="OnLoad(System.EventArgs):System.Void">
				<signature>System.Web.UI.Control.OnLoad(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnPreRender" uniqueID="OnPreRender(System.EventArgs):System.Void">
				<signature>System.Web.UI.Control.OnPreRender(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnUnload" uniqueID="OnUnload(System.EventArgs):System.Void">
				<signature>System.Web.UI.Control.OnUnload(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OpenFile" uniqueID="OpenFile(System.String):System.IO.Stream">
				<signature>System.Web.UI.Control.OpenFile(System.String):System.IO.Stream</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OpenFileAndGetDependency" uniqueID="OpenFileAndGetDependency(System.Web.VirtualPath;System.String;System.Web.Caching.CacheDependency):System.IO.Stream">
				<signature>System.Web.UI.Control.OpenFileAndGetDependency(System.Web.VirtualPath;System.String;System.Web.Caching.CacheDependency):System.IO.Stream</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PreRenderRecursiveInternal" uniqueID="PreRenderRecursiveInternal():System.Void">
				<signature>System.Web.UI.Control.PreRenderRecursiveInternal():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PreRenderRecursiveInternalAsync" uniqueID="PreRenderRecursiveInternalAsync(System.Web.UI.Page):System.Threading.Tasks.Task">
				<signature>System.Web.UI.Control.PreRenderRecursiveInternalAsync(System.Web.UI.Page):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PreventAutoID" uniqueID="PreventAutoID():System.Void">
				<signature>System.Web.UI.Control.PreventAutoID():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaiseBubbleEvent" uniqueID="RaiseBubbleEvent(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.Control.RaiseBubbleEvent(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemovedControl" uniqueID="RemovedControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Control.RemovedControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Render" uniqueID="Render(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RenderChildren" uniqueID="RenderChildren(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RenderChildrenInternal" uniqueID="RenderChildrenInternal(System.Web.UI.HtmlTextWriter;System.Collections.ICollection):System.Void">
				<signature>System.Web.UI.Control.RenderChildrenInternal(System.Web.UI.HtmlTextWriter;System.Collections.ICollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RenderControl" uniqueID="RenderControl(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RenderControl" uniqueID="RenderControl(System.Web.UI.HtmlTextWriter;System.Web.UI.Adapters.ControlAdapter):System.Void">
				<signature>System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter;System.Web.UI.Adapters.ControlAdapter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RenderControlInternal" uniqueID="RenderControlInternal(System.Web.UI.HtmlTextWriter;System.Web.UI.Adapters.ControlAdapter):System.Void">
				<signature>System.Web.UI.Control.RenderControlInternal(System.Web.UI.HtmlTextWriter;System.Web.UI.Adapters.ControlAdapter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetVisible" uniqueID="ResetVisible():System.Void">
				<signature>System.Web.UI.Control.ResetVisible():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResolveAdapter" uniqueID="ResolveAdapter():System.Web.UI.Adapters.ControlAdapter">
				<signature>System.Web.UI.Control.ResolveAdapter():System.Web.UI.Adapters.ControlAdapter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResolveClientUrl" uniqueID="ResolveClientUrl(System.String):System.String">
				<signature>System.Web.UI.Control.ResolveClientUrl(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResolvePhysicalOrVirtualPath" uniqueID="ResolvePhysicalOrVirtualPath(System.String;System.Web.VirtualPath;System.String):System.Void">
				<signature>System.Web.UI.Control.ResolvePhysicalOrVirtualPath(System.String;System.Web.VirtualPath;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResolveUrl" uniqueID="ResolveUrl(System.String):System.String">
				<signature>System.Web.UI.Control.ResolveUrl(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SaveControlState" uniqueID="SaveControlState():System.Object">
				<signature>System.Web.UI.Control.SaveControlState():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SaveControlStateInternal" uniqueID="SaveControlStateInternal():System.Object">
				<signature>System.Web.UI.Control.SaveControlStateInternal():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SaveViewState" uniqueID="SaveViewState():System.Object">
				<signature>System.Web.UI.Control.SaveViewState():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SaveViewStateRecursive" uniqueID="SaveViewStateRecursive(System.Web.UI.ViewStateMode):System.Object">
				<signature>System.Web.UI.Control.SaveViewStateRecursive(System.Web.UI.ViewStateMode):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetControlBuilder" uniqueID="SetControlBuilder(System.Web.UI.ControlBuilder):System.Void">
				<signature>System.Web.UI.Control.SetControlBuilder(System.Web.UI.ControlBuilder):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetDesignMode" uniqueID="SetDesignMode():System.Void">
				<signature>System.Web.UI.Control.SetDesignMode():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetDesignModeState" uniqueID="SetDesignModeState(System.Collections.IDictionary):System.Void">
				<signature>System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetEnableViewStateInternal" uniqueID="SetEnableViewStateInternal(System.Boolean):System.Void">
				<signature>System.Web.UI.Control.SetEnableViewStateInternal(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetRenderMethodDelegate" uniqueID="SetRenderMethodDelegate(System.Web.UI.RenderMethod):System.Void">
				<signature>System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetTraceData" uniqueID="SetTraceData(System.Object;System.Object):System.Void">
				<signature>System.Web.UI.Control.SetTraceData(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetTraceData" uniqueID="SetTraceData(System.Object;System.Object;System.Object):System.Void">
				<signature>System.Web.UI.Control.SetTraceData(System.Object;System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetValidateRequestModeInternal" uniqueID="SetValidateRequestModeInternal(System.Web.UI.ValidateRequestMode;System.Boolean):System.Void">
				<signature>System.Web.UI.Control.SetValidateRequestModeInternal(System.Web.UI.ValidateRequestMode;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ShouldSerializeEnableTheming" uniqueID="ShouldSerializeEnableTheming():System.Boolean">
				<signature>System.Web.UI.Control.ShouldSerializeEnableTheming():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ShouldSerializeVisible" uniqueID="ShouldSerializeVisible():System.Boolean">
				<signature>System.Web.UI.Control.ShouldSerializeVisible():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IControlBuilderAccessor.get_ControlBuilder" uniqueID="System.Web.UI.IControlBuilderAccessor.get_ControlBuilder():System.Web.UI.ControlBuilder">
				<signature>System.Web.UI.Control.System.Web.UI.IControlBuilderAccessor.get_ControlBuilder():System.Web.UI.ControlBuilder</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IControlDesignerAccessor.GetDesignModeState" uniqueID="System.Web.UI.IControlDesignerAccessor.GetDesignModeState():System.Collections.IDictionary">
				<signature>System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.GetDesignModeState():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IControlDesignerAccessor.SetDesignModeState" uniqueID="System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary):System.Void">
				<signature>System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IControlDesignerAccessor.SetOwnerControl" uniqueID="System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IControlDesignerAccessor.get_UserData" uniqueID="System.Web.UI.IControlDesignerAccessor.get_UserData():System.Collections.IDictionary">
				<signature>System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.get_UserData():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IDataBindingsAccessor.get_DataBindings" uniqueID="System.Web.UI.IDataBindingsAccessor.get_DataBindings():System.Web.UI.DataBindingCollection">
				<signature>System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.get_DataBindings():System.Web.UI.DataBindingCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IDataBindingsAccessor.get_HasDataBindings" uniqueID="System.Web.UI.IDataBindingsAccessor.get_HasDataBindings():System.Boolean">
				<signature>System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.get_HasDataBindings():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IExpressionsAccessor.get_Expressions" uniqueID="System.Web.UI.IExpressionsAccessor.get_Expressions():System.Web.UI.ExpressionBindingCollection">
				<signature>System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.get_Expressions():System.Web.UI.ExpressionBindingCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IExpressionsAccessor.get_HasExpressions" uniqueID="System.Web.UI.IExpressionsAccessor.get_HasExpressions():System.Boolean">
				<signature>System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.get_HasExpressions():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IParserAccessor.AddParsedSubObject" uniqueID="System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object):System.Void">
				<signature>System.Web.UI.Control.System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TraceNonRenderingControlInternal" uniqueID="TraceNonRenderingControlInternal(System.IO.TextWriter):System.Void">
				<signature>System.Web.UI.Control.TraceNonRenderingControlInternal(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrackViewState" uniqueID="TrackViewState():System.Void">
				<signature>System.Web.UI.Control.TrackViewState():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UnloadRecursive" uniqueID="UnloadRecursive(System.Boolean):System.Void">
				<signature>System.Web.UI.Control.UnloadRecursive(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UpdateNamingContainer" uniqueID="UpdateNamingContainer(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Control.UpdateNamingContainer(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateEvent" uniqueID="ValidateEvent(System.String):System.Void">
				<signature>System.Web.UI.Control.ValidateEvent(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateEvent" uniqueID="ValidateEvent(System.String;System.String):System.Void">
				<signature>System.Web.UI.Control.ValidateEvent(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_DataBinding" uniqueID="add_DataBinding(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.add_DataBinding(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Disposed" uniqueID="add_Disposed(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.add_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Init" uniqueID="add_Init(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.add_Init(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Load" uniqueID="add_Load(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.add_Load(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PreRender" uniqueID="add_PreRender(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.add_PreRender(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Unload" uniqueID="add_Unload(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.add_Unload(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Adapter" uniqueID="get_Adapter():System.Web.UI.Adapters.ControlAdapter">
				<signature>System.Web.UI.Control.get_Adapter():System.Web.UI.Adapters.ControlAdapter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AdapterInternal" uniqueID="get_AdapterInternal():System.Web.UI.Adapters.ControlAdapter">
				<signature>System.Web.UI.Control.get_AdapterInternal():System.Web.UI.Adapters.ControlAdapter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AppRelativeTemplateSourceDirectory" uniqueID="get_AppRelativeTemplateSourceDirectory():System.String">
				<signature>System.Web.UI.Control.get_AppRelativeTemplateSourceDirectory():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BindingContainer" uniqueID="get_BindingContainer():System.Web.UI.Control">
				<signature>System.Web.UI.Control.get_BindingContainer():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ChildControlsCreated" uniqueID="get_ChildControlsCreated():System.Boolean">
				<signature>System.Web.UI.Control.get_ChildControlsCreated():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientID" uniqueID="get_ClientID():System.String">
				<signature>System.Web.UI.Control.get_ClientID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientIDMode" uniqueID="get_ClientIDMode():System.Web.UI.ClientIDMode">
				<signature>System.Web.UI.Control.get_ClientIDMode():System.Web.UI.ClientIDMode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ClientIDModeValue" uniqueID="get_ClientIDModeValue():System.Web.UI.ClientIDMode">
				<signature>System.Web.UI.Control.get_ClientIDModeValue():System.Web.UI.ClientIDMode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientIDSeparator" uniqueID="get_ClientIDSeparator():System.Char">
				<signature>System.Web.UI.Control.get_ClientIDSeparator():System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Context" uniqueID="get_Context():System.Web.HttpContext">
				<signature>System.Web.UI.Control.get_Context():System.Web.HttpContext</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ControlState" uniqueID="get_ControlState():System.Web.UI.ControlState">
				<signature>System.Web.UI.Control.get_ControlState():System.Web.UI.ControlState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Controls" uniqueID="get_Controls():System.Web.UI.ControlCollection">
				<signature>System.Web.UI.Control.get_Controls():System.Web.UI.ControlCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataItemContainer" uniqueID="get_DataItemContainer():System.Web.UI.Control">
				<signature>System.Web.UI.Control.get_DataItemContainer():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataKeysContainer" uniqueID="get_DataKeysContainer():System.Web.UI.Control">
				<signature>System.Web.UI.Control.get_DataKeysContainer():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DesignMode" uniqueID="get_DesignMode():System.Boolean">
				<signature>System.Web.UI.Control.get_DesignMode():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EffectiveClientIDMode" uniqueID="get_EffectiveClientIDMode():System.Web.UI.ClientIDMode">
				<signature>System.Web.UI.Control.get_EffectiveClientIDMode():System.Web.UI.ClientIDMode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_EffectiveClientIDModeValue" uniqueID="get_EffectiveClientIDModeValue():System.Web.UI.ClientIDMode">
				<signature>System.Web.UI.Control.get_EffectiveClientIDModeValue():System.Web.UI.ClientIDMode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EnableLegacyRendering" uniqueID="get_EnableLegacyRendering():System.Boolean">
				<signature>System.Web.UI.Control.get_EnableLegacyRendering():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableTheming" uniqueID="get_EnableTheming():System.Boolean">
				<signature>System.Web.UI.Control.get_EnableTheming():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableViewState" uniqueID="get_EnableViewState():System.Boolean">
				<signature>System.Web.UI.Control.get_EnableViewState():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Events" uniqueID="get_Events():System.ComponentModel.EventHandlerList">
				<signature>System.Web.UI.Control.get_Events():System.ComponentModel.EventHandlerList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasChildViewState" uniqueID="get_HasChildViewState():System.Boolean">
				<signature>System.Web.UI.Control.get_HasChildViewState():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ID" uniqueID="get_ID():System.String">
				<signature>System.Web.UI.Control.get_ID():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IdSeparator" uniqueID="get_IdSeparator():System.Char">
				<signature>System.Web.UI.Control.get_IdSeparator():System.Char</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IdSeparatorFromConfig" uniqueID="get_IdSeparatorFromConfig():System.Char">
				<signature>System.Web.UI.Control.get_IdSeparatorFromConfig():System.Char</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsBindingContainer" uniqueID="get_IsBindingContainer():System.Boolean">
				<signature>System.Web.UI.Control.get_IsBindingContainer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsChildControlStateCleared" uniqueID="get_IsChildControlStateCleared():System.Boolean">
				<signature>System.Web.UI.Control.get_IsChildControlStateCleared():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsParentedToUpdatePanel" uniqueID="get_IsParentedToUpdatePanel():System.Boolean">
				<signature>System.Web.UI.Control.get_IsParentedToUpdatePanel():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsReloadable" uniqueID="get_IsReloadable():System.Boolean">
				<signature>System.Web.UI.Control.get_IsReloadable():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsTrackingViewState" uniqueID="get_IsTrackingViewState():System.Boolean">
				<signature>System.Web.UI.Control.get_IsTrackingViewState():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsViewStateEnabled" uniqueID="get_IsViewStateEnabled():System.Boolean">
				<signature>System.Web.UI.Control.get_IsViewStateEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LoadViewStateByID" uniqueID="get_LoadViewStateByID():System.Boolean">
				<signature>System.Web.UI.Control.get_LoadViewStateByID():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NamingContainer" uniqueID="get_NamingContainer():System.Web.UI.Control">
				<signature>System.Web.UI.Control.get_NamingContainer():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_OwnerControl" uniqueID="get_OwnerControl():System.Web.UI.Control">
				<signature>System.Web.UI.Control.get_OwnerControl():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Page" uniqueID="get_Page():System.Web.UI.Page">
				<signature>System.Web.UI.Control.get_Page():System.Web.UI.Page</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Parent" uniqueID="get_Parent():System.Web.UI.Control">
				<signature>System.Web.UI.Control.get_Parent():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PostBackDataHandler" uniqueID="get_PostBackDataHandler():System.Web.UI.IPostBackDataHandler">
				<signature>System.Web.UI.Control.get_PostBackDataHandler():System.Web.UI.IPostBackDataHandler</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PostBackEventHandler" uniqueID="get_PostBackEventHandler():System.Web.UI.IPostBackEventHandler">
				<signature>System.Web.UI.Control.get_PostBackEventHandler():System.Web.UI.IPostBackEventHandler</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PredictableClientID" uniqueID="get_PredictableClientID():System.String">
				<signature>System.Web.UI.Control.get_PredictableClientID():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_RareFields" uniqueID="get_RareFields():System.Web.UI.Control+ControlRareFields">
				<signature>System.Web.UI.Control.get_RareFields():System.Web.UI.Control+ControlRareFields</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_RareFieldsEnsured" uniqueID="get_RareFieldsEnsured():System.Web.UI.Control+ControlRareFields">
				<signature>System.Web.UI.Control.get_RareFieldsEnsured():System.Web.UI.Control+ControlRareFields</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RenderingCompatibility" uniqueID="get_RenderingCompatibility():System.Version">
				<signature>System.Web.UI.Control.get_RenderingCompatibility():System.Version</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RouteCollection" uniqueID="get_RouteCollection():System.Web.Routing.RouteCollection">
				<signature>System.Web.UI.Control.get_RouteCollection():System.Web.Routing.RouteCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_RuntimeConfig" uniqueID="get_RuntimeConfig():System.Web.Configuration.RuntimeConfig">
				<signature>System.Web.UI.Control.get_RuntimeConfig():System.Web.Configuration.RuntimeConfig</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Site" uniqueID="get_Site():System.ComponentModel.ISite">
				<signature>System.Web.UI.Control.get_Site():System.ComponentModel.ISite</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SkinID" uniqueID="get_SkinID():System.String">
				<signature>System.Web.UI.Control.get_SkinID():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SpacerImageUrl" uniqueID="get_SpacerImageUrl():System.String">
				<signature>System.Web.UI.Control.get_SpacerImageUrl():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_StaticClientID" uniqueID="get_StaticClientID():System.String">
				<signature>System.Web.UI.Control.get_StaticClientID():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_SupportsEventValidation" uniqueID="get_SupportsEventValidation():System.Boolean">
				<signature>System.Web.UI.Control.get_SupportsEventValidation():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TemplateControl" uniqueID="get_TemplateControl():System.Web.UI.TemplateControl">
				<signature>System.Web.UI.Control.get_TemplateControl():System.Web.UI.TemplateControl</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TemplateControlVirtualDirectory" uniqueID="get_TemplateControlVirtualDirectory():System.Web.VirtualPath">
				<signature>System.Web.UI.Control.get_TemplateControlVirtualDirectory():System.Web.VirtualPath</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TemplateSourceDirectory" uniqueID="get_TemplateSourceDirectory():System.String">
				<signature>System.Web.UI.Control.get_TemplateSourceDirectory():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UniqueClientID" uniqueID="get_UniqueClientID():System.String">
				<signature>System.Web.UI.Control.get_UniqueClientID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UniqueID" uniqueID="get_UniqueID():System.String">
				<signature>System.Web.UI.Control.get_UniqueID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValidateRequestMode" uniqueID="get_ValidateRequestMode():System.Web.UI.ValidateRequestMode">
				<signature>System.Web.UI.Control.get_ValidateRequestMode():System.Web.UI.ValidateRequestMode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ViewState" uniqueID="get_ViewState():System.Web.UI.StateBag">
				<signature>System.Web.UI.Control.get_ViewState():System.Web.UI.StateBag</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ViewStateIgnoresCase" uniqueID="get_ViewStateIgnoresCase():System.Boolean">
				<signature>System.Web.UI.Control.get_ViewStateIgnoresCase():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ViewStateMode" uniqueID="get_ViewStateMode():System.Web.UI.ViewStateMode">
				<signature>System.Web.UI.Control.get_ViewStateMode():System.Web.UI.ViewStateMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Visible" uniqueID="get_Visible():System.Boolean">
				<signature>System.Web.UI.Control.get_Visible():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_DataBinding" uniqueID="remove_DataBinding(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.remove_DataBinding(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Disposed" uniqueID="remove_Disposed(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.remove_Disposed(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Init" uniqueID="remove_Init(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.remove_Init(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Load" uniqueID="remove_Load(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.remove_Load(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PreRender" uniqueID="remove_PreRender(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.remove_PreRender(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Unload" uniqueID="remove_Unload(System.EventHandler):System.Void">
				<signature>System.Web.UI.Control.remove_Unload(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AdapterInternal" uniqueID="set_AdapterInternal(System.Web.UI.Adapters.ControlAdapter):System.Void">
				<signature>System.Web.UI.Control.set_AdapterInternal(System.Web.UI.Adapters.ControlAdapter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AppRelativeTemplateSourceDirectory" uniqueID="set_AppRelativeTemplateSourceDirectory(System.String):System.Void">
				<signature>System.Web.UI.Control.set_AppRelativeTemplateSourceDirectory(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ChildControlsCreated" uniqueID="set_ChildControlsCreated(System.Boolean):System.Void">
				<signature>System.Web.UI.Control.set_ChildControlsCreated(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ClientIDMode" uniqueID="set_ClientIDMode(System.Web.UI.ClientIDMode):System.Void">
				<signature>System.Web.UI.Control.set_ClientIDMode(System.Web.UI.ClientIDMode):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_ClientIDModeValue" uniqueID="set_ClientIDModeValue(System.Web.UI.ClientIDMode):System.Void">
				<signature>System.Web.UI.Control.set_ClientIDModeValue(System.Web.UI.ClientIDMode):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ControlState" uniqueID="set_ControlState(System.Web.UI.ControlState):System.Void">
				<signature>System.Web.UI.Control.set_ControlState(System.Web.UI.ControlState):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_EffectiveClientIDModeValue" uniqueID="set_EffectiveClientIDModeValue(System.Web.UI.ClientIDMode):System.Void">
				<signature>System.Web.UI.Control.set_EffectiveClientIDModeValue(System.Web.UI.ClientIDMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableTheming" uniqueID="set_EnableTheming(System.Boolean):System.Void">
				<signature>System.Web.UI.Control.set_EnableTheming(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableViewState" uniqueID="set_EnableViewState(System.Boolean):System.Void">
				<signature>System.Web.UI.Control.set_EnableViewState(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ID" uniqueID="set_ID(System.String):System.Void">
				<signature>System.Web.UI.Control.set_ID(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_OwnerControl" uniqueID="set_OwnerControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Control.set_OwnerControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Page" uniqueID="set_Page(System.Web.UI.Page):System.Void">
				<signature>System.Web.UI.Control.set_Page(System.Web.UI.Page):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RenderingCompatibility" uniqueID="set_RenderingCompatibility(System.Version):System.Void">
				<signature>System.Web.UI.Control.set_RenderingCompatibility(System.Version):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_RouteCollection" uniqueID="set_RouteCollection(System.Web.Routing.RouteCollection):System.Void">
				<signature>System.Web.UI.Control.set_RouteCollection(System.Web.Routing.RouteCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Site" uniqueID="set_Site(System.ComponentModel.ISite):System.Void">
				<signature>System.Web.UI.Control.set_Site(System.ComponentModel.ISite):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SkinID" uniqueID="set_SkinID(System.String):System.Void">
				<signature>System.Web.UI.Control.set_SkinID(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TemplateControl" uniqueID="set_TemplateControl(System.Web.UI.TemplateControl):System.Void">
				<signature>System.Web.UI.Control.set_TemplateControl(System.Web.UI.TemplateControl):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_TemplateControlVirtualDirectory" uniqueID="set_TemplateControlVirtualDirectory(System.Web.VirtualPath):System.Void">
				<signature>System.Web.UI.Control.set_TemplateControlVirtualDirectory(System.Web.VirtualPath):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ValidateRequestMode" uniqueID="set_ValidateRequestMode(System.Web.UI.ValidateRequestMode):System.Void">
				<signature>System.Web.UI.Control.set_ValidateRequestMode(System.Web.UI.ValidateRequestMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ViewStateMode" uniqueID="set_ViewStateMode(System.Web.UI.ViewStateMode):System.Void">
				<signature>System.Web.UI.Control.set_ViewStateMode(System.Web.UI.ViewStateMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Visible" uniqueID="set_Visible(System.Boolean):System.Void">
				<signature>System.Web.UI.Control.set_Visible(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="IControlDesignerAccessor" uniqueID="System.Web.UI.IControlDesignerAccessor">
			<method accessibility="Public" methodKind="Member" name="GetDesignModeState" uniqueID="GetDesignModeState():System.Collections.IDictionary">
				<signature>System.Web.UI.IControlDesignerAccessor.GetDesignModeState():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetDesignModeState" uniqueID="SetDesignModeState(System.Collections.IDictionary):System.Void">
				<signature>System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetOwnerControl" uniqueID="SetOwnerControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserData" uniqueID="get_UserData():System.Collections.IDictionary">
				<signature>System.Web.UI.IControlDesignerAccessor.get_UserData():System.Collections.IDictionary</signature>
			</method>
		</class>
		<class name="IPostBackDataHandler" uniqueID="System.Web.UI.IPostBackDataHandler">
			<method accessibility="Public" methodKind="Member" name="LoadPostData" uniqueID="LoadPostData(System.String;System.Collections.Specialized.NameValueCollection):System.Boolean">
				<signature>System.Web.UI.IPostBackDataHandler.LoadPostData(System.String;System.Collections.Specialized.NameValueCollection):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RaisePostDataChangedEvent" uniqueID="RaisePostDataChangedEvent():System.Void">
				<signature>System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent():System.Void</signature>
			</method>
		</class>
		<class name="IDataBindingsAccessor" uniqueID="System.Web.UI.IDataBindingsAccessor">
			<method accessibility="Public" methodKind="Member" name="get_DataBindings" uniqueID="get_DataBindings():System.Web.UI.DataBindingCollection">
				<signature>System.Web.UI.IDataBindingsAccessor.get_DataBindings():System.Web.UI.DataBindingCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasDataBindings" uniqueID="get_HasDataBindings():System.Boolean">
				<signature>System.Web.UI.IDataBindingsAccessor.get_HasDataBindings():System.Boolean</signature>
			</method>
		</class>
		<class name="Control+ControlRareFields" uniqueID="System.Web.UI.Control+ControlRareFields">
			<method accessibility="Protected" methodKind="Member" name="Control+ControlRareFields" uniqueID="Control+ControlRareFields():System.Void">
				<signature>System.Web.UI.Control+ControlRareFields.Control+ControlRareFields():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Web.UI.Control+ControlRareFields.Dispose():System.Void</signature>
			</method>
		</class>
		<class name="IExpressionsAccessor" uniqueID="System.Web.UI.IExpressionsAccessor">
			<method accessibility="Public" methodKind="Member" name="get_Expressions" uniqueID="get_Expressions():System.Web.UI.ExpressionBindingCollection">
				<signature>System.Web.UI.IExpressionsAccessor.get_Expressions():System.Web.UI.ExpressionBindingCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasExpressions" uniqueID="get_HasExpressions():System.Boolean">
				<signature>System.Web.UI.IExpressionsAccessor.get_HasExpressions():System.Boolean</signature>
			</method>
		</class>
		<class name="IAttributeAccessor" uniqueID="System.Web.UI.IAttributeAccessor">
			<method accessibility="Public" methodKind="Member" name="GetAttribute" uniqueID="GetAttribute(System.String):System.String">
				<signature>System.Web.UI.IAttributeAccessor.GetAttribute(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetAttribute" uniqueID="SetAttribute(System.String;System.String):System.Void">
				<signature>System.Web.UI.IAttributeAccessor.SetAttribute(System.String;System.String):System.Void</signature>
			</method>
		</class>
		<class name="IFilterResolutionService" uniqueID="System.Web.UI.IFilterResolutionService">
			<method accessibility="Public" methodKind="Member" name="CompareFilters" uniqueID="CompareFilters(System.String;System.String):System.Int32">
				<signature>System.Web.UI.IFilterResolutionService.CompareFilters(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EvaluateFilter" uniqueID="EvaluateFilter(System.String):System.Boolean">
				<signature>System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String):System.Boolean</signature>
			</method>
		</class>
		<class name="IParserAccessor" uniqueID="System.Web.UI.IParserAccessor">
			<method accessibility="Public" methodKind="Member" name="AddParsedSubObject" uniqueID="AddParsedSubObject(System.Object):System.Void">
				<signature>System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object):System.Void</signature>
			</method>
		</class>
		<class name="TemplateControl+EventList" uniqueID="System.Web.UI.TemplateControl+EventList">
			<method accessibility="Public" methodKind="Member" name="TemplateControl+EventList" uniqueID="TemplateControl+EventList():System.Void">
				<signature>System.Web.UI.TemplateControl+EventList.TemplateControl+EventList():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsEmpty" uniqueID="get_IsEmpty():System.Boolean">
				<signature>System.Web.UI.TemplateControl+EventList.get_IsEmpty():System.Boolean</signature>
			</method>
		</class>
		<class name="IUrlResolutionService" uniqueID="System.Web.UI.IUrlResolutionService">
			<method accessibility="Public" methodKind="Member" name="ResolveClientUrl" uniqueID="ResolveClientUrl(System.String):System.String">
				<signature>System.Web.UI.IUrlResolutionService.ResolveClientUrl(System.String):System.String</signature>
			</method>
		</class>
		<class name="Page" uniqueID="System.Web.UI.Page">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.UI.Page.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="CreateHtmlTextWriterFromType" uniqueID="CreateHtmlTextWriterFromType(System.IO.TextWriter;System.Type):System.Web.UI.HtmlTextWriter">
				<signature>System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter;System.Type):System.Web.UI.HtmlTextWriter</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateHtmlTextWriterInternal" uniqueID="CreateHtmlTextWriterInternal(System.IO.TextWriter;System.Web.HttpRequest):System.Web.UI.HtmlTextWriter">
				<signature>System.Web.UI.Page.CreateHtmlTextWriterInternal(System.IO.TextWriter;System.Web.HttpRequest):System.Web.UI.HtmlTextWriter</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="DecryptString" uniqueID="DecryptString(System.String;System.Web.Security.Cryptography.Purpose):System.String">
				<signature>System.Web.UI.Page.DecryptString(System.String;System.Web.Security.Cryptography.Purpose):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="EncryptString" uniqueID="EncryptString(System.String;System.Web.Security.Cryptography.Purpose):System.String">
				<signature>System.Web.UI.Page.EncryptString(System.String;System.Web.Security.Cryptography.Purpose):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsSystemPostField" uniqueID="IsSystemPostField(System.String):System.Boolean">
				<signature>System.Web.UI.Page.IsSystemPostField(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ThreadResetAbortWithAssert" uniqueID="ThreadResetAbortWithAssert():System.Void">
				<signature>System.Web.UI.Page.ThreadResetAbortWithAssert():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddContentTemplate" uniqueID="AddContentTemplate(System.String;System.Web.UI.ITemplate):System.Void">
				<signature>System.Web.UI.Page.AddContentTemplate(System.String;System.Web.UI.ITemplate):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPreRenderCompleteAsync" uniqueID="AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void">
				<signature>System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddOnPreRenderCompleteAsync" uniqueID="AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void">
				<signature>System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler;System.Web.EndEventHandler;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddWrappedFileDependencies" uniqueID="AddWrappedFileDependencies(System.Object):System.Void">
				<signature>System.Web.UI.Page.AddWrappedFileDependencies(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ApplyControlSkin" uniqueID="ApplyControlSkin(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Page.ApplyControlSkin(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ApplyControlStyleSheet" uniqueID="ApplyControlStyleSheet(System.Web.UI.Control):System.Boolean">
				<signature>System.Web.UI.Page.ApplyControlStyleSheet(System.Web.UI.Control):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ApplyMasterPage" uniqueID="ApplyMasterPage():System.Void">
				<signature>System.Web.UI.Page.ApplyMasterPage():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AspCompatBeginProcessRequest" uniqueID="AspCompatBeginProcessRequest(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AspCompatEndProcessRequest" uniqueID="AspCompatEndProcessRequest(System.IAsyncResult):System.Void">
				<signature>System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AsyncPageBeginProcessRequest" uniqueID="AsyncPageBeginProcessRequest(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AsyncPageEndProcessRequest" uniqueID="AsyncPageEndProcessRequest(System.IAsyncResult):System.Void">
				<signature>System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AsyncPageProcessRequestBeforeAsyncPointCancellableCallback" uniqueID="AsyncPageProcessRequestBeforeAsyncPointCancellableCallback(System.Object):System.Void">
				<signature>System.Web.UI.Page.AsyncPageProcessRequestBeforeAsyncPointCancellableCallback(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BeginFormRender" uniqueID="BeginFormRender(System.Web.UI.HtmlTextWriter;System.String):System.Void">
				<signature>System.Web.UI.Page.BeginFormRender(System.Web.UI.HtmlTextWriter;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BuildPageProfileTree" uniqueID="BuildPageProfileTree(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.BuildPageProfileTree(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CheckRemainingAsyncTasks" uniqueID="CheckRemainingAsyncTasks(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.CheckRemainingAsyncTasks(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateCancellationTokenFromAsyncTimeout" uniqueID="CreateCancellationTokenFromAsyncTimeout():System.Threading.CancellationTokenSource">
				<signature>System.Web.UI.Page.CreateCancellationTokenFromAsyncTimeout():System.Threading.CancellationTokenSource</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateHtmlTextWriter" uniqueID="CreateHtmlTextWriter(System.IO.TextWriter):System.Web.UI.HtmlTextWriter">
				<signature>System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter):System.Web.UI.HtmlTextWriter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateStateFormatter" uniqueID="CreateStateFormatter():System.Web.UI.IStateFormatter2">
				<signature>System.Web.UI.Page.CreateStateFormatter():System.Web.UI.IStateFormatter2</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CultureFromUserLanguages" uniqueID="CultureFromUserLanguages(System.Boolean):System.Globalization.CultureInfo">
				<signature>System.Web.UI.Page.CultureFromUserLanguages(System.Boolean):System.Globalization.CultureInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DecomposeViewStateIntoChunks" uniqueID="DecomposeViewStateIntoChunks():System.Collections.ICollection">
				<signature>System.Web.UI.Page.DecomposeViewStateIntoChunks():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DesignerInitialize" uniqueID="DesignerInitialize():System.Void">
				<signature>System.Web.UI.Page.DesignerInitialize():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DetermineIsExportingWebPart" uniqueID="DetermineIsExportingWebPart():System.Boolean">
				<signature>System.Web.UI.Page.DetermineIsExportingWebPart():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DeterminePostBackMode" uniqueID="DeterminePostBackMode():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.UI.Page.DeterminePostBackMode():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DeterminePostBackModeUnvalidated" uniqueID="DeterminePostBackModeUnvalidated():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.UI.Page.DeterminePostBackModeUnvalidated():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndFormRender" uniqueID="EndFormRender(System.Web.UI.HtmlTextWriter;System.String):System.Void">
				<signature>System.Web.UI.Page.EndFormRender(System.Web.UI.HtmlTextWriter;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndFormRenderArrayAndExpandoAttribute" uniqueID="EndFormRenderArrayAndExpandoAttribute(System.Web.UI.HtmlTextWriter;System.String):System.Void">
				<signature>System.Web.UI.Page.EndFormRenderArrayAndExpandoAttribute(System.Web.UI.HtmlTextWriter;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndFormRenderHiddenFields" uniqueID="EndFormRenderHiddenFields(System.Web.UI.HtmlTextWriter;System.String):System.Void">
				<signature>System.Web.UI.Page.EndFormRenderHiddenFields(System.Web.UI.HtmlTextWriter;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EndFormRenderPostBackAndWebFormsScript" uniqueID="EndFormRenderPostBackAndWebFormsScript(System.Web.UI.HtmlTextWriter;System.String):System.Void">
				<signature>System.Web.UI.Page.EndFormRenderPostBackAndWebFormsScript(System.Web.UI.HtmlTextWriter;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteRegisteredAsyncTasks" uniqueID="ExecuteRegisteredAsyncTasks():System.Void">
				<signature>System.Web.UI.Page.ExecuteRegisteredAsyncTasks():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ExportWebPart" uniqueID="ExportWebPart(System.String):System.Void">
				<signature>System.Web.UI.Page.ExportWebPart(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FindControl" uniqueID="FindControl(System.String):System.Web.UI.Control">
				<signature>System.Web.UI.Page.FindControl(System.String):System.Web.UI.Control</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="FrameworkInitialize" uniqueID="FrameworkInitialize():System.Void">
				<signature>System.Web.UI.Page.FrameworkInitialize():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetClientStateIdentifier" uniqueID="GetClientStateIdentifier():System.UInt32">
				<signature>System.Web.UI.Page.GetClientStateIdentifier():System.UInt32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCollectionBasedOnMethod" uniqueID="GetCollectionBasedOnMethod(System.Boolean):System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.UI.Page.GetCollectionBasedOnMethod(System.Boolean):System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDataItem" uniqueID="GetDataItem():System.Object">
				<signature>System.Web.UI.Page.GetDataItem():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDesignModeInternal" uniqueID="GetDesignModeInternal():System.Boolean">
				<signature>System.Web.UI.Page.GetDesignModeInternal():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetPostBackClientEvent" uniqueID="GetPostBackClientEvent(System.Web.UI.Control;System.String):System.String">
				<signature>System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetPostBackClientHyperlink" uniqueID="GetPostBackClientHyperlink(System.Web.UI.Control;System.String):System.String">
				<signature>System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetPostBackEventReference" uniqueID="GetPostBackEventReference(System.Web.UI.Control):System.String">
				<signature>System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetPostBackEventReference" uniqueID="GetPostBackEventReference(System.Web.UI.Control;System.String):System.String">
				<signature>System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTypeHashCode" uniqueID="GetTypeHashCode():System.Int32">
				<signature>System.Web.UI.Page.GetTypeHashCode():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetUniqueIDPrefix" uniqueID="GetUniqueIDPrefix():System.String">
				<signature>System.Web.UI.Page.GetUniqueIDPrefix():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValidators" uniqueID="GetValidators(System.String):System.Web.UI.ValidatorCollection">
				<signature>System.Web.UI.Page.GetValidators(System.String):System.Web.UI.ValidatorCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetWaitForPreviousStepCompletionAwaitable" uniqueID="GetWaitForPreviousStepCompletionAwaitable():System.Web.Util.WithinCancellableCallbackTaskAwaitable">
				<signature>System.Web.UI.Page.GetWaitForPreviousStepCompletionAwaitable():System.Web.Util.WithinCancellableCallbackTaskAwaitable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetWrappedFileDependencies" uniqueID="GetWrappedFileDependencies(System.String[]):System.Object">
				<signature>System.Web.UI.Page.GetWrappedFileDependencies(System.String[]):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleError" uniqueID="HandleError(System.Exception):System.Boolean">
				<signature>System.Web.UI.Page.HandleError(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitOutputCache" uniqueID="InitOutputCache(System.Int32;System.String;System.String;System.String;System.Web.UI.OutputCacheLocation;System.String):System.Void">
				<signature>System.Web.UI.Page.InitOutputCache(System.Int32;System.String;System.String;System.String;System.Web.UI.OutputCacheLocation;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitOutputCache" uniqueID="InitOutputCache(System.Int32;System.String;System.String;System.Web.UI.OutputCacheLocation;System.String):System.Void">
				<signature>System.Web.UI.Page.InitOutputCache(System.Int32;System.String;System.String;System.Web.UI.OutputCacheLocation;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InitOutputCache" uniqueID="InitOutputCache(System.Web.UI.OutputCacheParameters):System.Void">
				<signature>System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializeCulture" uniqueID="InitializeCulture():System.Void">
				<signature>System.Web.UI.Page.InitializeCulture():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializeStyleSheet" uniqueID="InitializeStyleSheet():System.Void">
				<signature>System.Web.UI.Page.InitializeStyleSheet():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeThemes" uniqueID="InitializeThemes():System.Void">
				<signature>System.Web.UI.Page.InitializeThemes():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeWriter" uniqueID="InitializeWriter(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.Page.InitializeWriter(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsClientScriptBlockRegistered" uniqueID="IsClientScriptBlockRegistered(System.String):System.Boolean">
				<signature>System.Web.UI.Page.IsClientScriptBlockRegistered(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsStartupScriptRegistered" uniqueID="IsStartupScriptRegistered(System.String):System.Boolean">
				<signature>System.Web.UI.Page.IsStartupScriptRegistered(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="LegacyAsyncPageBeginProcessRequest" uniqueID="LegacyAsyncPageBeginProcessRequest(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.UI.Page.LegacyAsyncPageBeginProcessRequest(System.Web.HttpContext;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="LegacyAsyncPageEndProcessRequest" uniqueID="LegacyAsyncPageEndProcessRequest(System.IAsyncResult):System.Void">
				<signature>System.Web.UI.Page.LegacyAsyncPageEndProcessRequest(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="LoadAllState" uniqueID="LoadAllState():System.Void">
				<signature>System.Web.UI.Page.LoadAllState():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LoadPageStateFromPersistenceMedium" uniqueID="LoadPageStateFromPersistenceMedium():System.Object">
				<signature>System.Web.UI.Page.LoadPageStateFromPersistenceMedium():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadScrollPosition" uniqueID="LoadScrollPosition():System.Void">
				<signature>System.Web.UI.Page.LoadScrollPosition():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MapPath" uniqueID="MapPath(System.String):System.String">
				<signature>System.Web.UI.Page.MapPath(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnFormPostRender" uniqueID="OnFormPostRender(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.Page.OnFormPostRender(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnFormRender" uniqueID="OnFormRender():System.Void">
				<signature>System.Web.UI.Page.OnFormRender():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnInit" uniqueID="OnInit(System.EventArgs):System.Void">
				<signature>System.Web.UI.Page.OnInit(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnInitComplete" uniqueID="OnInitComplete(System.EventArgs):System.Void">
				<signature>System.Web.UI.Page.OnInitComplete(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnLoadComplete" uniqueID="OnLoadComplete(System.EventArgs):System.Void">
				<signature>System.Web.UI.Page.OnLoadComplete(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPreInit" uniqueID="OnPreInit(System.EventArgs):System.Void">
				<signature>System.Web.UI.Page.OnPreInit(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPreLoad" uniqueID="OnPreLoad(System.EventArgs):System.Void">
				<signature>System.Web.UI.Page.OnPreLoad(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPreRenderComplete" uniqueID="OnPreRenderComplete(System.EventArgs):System.Void">
				<signature>System.Web.UI.Page.OnPreRenderComplete(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnSaveStateComplete" uniqueID="OnSaveStateComplete(System.EventArgs):System.Void">
				<signature>System.Web.UI.Page.OnSaveStateComplete(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Page" uniqueID="Page():System.Void">
				<signature>System.Web.UI.Page.Page():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PerformPreInit" uniqueID="PerformPreInit():System.Void">
				<signature>System.Web.UI.Page.PerformPreInit():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PerformPreInitAsync" uniqueID="PerformPreInitAsync():System.Threading.Tasks.Task">
				<signature>System.Web.UI.Page.PerformPreInitAsync():System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PerformPreRenderComplete" uniqueID="PerformPreRenderComplete():System.Void">
				<signature>System.Web.UI.Page.PerformPreRenderComplete():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PopCachingControl" uniqueID="PopCachingControl():System.Void">
				<signature>System.Web.UI.Page.PopCachingControl():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PopDataBindingContext" uniqueID="PopDataBindingContext():System.Void">
				<signature>System.Web.UI.Page.PopDataBindingContext():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PrepareCallback" uniqueID="PrepareCallback(System.String):System.Void">
				<signature>System.Web.UI.Page.PrepareCallback(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PrepareCallbackAsync" uniqueID="PrepareCallbackAsync(System.String):System.Threading.Tasks.Task">
				<signature>System.Web.UI.Page.PrepareCallbackAsync(System.String):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessPostData" uniqueID="ProcessPostData(System.Collections.Specialized.NameValueCollection;System.Boolean):System.Void">
				<signature>System.Web.UI.Page.ProcessPostData(System.Collections.Specialized.NameValueCollection;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequest" uniqueID="ProcessRequest():System.Void">
				<signature>System.Web.UI.Page.ProcessRequest():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequest" uniqueID="ProcessRequest(System.Boolean;System.Boolean):System.Void">
				<signature>System.Web.UI.Page.ProcessRequest(System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ProcessRequest" uniqueID="ProcessRequest(System.Web.HttpContext):System.Void">
				<signature>System.Web.UI.Page.ProcessRequest(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequestAsync" uniqueID="ProcessRequestAsync(System.Boolean;System.Boolean):System.Threading.Tasks.Task">
				<signature>System.Web.UI.Page.ProcessRequestAsync(System.Boolean;System.Boolean):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequestAsync" uniqueID="ProcessRequestAsync(System.Web.HttpContext):System.Threading.Tasks.Task">
				<signature>System.Web.UI.Page.ProcessRequestAsync(System.Web.HttpContext):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequestCleanup" uniqueID="ProcessRequestCleanup():System.Void">
				<signature>System.Web.UI.Page.ProcessRequestCleanup():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequestEndTrace" uniqueID="ProcessRequestEndTrace():System.Void">
				<signature>System.Web.UI.Page.ProcessRequestEndTrace():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequestMain" uniqueID="ProcessRequestMain():System.Void">
				<signature>System.Web.UI.Page.ProcessRequestMain():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequestMain" uniqueID="ProcessRequestMain(System.Boolean;System.Boolean):System.Void">
				<signature>System.Web.UI.Page.ProcessRequestMain(System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequestMainAsync" uniqueID="ProcessRequestMainAsync(System.Boolean;System.Boolean):System.Threading.Tasks.Task">
				<signature>System.Web.UI.Page.ProcessRequestMainAsync(System.Boolean;System.Boolean):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequestTransacted" uniqueID="ProcessRequestTransacted():System.Void">
				<signature>System.Web.UI.Page.ProcessRequestTransacted():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequestWithAssert" uniqueID="ProcessRequestWithAssert(System.Web.HttpContext):System.Void">
				<signature>System.Web.UI.Page.ProcessRequestWithAssert(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ProcessRequestWithNoAssert" uniqueID="ProcessRequestWithNoAssert(System.Web.HttpContext):System.Void">
				<signature>System.Web.UI.Page.ProcessRequestWithNoAssert(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PushCachingControl" uniqueID="PushCachingControl(System.Web.UI.BasePartialCachingControl):System.Void">
				<signature>System.Web.UI.Page.PushCachingControl(System.Web.UI.BasePartialCachingControl):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PushDataBindingContext" uniqueID="PushDataBindingContext(System.Object):System.Void">
				<signature>System.Web.UI.Page.PushDataBindingContext(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaiseChangedEvents" uniqueID="RaiseChangedEvents():System.Void">
				<signature>System.Web.UI.Page.RaiseChangedEvents():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaiseChangedEventsAsync" uniqueID="RaiseChangedEventsAsync():System.Threading.Tasks.Task">
				<signature>System.Web.UI.Page.RaiseChangedEventsAsync():System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RaisePostBackEvent" uniqueID="RaisePostBackEvent(System.Collections.Specialized.NameValueCollection):System.Void">
				<signature>System.Web.UI.Page.RaisePostBackEvent(System.Collections.Specialized.NameValueCollection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaisePostBackEvent" uniqueID="RaisePostBackEvent(System.Web.UI.IPostBackEventHandler;System.String):System.Void">
				<signature>System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterArrayDeclaration" uniqueID="RegisterArrayDeclaration(System.String;System.String):System.Void">
				<signature>System.Web.UI.Page.RegisterArrayDeclaration(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterAsyncTask" uniqueID="RegisterAsyncTask(System.Web.UI.PageAsyncTask):System.Void">
				<signature>System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterClientScriptBlock" uniqueID="RegisterClientScriptBlock(System.String;System.String):System.Void">
				<signature>System.Web.UI.Page.RegisterClientScriptBlock(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterEnabledControl" uniqueID="RegisterEnabledControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Page.RegisterEnabledControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterFocusScript" uniqueID="RegisterFocusScript():System.Void">
				<signature>System.Web.UI.Page.RegisterFocusScript():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterHiddenField" uniqueID="RegisterHiddenField(System.String;System.String):System.Void">
				<signature>System.Web.UI.Page.RegisterHiddenField(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterOnSubmitStatement" uniqueID="RegisterOnSubmitStatement(System.String;System.String):System.Void">
				<signature>System.Web.UI.Page.RegisterOnSubmitStatement(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterPostBackScript" uniqueID="RegisterPostBackScript():System.Void">
				<signature>System.Web.UI.Page.RegisterPostBackScript():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterRequiresClearChildControlState" uniqueID="RegisterRequiresClearChildControlState(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Page.RegisterRequiresClearChildControlState(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterRequiresControlState" uniqueID="RegisterRequiresControlState(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterRequiresPostBack" uniqueID="RegisterRequiresPostBack(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterRequiresRaiseEvent" uniqueID="RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler):System.Void">
				<signature>System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterRequiresViewStateEncryption" uniqueID="RegisterRequiresViewStateEncryption():System.Void">
				<signature>System.Web.UI.Page.RegisterRequiresViewStateEncryption():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterStartupScript" uniqueID="RegisterStartupScript(System.String;System.String):System.Void">
				<signature>System.Web.UI.Page.RegisterStartupScript(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterViewStateHandler" uniqueID="RegisterViewStateHandler():System.Void">
				<signature>System.Web.UI.Page.RegisterViewStateHandler():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterWebFormsScript" uniqueID="RegisterWebFormsScript():System.Void">
				<signature>System.Web.UI.Page.RegisterWebFormsScript():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Render" uniqueID="Render(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RenderCallback" uniqueID="RenderCallback():System.Void">
				<signature>System.Web.UI.Page.RenderCallback():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RenderDivAroundHiddenInputs" uniqueID="RenderDivAroundHiddenInputs(System.Web.UI.HtmlTextWriter):System.Boolean">
				<signature>System.Web.UI.Page.RenderDivAroundHiddenInputs(System.Web.UI.HtmlTextWriter):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RenderPostBackScript" uniqueID="RenderPostBackScript(System.Web.UI.HtmlTextWriter;System.String):System.Void">
				<signature>System.Web.UI.Page.RenderPostBackScript(System.Web.UI.HtmlTextWriter;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RenderViewStateFields" uniqueID="RenderViewStateFields(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.Page.RenderViewStateFields(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RenderWebFormsScript" uniqueID="RenderWebFormsScript(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.Page.RenderWebFormsScript(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RequiresControlState" uniqueID="RequiresControlState(System.Web.UI.Control):System.Boolean">
				<signature>System.Web.UI.Page.RequiresControlState(System.Web.UI.Control):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetOnFormRenderCalled" uniqueID="ResetOnFormRenderCalled():System.Void">
				<signature>System.Web.UI.Page.ResetOnFormRenderCalled():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RestoreCultures" uniqueID="RestoreCultures(System.Threading.Thread;System.Globalization.CultureInfo;System.Globalization.CultureInfo):System.Void">
				<signature>System.Web.UI.Page.RestoreCultures(System.Threading.Thread;System.Globalization.CultureInfo;System.Globalization.CultureInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SaveAllState" uniqueID="SaveAllState():System.Void">
				<signature>System.Web.UI.Page.SaveAllState():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SavePageStateToPersistenceMedium" uniqueID="SavePageStateToPersistenceMedium(System.Object):System.Void">
				<signature>System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetActiveValueProvider" uniqueID="SetActiveValueProvider(System.Web.ModelBinding.IValueProvider):System.Void">
				<signature>System.Web.UI.Page.SetActiveValueProvider(System.Web.ModelBinding.IValueProvider):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetCulture" uniqueID="SetCulture(System.Threading.Thread;System.Globalization.CultureInfo;System.Globalization.CultureInfo):System.Void">
				<signature>System.Web.UI.Page.SetCulture(System.Threading.Thread;System.Globalization.CultureInfo;System.Globalization.CultureInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetCultureWithAssert" uniqueID="SetCultureWithAssert(System.Threading.Thread;System.Globalization.CultureInfo;System.Globalization.CultureInfo):System.Void">
				<signature>System.Web.UI.Page.SetCultureWithAssert(System.Threading.Thread;System.Globalization.CultureInfo;System.Globalization.CultureInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetFocus" uniqueID="SetFocus(System.String):System.Void">
				<signature>System.Web.UI.Page.SetFocus(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetFocus" uniqueID="SetFocus(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Page.SetFocus(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetForm" uniqueID="SetForm(System.Web.UI.HtmlControls.HtmlForm):System.Void">
				<signature>System.Web.UI.Page.SetForm(System.Web.UI.HtmlControls.HtmlForm):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetHeader" uniqueID="SetHeader(System.Web.UI.HtmlControls.HtmlHead):System.Void">
				<signature>System.Web.UI.Page.SetHeader(System.Web.UI.HtmlControls.HtmlHead):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetIntrinsics" uniqueID="SetIntrinsics(System.Web.HttpContext):System.Void">
				<signature>System.Web.UI.Page.SetIntrinsics(System.Web.HttpContext):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetIntrinsics" uniqueID="SetIntrinsics(System.Web.HttpContext;System.Boolean):System.Void">
				<signature>System.Web.UI.Page.SetIntrinsics(System.Web.HttpContext;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetPostFormRenderDelegate" uniqueID="SetPostFormRenderDelegate(System.Web.UI.RenderMethod):System.Void">
				<signature>System.Web.UI.Page.SetPostFormRenderDelegate(System.Web.UI.RenderMethod):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetPreviousPage" uniqueID="SetPreviousPage(System.Web.UI.Page):System.Void">
				<signature>System.Web.UI.Page.SetPreviousPage(System.Web.UI.Page):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetValidatorInvalidControlFocus" uniqueID="SetValidatorInvalidControlFocus(System.String):System.Void">
				<signature>System.Web.UI.Page.SetValidatorInvalidControlFocus(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ShouldLoadControlState" uniqueID="ShouldLoadControlState(System.Web.UI.Control):System.Boolean">
				<signature>System.Web.UI.Page.ShouldLoadControlState(System.Web.UI.Control):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ShouldSuppressMacValidationException" uniqueID="ShouldSuppressMacValidationException(System.Exception):System.Boolean">
				<signature>System.Web.UI.Page.ShouldSuppressMacValidationException(System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UnloadRecursive" uniqueID="UnloadRecursive(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.UnloadRecursive(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnregisterRequiresControlState" uniqueID="UnregisterRequiresControlState(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Validate" uniqueID="Validate():System.Void">
				<signature>System.Web.UI.Page.Validate():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Validate" uniqueID="Validate(System.String):System.Void">
				<signature>System.Web.UI.Page.Validate(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ValidateRawUrlIfRequired" uniqueID="ValidateRawUrlIfRequired():System.Void">
				<signature>System.Web.UI.Page.ValidateRawUrlIfRequired():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="VerifyClientStateIdentifier" uniqueID="VerifyClientStateIdentifier(System.String):System.Boolean">
				<signature>System.Web.UI.Page.VerifyClientStateIdentifier(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="VerifyRenderingInServerForm" uniqueID="VerifyRenderingInServerForm(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_InitComplete" uniqueID="add_InitComplete(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.add_InitComplete(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_LoadComplete" uniqueID="add_LoadComplete(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.add_LoadComplete(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PreInit" uniqueID="add_PreInit(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.add_PreInit(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PreLoad" uniqueID="add_PreLoad(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.add_PreLoad(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PreRenderComplete" uniqueID="add_PreRenderComplete(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.add_PreRenderComplete(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_SaveStateComplete" uniqueID="add_SaveStateComplete(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.add_SaveStateComplete(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ActiveValueProvider" uniqueID="get_ActiveValueProvider():System.Web.ModelBinding.IValueProvider">
				<signature>System.Web.UI.Page.get_ActiveValueProvider():System.Web.ModelBinding.IValueProvider</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Application" uniqueID="get_Application():System.Web.HttpApplicationState">
				<signature>System.Web.UI.Page.get_Application():System.Web.HttpApplicationState</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AspCompatMode" uniqueID="get_AspCompatMode():System.Boolean">
				<signature>System.Web.UI.Page.get_AspCompatMode():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AsyncMode" uniqueID="get_AsyncMode():System.Boolean">
				<signature>System.Web.UI.Page.get_AsyncMode():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AsyncTimeout" uniqueID="get_AsyncTimeout():System.TimeSpan">
				<signature>System.Web.UI.Page.get_AsyncTimeout():System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AutoPostBackControl" uniqueID="get_AutoPostBackControl():System.Web.UI.Control">
				<signature>System.Web.UI.Page.get_AutoPostBackControl():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Buffer" uniqueID="get_Buffer():System.Boolean">
				<signature>System.Web.UI.Page.get_Buffer():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Cache" uniqueID="get_Cache():System.Web.Caching.Cache">
				<signature>System.Web.UI.Page.get_Cache():System.Web.Caching.Cache</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientOnSubmitEvent" uniqueID="get_ClientOnSubmitEvent():System.String">
				<signature>System.Web.UI.Page.get_ClientOnSubmitEvent():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientQueryString" uniqueID="get_ClientQueryString():System.String">
				<signature>System.Web.UI.Page.get_ClientQueryString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientScript" uniqueID="get_ClientScript():System.Web.UI.ClientScriptManager">
				<signature>System.Web.UI.Page.get_ClientScript():System.Web.UI.ClientScriptManager</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientState" uniqueID="get_ClientState():System.String">
				<signature>System.Web.UI.Page.get_ClientState():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientSupportsFocus" uniqueID="get_ClientSupportsFocus():System.Boolean">
				<signature>System.Web.UI.Page.get_ClientSupportsFocus():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ClientSupportsJavaScript" uniqueID="get_ClientSupportsJavaScript():System.Boolean">
				<signature>System.Web.UI.Page.get_ClientSupportsJavaScript():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientTarget" uniqueID="get_ClientTarget():System.String">
				<signature>System.Web.UI.Page.get_ClientTarget():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CodePage" uniqueID="get_CodePage():System.Int32">
				<signature>System.Web.UI.Page.get_CodePage():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ContainsCrossPagePost" uniqueID="get_ContainsCrossPagePost():System.Boolean">
				<signature>System.Web.UI.Page.get_ContainsCrossPagePost():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ContainsEncryptedViewState" uniqueID="get_ContainsEncryptedViewState():System.Boolean">
				<signature>System.Web.UI.Page.get_ContainsEncryptedViewState():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ContainsTheme" uniqueID="get_ContainsTheme():System.Boolean">
				<signature>System.Web.UI.Page.get_ContainsTheme():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ContentType" uniqueID="get_ContentType():System.String">
				<signature>System.Web.UI.Page.get_ContentType():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Context" uniqueID="get_Context():System.Web.HttpContext">
				<signature>System.Web.UI.Page.get_Context():System.Web.HttpContext</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ControlStateLoadedControlIds" uniqueID="get_ControlStateLoadedControlIds():System.Web.Util.StringSet">
				<signature>System.Web.UI.Page.get_ControlStateLoadedControlIds():System.Web.Util.StringSet</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Culture" uniqueID="get_Culture():System.String">
				<signature>System.Web.UI.Page.get_Culture():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DynamicCulture" uniqueID="get_DynamicCulture():System.Globalization.CultureInfo">
				<signature>System.Web.UI.Page.get_DynamicCulture():System.Globalization.CultureInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DynamicUICulture" uniqueID="get_DynamicUICulture():System.Globalization.CultureInfo">
				<signature>System.Web.UI.Page.get_DynamicUICulture():System.Globalization.CultureInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableEventValidation" uniqueID="get_EnableEventValidation():System.Boolean">
				<signature>System.Web.UI.Page.get_EnableEventValidation():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableViewState" uniqueID="get_EnableViewState():System.Boolean">
				<signature>System.Web.UI.Page.get_EnableViewState():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableViewStateMac" uniqueID="get_EnableViewStateMac():System.Boolean">
				<signature>System.Web.UI.Page.get_EnableViewStateMac():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_EnabledControls" uniqueID="get_EnabledControls():System.Collections.ArrayList">
				<signature>System.Web.UI.Page.get_EnabledControls():System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ErrorPage" uniqueID="get_ErrorPage():System.String">
				<signature>System.Web.UI.Page.get_ErrorPage():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FocusedControl" uniqueID="get_FocusedControl():System.Web.UI.Control">
				<signature>System.Web.UI.Page.get_FocusedControl():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FocusedControlID" uniqueID="get_FocusedControlID():System.String">
				<signature>System.Web.UI.Page.get_FocusedControlID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Form" uniqueID="get_Form():System.Web.UI.HtmlControls.HtmlForm">
				<signature>System.Web.UI.Page.get_Form():System.Web.UI.HtmlControls.HtmlForm</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Header" uniqueID="get_Header():System.Web.UI.HtmlControls.HtmlHead">
				<signature>System.Web.UI.Page.get_Header():System.Web.UI.HtmlControls.HtmlHead</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ID" uniqueID="get_ID():System.String">
				<signature>System.Web.UI.Page.get_ID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IdSeparator" uniqueID="get_IdSeparator():System.Char">
				<signature>System.Web.UI.Page.get_IdSeparator():System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsAsync" uniqueID="get_IsAsync():System.Boolean">
				<signature>System.Web.UI.Page.get_IsAsync():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCallback" uniqueID="get_IsCallback():System.Boolean">
				<signature>System.Web.UI.Page.get_IsCallback():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCrossPagePostBack" uniqueID="get_IsCrossPagePostBack():System.Boolean">
				<signature>System.Web.UI.Page.get_IsCrossPagePostBack():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsExportingWebPart" uniqueID="get_IsExportingWebPart():System.Boolean">
				<signature>System.Web.UI.Page.get_IsExportingWebPart():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsExportingWebPartShared" uniqueID="get_IsExportingWebPartShared():System.Boolean">
				<signature>System.Web.UI.Page.get_IsExportingWebPartShared():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsInAspCompatMode" uniqueID="get_IsInAspCompatMode():System.Boolean">
				<signature>System.Web.UI.Page.get_IsInAspCompatMode():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsInOnFormRender" uniqueID="get_IsInOnFormRender():System.Boolean">
				<signature>System.Web.UI.Page.get_IsInOnFormRender():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsPartialRenderingSupported" uniqueID="get_IsPartialRenderingSupported():System.Boolean">
				<signature>System.Web.UI.Page.get_IsPartialRenderingSupported():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPostBack" uniqueID="get_IsPostBack():System.Boolean">
				<signature>System.Web.UI.Page.get_IsPostBack():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsPostBackEventControlRegistered" uniqueID="get_IsPostBackEventControlRegistered():System.Boolean">
				<signature>System.Web.UI.Page.get_IsPostBackEventControlRegistered():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReusable" uniqueID="get_IsReusable():System.Boolean">
				<signature>System.Web.UI.Page.get_IsReusable():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsTransacted" uniqueID="get_IsTransacted():System.Boolean">
				<signature>System.Web.UI.Page.get_IsTransacted():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsValid" uniqueID="get_IsValid():System.Boolean">
				<signature>System.Web.UI.Page.get_IsValid():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.IDictionary">
				<signature>System.Web.UI.Page.get_Items():System.Collections.IDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LCID" uniqueID="get_LCID():System.Int32">
				<signature>System.Web.UI.Page.get_LCID():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LastFocusedControl" uniqueID="get_LastFocusedControl():System.String">
				<signature>System.Web.UI.Page.get_LastFocusedControl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MaintainScrollPositionOnPostBack" uniqueID="get_MaintainScrollPositionOnPostBack():System.Boolean">
				<signature>System.Web.UI.Page.get_MaintainScrollPositionOnPostBack():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Master" uniqueID="get_Master():System.Web.UI.MasterPage">
				<signature>System.Web.UI.Page.get_Master():System.Web.UI.MasterPage</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MasterPageFile" uniqueID="get_MasterPageFile():System.String">
				<signature>System.Web.UI.Page.get_MasterPageFile():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MaxPageStateFieldLength" uniqueID="get_MaxPageStateFieldLength():System.Int32">
				<signature>System.Web.UI.Page.get_MaxPageStateFieldLength():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MetaDescription" uniqueID="get_MetaDescription():System.String">
				<signature>System.Web.UI.Page.get_MetaDescription():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MetaKeywords" uniqueID="get_MetaKeywords():System.String">
				<signature>System.Web.UI.Page.get_MetaKeywords():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ModelBindingExecutionContext" uniqueID="get_ModelBindingExecutionContext():System.Web.ModelBinding.ModelBindingExecutionContext">
				<signature>System.Web.UI.Page.get_ModelBindingExecutionContext():System.Web.ModelBinding.ModelBindingExecutionContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ModelState" uniqueID="get_ModelState():System.Web.ModelBinding.ModelStateDictionary">
				<signature>System.Web.UI.Page.get_ModelState():System.Web.ModelBinding.ModelStateDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PageAdapter" uniqueID="get_PageAdapter():System.Web.UI.Adapters.PageAdapter">
				<signature>System.Web.UI.Page.get_PageAdapter():System.Web.UI.Adapters.PageAdapter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PageStatePersister" uniqueID="get_PageStatePersister():System.Web.UI.PageStatePersister">
				<signature>System.Web.UI.Page.get_PageStatePersister():System.Web.UI.PageStatePersister</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PartialCachingControlStack" uniqueID="get_PartialCachingControlStack():System.Collections.Stack">
				<signature>System.Web.UI.Page.get_PartialCachingControlStack():System.Collections.Stack</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PreviousPage" uniqueID="get_PreviousPage():System.Web.UI.Page">
				<signature>System.Web.UI.Page.get_PreviousPage():System.Web.UI.Page</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RelativeFilePath" uniqueID="get_RelativeFilePath():System.String">
				<signature>System.Web.UI.Page.get_RelativeFilePath():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_RenderDisabledControlsScript" uniqueID="get_RenderDisabledControlsScript():System.Boolean">
				<signature>System.Web.UI.Page.get_RenderDisabledControlsScript():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RenderFocusScript" uniqueID="get_RenderFocusScript():System.Boolean">
				<signature>System.Web.UI.Page.get_RenderFocusScript():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Request" uniqueID="get_Request():System.Web.HttpRequest">
				<signature>System.Web.UI.Page.get_Request():System.Web.HttpRequest</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RequestInternal" uniqueID="get_RequestInternal():System.Web.HttpRequest">
				<signature>System.Web.UI.Page.get_RequestInternal():System.Web.HttpRequest</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RequestValueCollection" uniqueID="get_RequestValueCollection():System.Collections.Specialized.NameValueCollection">
				<signature>System.Web.UI.Page.get_RequestValueCollection():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RequestViewStateString" uniqueID="get_RequestViewStateString():System.String">
				<signature>System.Web.UI.Page.get_RequestViewStateString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RequiresViewStateEncryptionInternal" uniqueID="get_RequiresViewStateEncryptionInternal():System.Boolean">
				<signature>System.Web.UI.Page.get_RequiresViewStateEncryptionInternal():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Response" uniqueID="get_Response():System.Web.HttpResponse">
				<signature>System.Web.UI.Page.get_Response():System.Web.HttpResponse</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ResponseEncoding" uniqueID="get_ResponseEncoding():System.String">
				<signature>System.Web.UI.Page.get_ResponseEncoding():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RouteData" uniqueID="get_RouteData():System.Web.Routing.RouteData">
				<signature>System.Web.UI.Page.get_RouteData():System.Web.Routing.RouteData</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ScriptManager" uniqueID="get_ScriptManager():System.Web.UI.IScriptManager">
				<signature>System.Web.UI.Page.get_ScriptManager():System.Web.UI.IScriptManager</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ScriptManagerType" uniqueID="get_ScriptManagerType():System.Type">
				<signature>System.Web.UI.Page.get_ScriptManagerType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Server" uniqueID="get_Server():System.Web.HttpServerUtility">
				<signature>System.Web.UI.Page.get_Server():System.Web.HttpServerUtility</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Session" uniqueID="get_Session():System.Web.SessionState.HttpSessionState">
				<signature>System.Web.UI.Page.get_Session():System.Web.SessionState.HttpSessionState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SkipFormActionValidation" uniqueID="get_SkipFormActionValidation():System.Boolean">
				<signature>System.Web.UI.Page.get_SkipFormActionValidation():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SmartNavigation" uniqueID="get_SmartNavigation():System.Boolean">
				<signature>System.Web.UI.Page.get_SmartNavigation():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StyleSheetTheme" uniqueID="get_StyleSheetTheme():System.String">
				<signature>System.Web.UI.Page.get_StyleSheetTheme():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SupportsStyleSheets" uniqueID="get_SupportsStyleSheets():System.Boolean">
				<signature>System.Web.UI.Page.get_SupportsStyleSheets():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Theme" uniqueID="get_Theme():System.String">
				<signature>System.Web.UI.Page.get_Theme():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Title" uniqueID="get_Title():System.String">
				<signature>System.Web.UI.Page.get_Title():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Trace" uniqueID="get_Trace():System.Web.TraceContext">
				<signature>System.Web.UI.Page.get_Trace():System.Web.TraceContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TraceEnabled" uniqueID="get_TraceEnabled():System.Boolean">
				<signature>System.Web.UI.Page.get_TraceEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TraceModeValue" uniqueID="get_TraceModeValue():System.Web.TraceMode">
				<signature>System.Web.UI.Page.get_TraceModeValue():System.Web.TraceMode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TransactionMode" uniqueID="get_TransactionMode():System.Int32">
				<signature>System.Web.UI.Page.get_TransactionMode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UICulture" uniqueID="get_UICulture():System.String">
				<signature>System.Web.UI.Page.get_UICulture():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UniqueFilePathSuffix" uniqueID="get_UniqueFilePathSuffix():System.String">
				<signature>System.Web.UI.Page.get_UniqueFilePathSuffix():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnobtrusiveValidationMode" uniqueID="get_UnobtrusiveValidationMode():System.Web.UI.UnobtrusiveValidationMode">
				<signature>System.Web.UI.Page.get_UnobtrusiveValidationMode():System.Web.UI.UnobtrusiveValidationMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_User" uniqueID="get_User():System.Security.Principal.IPrincipal">
				<signature>System.Web.UI.Page.get_User():System.Security.Principal.IPrincipal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValidateRequestMode" uniqueID="get_ValidateRequestMode():System.Web.UI.ValidateRequestMode">
				<signature>System.Web.UI.Page.get_ValidateRequestMode():System.Web.UI.ValidateRequestMode</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ValidatorInvalidControl" uniqueID="get_ValidatorInvalidControl():System.String">
				<signature>System.Web.UI.Page.get_ValidatorInvalidControl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Validators" uniqueID="get_Validators():System.Web.UI.ValidatorCollection">
				<signature>System.Web.UI.Page.get_Validators():System.Web.UI.ValidatorCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ViewStateEncryptionMode" uniqueID="get_ViewStateEncryptionMode():System.Web.UI.ViewStateEncryptionMode">
				<signature>System.Web.UI.Page.get_ViewStateEncryptionMode():System.Web.UI.ViewStateEncryptionMode</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ViewStateMacValidationErrorWasSuppressed" uniqueID="get_ViewStateMacValidationErrorWasSuppressed():System.Boolean">
				<signature>System.Web.UI.Page.get_ViewStateMacValidationErrorWasSuppressed():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ViewStateUserKey" uniqueID="get_ViewStateUserKey():System.String">
				<signature>System.Web.UI.Page.get_ViewStateUserKey():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Visible" uniqueID="get_Visible():System.Boolean">
				<signature>System.Web.UI.Page.get_Visible():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_XhtmlConformanceMode" uniqueID="get_XhtmlConformanceMode():System.Web.Configuration.XhtmlConformanceMode">
				<signature>System.Web.UI.Page.get_XhtmlConformanceMode():System.Web.Configuration.XhtmlConformanceMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_InitComplete" uniqueID="remove_InitComplete(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.remove_InitComplete(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_LoadComplete" uniqueID="remove_LoadComplete(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.remove_LoadComplete(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PreInit" uniqueID="remove_PreInit(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.remove_PreInit(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PreLoad" uniqueID="remove_PreLoad(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.remove_PreLoad(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PreRenderComplete" uniqueID="remove_PreRenderComplete(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.remove_PreRenderComplete(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_SaveStateComplete" uniqueID="remove_SaveStateComplete(System.EventHandler):System.Void">
				<signature>System.Web.UI.Page.remove_SaveStateComplete(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_ActiveValueProvider" uniqueID="set_ActiveValueProvider(System.Web.ModelBinding.IValueProvider):System.Void">
				<signature>System.Web.UI.Page.set_ActiveValueProvider(System.Web.ModelBinding.IValueProvider):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AspCompatMode" uniqueID="set_AspCompatMode(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_AspCompatMode(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AsyncMode" uniqueID="set_AsyncMode(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_AsyncMode(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AsyncTimeout" uniqueID="set_AsyncTimeout(System.TimeSpan):System.Void">
				<signature>System.Web.UI.Page.set_AsyncTimeout(System.TimeSpan):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AutoPostBackControl" uniqueID="set_AutoPostBackControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.Page.set_AutoPostBackControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Buffer" uniqueID="set_Buffer(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_Buffer(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ClientState" uniqueID="set_ClientState(System.String):System.Void">
				<signature>System.Web.UI.Page.set_ClientState(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ClientTarget" uniqueID="set_ClientTarget(System.String):System.Void">
				<signature>System.Web.UI.Page.set_ClientTarget(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CodePage" uniqueID="set_CodePage(System.Int32):System.Void">
				<signature>System.Web.UI.Page.set_CodePage(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ContainsCrossPagePost" uniqueID="set_ContainsCrossPagePost(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_ContainsCrossPagePost(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ContainsEncryptedViewState" uniqueID="set_ContainsEncryptedViewState(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_ContainsEncryptedViewState(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ContentType" uniqueID="set_ContentType(System.String):System.Void">
				<signature>System.Web.UI.Page.set_ContentType(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Culture" uniqueID="set_Culture(System.String):System.Void">
				<signature>System.Web.UI.Page.set_Culture(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableEventValidation" uniqueID="set_EnableEventValidation(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_EnableEventValidation(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableViewState" uniqueID="set_EnableViewState(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_EnableViewState(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableViewStateMac" uniqueID="set_EnableViewStateMac(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_EnableViewStateMac(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ErrorPage" uniqueID="set_ErrorPage(System.String):System.Void">
				<signature>System.Web.UI.Page.set_ErrorPage(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_FileDependencies" uniqueID="set_FileDependencies(System.Collections.ArrayList):System.Void">
				<signature>System.Web.UI.Page.set_FileDependencies(System.Collections.ArrayList):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ID" uniqueID="set_ID(System.String):System.Void">
				<signature>System.Web.UI.Page.set_ID(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LCID" uniqueID="set_LCID(System.Int32):System.Void">
				<signature>System.Web.UI.Page.set_LCID(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MaintainScrollPositionOnPostBack" uniqueID="set_MaintainScrollPositionOnPostBack(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_MaintainScrollPositionOnPostBack(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MasterPageFile" uniqueID="set_MasterPageFile(System.String):System.Void">
				<signature>System.Web.UI.Page.set_MasterPageFile(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MaxPageStateFieldLength" uniqueID="set_MaxPageStateFieldLength(System.Int32):System.Void">
				<signature>System.Web.UI.Page.set_MaxPageStateFieldLength(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MetaDescription" uniqueID="set_MetaDescription(System.String):System.Void">
				<signature>System.Web.UI.Page.set_MetaDescription(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MetaKeywords" uniqueID="set_MetaKeywords(System.String):System.Void">
				<signature>System.Web.UI.Page.set_MetaKeywords(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ResponseEncoding" uniqueID="set_ResponseEncoding(System.String):System.Void">
				<signature>System.Web.UI.Page.set_ResponseEncoding(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ScriptManagerType" uniqueID="set_ScriptManagerType(System.Type):System.Void">
				<signature>System.Web.UI.Page.set_ScriptManagerType(System.Type):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SkipFormActionValidation" uniqueID="set_SkipFormActionValidation(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_SkipFormActionValidation(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SmartNavigation" uniqueID="set_SmartNavigation(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_SmartNavigation(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_StyleSheetTheme" uniqueID="set_StyleSheetTheme(System.String):System.Void">
				<signature>System.Web.UI.Page.set_StyleSheetTheme(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Theme" uniqueID="set_Theme(System.String):System.Void">
				<signature>System.Web.UI.Page.set_Theme(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Title" uniqueID="set_Title(System.String):System.Void">
				<signature>System.Web.UI.Page.set_Title(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TraceEnabled" uniqueID="set_TraceEnabled(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_TraceEnabled(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TraceModeValue" uniqueID="set_TraceModeValue(System.Web.TraceMode):System.Void">
				<signature>System.Web.UI.Page.set_TraceModeValue(System.Web.TraceMode):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_TransactionMode" uniqueID="set_TransactionMode(System.Int32):System.Void">
				<signature>System.Web.UI.Page.set_TransactionMode(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UICulture" uniqueID="set_UICulture(System.String):System.Void">
				<signature>System.Web.UI.Page.set_UICulture(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UnobtrusiveValidationMode" uniqueID="set_UnobtrusiveValidationMode(System.Web.UI.UnobtrusiveValidationMode):System.Void">
				<signature>System.Web.UI.Page.set_UnobtrusiveValidationMode(System.Web.UI.UnobtrusiveValidationMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ValidateRequestMode" uniqueID="set_ValidateRequestMode(System.Web.UI.ValidateRequestMode):System.Void">
				<signature>System.Web.UI.Page.set_ValidateRequestMode(System.Web.UI.ValidateRequestMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ViewStateEncryptionMode" uniqueID="set_ViewStateEncryptionMode(System.Web.UI.ViewStateEncryptionMode):System.Void">
				<signature>System.Web.UI.Page.set_ViewStateEncryptionMode(System.Web.UI.ViewStateEncryptionMode):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_ViewStateMacValidationErrorWasSuppressed" uniqueID="set_ViewStateMacValidationErrorWasSuppressed(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_ViewStateMacValidationErrorWasSuppressed(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ViewStateUserKey" uniqueID="set_ViewStateUserKey(System.String):System.Void">
				<signature>System.Web.UI.Page.set_ViewStateUserKey(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Visible" uniqueID="set_Visible(System.Boolean):System.Void">
				<signature>System.Web.UI.Page.set_Visible(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="IBorderPaddingControl" uniqueID="System.Web.UI.IBorderPaddingControl">
			<method accessibility="Public" methodKind="Member" name="get_BorderPadding" uniqueID="get_BorderPadding():System.Int32">
				<signature>System.Web.UI.IBorderPaddingControl.get_BorderPadding():System.Int32</signature>
			</method>
		</class>
		<class name="ICallbackEventHandler" uniqueID="System.Web.UI.ICallbackEventHandler">
			<method accessibility="Public" methodKind="Member" name="GetCallbackResult" uniqueID="GetCallbackResult():System.String">
				<signature>System.Web.UI.ICallbackEventHandler.GetCallbackResult():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RaiseCallbackEvent" uniqueID="RaiseCallbackEvent(System.String):System.Void">
				<signature>System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String):System.Void</signature>
			</method>
		</class>
		<class name="IDataKeysControl" uniqueID="System.Web.UI.IDataKeysControl">
			<method accessibility="Public" methodKind="Member" name="get_ClientIDRowSuffix" uniqueID="get_ClientIDRowSuffix():System.String[]">
				<signature>System.Web.UI.IDataKeysControl.get_ClientIDRowSuffix():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientIDRowSuffixDataKeys" uniqueID="get_ClientIDRowSuffixDataKeys():System.Web.UI.WebControls.DataKeyArray">
				<signature>System.Web.UI.IDataKeysControl.get_ClientIDRowSuffixDataKeys():System.Web.UI.WebControls.DataKeyArray</signature>
			</method>
		</class>
		<class name="ITextControl" uniqueID="System.Web.UI.ITextControl">
			<method accessibility="Public" methodKind="Member" name="get_Text" uniqueID="get_Text():System.String">
				<signature>System.Web.UI.ITextControl.get_Text():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Text" uniqueID="set_Text(System.String):System.Void">
				<signature>System.Web.UI.ITextControl.set_Text(System.String):System.Void</signature>
			</method>
		</class>
		<class name="IEditableTextControl" uniqueID="System.Web.UI.IEditableTextControl">
			<method accessibility="Public" methodKind="Member" name="add_TextChanged" uniqueID="add_TextChanged(System.EventHandler):System.Void">
				<signature>System.Web.UI.IEditableTextControl.add_TextChanged(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_TextChanged" uniqueID="remove_TextChanged(System.EventHandler):System.Void">
				<signature>System.Web.UI.IEditableTextControl.remove_TextChanged(System.EventHandler):System.Void</signature>
			</method>
		</class>
		<class name="IPostBackEventHandler" uniqueID="System.Web.UI.IPostBackEventHandler">
			<method accessibility="Public" methodKind="Member" name="RaisePostBackEvent" uniqueID="RaisePostBackEvent(System.String):System.Void">
				<signature>System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String):System.Void</signature>
			</method>
		</class>
		<class name="IRenderOuterTableControl" uniqueID="System.Web.UI.IRenderOuterTableControl">
			<method accessibility="Public" methodKind="Member" name="get_ID" uniqueID="get_ID():System.String">
				<signature>System.Web.UI.IRenderOuterTableControl.get_ID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RenderOuterTable" uniqueID="get_RenderOuterTable():System.Boolean">
				<signature>System.Web.UI.IRenderOuterTableControl.get_RenderOuterTable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RenderOuterTable" uniqueID="set_RenderOuterTable(System.Boolean):System.Void">
				<signature>System.Web.UI.IRenderOuterTableControl.set_RenderOuterTable(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="IScriptManager" uniqueID="System.Web.UI.IScriptManager">
			<method accessibility="Public" methodKind="Member" name="RegisterArrayDeclaration" uniqueID="RegisterArrayDeclaration(System.Web.UI.Control;System.String;System.String):System.Void">
				<signature>System.Web.UI.IScriptManager.RegisterArrayDeclaration(System.Web.UI.Control;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterClientScriptBlock" uniqueID="RegisterClientScriptBlock(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.IScriptManager.RegisterClientScriptBlock(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterClientScriptInclude" uniqueID="RegisterClientScriptInclude(System.Web.UI.Control;System.Type;System.String;System.String):System.Void">
				<signature>System.Web.UI.IScriptManager.RegisterClientScriptInclude(System.Web.UI.Control;System.Type;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterClientScriptResource" uniqueID="RegisterClientScriptResource(System.Web.UI.Control;System.Type;System.String):System.Void">
				<signature>System.Web.UI.IScriptManager.RegisterClientScriptResource(System.Web.UI.Control;System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterDispose" uniqueID="RegisterDispose(System.Web.UI.Control;System.String):System.Void">
				<signature>System.Web.UI.IScriptManager.RegisterDispose(System.Web.UI.Control;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterExpandoAttribute" uniqueID="RegisterExpandoAttribute(System.Web.UI.Control;System.String;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.IScriptManager.RegisterExpandoAttribute(System.Web.UI.Control;System.String;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterHiddenField" uniqueID="RegisterHiddenField(System.Web.UI.Control;System.String;System.String):System.Void">
				<signature>System.Web.UI.IScriptManager.RegisterHiddenField(System.Web.UI.Control;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterOnSubmitStatement" uniqueID="RegisterOnSubmitStatement(System.Web.UI.Control;System.Type;System.String;System.String):System.Void">
				<signature>System.Web.UI.IScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control;System.Type;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterPostBackControl" uniqueID="RegisterPostBackControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.IScriptManager.RegisterPostBackControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterStartupScript" uniqueID="RegisterStartupScript(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.IScriptManager.RegisterStartupScript(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetFocusInternal" uniqueID="SetFocusInternal(System.String):System.Void">
				<signature>System.Web.UI.IScriptManager.SetFocusInternal(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableCdn" uniqueID="get_EnableCdn():System.Boolean">
				<signature>System.Web.UI.IScriptManager.get_EnableCdn():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableCdnFallback" uniqueID="get_EnableCdnFallback():System.Boolean">
				<signature>System.Web.UI.IScriptManager.get_EnableCdnFallback():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsDebuggingEnabled" uniqueID="get_IsDebuggingEnabled():System.Boolean">
				<signature>System.Web.UI.IScriptManager.get_IsDebuggingEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInAsyncPostBack" uniqueID="get_IsInAsyncPostBack():System.Boolean">
				<signature>System.Web.UI.IScriptManager.get_IsInAsyncPostBack():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSecureConnection" uniqueID="get_IsSecureConnection():System.Boolean">
				<signature>System.Web.UI.IScriptManager.get_IsSecureConnection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsPartialRendering" uniqueID="get_SupportsPartialRendering():System.Boolean">
				<signature>System.Web.UI.IScriptManager.get_SupportsPartialRendering():System.Boolean</signature>
			</method>
		</class>
		<class name="TemplateControl+AsyncEventMethodInfo" uniqueID="System.Web.UI.TemplateControl+AsyncEventMethodInfo">
			<method accessibility="Protected" methodKind="Member" name="TemplateControl+AsyncEventMethodInfo" uniqueID="TemplateControl+AsyncEventMethodInfo(System.Reflection.MethodInfo;System.Boolean):System.Void">
				<signature>System.Web.UI.TemplateControl+AsyncEventMethodInfo.TemplateControl+AsyncEventMethodInfo(System.Reflection.MethodInfo;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MethodInfo" uniqueID="get_MethodInfo():System.Reflection.MethodInfo">
				<signature>System.Web.UI.TemplateControl+AsyncEventMethodInfo.get_MethodInfo():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RequiresCancellationToken" uniqueID="get_RequiresCancellationToken():System.Boolean">
				<signature>System.Web.UI.TemplateControl+AsyncEventMethodInfo.get_RequiresCancellationToken():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_MethodInfo" uniqueID="set_MethodInfo(System.Reflection.MethodInfo):System.Void">
				<signature>System.Web.UI.TemplateControl+AsyncEventMethodInfo.set_MethodInfo(System.Reflection.MethodInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_RequiresCancellationToken" uniqueID="set_RequiresCancellationToken(System.Boolean):System.Void">
				<signature>System.Web.UI.TemplateControl+AsyncEventMethodInfo.set_RequiresCancellationToken(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="TemplateControl+SyncEventMethodInfo" uniqueID="System.Web.UI.TemplateControl+SyncEventMethodInfo">
			<method accessibility="Private" methodKind="Static" name="IsAsyncVoidMethod" uniqueID="IsAsyncVoidMethod(System.Reflection.MethodInfo):System.Boolean">
				<signature>System.Web.UI.TemplateControl+SyncEventMethodInfo.IsAsyncVoidMethod(System.Reflection.MethodInfo):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TemplateControl+SyncEventMethodInfo" uniqueID="TemplateControl+SyncEventMethodInfo(System.Reflection.MethodInfo;System.Boolean):System.Void">
				<signature>System.Web.UI.TemplateControl+SyncEventMethodInfo.TemplateControl+SyncEventMethodInfo(System.Reflection.MethodInfo;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsArgless" uniqueID="get_IsArgless():System.Boolean">
				<signature>System.Web.UI.TemplateControl+SyncEventMethodInfo.get_IsArgless():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_MethodInfo" uniqueID="get_MethodInfo():System.Reflection.MethodInfo">
				<signature>System.Web.UI.TemplateControl+SyncEventMethodInfo.get_MethodInfo():System.Reflection.MethodInfo</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_IsArgless" uniqueID="set_IsArgless(System.Boolean):System.Void">
				<signature>System.Web.UI.TemplateControl+SyncEventMethodInfo.set_IsArgless(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_MethodInfo" uniqueID="set_MethodInfo(System.Reflection.MethodInfo):System.Void">
				<signature>System.Web.UI.TemplateControl+SyncEventMethodInfo.set_MethodInfo(System.Reflection.MethodInfo):System.Void</signature>
			</method>
		</class>
		<class name="IClientUrlResolver" uniqueID="System.Web.UI.IClientUrlResolver">
			<method accessibility="Public" methodKind="Member" name="ResolveClientUrl" uniqueID="ResolveClientUrl(System.String):System.String">
				<signature>System.Web.UI.IClientUrlResolver.ResolveClientUrl(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AppRelativeTemplateSourceDirectory" uniqueID="get_AppRelativeTemplateSourceDirectory():System.String">
				<signature>System.Web.UI.IClientUrlResolver.get_AppRelativeTemplateSourceDirectory():System.String</signature>
			</method>
		</class>
		<class name="IControl" uniqueID="System.Web.UI.IControl">
			<method accessibility="Public" methodKind="Member" name="get_Context" uniqueID="get_Context():System.Web.HttpContextBase">
				<signature>System.Web.UI.IControl.get_Context():System.Web.HttpContextBase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DesignMode" uniqueID="get_DesignMode():System.Boolean">
				<signature>System.Web.UI.IControl.get_DesignMode():System.Boolean</signature>
			</method>
		</class>
		<class name="IScriptManagerInternal" uniqueID="System.Web.UI.IScriptManagerInternal">
			<method accessibility="Public" methodKind="Member" name="RegisterAsyncPostBackControl" uniqueID="RegisterAsyncPostBackControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.IScriptManagerInternal.RegisterAsyncPostBackControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterPostBackControl" uniqueID="RegisterPostBackControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.IScriptManagerInternal.RegisterPostBackControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterProxy" uniqueID="RegisterProxy(System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Web.UI.IScriptManagerInternal.RegisterProxy(System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterScriptDescriptors" uniqueID="RegisterScriptDescriptors(System.Web.UI.IExtenderControl):System.Void">
				<signature>System.Web.UI.IScriptManagerInternal.RegisterScriptDescriptors(System.Web.UI.IExtenderControl):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterScriptDescriptors" uniqueID="RegisterScriptDescriptors(System.Web.UI.IScriptControl):System.Void">
				<signature>System.Web.UI.IScriptManagerInternal.RegisterScriptDescriptors(System.Web.UI.IScriptControl):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterUpdatePanel" uniqueID="RegisterUpdatePanel(System.Web.UI.UpdatePanel):System.Void">
				<signature>System.Web.UI.IScriptManagerInternal.RegisterUpdatePanel(System.Web.UI.UpdatePanel):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnregisterUpdatePanel" uniqueID="UnregisterUpdatePanel(System.Web.UI.UpdatePanel):System.Void">
				<signature>System.Web.UI.IScriptManagerInternal.UnregisterUpdatePanel(System.Web.UI.UpdatePanel):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AsyncPostBackSourceElementID" uniqueID="get_AsyncPostBackSourceElementID():System.String">
				<signature>System.Web.UI.IScriptManagerInternal.get_AsyncPostBackSourceElementID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInAsyncPostBack" uniqueID="get_IsInAsyncPostBack():System.Boolean">
				<signature>System.Web.UI.IScriptManagerInternal.get_IsInAsyncPostBack():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsPartialRendering" uniqueID="get_SupportsPartialRendering():System.Boolean">
				<signature>System.Web.UI.IScriptManagerInternal.get_SupportsPartialRendering():System.Boolean</signature>
			</method>
		</class>
		<class name="ScriptManager" uniqueID="System.Web.UI.ScriptManager">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.UI.ScriptManager.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="&lt;get_DefaultAjaxFrameworkAssembly&gt;b__0" uniqueID="&lt;get_DefaultAjaxFrameworkAssembly&gt;b__0(System.Web.Configuration.AssemblyInfo):System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;">
				<signature>System.Web.UI.ScriptManager.&lt;get_DefaultAjaxFrameworkAssembly&gt;b__0(System.Web.Configuration.AssemblyInfo):System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCurrent" uniqueID="GetCurrent(System.Web.UI.Page):System.Web.UI.ScriptManager">
				<signature>System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page):System.Web.UI.ScriptManager</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetCustomErrorsSectionWithAssert" uniqueID="GetCustomErrorsSectionWithAssert():System.Web.UI.ICustomErrorsSection">
				<signature>System.Web.UI.ScriptManager.GetCustomErrorsSectionWithAssert():System.Web.UI.ICustomErrorsSection</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetEffectivePath" uniqueID="GetEffectivePath(System.Web.UI.ScriptReferenceBase):System.String">
				<signature>System.Web.UI.ScriptManager.GetEffectivePath(System.Web.UI.ScriptReferenceBase):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterArrayDeclaration" uniqueID="RegisterArrayDeclaration(System.Web.UI.Control;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterArrayDeclaration" uniqueID="RegisterArrayDeclaration(System.Web.UI.Page;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterClientScriptBlock" uniqueID="RegisterClientScriptBlock(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterClientScriptBlock" uniqueID="RegisterClientScriptBlock(System.Web.UI.Page;System.Type;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page;System.Type;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterClientScriptInclude" uniqueID="RegisterClientScriptInclude(System.Web.UI.Control;System.Type;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control;System.Type;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterClientScriptInclude" uniqueID="RegisterClientScriptInclude(System.Web.UI.Page;System.Type;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page;System.Type;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterClientScriptResource" uniqueID="RegisterClientScriptResource(System.Web.UI.Control;System.Type;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control;System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterClientScriptResource" uniqueID="RegisterClientScriptResource(System.Web.UI.Page;System.Type;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page;System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterExpandoAttribute" uniqueID="RegisterExpandoAttribute(System.Web.UI.Control;System.String;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control;System.String;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterHiddenField" uniqueID="RegisterHiddenField(System.Web.UI.Control;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterHiddenField" uniqueID="RegisterHiddenField(System.Web.UI.Page;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterNamedClientScriptResource" uniqueID="RegisterNamedClientScriptResource(System.Web.UI.Control;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterNamedClientScriptResource" uniqueID="RegisterNamedClientScriptResource(System.Web.UI.Page;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterOnSubmitStatement" uniqueID="RegisterOnSubmitStatement(System.Web.UI.Control;System.Type;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control;System.Type;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterOnSubmitStatement" uniqueID="RegisterOnSubmitStatement(System.Web.UI.Page;System.Type;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page;System.Type;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="RegisterResourceWithClientScriptManager" uniqueID="RegisterResourceWithClientScriptManager(System.Web.UI.IClientScriptManager;System.Reflection.Assembly;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterResourceWithClientScriptManager(System.Web.UI.IClientScriptManager;System.Reflection.Assembly;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterStartupScript" uniqueID="RegisterStartupScript(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RegisterStartupScript" uniqueID="RegisterStartupScript(System.Web.UI.Page;System.Type;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page;System.Type;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="TryRegisterNamedClientScriptResourceUsingScriptReference" uniqueID="TryRegisterNamedClientScriptResourceUsingScriptReference(System.Web.UI.Page;System.String):System.Boolean">
				<signature>System.Web.UI.ScriptManager.TryRegisterNamedClientScriptResourceUsingScriptReference(System.Web.UI.Page;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_DefaultAjaxFrameworkAssembly" uniqueID="get_DefaultAjaxFrameworkAssembly():System.Reflection.Assembly">
				<signature>System.Web.UI.ScriptManager.get_DefaultAjaxFrameworkAssembly():System.Reflection.Assembly</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_ScriptResourceMapping" uniqueID="get_ScriptResourceMapping():System.Web.UI.ScriptResourceMapping">
				<signature>System.Web.UI.ScriptManager.get_ScriptResourceMapping():System.Web.UI.ScriptResourceMapping</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="get_SplitFrameworkScripts" uniqueID="get_SplitFrameworkScripts():System.Collections.Generic.HashSet&lt;System.String&gt;">
				<signature>System.Web.UI.ScriptManager.get_SplitFrameworkScripts():System.Collections.Generic.HashSet&lt;System.String&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="set_DefaultAjaxFrameworkAssembly" uniqueID="set_DefaultAjaxFrameworkAssembly(System.Reflection.Assembly):System.Void">
				<signature>System.Web.UI.ScriptManager.set_DefaultAjaxFrameworkAssembly(System.Reflection.Assembly):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddFrameworkLoadedCheck" uniqueID="AddFrameworkLoadedCheck():System.Void">
				<signature>System.Web.UI.ScriptManager.AddFrameworkLoadedCheck():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AddFrameworkScript" uniqueID="AddFrameworkScript(System.Web.UI.ScriptReference;System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;;System.Boolean):System.Web.UI.ScriptReferenceBase">
				<signature>System.Web.UI.ScriptManager.AddFrameworkScript(System.Web.UI.ScriptReference;System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;;System.Boolean):System.Web.UI.ScriptReferenceBase</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddFrameworkScripts" uniqueID="AddFrameworkScripts(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void">
				<signature>System.Web.UI.ScriptManager.AddFrameworkScripts(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddHistoryPoint" uniqueID="AddHistoryPoint(System.Collections.Specialized.NameValueCollection;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddHistoryPoint" uniqueID="AddHistoryPoint(System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.AddHistoryPoint(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddHistoryPoint" uniqueID="AddHistoryPoint(System.String;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.AddHistoryPoint(System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddScriptCollections" uniqueID="AddScriptCollections(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;;System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void">
				<signature>System.Web.UI.ScriptManager.AddScriptCollections(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;;System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptManagerProxy&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateUniqueScriptKey" uniqueID="CreateUniqueScriptKey():System.String">
				<signature>System.Web.UI.ScriptManager.CreateUniqueScriptKey():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetApplicationServicesInitializationScript" uniqueID="GetApplicationServicesInitializationScript():System.String">
				<signature>System.Web.UI.ScriptManager.GetApplicationServicesInitializationScript():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRegisteredArrayDeclarations" uniqueID="GetRegisteredArrayDeclarations():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;">
				<signature>System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRegisteredClientScriptBlocks" uniqueID="GetRegisteredClientScriptBlocks():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;">
				<signature>System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRegisteredDisposeScripts" uniqueID="GetRegisteredDisposeScripts():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;">
				<signature>System.Web.UI.ScriptManager.GetRegisteredDisposeScripts():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRegisteredExpandoAttributes" uniqueID="GetRegisteredExpandoAttributes():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;">
				<signature>System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRegisteredHiddenFields" uniqueID="GetRegisteredHiddenFields():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;">
				<signature>System.Web.UI.ScriptManager.GetRegisteredHiddenFields():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRegisteredOnSubmitStatements" uniqueID="GetRegisteredOnSubmitStatements():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;">
				<signature>System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetRegisteredStartupScripts" uniqueID="GetRegisteredStartupScripts():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;">
				<signature>System.Web.UI.ScriptManager.GetRegisteredStartupScripts():System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetScriptResourceUrl" uniqueID="GetScriptResourceUrl(System.String;System.Reflection.Assembly):System.String">
				<signature>System.Web.UI.ScriptManager.GetScriptResourceUrl(System.String;System.Reflection.Assembly):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetStateString" uniqueID="GetStateString():System.String">
				<signature>System.Web.UI.ScriptManager.GetStateString():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="LoadHistoryState" uniqueID="LoadHistoryState(System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.LoadHistoryState(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadPostData" uniqueID="LoadPostData(System.String;System.Collections.Specialized.NameValueCollection):System.Boolean">
				<signature>System.Web.UI.ScriptManager.LoadPostData(System.String;System.Collections.Specialized.NameValueCollection):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="NeedToLoadBeforeUI" uniqueID="NeedToLoadBeforeUI(System.Web.UI.ScriptReference;System.Web.UI.AjaxFrameworkMode):System.Boolean">
				<signature>System.Web.UI.ScriptManager.NeedToLoadBeforeUI(System.Web.UI.ScriptReference;System.Web.UI.AjaxFrameworkMode):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnAsyncPostBackError" uniqueID="OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs):System.Void">
				<signature>System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnInit" uniqueID="OnInit(System.EventArgs):System.Void">
				<signature>System.Web.UI.ScriptManager.OnInit(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnPageInitComplete" uniqueID="OnPageInitComplete(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.ScriptManager.OnPageInitComplete(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnPagePreRenderComplete" uniqueID="OnPagePreRenderComplete(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.ScriptManager.OnPagePreRenderComplete(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnPreRender" uniqueID="OnPreRender(System.EventArgs):System.Void">
				<signature>System.Web.UI.ScriptManager.OnPreRender(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnResolveCompositeScriptReference" uniqueID="OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs):System.Void">
				<signature>System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnResolveScriptReference" uniqueID="OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs):System.Void">
				<signature>System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PrepareNewHistoryPoint" uniqueID="PrepareNewHistoryPoint():System.Void">
				<signature>System.Web.UI.ScriptManager.PrepareNewHistoryPoint():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ProcessBundleReferences" uniqueID="ProcessBundleReferences(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;">
				<signature>System.Web.UI.ScriptManager.ProcessBundleReferences(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RaiseNavigate" uniqueID="RaiseNavigate(System.Web.UI.HistoryEventArgs):System.Void">
				<signature>System.Web.UI.ScriptManager.RaiseNavigate(System.Web.UI.HistoryEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaisePostBackEvent" uniqueID="RaisePostBackEvent(System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RaisePostBackEvent(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaisePostDataChangedEvent" uniqueID="RaisePostDataChangedEvent():System.Void">
				<signature>System.Web.UI.ScriptManager.RaisePostDataChangedEvent():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterAsyncPostBackControl" uniqueID="RegisterAsyncPostBackControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterClientScriptBlockInternal" uniqueID="RegisterClientScriptBlockInternal(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterClientScriptBlockInternal(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterClientScriptIncludeInternal" uniqueID="RegisterClientScriptIncludeInternal(System.Web.UI.Control;System.Type;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterClientScriptIncludeInternal(System.Web.UI.Control;System.Type;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterDataItem" uniqueID="RegisterDataItem(System.Web.UI.Control;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterDataItem" uniqueID="RegisterDataItem(System.Web.UI.Control;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterDispose" uniqueID="RegisterDispose(System.Web.UI.Control;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RegisterFallbackScript" uniqueID="RegisterFallbackScript(System.Web.UI.ScriptReferenceBase;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterFallbackScript(System.Web.UI.ScriptReferenceBase;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RegisterGlobalizationScriptBlock" uniqueID="RegisterGlobalizationScriptBlock():System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterGlobalizationScriptBlock():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterPostBackControl" uniqueID="RegisterPostBackControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterScriptDescriptors" uniqueID="RegisterScriptDescriptors(System.Web.UI.IExtenderControl):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RegisterScriptDescriptors" uniqueID="RegisterScriptDescriptors(System.Web.UI.IScriptControl):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RegisterScripts" uniqueID="RegisterScripts():System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterScripts():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RegisterServices" uniqueID="RegisterServices():System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterServices():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RegisterStartupScriptInternal" uniqueID="RegisterStartupScriptInternal(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterStartupScriptInternal(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RegisterUniqueScripts" uniqueID="RegisterUniqueScripts(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void">
				<signature>System.Web.UI.ScriptManager.RegisterUniqueScripts(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveDuplicates" uniqueID="RemoveDuplicates(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;;System.Web.UI.AjaxFrameworkMode;System.Boolean;System.Web.UI.IClientScriptManager;System.Web.UI.ScriptReferenceBase):System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;">
				<signature>System.Web.UI.ScriptManager.RemoveDuplicates(System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;;System.Web.UI.AjaxFrameworkMode;System.Boolean;System.Web.UI.IClientScriptManager;System.Web.UI.ScriptReferenceBase):System.Collections.Generic.List&lt;System.Web.UI.ScriptReferenceBase&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Render" uniqueID="Render(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ScriptManager" uniqueID="ScriptManager():System.Void">
				<signature>System.Web.UI.ScriptManager.ScriptManager():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ScriptManager" uniqueID="ScriptManager(System.Web.UI.IControl;System.Web.UI.IPage;System.Web.UI.ICompilationSection;System.Web.UI.IDeploymentSection;System.Web.UI.ICustomErrorsSection;System.Reflection.Assembly;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.ScriptManager(System.Web.UI.IControl;System.Web.UI.IPage;System.Web.UI.ICompilationSection;System.Web.UI.IDeploymentSection;System.Web.UI.ICustomErrorsSection;System.Reflection.Assembly;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetFocus" uniqueID="SetFocus(System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.SetFocus(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetFocus" uniqueID="SetFocus(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetPageTitle" uniqueID="SetPageTitle(System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.SetPageTitle(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetStateValue" uniqueID="SetStateValue(System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.SetStateValue(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IClientUrlResolver.get_AppRelativeTemplateSourceDirectory" uniqueID="System.Web.UI.IClientUrlResolver.get_AppRelativeTemplateSourceDirectory():System.String">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IClientUrlResolver.get_AppRelativeTemplateSourceDirectory():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IControl.get_Context" uniqueID="System.Web.UI.IControl.get_Context():System.Web.HttpContextBase">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IControl.get_Context():System.Web.HttpContextBase</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IControl.get_DesignMode" uniqueID="System.Web.UI.IControl.get_DesignMode():System.Boolean">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IControl.get_DesignMode():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IPostBackDataHandler.LoadPostData" uniqueID="System.Web.UI.IPostBackDataHandler.LoadPostData(System.String;System.Collections.Specialized.NameValueCollection):System.Boolean">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IPostBackDataHandler.LoadPostData(System.String;System.Collections.Specialized.NameValueCollection):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" uniqueID="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent():System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent" uniqueID="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.RegisterArrayDeclaration" uniqueID="System.Web.UI.IScriptManager.RegisterArrayDeclaration(System.Web.UI.Control;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.RegisterArrayDeclaration(System.Web.UI.Control;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.RegisterClientScriptBlock" uniqueID="System.Web.UI.IScriptManager.RegisterClientScriptBlock(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.RegisterClientScriptBlock(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.RegisterClientScriptInclude" uniqueID="System.Web.UI.IScriptManager.RegisterClientScriptInclude(System.Web.UI.Control;System.Type;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.RegisterClientScriptInclude(System.Web.UI.Control;System.Type;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.RegisterClientScriptResource" uniqueID="System.Web.UI.IScriptManager.RegisterClientScriptResource(System.Web.UI.Control;System.Type;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.RegisterClientScriptResource(System.Web.UI.Control;System.Type;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.RegisterDispose" uniqueID="System.Web.UI.IScriptManager.RegisterDispose(System.Web.UI.Control;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.RegisterDispose(System.Web.UI.Control;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.RegisterExpandoAttribute" uniqueID="System.Web.UI.IScriptManager.RegisterExpandoAttribute(System.Web.UI.Control;System.String;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.RegisterExpandoAttribute(System.Web.UI.Control;System.String;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.RegisterHiddenField" uniqueID="System.Web.UI.IScriptManager.RegisterHiddenField(System.Web.UI.Control;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.RegisterHiddenField(System.Web.UI.Control;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.RegisterOnSubmitStatement" uniqueID="System.Web.UI.IScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control;System.Type;System.String;System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control;System.Type;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.RegisterPostBackControl" uniqueID="System.Web.UI.IScriptManager.RegisterPostBackControl(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.RegisterPostBackControl(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.RegisterStartupScript" uniqueID="System.Web.UI.IScriptManager.RegisterStartupScript(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.RegisterStartupScript(System.Web.UI.Control;System.Type;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.SetFocusInternal" uniqueID="System.Web.UI.IScriptManager.SetFocusInternal(System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.SetFocusInternal(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManager.get_IsSecureConnection" uniqueID="System.Web.UI.IScriptManager.get_IsSecureConnection():System.Boolean">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManager.get_IsSecureConnection():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManagerInternal.RegisterProxy" uniqueID="System.Web.UI.IScriptManagerInternal.RegisterProxy(System.Web.UI.ScriptManagerProxy):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManagerInternal.RegisterProxy(System.Web.UI.ScriptManagerProxy):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManagerInternal.RegisterUpdatePanel" uniqueID="System.Web.UI.IScriptManagerInternal.RegisterUpdatePanel(System.Web.UI.UpdatePanel):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManagerInternal.RegisterUpdatePanel(System.Web.UI.UpdatePanel):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IScriptManagerInternal.UnregisterUpdatePanel" uniqueID="System.Web.UI.IScriptManagerInternal.UnregisterUpdatePanel(System.Web.UI.UpdatePanel):System.Void">
				<signature>System.Web.UI.ScriptManager.System.Web.UI.IScriptManagerInternal.UnregisterUpdatePanel(System.Web.UI.UpdatePanel):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_AsyncPostBackError" uniqueID="add_AsyncPostBackError(System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;):System.Void">
				<signature>System.Web.UI.ScriptManager.add_AsyncPostBackError(System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Navigate" uniqueID="add_Navigate(System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;):System.Void">
				<signature>System.Web.UI.ScriptManager.add_Navigate(System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_ResolveCompositeScriptReference" uniqueID="add_ResolveCompositeScriptReference(System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;):System.Void">
				<signature>System.Web.UI.ScriptManager.add_ResolveCompositeScriptReference(System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_ResolveScriptReference" uniqueID="add_ResolveScriptReference(System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;):System.Void">
				<signature>System.Web.UI.ScriptManager.add_ResolveScriptReference(System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AjaxFrameworkAssembly" uniqueID="get_AjaxFrameworkAssembly():System.Reflection.Assembly">
				<signature>System.Web.UI.ScriptManager.get_AjaxFrameworkAssembly():System.Reflection.Assembly</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AjaxFrameworkMode" uniqueID="get_AjaxFrameworkMode():System.Web.UI.AjaxFrameworkMode">
				<signature>System.Web.UI.ScriptManager.get_AjaxFrameworkMode():System.Web.UI.AjaxFrameworkMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowCustomErrorsRedirect" uniqueID="get_AllowCustomErrorsRedirect():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_AllowCustomErrorsRedirect():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_AppLevelCompilationSection" uniqueID="get_AppLevelCompilationSection():System.Web.UI.ICompilationSection">
				<signature>System.Web.UI.ScriptManager.get_AppLevelCompilationSection():System.Web.UI.ICompilationSection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AsyncPostBackErrorMessage" uniqueID="get_AsyncPostBackErrorMessage():System.String">
				<signature>System.Web.UI.ScriptManager.get_AsyncPostBackErrorMessage():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AsyncPostBackSourceElementID" uniqueID="get_AsyncPostBackSourceElementID():System.String">
				<signature>System.Web.UI.ScriptManager.get_AsyncPostBackSourceElementID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AsyncPostBackTimeout" uniqueID="get_AsyncPostBackTimeout():System.Int32">
				<signature>System.Web.UI.ScriptManager.get_AsyncPostBackTimeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AuthenticationService" uniqueID="get_AuthenticationService():System.Web.UI.AuthenticationServiceManager">
				<signature>System.Web.UI.ScriptManager.get_AuthenticationService():System.Web.UI.AuthenticationServiceManager</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_BundleReflectionHelper" uniqueID="get_BundleReflectionHelper():System.Web.UI.BundleReflectionHelper">
				<signature>System.Web.UI.ScriptManager.get_BundleReflectionHelper():System.Web.UI.BundleReflectionHelper</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientNavigateHandler" uniqueID="get_ClientNavigateHandler():System.String">
				<signature>System.Web.UI.ScriptManager.get_ClientNavigateHandler():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CompositeScript" uniqueID="get_CompositeScript():System.Web.UI.CompositeScriptReference">
				<signature>System.Web.UI.ScriptManager.get_CompositeScript():System.Web.UI.CompositeScriptReference</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Control" uniqueID="get_Control():System.Web.UI.IControl">
				<signature>System.Web.UI.ScriptManager.get_Control():System.Web.UI.IControl</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CustomErrorsSection" uniqueID="get_CustomErrorsSection():System.Web.UI.ICustomErrorsSection">
				<signature>System.Web.UI.ScriptManager.get_CustomErrorsSection():System.Web.UI.ICustomErrorsSection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DeploymentSection" uniqueID="get_DeploymentSection():System.Web.UI.IDeploymentSection">
				<signature>System.Web.UI.ScriptManager.get_DeploymentSection():System.Web.UI.IDeploymentSection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DeploymentSectionRetail" uniqueID="get_DeploymentSectionRetail():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_DeploymentSectionRetail():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EmptyPageUrl" uniqueID="get_EmptyPageUrl():System.String">
				<signature>System.Web.UI.ScriptManager.get_EmptyPageUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableCdn" uniqueID="get_EnableCdn():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_EnableCdn():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableCdnFallback" uniqueID="get_EnableCdnFallback():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_EnableCdnFallback():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableHistory" uniqueID="get_EnableHistory():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_EnableHistory():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnablePageMethods" uniqueID="get_EnablePageMethods():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_EnablePageMethods():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnablePartialRendering" uniqueID="get_EnablePartialRendering():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_EnablePartialRendering():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableScriptGlobalization" uniqueID="get_EnableScriptGlobalization():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_EnableScriptGlobalization():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableScriptLocalization" uniqueID="get_EnableScriptLocalization():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_EnableScriptLocalization():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableSecureHistoryState" uniqueID="get_EnableSecureHistoryState():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_EnableSecureHistoryState():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasAuthenticationServiceManager" uniqueID="get_HasAuthenticationServiceManager():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_HasAuthenticationServiceManager():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasProfileServiceManager" uniqueID="get_HasProfileServiceManager():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_HasProfileServiceManager():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasRoleServiceManager" uniqueID="get_HasRoleServiceManager():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_HasRoleServiceManager():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IPage" uniqueID="get_IPage():System.Web.UI.IPage">
				<signature>System.Web.UI.ScriptManager.get_IPage():System.Web.UI.IPage</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsDebuggingEnabled" uniqueID="get_IsDebuggingEnabled():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_IsDebuggingEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsInAsyncPostBack" uniqueID="get_IsInAsyncPostBack():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_IsInAsyncPostBack():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNavigating" uniqueID="get_IsNavigating():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_IsNavigating():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsRestMethodCall" uniqueID="get_IsRestMethodCall():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_IsRestMethodCall():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsSecureConnection" uniqueID="get_IsSecureConnection():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_IsSecureConnection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LoadScriptsBeforeUI" uniqueID="get_LoadScriptsBeforeUI():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_LoadScriptsBeforeUI():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_PageRequestManager" uniqueID="get_PageRequestManager():System.Web.UI.PageRequestManager">
				<signature>System.Web.UI.ScriptManager.get_PageRequestManager():System.Web.UI.PageRequestManager</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ProfileService" uniqueID="get_ProfileService():System.Web.UI.ProfileServiceManager">
				<signature>System.Web.UI.ScriptManager.get_ProfileService():System.Web.UI.ProfileServiceManager</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Proxies" uniqueID="get_Proxies():System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;">
				<signature>System.Web.UI.ScriptManager.get_Proxies():System.Collections.Generic.List&lt;System.Web.UI.ScriptManagerProxy&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RoleService" uniqueID="get_RoleService():System.Web.UI.RoleServiceManager">
				<signature>System.Web.UI.ScriptManager.get_RoleService():System.Web.UI.RoleServiceManager</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ScriptControlManager" uniqueID="get_ScriptControlManager():System.Web.UI.ScriptControlManager">
				<signature>System.Web.UI.ScriptManager.get_ScriptControlManager():System.Web.UI.ScriptControlManager</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ScriptMode" uniqueID="get_ScriptMode():System.Web.UI.ScriptMode">
				<signature>System.Web.UI.ScriptManager.get_ScriptMode():System.Web.UI.ScriptMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ScriptPath" uniqueID="get_ScriptPath():System.String">
				<signature>System.Web.UI.ScriptManager.get_ScriptPath():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ScriptRegistration" uniqueID="get_ScriptRegistration():System.Web.UI.ScriptRegistrationManager">
				<signature>System.Web.UI.ScriptManager.get_ScriptRegistration():System.Web.UI.ScriptRegistrationManager</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scripts" uniqueID="get_Scripts():System.Web.UI.ScriptReferenceCollection">
				<signature>System.Web.UI.ScriptManager.get_Scripts():System.Web.UI.ScriptReferenceCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Services" uniqueID="get_Services():System.Web.UI.ServiceReferenceCollection">
				<signature>System.Web.UI.ScriptManager.get_Services():System.Web.UI.ServiceReferenceCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsPartialRendering" uniqueID="get_SupportsPartialRendering():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_SupportsPartialRendering():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Visible" uniqueID="get_Visible():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_Visible():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Zip" uniqueID="get_Zip():System.Boolean">
				<signature>System.Web.UI.ScriptManager.get_Zip():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_AsyncPostBackError" uniqueID="remove_AsyncPostBackError(System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;):System.Void">
				<signature>System.Web.UI.ScriptManager.remove_AsyncPostBackError(System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Navigate" uniqueID="remove_Navigate(System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;):System.Void">
				<signature>System.Web.UI.ScriptManager.remove_Navigate(System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_ResolveCompositeScriptReference" uniqueID="remove_ResolveCompositeScriptReference(System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;):System.Void">
				<signature>System.Web.UI.ScriptManager.remove_ResolveCompositeScriptReference(System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_ResolveScriptReference" uniqueID="remove_ResolveScriptReference(System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;):System.Void">
				<signature>System.Web.UI.ScriptManager.remove_ResolveScriptReference(System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AjaxFrameworkMode" uniqueID="set_AjaxFrameworkMode(System.Web.UI.AjaxFrameworkMode):System.Void">
				<signature>System.Web.UI.ScriptManager.set_AjaxFrameworkMode(System.Web.UI.AjaxFrameworkMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowCustomErrorsRedirect" uniqueID="set_AllowCustomErrorsRedirect(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_AllowCustomErrorsRedirect(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AsyncPostBackErrorMessage" uniqueID="set_AsyncPostBackErrorMessage(System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.set_AsyncPostBackErrorMessage(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AsyncPostBackTimeout" uniqueID="set_AsyncPostBackTimeout(System.Int32):System.Void">
				<signature>System.Web.UI.ScriptManager.set_AsyncPostBackTimeout(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_BundleReflectionHelper" uniqueID="set_BundleReflectionHelper(System.Web.UI.BundleReflectionHelper):System.Void">
				<signature>System.Web.UI.ScriptManager.set_BundleReflectionHelper(System.Web.UI.BundleReflectionHelper):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ClientNavigateHandler" uniqueID="set_ClientNavigateHandler(System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.set_ClientNavigateHandler(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EmptyPageUrl" uniqueID="set_EmptyPageUrl(System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.set_EmptyPageUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableCdn" uniqueID="set_EnableCdn(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_EnableCdn(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableCdnFallback" uniqueID="set_EnableCdnFallback(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_EnableCdnFallback(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableHistory" uniqueID="set_EnableHistory(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_EnableHistory(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnablePageMethods" uniqueID="set_EnablePageMethods(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_EnablePageMethods(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnablePartialRendering" uniqueID="set_EnablePartialRendering(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_EnablePartialRendering(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableScriptGlobalization" uniqueID="set_EnableScriptGlobalization(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_EnableScriptGlobalization(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableScriptLocalization" uniqueID="set_EnableScriptLocalization(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_EnableScriptLocalization(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableSecureHistoryState" uniqueID="set_EnableSecureHistoryState(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_EnableSecureHistoryState(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LoadScriptsBeforeUI" uniqueID="set_LoadScriptsBeforeUI(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_LoadScriptsBeforeUI(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ScriptMode" uniqueID="set_ScriptMode(System.Web.UI.ScriptMode):System.Void">
				<signature>System.Web.UI.ScriptManager.set_ScriptMode(System.Web.UI.ScriptMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ScriptPath" uniqueID="set_ScriptPath(System.String):System.Void">
				<signature>System.Web.UI.ScriptManager.set_ScriptPath(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SupportsPartialRendering" uniqueID="set_SupportsPartialRendering(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_SupportsPartialRendering(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Visible" uniqueID="set_Visible(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_Visible(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Zip" uniqueID="set_Zip(System.Boolean):System.Void">
				<signature>System.Web.UI.ScriptManager.set_Zip(System.Boolean):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Web.SessionState">
		<class name="HttpSessionState" uniqueID="System.Web.SessionState.HttpSessionState">
			<method accessibility="Public" methodKind="Member" name="Abandon" uniqueID="Abandon():System.Void">
				<signature>System.Web.SessionState.HttpSessionState.Abandon():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.Object):System.Void">
				<signature>System.Web.SessionState.HttpSessionState.Add(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Web.SessionState.HttpSessionState.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Web.SessionState.HttpSessionState.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Web.SessionState.HttpSessionState.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HttpSessionState" uniqueID="HttpSessionState(System.Web.SessionState.IHttpSessionState):System.Void">
				<signature>System.Web.SessionState.HttpSessionState.HttpSessionState(System.Web.SessionState.IHttpSessionState):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Void">
				<signature>System.Web.SessionState.HttpSessionState.Remove(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAll" uniqueID="RemoveAll():System.Void">
				<signature>System.Web.SessionState.HttpSessionState.RemoveAll():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CodePage" uniqueID="get_CodePage():System.Int32">
				<signature>System.Web.SessionState.HttpSessionState.get_CodePage():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Container" uniqueID="get_Container():System.Web.SessionState.IHttpSessionState">
				<signature>System.Web.SessionState.HttpSessionState.get_Container():System.Web.SessionState.IHttpSessionState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Contents" uniqueID="get_Contents():System.Web.SessionState.HttpSessionState">
				<signature>System.Web.SessionState.HttpSessionState.get_Contents():System.Web.SessionState.HttpSessionState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CookieMode" uniqueID="get_CookieMode():System.Web.HttpCookieMode">
				<signature>System.Web.SessionState.HttpSessionState.get_CookieMode():System.Web.HttpCookieMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Web.SessionState.HttpSessionState.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsCookieless" uniqueID="get_IsCookieless():System.Boolean">
				<signature>System.Web.SessionState.HttpSessionState.get_IsCookieless():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNewSession" uniqueID="get_IsNewSession():System.Boolean">
				<signature>System.Web.SessionState.HttpSessionState.get_IsNewSession():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Web.SessionState.HttpSessionState.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Web.SessionState.HttpSessionState.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object">
				<signature>System.Web.SessionState.HttpSessionState.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Object">
				<signature>System.Web.SessionState.HttpSessionState.get_Item(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Specialized.NameObjectCollectionBase+KeysCollection">
				<signature>System.Web.SessionState.HttpSessionState.get_Keys():System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LCID" uniqueID="get_LCID():System.Int32">
				<signature>System.Web.SessionState.HttpSessionState.get_LCID():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Mode" uniqueID="get_Mode():System.Web.SessionState.SessionStateMode">
				<signature>System.Web.SessionState.HttpSessionState.get_Mode():System.Web.SessionState.SessionStateMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SessionID" uniqueID="get_SessionID():System.String">
				<signature>System.Web.SessionState.HttpSessionState.get_SessionID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StaticObjects" uniqueID="get_StaticObjects():System.Web.HttpStaticObjectsCollection">
				<signature>System.Web.SessionState.HttpSessionState.get_StaticObjects():System.Web.HttpStaticObjectsCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Web.SessionState.HttpSessionState.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Timeout" uniqueID="get_Timeout():System.Int32">
				<signature>System.Web.SessionState.HttpSessionState.get_Timeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CodePage" uniqueID="set_CodePage(System.Int32):System.Void">
				<signature>System.Web.SessionState.HttpSessionState.set_CodePage(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Web.SessionState.HttpSessionState.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Object):System.Void">
				<signature>System.Web.SessionState.HttpSessionState.set_Item(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LCID" uniqueID="set_LCID(System.Int32):System.Void">
				<signature>System.Web.SessionState.HttpSessionState.set_LCID(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Timeout" uniqueID="set_Timeout(System.Int32):System.Void">
				<signature>System.Web.SessionState.HttpSessionState.set_Timeout(System.Int32):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Web.UI.WebControls">
		<class name="AuthenticateEventArgs" uniqueID="System.Web.UI.WebControls.AuthenticateEventArgs">
			<method accessibility="Public" methodKind="Member" name="AuthenticateEventArgs" uniqueID="AuthenticateEventArgs():System.Void">
				<signature>System.Web.UI.WebControls.AuthenticateEventArgs.AuthenticateEventArgs():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AuthenticateEventArgs" uniqueID="AuthenticateEventArgs(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.AuthenticateEventArgs.AuthenticateEventArgs(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Authenticated" uniqueID="get_Authenticated():System.Boolean">
				<signature>System.Web.UI.WebControls.AuthenticateEventArgs.get_Authenticated():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Authenticated" uniqueID="set_Authenticated(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.AuthenticateEventArgs.set_Authenticated(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="ICompositeControlDesignerAccessor" uniqueID="System.Web.UI.WebControls.ICompositeControlDesignerAccessor">
			<method accessibility="Public" methodKind="Member" name="RecreateChildControls" uniqueID="RecreateChildControls():System.Void">
				<signature>System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls():System.Void</signature>
			</method>
		</class>
		<class name="DataBoundControl" uniqueID="System.Web.UI.WebControls.DataBoundControl">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ConnectToDataSourceView" uniqueID="ConnectToDataSourceView():System.Web.UI.DataSourceView">
				<signature>System.Web.UI.WebControls.DataBoundControl.ConnectToDataSourceView():System.Web.UI.DataSourceView</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateDataSourceSelectArguments" uniqueID="CreateDataSourceSelectArguments():System.Web.UI.DataSourceSelectArguments">
				<signature>System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments():System.Web.UI.DataSourceSelectArguments</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DataBoundControl" uniqueID="DataBoundControl():System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.DataBoundControl():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureSingleDataSource" uniqueID="EnsureSingleDataSource():System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.EnsureSingleDataSource():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetData" uniqueID="GetData():System.Web.UI.DataSourceView">
				<signature>System.Web.UI.WebControls.DataBoundControl.GetData():System.Web.UI.DataSourceView</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDataSource" uniqueID="GetDataSource():System.Web.UI.IDataSource">
				<signature>System.Web.UI.WebControls.DataBoundControl.GetDataSource():System.Web.UI.IDataSource</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadViewState" uniqueID="LoadViewState(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.LoadViewState(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MarkAsDataBound" uniqueID="MarkAsDataBound():System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnCreatingModelDataSource" uniqueID="OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDataPropertyChanged" uniqueID="OnDataPropertyChanged():System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDataSourceViewChanged" uniqueID="OnDataSourceViewChanged(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnDataSourceViewSelectCallback" uniqueID="OnDataSourceViewSelectCallback(System.Collections.IEnumerable):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewSelectCallback(System.Collections.IEnumerable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnLoad" uniqueID="OnLoad(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPagePreLoad" uniqueID="OnPagePreLoad(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.OnPagePreLoad(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PerformDataBinding" uniqueID="PerformDataBinding(System.Collections.IEnumerable):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.PerformDataBinding(System.Collections.IEnumerable):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PerformSelect" uniqueID="PerformSelect():System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.PerformSelect():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SaveViewState" uniqueID="SaveViewState():System.Object">
				<signature>System.Web.UI.WebControls.DataBoundControl.SaveViewState():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrackViewState" uniqueID="TrackViewState():System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.TrackViewState():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UpdateModelDataSourceProperties" uniqueID="UpdateModelDataSourceProperties(System.Web.UI.WebControls.ModelDataSource):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.UpdateModelDataSourceProperties(System.Web.UI.WebControls.ModelDataSource):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateDataSource" uniqueID="ValidateDataSource(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CallingDataMethods" uniqueID="add_CallingDataMethods(System.Web.UI.WebControls.CallingDataMethodsEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.add_CallingDataMethods(System.Web.UI.WebControls.CallingDataMethodsEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_CreatingModelDataSource" uniqueID="add_CreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.add_CreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataMember" uniqueID="get_DataMember():System.String">
				<signature>System.Web.UI.WebControls.DataBoundControl.get_DataMember():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataSourceID" uniqueID="get_DataSourceID():System.String">
				<signature>System.Web.UI.WebControls.DataBoundControl.get_DataSourceID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataSourceObject" uniqueID="get_DataSourceObject():System.Web.UI.IDataSource">
				<signature>System.Web.UI.WebControls.DataBoundControl.get_DataSourceObject():System.Web.UI.IDataSource</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsUsingModelBinders" uniqueID="get_IsUsingModelBinders():System.Boolean">
				<signature>System.Web.UI.WebControls.DataBoundControl.get_IsUsingModelBinders():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ItemType" uniqueID="get_ItemType():System.String">
				<signature>System.Web.UI.WebControls.DataBoundControl.get_ItemType():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ModelDataSource" uniqueID="get_ModelDataSource():System.Web.UI.WebControls.ModelDataSource">
				<signature>System.Web.UI.WebControls.DataBoundControl.get_ModelDataSource():System.Web.UI.WebControls.ModelDataSource</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SelectArguments" uniqueID="get_SelectArguments():System.Web.UI.DataSourceSelectArguments">
				<signature>System.Web.UI.WebControls.DataBoundControl.get_SelectArguments():System.Web.UI.DataSourceSelectArguments</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SelectMethod" uniqueID="get_SelectMethod():System.String">
				<signature>System.Web.UI.WebControls.DataBoundControl.get_SelectMethod():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CallingDataMethods" uniqueID="remove_CallingDataMethods(System.Web.UI.WebControls.CallingDataMethodsEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.remove_CallingDataMethods(System.Web.UI.WebControls.CallingDataMethodsEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_CreatingModelDataSource" uniqueID="remove_CreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.remove_CreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataMember" uniqueID="set_DataMember(System.String):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.set_DataMember(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataSourceID" uniqueID="set_DataSourceID(System.String):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.set_DataSourceID(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ItemType" uniqueID="set_ItemType(System.String):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.set_ItemType(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_ModelDataSource" uniqueID="set_ModelDataSource(System.Web.UI.WebControls.ModelDataSource):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.set_ModelDataSource(System.Web.UI.WebControls.ModelDataSource):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SelectMethod" uniqueID="set_SelectMethod(System.String):System.Void">
				<signature>System.Web.UI.WebControls.DataBoundControl.set_SelectMethod(System.String):System.Void</signature>
			</method>
		</class>
		<class name="WebControl" uniqueID="System.Web.UI.WebControls.WebControl">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.UI.WebControls.WebControl.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_DisabledCssClass" uniqueID="get_DisabledCssClass():System.String">
				<signature>System.Web.UI.WebControls.WebControl.get_DisabledCssClass():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="set_DisabledCssClass" uniqueID="set_DisabledCssClass(System.String):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_DisabledCssClass(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddAttributesToRender" uniqueID="AddAttributesToRender(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddDisplayInlineBlockIfNeeded" uniqueID="AddDisplayInlineBlockIfNeeded(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.AddDisplayInlineBlockIfNeeded(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ApplyStyle" uniqueID="ApplyStyle(System.Web.UI.WebControls.Style):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyBaseAttributes" uniqueID="CopyBaseAttributes(System.Web.UI.WebControls.WebControl):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateControlStyle" uniqueID="CreateControlStyle():System.Web.UI.WebControls.Style">
				<signature>System.Web.UI.WebControls.WebControl.CreateControlStyle():System.Web.UI.WebControls.Style</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadViewState" uniqueID="LoadViewState(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.LoadViewState(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MergeStyle" uniqueID="MergeStyle(System.Web.UI.WebControls.Style):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Render" uniqueID="Render(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RenderBeginTag" uniqueID="RenderBeginTag(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RenderContents" uniqueID="RenderContents(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RenderEndTag" uniqueID="RenderEndTag(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SaveViewState" uniqueID="SaveViewState():System.Object">
				<signature>System.Web.UI.WebControls.WebControl.SaveViewState():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IAttributeAccessor.GetAttribute" uniqueID="System.Web.UI.IAttributeAccessor.GetAttribute(System.String):System.String">
				<signature>System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IAttributeAccessor.SetAttribute" uniqueID="System.Web.UI.IAttributeAccessor.SetAttribute(System.String;System.String):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrackViewState" uniqueID="TrackViewState():System.Void">
				<signature>System.Web.UI.WebControls.WebControl.TrackViewState():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="WebControl" uniqueID="WebControl():System.Void">
				<signature>System.Web.UI.WebControls.WebControl.WebControl():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="WebControl" uniqueID="WebControl(System.String):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.WebControl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WebControl" uniqueID="WebControl(System.Web.UI.HtmlTextWriterTag):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.WebControl(System.Web.UI.HtmlTextWriterTag):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AccessKey" uniqueID="get_AccessKey():System.String">
				<signature>System.Web.UI.WebControls.WebControl.get_AccessKey():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Attributes" uniqueID="get_Attributes():System.Web.UI.AttributeCollection">
				<signature>System.Web.UI.WebControls.WebControl.get_Attributes():System.Web.UI.AttributeCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BackColor" uniqueID="get_BackColor():System.Drawing.Color">
				<signature>System.Web.UI.WebControls.WebControl.get_BackColor():System.Drawing.Color</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BorderColor" uniqueID="get_BorderColor():System.Drawing.Color">
				<signature>System.Web.UI.WebControls.WebControl.get_BorderColor():System.Drawing.Color</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BorderStyle" uniqueID="get_BorderStyle():System.Web.UI.WebControls.BorderStyle">
				<signature>System.Web.UI.WebControls.WebControl.get_BorderStyle():System.Web.UI.WebControls.BorderStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BorderWidth" uniqueID="get_BorderWidth():System.Web.UI.WebControls.Unit">
				<signature>System.Web.UI.WebControls.WebControl.get_BorderWidth():System.Web.UI.WebControls.Unit</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ControlStyle" uniqueID="get_ControlStyle():System.Web.UI.WebControls.Style">
				<signature>System.Web.UI.WebControls.WebControl.get_ControlStyle():System.Web.UI.WebControls.Style</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ControlStyleCreated" uniqueID="get_ControlStyleCreated():System.Boolean">
				<signature>System.Web.UI.WebControls.WebControl.get_ControlStyleCreated():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CssClass" uniqueID="get_CssClass():System.String">
				<signature>System.Web.UI.WebControls.WebControl.get_CssClass():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableTheming" uniqueID="get_EnableTheming():System.Boolean">
				<signature>System.Web.UI.WebControls.WebControl.get_EnableTheming():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Enabled" uniqueID="get_Enabled():System.Boolean">
				<signature>System.Web.UI.WebControls.WebControl.get_Enabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Font" uniqueID="get_Font():System.Web.UI.WebControls.FontInfo">
				<signature>System.Web.UI.WebControls.WebControl.get_Font():System.Web.UI.WebControls.FontInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ForeColor" uniqueID="get_ForeColor():System.Drawing.Color">
				<signature>System.Web.UI.WebControls.WebControl.get_ForeColor():System.Drawing.Color</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasAttributes" uniqueID="get_HasAttributes():System.Boolean">
				<signature>System.Web.UI.WebControls.WebControl.get_HasAttributes():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Height" uniqueID="get_Height():System.Web.UI.WebControls.Unit">
				<signature>System.Web.UI.WebControls.WebControl.get_Height():System.Web.UI.WebControls.Unit</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsEnabled" uniqueID="get_IsEnabled():System.Boolean">
				<signature>System.Web.UI.WebControls.WebControl.get_IsEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RequiresLegacyRendering" uniqueID="get_RequiresLegacyRendering():System.Boolean">
				<signature>System.Web.UI.WebControls.WebControl.get_RequiresLegacyRendering():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SkinID" uniqueID="get_SkinID():System.String">
				<signature>System.Web.UI.WebControls.WebControl.get_SkinID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Style" uniqueID="get_Style():System.Web.UI.CssStyleCollection">
				<signature>System.Web.UI.WebControls.WebControl.get_Style():System.Web.UI.CssStyleCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsDisabledAttribute" uniqueID="get_SupportsDisabledAttribute():System.Boolean">
				<signature>System.Web.UI.WebControls.WebControl.get_SupportsDisabledAttribute():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TabIndex" uniqueID="get_TabIndex():System.Int16">
				<signature>System.Web.UI.WebControls.WebControl.get_TabIndex():System.Int16</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TagKey" uniqueID="get_TagKey():System.Web.UI.HtmlTextWriterTag">
				<signature>System.Web.UI.WebControls.WebControl.get_TagKey():System.Web.UI.HtmlTextWriterTag</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TagName" uniqueID="get_TagName():System.String">
				<signature>System.Web.UI.WebControls.WebControl.get_TagName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ToolTip" uniqueID="get_ToolTip():System.String">
				<signature>System.Web.UI.WebControls.WebControl.get_ToolTip():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Width" uniqueID="get_Width():System.Web.UI.WebControls.Unit">
				<signature>System.Web.UI.WebControls.WebControl.get_Width():System.Web.UI.WebControls.Unit</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AccessKey" uniqueID="set_AccessKey(System.String):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_AccessKey(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_BackColor" uniqueID="set_BackColor(System.Drawing.Color):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_BackColor(System.Drawing.Color):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_BorderColor" uniqueID="set_BorderColor(System.Drawing.Color):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_BorderColor(System.Drawing.Color):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_BorderStyle" uniqueID="set_BorderStyle(System.Web.UI.WebControls.BorderStyle):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_BorderStyle(System.Web.UI.WebControls.BorderStyle):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_BorderWidth" uniqueID="set_BorderWidth(System.Web.UI.WebControls.Unit):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_BorderWidth(System.Web.UI.WebControls.Unit):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CssClass" uniqueID="set_CssClass(System.String):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_CssClass(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableTheming" uniqueID="set_EnableTheming(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_EnableTheming(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Enabled" uniqueID="set_Enabled(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_Enabled(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ForeColor" uniqueID="set_ForeColor(System.Drawing.Color):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_ForeColor(System.Drawing.Color):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Height" uniqueID="set_Height(System.Web.UI.WebControls.Unit):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_Height(System.Web.UI.WebControls.Unit):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SkinID" uniqueID="set_SkinID(System.String):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_SkinID(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TabIndex" uniqueID="set_TabIndex(System.Int16):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_TabIndex(System.Int16):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ToolTip" uniqueID="set_ToolTip(System.String):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_ToolTip(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Width" uniqueID="set_Width(System.Web.UI.WebControls.Unit):System.Void">
				<signature>System.Web.UI.WebControls.WebControl.set_Width(System.Web.UI.WebControls.Unit):System.Void</signature>
			</method>
		</class>
		<class name="BaseDataBoundControl" uniqueID="System.Web.UI.WebControls.BaseDataBoundControl">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseDataBoundControl" uniqueID="BaseDataBoundControl():System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.BaseDataBoundControl():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConfirmInitState" uniqueID="ConfirmInitState():System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataBind" uniqueID="DataBind():System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.DataBind():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="EnsureDataBound" uniqueID="EnsureDataBound():System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDataBound" uniqueID="OnDataBound(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDataPropertyChanged" uniqueID="OnDataPropertyChanged():System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.OnDataPropertyChanged():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnInit" uniqueID="OnInit(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.OnInit(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPagePreLoad" uniqueID="OnPagePreLoad(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnPreRender" uniqueID="OnPreRender(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PerformSelect" uniqueID="PerformSelect():System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.PerformSelect():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ValidateDataSource" uniqueID="ValidateDataSource(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.ValidateDataSource(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_DataBound" uniqueID="add_DataBound(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.add_DataBound(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataSource" uniqueID="get_DataSource():System.Object">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.get_DataSource():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataSourceID" uniqueID="get_DataSourceID():System.String">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.get_DataSourceID():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Initialized" uniqueID="get_Initialized():System.Boolean">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.get_Initialized():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsBoundUsingDataSourceID" uniqueID="get_IsBoundUsingDataSourceID():System.Boolean">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.get_IsBoundUsingDataSourceID():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsDataBindingAutomatic" uniqueID="get_IsDataBindingAutomatic():System.Boolean">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.get_IsDataBindingAutomatic():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsUsingModelBinders" uniqueID="get_IsUsingModelBinders():System.Boolean">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.get_IsUsingModelBinders():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RequiresDataBinding" uniqueID="get_RequiresDataBinding():System.Boolean">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.get_RequiresDataBinding():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsDisabledAttribute" uniqueID="get_SupportsDisabledAttribute():System.Boolean">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.get_SupportsDisabledAttribute():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_DataBound" uniqueID="remove_DataBound(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.remove_DataBound(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataSource" uniqueID="set_DataSource(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.set_DataSource(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataSourceID" uniqueID="set_DataSourceID(System.String):System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.set_DataSourceID(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_RequiresDataBinding" uniqueID="set_RequiresDataBinding(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.BaseDataBoundControl.set_RequiresDataBinding(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="IDataBoundControl" uniqueID="System.Web.UI.WebControls.IDataBoundControl">
			<method accessibility="Public" methodKind="Member" name="get_DataKeyNames" uniqueID="get_DataKeyNames():System.String[]">
				<signature>System.Web.UI.WebControls.IDataBoundControl.get_DataKeyNames():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataMember" uniqueID="get_DataMember():System.String">
				<signature>System.Web.UI.WebControls.IDataBoundControl.get_DataMember():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataSource" uniqueID="get_DataSource():System.Object">
				<signature>System.Web.UI.WebControls.IDataBoundControl.get_DataSource():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataSourceID" uniqueID="get_DataSourceID():System.String">
				<signature>System.Web.UI.WebControls.IDataBoundControl.get_DataSourceID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataSourceObject" uniqueID="get_DataSourceObject():System.Web.UI.IDataSource">
				<signature>System.Web.UI.WebControls.IDataBoundControl.get_DataSourceObject():System.Web.UI.IDataSource</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataKeyNames" uniqueID="set_DataKeyNames(System.String[]):System.Void">
				<signature>System.Web.UI.WebControls.IDataBoundControl.set_DataKeyNames(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataMember" uniqueID="set_DataMember(System.String):System.Void">
				<signature>System.Web.UI.WebControls.IDataBoundControl.set_DataMember(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataSource" uniqueID="set_DataSource(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.IDataBoundControl.set_DataSource(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataSourceID" uniqueID="set_DataSourceID(System.String):System.Void">
				<signature>System.Web.UI.WebControls.IDataBoundControl.set_DataSourceID(System.String):System.Void</signature>
			</method>
		</class>
		<class name="CompositeControl" uniqueID="System.Web.UI.WebControls.CompositeControl">
			<method accessibility="Protected" methodKind="Member" name="CompositeControl" uniqueID="CompositeControl():System.Void">
				<signature>System.Web.UI.WebControls.CompositeControl.CompositeControl():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataBind" uniqueID="DataBind():System.Void">
				<signature>System.Web.UI.WebControls.CompositeControl.DataBind():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RecreateChildControls" uniqueID="RecreateChildControls():System.Void">
				<signature>System.Web.UI.WebControls.CompositeControl.RecreateChildControls():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Render" uniqueID="Render(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.CompositeControl.Render(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls" uniqueID="System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls():System.Void">
				<signature>System.Web.UI.WebControls.CompositeControl.System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Controls" uniqueID="get_Controls():System.Web.UI.ControlCollection">
				<signature>System.Web.UI.WebControls.CompositeControl.get_Controls():System.Web.UI.ControlCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsDisabledAttribute" uniqueID="get_SupportsDisabledAttribute():System.Boolean">
				<signature>System.Web.UI.WebControls.CompositeControl.get_SupportsDisabledAttribute():System.Boolean</signature>
			</method>
		</class>
		<class name="CompositeDataBoundControl" uniqueID="System.Web.UI.WebControls.CompositeDataBoundControl">
			<method accessibility="Protected" methodKind="Member" name="CompositeDataBoundControl" uniqueID="CompositeDataBoundControl():System.Void">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.CompositeDataBoundControl():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateChildControls" uniqueID="CreateChildControls():System.Void">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateChildControls" uniqueID="CreateChildControls(System.Collections.IEnumerable;System.Boolean):System.Int32">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls(System.Collections.IEnumerable;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PerformDataBinding" uniqueID="PerformDataBinding(System.Collections.IEnumerable):System.Void">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.PerformDataBinding(System.Collections.IEnumerable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Controls" uniqueID="get_Controls():System.Web.UI.ControlCollection">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.get_Controls():System.Web.UI.ControlCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeleteMethod" uniqueID="get_DeleteMethod():System.String">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.get_DeleteMethod():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InsertMethod" uniqueID="get_InsertMethod():System.String">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.get_InsertMethod():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsUsingModelBinders" uniqueID="get_IsUsingModelBinders():System.Boolean">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.get_IsUsingModelBinders():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UpdateMethod" uniqueID="get_UpdateMethod():System.String">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.get_UpdateMethod():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DeleteMethod" uniqueID="set_DeleteMethod(System.String):System.Void">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.set_DeleteMethod(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_InsertMethod" uniqueID="set_InsertMethod(System.String):System.Void">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.set_InsertMethod(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UpdateMethod" uniqueID="set_UpdateMethod(System.String):System.Void">
				<signature>System.Web.UI.WebControls.CompositeDataBoundControl.set_UpdateMethod(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ICallbackContainer" uniqueID="System.Web.UI.WebControls.ICallbackContainer">
			<method accessibility="Public" methodKind="Member" name="GetCallbackScript" uniqueID="GetCallbackScript(System.Web.UI.WebControls.IButtonControl;System.String):System.String">
				<signature>System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl;System.String):System.String</signature>
			</method>
		</class>
		<class name="IDataBoundListControl" uniqueID="System.Web.UI.WebControls.IDataBoundListControl">
			<method accessibility="Public" methodKind="Member" name="get_ClientIDRowSuffix" uniqueID="get_ClientIDRowSuffix():System.String[]">
				<signature>System.Web.UI.WebControls.IDataBoundListControl.get_ClientIDRowSuffix():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataKeys" uniqueID="get_DataKeys():System.Web.UI.WebControls.DataKeyArray">
				<signature>System.Web.UI.WebControls.IDataBoundListControl.get_DataKeys():System.Web.UI.WebControls.DataKeyArray</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnablePersistedSelection" uniqueID="get_EnablePersistedSelection():System.Boolean">
				<signature>System.Web.UI.WebControls.IDataBoundListControl.get_EnablePersistedSelection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SelectedDataKey" uniqueID="get_SelectedDataKey():System.Web.UI.WebControls.DataKey">
				<signature>System.Web.UI.WebControls.IDataBoundListControl.get_SelectedDataKey():System.Web.UI.WebControls.DataKey</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SelectedIndex" uniqueID="get_SelectedIndex():System.Int32">
				<signature>System.Web.UI.WebControls.IDataBoundListControl.get_SelectedIndex():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ClientIDRowSuffix" uniqueID="set_ClientIDRowSuffix(System.String[]):System.Void">
				<signature>System.Web.UI.WebControls.IDataBoundListControl.set_ClientIDRowSuffix(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnablePersistedSelection" uniqueID="set_EnablePersistedSelection(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.IDataBoundListControl.set_EnablePersistedSelection(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SelectedIndex" uniqueID="set_SelectedIndex(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.IDataBoundListControl.set_SelectedIndex(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="IFieldControl" uniqueID="System.Web.UI.WebControls.IFieldControl">
			<method accessibility="Public" methodKind="Member" name="get_FieldsGenerator" uniqueID="get_FieldsGenerator():System.Web.UI.IAutoFieldGenerator">
				<signature>System.Web.UI.WebControls.IFieldControl.get_FieldsGenerator():System.Web.UI.IAutoFieldGenerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_FieldsGenerator" uniqueID="set_FieldsGenerator(System.Web.UI.IAutoFieldGenerator):System.Void">
				<signature>System.Web.UI.WebControls.IFieldControl.set_FieldsGenerator(System.Web.UI.IAutoFieldGenerator):System.Void</signature>
			</method>
		</class>
		<class name="IPersistedSelector" uniqueID="System.Web.UI.WebControls.IPersistedSelector">
			<method accessibility="Public" methodKind="Member" name="get_DataKey" uniqueID="get_DataKey():System.Web.UI.WebControls.DataKey">
				<signature>System.Web.UI.WebControls.IPersistedSelector.get_DataKey():System.Web.UI.WebControls.DataKey</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataKey" uniqueID="set_DataKey(System.Web.UI.WebControls.DataKey):System.Void">
				<signature>System.Web.UI.WebControls.IPersistedSelector.set_DataKey(System.Web.UI.WebControls.DataKey):System.Void</signature>
			</method>
		</class>
		<class name="IPostBackContainer" uniqueID="System.Web.UI.WebControls.IPostBackContainer">
			<method accessibility="Public" methodKind="Member" name="GetPostBackOptions" uniqueID="GetPostBackOptions(System.Web.UI.WebControls.IButtonControl):System.Web.UI.PostBackOptions">
				<signature>System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl):System.Web.UI.PostBackOptions</signature>
			</method>
		</class>
		<class name="Login" uniqueID="System.Web.UI.WebControls.Login">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.UI.WebControls.Login.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AttemptLogin" uniqueID="AttemptLogin():System.Void">
				<signature>System.Web.UI.WebControls.Login.AttemptLogin():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="AuthenticateUsingMembershipProvider" uniqueID="AuthenticateUsingMembershipProvider(System.Web.UI.WebControls.AuthenticateEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.Login.AuthenticateUsingMembershipProvider(System.Web.UI.WebControls.AuthenticateEventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateChildControls" uniqueID="CreateChildControls():System.Void">
				<signature>System.Web.UI.WebControls.Login.CreateChildControls():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetRedirectUrl" uniqueID="GetRedirectUrl():System.String">
				<signature>System.Web.UI.WebControls.Login.GetRedirectUrl():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadViewState" uniqueID="LoadViewState(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.Login.LoadViewState(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Login" uniqueID="Login():System.Void">
				<signature>System.Web.UI.WebControls.Login.Login():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnAuthenticate" uniqueID="OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnBubbleEvent" uniqueID="OnBubbleEvent(System.Object;System.EventArgs):System.Boolean">
				<signature>System.Web.UI.WebControls.Login.OnBubbleEvent(System.Object;System.EventArgs):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnLoggedIn" uniqueID="OnLoggedIn(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.Login.OnLoggedIn(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnLoggingIn" uniqueID="OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.Login.OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnLoginError" uniqueID="OnLoginError(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnLoginPage" uniqueID="OnLoginPage():System.Boolean">
				<signature>System.Web.UI.WebControls.Login.OnLoginPage():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnPreRender" uniqueID="OnPreRender(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.Login.OnPreRender(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PasswordTextChanged" uniqueID="PasswordTextChanged(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.Login.PasswordTextChanged(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RedirectedFromFailedLogin" uniqueID="RedirectedFromFailedLogin():System.Boolean">
				<signature>System.Web.UI.WebControls.Login.RedirectedFromFailedLogin():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RememberMeCheckedChanged" uniqueID="RememberMeCheckedChanged(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.Login.RememberMeCheckedChanged(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Render" uniqueID="Render(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.Login.Render(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SaveViewState" uniqueID="SaveViewState():System.Object">
				<signature>System.Web.UI.WebControls.Login.SaveViewState():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetChildProperties" uniqueID="SetChildProperties():System.Void">
				<signature>System.Web.UI.WebControls.Login.SetChildProperties():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetCommonChildProperties" uniqueID="SetCommonChildProperties():System.Void">
				<signature>System.Web.UI.WebControls.Login.SetCommonChildProperties():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetDefaultTemplateChildProperties" uniqueID="SetDefaultTemplateChildProperties():System.Void">
				<signature>System.Web.UI.WebControls.Login.SetDefaultTemplateChildProperties():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetDesignModeState" uniqueID="SetDesignModeState(System.Collections.IDictionary):System.Void">
				<signature>System.Web.UI.WebControls.Login.SetDesignModeState(System.Collections.IDictionary):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetEditableChildProperties" uniqueID="SetEditableChildProperties():System.Void">
				<signature>System.Web.UI.WebControls.Login.SetEditableChildProperties():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrackViewState" uniqueID="TrackViewState():System.Void">
				<signature>System.Web.UI.WebControls.Login.TrackViewState():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UserNameTextChanged" uniqueID="UserNameTextChanged(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.Login.UserNameTextChanged(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Authenticate" uniqueID="add_Authenticate(System.Web.UI.WebControls.AuthenticateEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.Login.add_Authenticate(System.Web.UI.WebControls.AuthenticateEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_LoggedIn" uniqueID="add_LoggedIn(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.Login.add_LoggedIn(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_LoggingIn" uniqueID="add_LoggingIn(System.Web.UI.WebControls.LoginCancelEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.Login.add_LoggingIn(System.Web.UI.WebControls.LoginCancelEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_LoginError" uniqueID="add_LoginError(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.Login.add_LoginError(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BorderPadding" uniqueID="get_BorderPadding():System.Int32">
				<signature>System.Web.UI.WebControls.Login.get_BorderPadding():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CheckBoxStyle" uniqueID="get_CheckBoxStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.Login.get_CheckBoxStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ConvertingToTemplate" uniqueID="get_ConvertingToTemplate():System.Boolean">
				<signature>System.Web.UI.WebControls.Login.get_ConvertingToTemplate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreateUserIconUrl" uniqueID="get_CreateUserIconUrl():System.String">
				<signature>System.Web.UI.WebControls.Login.get_CreateUserIconUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreateUserText" uniqueID="get_CreateUserText():System.String">
				<signature>System.Web.UI.WebControls.Login.get_CreateUserText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreateUserUrl" uniqueID="get_CreateUserUrl():System.String">
				<signature>System.Web.UI.WebControls.Login.get_CreateUserUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DestinationPageUrl" uniqueID="get_DestinationPageUrl():System.String">
				<signature>System.Web.UI.WebControls.Login.get_DestinationPageUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DisplayRememberMe" uniqueID="get_DisplayRememberMe():System.Boolean">
				<signature>System.Web.UI.WebControls.Login.get_DisplayRememberMe():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FailureAction" uniqueID="get_FailureAction():System.Web.UI.WebControls.LoginFailureAction">
				<signature>System.Web.UI.WebControls.Login.get_FailureAction():System.Web.UI.WebControls.LoginFailureAction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FailureText" uniqueID="get_FailureText():System.String">
				<signature>System.Web.UI.WebControls.Login.get_FailureText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FailureTextStyle" uniqueID="get_FailureTextStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.Login.get_FailureTextStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HelpPageIconUrl" uniqueID="get_HelpPageIconUrl():System.String">
				<signature>System.Web.UI.WebControls.Login.get_HelpPageIconUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HelpPageText" uniqueID="get_HelpPageText():System.String">
				<signature>System.Web.UI.WebControls.Login.get_HelpPageText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HelpPageUrl" uniqueID="get_HelpPageUrl():System.String">
				<signature>System.Web.UI.WebControls.Login.get_HelpPageUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HyperLinkStyle" uniqueID="get_HyperLinkStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.Login.get_HyperLinkStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InstructionText" uniqueID="get_InstructionText():System.String">
				<signature>System.Web.UI.WebControls.Login.get_InstructionText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InstructionTextStyle" uniqueID="get_InstructionTextStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.Login.get_InstructionTextStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LabelStyle" uniqueID="get_LabelStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.Login.get_LabelStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LayoutTemplate" uniqueID="get_LayoutTemplate():System.Web.UI.ITemplate">
				<signature>System.Web.UI.WebControls.Login.get_LayoutTemplate():System.Web.UI.ITemplate</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LoginButtonImageUrl" uniqueID="get_LoginButtonImageUrl():System.String">
				<signature>System.Web.UI.WebControls.Login.get_LoginButtonImageUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LoginButtonStyle" uniqueID="get_LoginButtonStyle():System.Web.UI.WebControls.Style">
				<signature>System.Web.UI.WebControls.Login.get_LoginButtonStyle():System.Web.UI.WebControls.Style</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LoginButtonText" uniqueID="get_LoginButtonText():System.String">
				<signature>System.Web.UI.WebControls.Login.get_LoginButtonText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LoginButtonType" uniqueID="get_LoginButtonType():System.Web.UI.WebControls.ButtonType">
				<signature>System.Web.UI.WebControls.Login.get_LoginButtonType():System.Web.UI.WebControls.ButtonType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MembershipProvider" uniqueID="get_MembershipProvider():System.String">
				<signature>System.Web.UI.WebControls.Login.get_MembershipProvider():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Orientation" uniqueID="get_Orientation():System.Web.UI.WebControls.Orientation">
				<signature>System.Web.UI.WebControls.Login.get_Orientation():System.Web.UI.WebControls.Orientation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Password" uniqueID="get_Password():System.String">
				<signature>System.Web.UI.WebControls.Login.get_Password():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_PasswordInternal" uniqueID="get_PasswordInternal():System.String">
				<signature>System.Web.UI.WebControls.Login.get_PasswordInternal():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PasswordLabelText" uniqueID="get_PasswordLabelText():System.String">
				<signature>System.Web.UI.WebControls.Login.get_PasswordLabelText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PasswordRecoveryIconUrl" uniqueID="get_PasswordRecoveryIconUrl():System.String">
				<signature>System.Web.UI.WebControls.Login.get_PasswordRecoveryIconUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PasswordRecoveryText" uniqueID="get_PasswordRecoveryText():System.String">
				<signature>System.Web.UI.WebControls.Login.get_PasswordRecoveryText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PasswordRecoveryUrl" uniqueID="get_PasswordRecoveryUrl():System.String">
				<signature>System.Web.UI.WebControls.Login.get_PasswordRecoveryUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PasswordRequiredErrorMessage" uniqueID="get_PasswordRequiredErrorMessage():System.String">
				<signature>System.Web.UI.WebControls.Login.get_PasswordRequiredErrorMessage():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RememberMeSet" uniqueID="get_RememberMeSet():System.Boolean">
				<signature>System.Web.UI.WebControls.Login.get_RememberMeSet():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RememberMeText" uniqueID="get_RememberMeText():System.String">
				<signature>System.Web.UI.WebControls.Login.get_RememberMeText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RenderOuterTable" uniqueID="get_RenderOuterTable():System.Boolean">
				<signature>System.Web.UI.WebControls.Login.get_RenderOuterTable():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TagKey" uniqueID="get_TagKey():System.Web.UI.HtmlTextWriterTag">
				<signature>System.Web.UI.WebControls.Login.get_TagKey():System.Web.UI.HtmlTextWriterTag</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_TemplateContainer" uniqueID="get_TemplateContainer():System.Web.UI.WebControls.Login+LoginContainer">
				<signature>System.Web.UI.WebControls.Login.get_TemplateContainer():System.Web.UI.WebControls.Login+LoginContainer</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TextBoxStyle" uniqueID="get_TextBoxStyle():System.Web.UI.WebControls.Style">
				<signature>System.Web.UI.WebControls.Login.get_TextBoxStyle():System.Web.UI.WebControls.Style</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TextLayout" uniqueID="get_TextLayout():System.Web.UI.WebControls.LoginTextLayout">
				<signature>System.Web.UI.WebControls.Login.get_TextLayout():System.Web.UI.WebControls.LoginTextLayout</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TitleText" uniqueID="get_TitleText():System.String">
				<signature>System.Web.UI.WebControls.Login.get_TitleText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TitleTextStyle" uniqueID="get_TitleTextStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.Login.get_TitleTextStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserName" uniqueID="get_UserName():System.String">
				<signature>System.Web.UI.WebControls.Login.get_UserName():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_UserNameInternal" uniqueID="get_UserNameInternal():System.String">
				<signature>System.Web.UI.WebControls.Login.get_UserNameInternal():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserNameLabelText" uniqueID="get_UserNameLabelText():System.String">
				<signature>System.Web.UI.WebControls.Login.get_UserNameLabelText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserNameRequiredErrorMessage" uniqueID="get_UserNameRequiredErrorMessage():System.String">
				<signature>System.Web.UI.WebControls.Login.get_UserNameRequiredErrorMessage():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValidatorTextStyle" uniqueID="get_ValidatorTextStyle():System.Web.UI.WebControls.Style">
				<signature>System.Web.UI.WebControls.Login.get_ValidatorTextStyle():System.Web.UI.WebControls.Style</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_VisibleWhenLoggedIn" uniqueID="get_VisibleWhenLoggedIn():System.Boolean">
				<signature>System.Web.UI.WebControls.Login.get_VisibleWhenLoggedIn():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Authenticate" uniqueID="remove_Authenticate(System.Web.UI.WebControls.AuthenticateEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.Login.remove_Authenticate(System.Web.UI.WebControls.AuthenticateEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_LoggedIn" uniqueID="remove_LoggedIn(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.Login.remove_LoggedIn(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_LoggingIn" uniqueID="remove_LoggingIn(System.Web.UI.WebControls.LoginCancelEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.Login.remove_LoggingIn(System.Web.UI.WebControls.LoginCancelEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_LoginError" uniqueID="remove_LoginError(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.Login.remove_LoginError(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_BorderPadding" uniqueID="set_BorderPadding(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_BorderPadding(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CreateUserIconUrl" uniqueID="set_CreateUserIconUrl(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_CreateUserIconUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CreateUserText" uniqueID="set_CreateUserText(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_CreateUserText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CreateUserUrl" uniqueID="set_CreateUserUrl(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_CreateUserUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DestinationPageUrl" uniqueID="set_DestinationPageUrl(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_DestinationPageUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DisplayRememberMe" uniqueID="set_DisplayRememberMe(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_DisplayRememberMe(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_FailureAction" uniqueID="set_FailureAction(System.Web.UI.WebControls.LoginFailureAction):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_FailureAction(System.Web.UI.WebControls.LoginFailureAction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_FailureText" uniqueID="set_FailureText(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_FailureText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HelpPageIconUrl" uniqueID="set_HelpPageIconUrl(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_HelpPageIconUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HelpPageText" uniqueID="set_HelpPageText(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_HelpPageText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HelpPageUrl" uniqueID="set_HelpPageUrl(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_HelpPageUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_InstructionText" uniqueID="set_InstructionText(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_InstructionText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LayoutTemplate" uniqueID="set_LayoutTemplate(System.Web.UI.ITemplate):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_LayoutTemplate(System.Web.UI.ITemplate):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LoginButtonImageUrl" uniqueID="set_LoginButtonImageUrl(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_LoginButtonImageUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LoginButtonText" uniqueID="set_LoginButtonText(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_LoginButtonText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LoginButtonType" uniqueID="set_LoginButtonType(System.Web.UI.WebControls.ButtonType):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_LoginButtonType(System.Web.UI.WebControls.ButtonType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MembershipProvider" uniqueID="set_MembershipProvider(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_MembershipProvider(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Orientation" uniqueID="set_Orientation(System.Web.UI.WebControls.Orientation):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_Orientation(System.Web.UI.WebControls.Orientation):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PasswordLabelText" uniqueID="set_PasswordLabelText(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_PasswordLabelText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PasswordRecoveryIconUrl" uniqueID="set_PasswordRecoveryIconUrl(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_PasswordRecoveryIconUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PasswordRecoveryText" uniqueID="set_PasswordRecoveryText(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_PasswordRecoveryText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PasswordRecoveryUrl" uniqueID="set_PasswordRecoveryUrl(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_PasswordRecoveryUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PasswordRequiredErrorMessage" uniqueID="set_PasswordRequiredErrorMessage(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_PasswordRequiredErrorMessage(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RememberMeSet" uniqueID="set_RememberMeSet(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_RememberMeSet(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RememberMeText" uniqueID="set_RememberMeText(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_RememberMeText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RenderOuterTable" uniqueID="set_RenderOuterTable(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_RenderOuterTable(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TextLayout" uniqueID="set_TextLayout(System.Web.UI.WebControls.LoginTextLayout):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_TextLayout(System.Web.UI.WebControls.LoginTextLayout):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TitleText" uniqueID="set_TitleText(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_TitleText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UserName" uniqueID="set_UserName(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_UserName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UserNameLabelText" uniqueID="set_UserNameLabelText(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_UserNameLabelText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UserNameRequiredErrorMessage" uniqueID="set_UserNameRequiredErrorMessage(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_UserNameRequiredErrorMessage(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_VisibleWhenLoggedIn" uniqueID="set_VisibleWhenLoggedIn(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.Login.set_VisibleWhenLoggedIn(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="GridView" uniqueID="System.Web.UI.WebControls.GridView">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.UI.WebControls.GridView.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ApplySortingStyle" uniqueID="ApplySortingStyle(System.Web.UI.WebControls.TableCell;System.Web.UI.WebControls.DataControlField;System.Web.UI.WebControls.TableItemStyle;System.Web.UI.WebControls.TableItemStyle):System.Void">
				<signature>System.Web.UI.WebControls.GridView.ApplySortingStyle(System.Web.UI.WebControls.TableCell;System.Web.UI.WebControls.DataControlField;System.Web.UI.WebControls.TableItemStyle;System.Web.UI.WebControls.TableItemStyle):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BuildCallbackArgument" uniqueID="BuildCallbackArgument(System.Int32):System.String">
				<signature>System.Web.UI.WebControls.GridView.BuildCallbackArgument(System.Int32):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BuildCallbackArgument" uniqueID="BuildCallbackArgument(System.String;System.Web.UI.WebControls.SortDirection):System.String">
				<signature>System.Web.UI.WebControls.GridView.BuildCallbackArgument(System.String;System.Web.UI.WebControls.SortDirection):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ClearDataKeys" uniqueID="ClearDataKeys():System.Void">
				<signature>System.Web.UI.WebControls.GridView.ClearDataKeys():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateAutoGeneratedColumn" uniqueID="CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties):System.Web.UI.WebControls.AutoGeneratedField">
				<signature>System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties):System.Web.UI.WebControls.AutoGeneratedField</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateChildControls" uniqueID="CreateChildControls(System.Collections.IEnumerable;System.Boolean):System.Int32">
				<signature>System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable;System.Boolean):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateChildTable" uniqueID="CreateChildTable():System.Web.UI.WebControls.Table">
				<signature>System.Web.UI.WebControls.GridView.CreateChildTable():System.Web.UI.WebControls.Table</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateColumns" uniqueID="CreateColumns(System.Web.UI.WebControls.PagedDataSource;System.Boolean):System.Collections.ICollection">
				<signature>System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource;System.Boolean):System.Collections.ICollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateControlStyle" uniqueID="CreateControlStyle():System.Web.UI.WebControls.Style">
				<signature>System.Web.UI.WebControls.GridView.CreateControlStyle():System.Web.UI.WebControls.Style</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateDataSourceSelectArguments" uniqueID="CreateDataSourceSelectArguments():System.Web.UI.DataSourceSelectArguments">
				<signature>System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments():System.Web.UI.DataSourceSelectArguments</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateNextPrevPager" uniqueID="CreateNextPrevPager(System.Web.UI.WebControls.TableRow;System.Web.UI.WebControls.PagedDataSource;System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.CreateNextPrevPager(System.Web.UI.WebControls.TableRow;System.Web.UI.WebControls.PagedDataSource;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateNumericPager" uniqueID="CreateNumericPager(System.Web.UI.WebControls.TableRow;System.Web.UI.WebControls.PagedDataSource;System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.CreateNumericPager(System.Web.UI.WebControls.TableRow;System.Web.UI.WebControls.PagedDataSource;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreatePagedDataSource" uniqueID="CreatePagedDataSource():System.Web.UI.WebControls.PagedDataSource">
				<signature>System.Web.UI.WebControls.GridView.CreatePagedDataSource():System.Web.UI.WebControls.PagedDataSource</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateRow" uniqueID="CreateRow(System.Int32;System.Int32;System.Web.UI.WebControls.DataControlRowType;System.Web.UI.WebControls.DataControlRowState):System.Web.UI.WebControls.GridViewRow">
				<signature>System.Web.UI.WebControls.GridView.CreateRow(System.Int32;System.Int32;System.Web.UI.WebControls.DataControlRowType;System.Web.UI.WebControls.DataControlRowState):System.Web.UI.WebControls.GridViewRow</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateRow" uniqueID="CreateRow(System.Int32;System.Int32;System.Web.UI.WebControls.DataControlRowType;System.Web.UI.WebControls.DataControlRowState;System.Boolean;System.Object;System.Web.UI.WebControls.DataControlField[];System.Web.UI.WebControls.TableRowCollection;System.Web.UI.WebControls.PagedDataSource):System.Web.UI.WebControls.GridViewRow">
				<signature>System.Web.UI.WebControls.GridView.CreateRow(System.Int32;System.Int32;System.Web.UI.WebControls.DataControlRowType;System.Web.UI.WebControls.DataControlRowState;System.Boolean;System.Object;System.Web.UI.WebControls.DataControlField[];System.Web.UI.WebControls.TableRowCollection;System.Web.UI.WebControls.PagedDataSource):System.Web.UI.WebControls.GridViewRow</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateServerPagedDataSource" uniqueID="CreateServerPagedDataSource(System.Int32):System.Web.UI.WebControls.PagedDataSource">
				<signature>System.Web.UI.WebControls.GridView.CreateServerPagedDataSource(System.Int32):System.Web.UI.WebControls.PagedDataSource</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DataBind" uniqueID="DataBind():System.Void">
				<signature>System.Web.UI.WebControls.GridView.DataBind():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DeleteRow" uniqueID="DeleteRow(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.DeleteRow(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DetermineRenderClientScript" uniqueID="DetermineRenderClientScript():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.DetermineRenderClientScript():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExtractRowValues" uniqueID="ExtractRowValues(System.Collections.Specialized.IOrderedDictionary;System.Web.UI.WebControls.GridViewRow;System.Boolean;System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary;System.Web.UI.WebControls.GridViewRow;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCallbackResult" uniqueID="GetCallbackResult():System.String">
				<signature>System.Web.UI.WebControls.GridView.GetCallbackResult():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCallbackScript" uniqueID="GetCallbackScript(System.Web.UI.WebControls.IButtonControl;System.String):System.String">
				<signature>System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetRowIndex" uniqueID="GetRowIndex(System.Web.UI.WebControls.GridViewRow;System.String):System.Int32">
				<signature>System.Web.UI.WebControls.GridView.GetRowIndex(System.Web.UI.WebControls.GridViewRow;System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GridView" uniqueID="GridView():System.Void">
				<signature>System.Web.UI.WebControls.GridView.GridView():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GridView" uniqueID="GridView(System.Web.UI.IStateFormatter2):System.Void">
				<signature>System.Web.UI.WebControls.GridView.GridView(System.Web.UI.IStateFormatter2):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleCancel" uniqueID="HandleCancel(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.HandleCancel(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleCommand" uniqueID="HandleCommand(System.Web.UI.WebControls.GridViewRow;System.Int32;System.String):System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.HandleCommand(System.Web.UI.WebControls.GridViewRow;System.Int32;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleCommandCallback" uniqueID="HandleCommandCallback(System.Int32;System.Exception):System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.HandleCommandCallback(System.Int32;System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleDelete" uniqueID="HandleDelete(System.Web.UI.WebControls.GridViewRow;System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.HandleDelete(System.Web.UI.WebControls.GridViewRow;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleDeleteCallback" uniqueID="HandleDeleteCallback(System.Int32;System.Exception):System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.HandleDeleteCallback(System.Int32;System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleEdit" uniqueID="HandleEdit(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.HandleEdit(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleEvent" uniqueID="HandleEvent(System.EventArgs;System.Boolean;System.String):System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.HandleEvent(System.EventArgs;System.Boolean;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandlePage" uniqueID="HandlePage(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.HandlePage(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleSelect" uniqueID="HandleSelect(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.HandleSelect(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleSort" uniqueID="HandleSort(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.HandleSort(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleSort" uniqueID="HandleSort(System.String;System.Web.UI.WebControls.SortDirection):System.Void">
				<signature>System.Web.UI.WebControls.GridView.HandleSort(System.String;System.Web.UI.WebControls.SortDirection):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleUpdate" uniqueID="HandleUpdate(System.Web.UI.WebControls.GridViewRow;System.Int32;System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.HandleUpdate(System.Web.UI.WebControls.GridViewRow;System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="HandleUpdateCallback" uniqueID="HandleUpdateCallback(System.Int32;System.Exception):System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.HandleUpdateCallback(System.Int32;System.Exception):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializePager" uniqueID="InitializePager(System.Web.UI.WebControls.GridViewRow;System.Int32;System.Web.UI.WebControls.PagedDataSource):System.Void">
				<signature>System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow;System.Int32;System.Web.UI.WebControls.PagedDataSource):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InitializeRow" uniqueID="InitializeRow(System.Web.UI.WebControls.GridViewRow;System.Web.UI.WebControls.DataControlField[]):System.Void">
				<signature>System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow;System.Web.UI.WebControls.DataControlField[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="InitializeTemplateRow" uniqueID="InitializeTemplateRow(System.Web.UI.WebControls.GridViewRow;System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.InitializeTemplateRow(System.Web.UI.WebControls.GridViewRow;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsBindableType" uniqueID="IsBindableType(System.Type):System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.IsBindableType(System.Type):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="LoadClientIDRowSuffixDataKeysState" uniqueID="LoadClientIDRowSuffixDataKeysState(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.GridView.LoadClientIDRowSuffixDataKeysState(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LoadControlState" uniqueID="LoadControlState(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.GridView.LoadControlState(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="LoadDataKeysState" uniqueID="LoadDataKeysState(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.GridView.LoadDataKeysState(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="LoadHiddenFieldState" uniqueID="LoadHiddenFieldState(System.String;System.String;System.String;System.String):System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.LoadHiddenFieldState(System.String;System.String;System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadViewState" uniqueID="LoadViewState(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.GridView.LoadViewState(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnBubbleEvent" uniqueID="OnBubbleEvent(System.Object;System.EventArgs):System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object;System.EventArgs):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDataPropertyChanged" uniqueID="OnDataPropertyChanged():System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnDataPropertyChanged():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDataSourceViewChanged" uniqueID="OnDataSourceViewChanged(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnFieldsChanged" uniqueID="OnFieldsChanged(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnFieldsChanged(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnInit" uniqueID="OnInit(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnInit(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPageIndexChanged" uniqueID="OnPageIndexChanged(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPageIndexChanging" uniqueID="OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnPagePreLoad" uniqueID="OnPagePreLoad(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OnPagerPropertyChanged" uniqueID="OnPagerPropertyChanged(System.Object;System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnPagerPropertyChanged(System.Object;System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnPreRender" uniqueID="OnPreRender(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowCancelingEdit" uniqueID="OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowCommand" uniqueID="OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowCreated" uniqueID="OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowDataBound" uniqueID="OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowDeleted" uniqueID="OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowDeleting" uniqueID="OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowEditing" uniqueID="OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowUpdated" uniqueID="OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRowUpdating" uniqueID="OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnSelectedIndexChanged" uniqueID="OnSelectedIndexChanged(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnSelectedIndexChanging" uniqueID="OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnSorted" uniqueID="OnSorted(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnSorting" uniqueID="OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PageIsValidAfterModelException" uniqueID="PageIsValidAfterModelException():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.PageIsValidAfterModelException():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ParseHiddenFieldState" uniqueID="ParseHiddenFieldState(System.String):System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.ParseHiddenFieldState(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PerformDataBinding" uniqueID="PerformDataBinding(System.Collections.IEnumerable):System.Void">
				<signature>System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PrepareControlHierarchy" uniqueID="PrepareControlHierarchy():System.Void">
				<signature>System.Web.UI.WebControls.GridView.PrepareControlHierarchy():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaiseCallbackEvent" uniqueID="RaiseCallbackEvent(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaisePostBackEvent" uniqueID="RaisePostBackEvent(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Render" uniqueID="Render(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Render" uniqueID="Render(System.Web.UI.HtmlTextWriter;System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RenderTableContents" uniqueID="RenderTableContents(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.GridView.RenderTableContents(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetModelValidationGroup" uniqueID="ResetModelValidationGroup(System.Boolean;System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.ResetModelValidationGroup(System.Boolean;System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ResetPersistedSelectedIndex" uniqueID="ResetPersistedSelectedIndex():System.Void">
				<signature>System.Web.UI.WebControls.GridView.ResetPersistedSelectedIndex():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SaveClientIDRowSuffixDataKeysState" uniqueID="SaveClientIDRowSuffixDataKeysState():System.Object">
				<signature>System.Web.UI.WebControls.GridView.SaveClientIDRowSuffixDataKeysState():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SaveControlState" uniqueID="SaveControlState():System.Object">
				<signature>System.Web.UI.WebControls.GridView.SaveControlState():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SaveDataKeysState" uniqueID="SaveDataKeysState():System.Object">
				<signature>System.Web.UI.WebControls.GridView.SaveDataKeysState():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SaveViewState" uniqueID="SaveViewState():System.Object">
				<signature>System.Web.UI.WebControls.GridView.SaveViewState():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SelectCallback" uniqueID="SelectCallback(System.Collections.IEnumerable):System.Void">
				<signature>System.Web.UI.WebControls.GridView.SelectCallback(System.Collections.IEnumerable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectRow" uniqueID="SelectRow(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.SelectRow(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetEditRow" uniqueID="SetEditRow(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.SetEditRow(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetPageIndex" uniqueID="SetPageIndex(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetPersistedDataKey" uniqueID="SetPersistedDataKey(System.Int32;System.Web.UI.WebControls.DataKey):System.Void">
				<signature>System.Web.UI.WebControls.GridView.SetPersistedDataKey(System.Int32;System.Web.UI.WebControls.DataKey):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Sort" uniqueID="Sort(System.String;System.Web.UI.WebControls.SortDirection):System.Void">
				<signature>System.Web.UI.WebControls.GridView.Sort(System.String;System.Web.UI.WebControls.SortDirection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StoreEnumerator" uniqueID="StoreEnumerator(System.Collections.IEnumerator;System.Object):System.Void">
				<signature>System.Web.UI.WebControls.GridView.StoreEnumerator(System.Collections.IEnumerator;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.ICallbackEventHandler.GetCallbackResult" uniqueID="System.Web.UI.ICallbackEventHandler.GetCallbackResult():System.String">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent" uniqueID="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IDataKeysControl.get_ClientIDRowSuffixDataKeys" uniqueID="System.Web.UI.IDataKeysControl.get_ClientIDRowSuffixDataKeys():System.Web.UI.WebControls.DataKeyArray">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.IDataKeysControl.get_ClientIDRowSuffixDataKeys():System.Web.UI.WebControls.DataKeyArray</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent" uniqueID="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript" uniqueID="System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl;System.String):System.String">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundControl.get_DataKeyNames" uniqueID="System.Web.UI.WebControls.IDataBoundControl.get_DataKeyNames():System.String[]">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.get_DataKeyNames():System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundControl.get_DataMember" uniqueID="System.Web.UI.WebControls.IDataBoundControl.get_DataMember():System.String">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.get_DataMember():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundControl.get_DataSource" uniqueID="System.Web.UI.WebControls.IDataBoundControl.get_DataSource():System.Object">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.get_DataSource():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundControl.get_DataSourceID" uniqueID="System.Web.UI.WebControls.IDataBoundControl.get_DataSourceID():System.String">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.get_DataSourceID():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundControl.get_DataSourceObject" uniqueID="System.Web.UI.WebControls.IDataBoundControl.get_DataSourceObject():System.Web.UI.IDataSource">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.get_DataSourceObject():System.Web.UI.IDataSource</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundControl.set_DataKeyNames" uniqueID="System.Web.UI.WebControls.IDataBoundControl.set_DataKeyNames(System.String[]):System.Void">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.set_DataKeyNames(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundControl.set_DataMember" uniqueID="System.Web.UI.WebControls.IDataBoundControl.set_DataMember(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.set_DataMember(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundControl.set_DataSource" uniqueID="System.Web.UI.WebControls.IDataBoundControl.set_DataSource(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.set_DataSource(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundControl.set_DataSourceID" uniqueID="System.Web.UI.WebControls.IDataBoundControl.set_DataSourceID(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.set_DataSourceID(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundListControl.get_ClientIDRowSuffix" uniqueID="System.Web.UI.WebControls.IDataBoundListControl.get_ClientIDRowSuffix():System.String[]">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.get_ClientIDRowSuffix():System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundListControl.get_DataKeys" uniqueID="System.Web.UI.WebControls.IDataBoundListControl.get_DataKeys():System.Web.UI.WebControls.DataKeyArray">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.get_DataKeys():System.Web.UI.WebControls.DataKeyArray</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundListControl.get_EnablePersistedSelection" uniqueID="System.Web.UI.WebControls.IDataBoundListControl.get_EnablePersistedSelection():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.get_EnablePersistedSelection():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundListControl.get_SelectedDataKey" uniqueID="System.Web.UI.WebControls.IDataBoundListControl.get_SelectedDataKey():System.Web.UI.WebControls.DataKey">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.get_SelectedDataKey():System.Web.UI.WebControls.DataKey</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundListControl.get_SelectedIndex" uniqueID="System.Web.UI.WebControls.IDataBoundListControl.get_SelectedIndex():System.Int32">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.get_SelectedIndex():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundListControl.set_ClientIDRowSuffix" uniqueID="System.Web.UI.WebControls.IDataBoundListControl.set_ClientIDRowSuffix(System.String[]):System.Void">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.set_ClientIDRowSuffix(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundListControl.set_EnablePersistedSelection" uniqueID="System.Web.UI.WebControls.IDataBoundListControl.set_EnablePersistedSelection(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.set_EnablePersistedSelection(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IDataBoundListControl.set_SelectedIndex" uniqueID="System.Web.UI.WebControls.IDataBoundListControl.set_SelectedIndex(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.set_SelectedIndex(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IFieldControl.get_FieldsGenerator" uniqueID="System.Web.UI.WebControls.IFieldControl.get_FieldsGenerator():System.Web.UI.IAutoFieldGenerator">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IFieldControl.get_FieldsGenerator():System.Web.UI.IAutoFieldGenerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IFieldControl.set_FieldsGenerator" uniqueID="System.Web.UI.WebControls.IFieldControl.set_FieldsGenerator(System.Web.UI.IAutoFieldGenerator):System.Void">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IFieldControl.set_FieldsGenerator(System.Web.UI.IAutoFieldGenerator):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IPersistedSelector.get_DataKey" uniqueID="System.Web.UI.WebControls.IPersistedSelector.get_DataKey():System.Web.UI.WebControls.DataKey">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPersistedSelector.get_DataKey():System.Web.UI.WebControls.DataKey</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IPersistedSelector.set_DataKey" uniqueID="System.Web.UI.WebControls.IPersistedSelector.set_DataKey(System.Web.UI.WebControls.DataKey):System.Void">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPersistedSelector.set_DataKey(System.Web.UI.WebControls.DataKey):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions" uniqueID="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl):System.Web.UI.PostBackOptions">
				<signature>System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl):System.Web.UI.PostBackOptions</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TrackViewState" uniqueID="TrackViewState():System.Void">
				<signature>System.Web.UI.WebControls.GridView.TrackViewState():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="TryGetRowIndex" uniqueID="TryGetRowIndex(System.Web.UI.WebControls.GridViewRow;System.String;System.Int32):System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.TryGetRowIndex(System.Web.UI.WebControls.GridViewRow;System.String;System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UpdateModelDataSourceProperties" uniqueID="UpdateModelDataSourceProperties(System.Web.UI.WebControls.ModelDataSource):System.Void">
				<signature>System.Web.UI.WebControls.GridView.UpdateModelDataSourceProperties(System.Web.UI.WebControls.ModelDataSource):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UpdateRow" uniqueID="UpdateRow(System.Int32;System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.UpdateRow(System.Int32;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PageIndexChanged" uniqueID="add_PageIndexChanged(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_PageIndexChanged(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_PageIndexChanging" uniqueID="add_PageIndexChanging(System.Web.UI.WebControls.GridViewPageEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_PageIndexChanging(System.Web.UI.WebControls.GridViewPageEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowCancelingEdit" uniqueID="add_RowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_RowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowCommand" uniqueID="add_RowCommand(System.Web.UI.WebControls.GridViewCommandEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_RowCommand(System.Web.UI.WebControls.GridViewCommandEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowCreated" uniqueID="add_RowCreated(System.Web.UI.WebControls.GridViewRowEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_RowCreated(System.Web.UI.WebControls.GridViewRowEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowDataBound" uniqueID="add_RowDataBound(System.Web.UI.WebControls.GridViewRowEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_RowDataBound(System.Web.UI.WebControls.GridViewRowEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowDeleted" uniqueID="add_RowDeleted(System.Web.UI.WebControls.GridViewDeletedEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_RowDeleted(System.Web.UI.WebControls.GridViewDeletedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowDeleting" uniqueID="add_RowDeleting(System.Web.UI.WebControls.GridViewDeleteEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_RowDeleting(System.Web.UI.WebControls.GridViewDeleteEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowEditing" uniqueID="add_RowEditing(System.Web.UI.WebControls.GridViewEditEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_RowEditing(System.Web.UI.WebControls.GridViewEditEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowUpdated" uniqueID="add_RowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_RowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_RowUpdating" uniqueID="add_RowUpdating(System.Web.UI.WebControls.GridViewUpdateEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_RowUpdating(System.Web.UI.WebControls.GridViewUpdateEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_SelectedIndexChanged" uniqueID="add_SelectedIndexChanged(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_SelectedIndexChanged(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_SelectedIndexChanging" uniqueID="add_SelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_SelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Sorted" uniqueID="add_Sorted(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_Sorted(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Sorting" uniqueID="add_Sorting(System.Web.UI.WebControls.GridViewSortEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.add_Sorting(System.Web.UI.WebControls.GridViewSortEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowCustomPaging" uniqueID="get_AllowCustomPaging():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_AllowCustomPaging():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowPaging" uniqueID="get_AllowPaging():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_AllowPaging():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllowSorting" uniqueID="get_AllowSorting():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_AllowSorting():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AlternatingRowStyle" uniqueID="get_AlternatingRowStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_AlternatingRowStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AutoGenerateColumns" uniqueID="get_AutoGenerateColumns():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_AutoGenerateColumns():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AutoGenerateDeleteButton" uniqueID="get_AutoGenerateDeleteButton():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_AutoGenerateDeleteButton():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AutoGenerateEditButton" uniqueID="get_AutoGenerateEditButton():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_AutoGenerateEditButton():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AutoGenerateSelectButton" uniqueID="get_AutoGenerateSelectButton():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_AutoGenerateSelectButton():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BackImageUrl" uniqueID="get_BackImageUrl():System.String">
				<signature>System.Web.UI.WebControls.GridView.get_BackImageUrl():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BottomPagerRow" uniqueID="get_BottomPagerRow():System.Web.UI.WebControls.GridViewRow">
				<signature>System.Web.UI.WebControls.GridView.get_BottomPagerRow():System.Web.UI.WebControls.GridViewRow</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_BoundFieldValues" uniqueID="get_BoundFieldValues():System.Collections.Specialized.IOrderedDictionary">
				<signature>System.Web.UI.WebControls.GridView.get_BoundFieldValues():System.Collections.Specialized.IOrderedDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Caption" uniqueID="get_Caption():System.String">
				<signature>System.Web.UI.WebControls.GridView.get_Caption():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CaptionAlign" uniqueID="get_CaptionAlign():System.Web.UI.WebControls.TableCaptionAlign">
				<signature>System.Web.UI.WebControls.GridView.get_CaptionAlign():System.Web.UI.WebControls.TableCaptionAlign</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CellPadding" uniqueID="get_CellPadding():System.Int32">
				<signature>System.Web.UI.WebControls.GridView.get_CellPadding():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CellSpacing" uniqueID="get_CellSpacing():System.Int32">
				<signature>System.Web.UI.WebControls.GridView.get_CellSpacing():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientIDRowSuffix" uniqueID="get_ClientIDRowSuffix():System.String[]">
				<signature>System.Web.UI.WebControls.GridView.get_ClientIDRowSuffix():System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ClientIDRowSuffixArrayList" uniqueID="get_ClientIDRowSuffixArrayList():System.Collections.ArrayList">
				<signature>System.Web.UI.WebControls.GridView.get_ClientIDRowSuffixArrayList():System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClientIDRowSuffixDataKeys" uniqueID="get_ClientIDRowSuffixDataKeys():System.Web.UI.WebControls.DataKeyArray">
				<signature>System.Web.UI.WebControls.GridView.get_ClientIDRowSuffixDataKeys():System.Web.UI.WebControls.DataKeyArray</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ClientIDRowSuffixInternal" uniqueID="get_ClientIDRowSuffixInternal():System.String[]">
				<signature>System.Web.UI.WebControls.GridView.get_ClientIDRowSuffixInternal():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Columns" uniqueID="get_Columns():System.Web.UI.WebControls.DataControlFieldCollection">
				<signature>System.Web.UI.WebControls.GridView.get_Columns():System.Web.UI.WebControls.DataControlFieldCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ColumnsGenerator" uniqueID="get_ColumnsGenerator():System.Web.UI.IAutoFieldGenerator">
				<signature>System.Web.UI.WebControls.GridView.get_ColumnsGenerator():System.Web.UI.IAutoFieldGenerator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_ColumnsGeneratorInternal" uniqueID="get_ColumnsGeneratorInternal():System.Web.UI.IAutoFieldGenerator">
				<signature>System.Web.UI.WebControls.GridView.get_ColumnsGeneratorInternal():System.Web.UI.IAutoFieldGenerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataKeyNames" uniqueID="get_DataKeyNames():System.String[]">
				<signature>System.Web.UI.WebControls.GridView.get_DataKeyNames():System.String[]</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DataKeyNamesInternal" uniqueID="get_DataKeyNamesInternal():System.String[]">
				<signature>System.Web.UI.WebControls.GridView.get_DataKeyNamesInternal():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataKeys" uniqueID="get_DataKeys():System.Web.UI.WebControls.DataKeyArray">
				<signature>System.Web.UI.WebControls.GridView.get_DataKeys():System.Web.UI.WebControls.DataKeyArray</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_DataKeysArrayList" uniqueID="get_DataKeysArrayList():System.Collections.ArrayList">
				<signature>System.Web.UI.WebControls.GridView.get_DataKeysArrayList():System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DeleteMethod" uniqueID="get_DeleteMethod():System.String">
				<signature>System.Web.UI.WebControls.GridView.get_DeleteMethod():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EditIndex" uniqueID="get_EditIndex():System.Int32">
				<signature>System.Web.UI.WebControls.GridView.get_EditIndex():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EditRowStyle" uniqueID="get_EditRowStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_EditRowStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EmptyDataRowStyle" uniqueID="get_EmptyDataRowStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_EmptyDataRowStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EmptyDataTemplate" uniqueID="get_EmptyDataTemplate():System.Web.UI.ITemplate">
				<signature>System.Web.UI.WebControls.GridView.get_EmptyDataTemplate():System.Web.UI.ITemplate</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EmptyDataText" uniqueID="get_EmptyDataText():System.String">
				<signature>System.Web.UI.WebControls.GridView.get_EmptyDataText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableModelValidation" uniqueID="get_EnableModelValidation():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_EnableModelValidation():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnablePersistedSelection" uniqueID="get_EnablePersistedSelection():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_EnablePersistedSelection():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableSortingAndPagingCallbacks" uniqueID="get_EnableSortingAndPagingCallbacks():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_EnableSortingAndPagingCallbacks():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_FirstDisplayedPageIndex" uniqueID="get_FirstDisplayedPageIndex():System.Int32">
				<signature>System.Web.UI.WebControls.GridView.get_FirstDisplayedPageIndex():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FooterRow" uniqueID="get_FooterRow():System.Web.UI.WebControls.GridViewRow">
				<signature>System.Web.UI.WebControls.GridView.get_FooterRow():System.Web.UI.WebControls.GridViewRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FooterStyle" uniqueID="get_FooterStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_FooterStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GridLines" uniqueID="get_GridLines():System.Web.UI.WebControls.GridLines">
				<signature>System.Web.UI.WebControls.GridView.get_GridLines():System.Web.UI.WebControls.GridLines</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HeaderRow" uniqueID="get_HeaderRow():System.Web.UI.WebControls.GridViewRow">
				<signature>System.Web.UI.WebControls.GridView.get_HeaderRow():System.Web.UI.WebControls.GridViewRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HeaderStyle" uniqueID="get_HeaderStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_HeaderStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HorizontalAlign" uniqueID="get_HorizontalAlign():System.Web.UI.WebControls.HorizontalAlign">
				<signature>System.Web.UI.WebControls.GridView.get_HorizontalAlign():System.Web.UI.WebControls.HorizontalAlign</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PageCount" uniqueID="get_PageCount():System.Int32">
				<signature>System.Web.UI.WebControls.GridView.get_PageCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PageIndex" uniqueID="get_PageIndex():System.Int32">
				<signature>System.Web.UI.WebControls.GridView.get_PageIndex():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PageSize" uniqueID="get_PageSize():System.Int32">
				<signature>System.Web.UI.WebControls.GridView.get_PageSize():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PagerSettings" uniqueID="get_PagerSettings():System.Web.UI.WebControls.PagerSettings">
				<signature>System.Web.UI.WebControls.GridView.get_PagerSettings():System.Web.UI.WebControls.PagerSettings</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PagerStyle" uniqueID="get_PagerStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_PagerStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PagerTemplate" uniqueID="get_PagerTemplate():System.Web.UI.ITemplate">
				<signature>System.Web.UI.WebControls.GridView.get_PagerTemplate():System.Web.UI.ITemplate</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RowHeaderColumn" uniqueID="get_RowHeaderColumn():System.String">
				<signature>System.Web.UI.WebControls.GridView.get_RowHeaderColumn():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RowStyle" uniqueID="get_RowStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_RowStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Rows" uniqueID="get_Rows():System.Web.UI.WebControls.GridViewRowCollection">
				<signature>System.Web.UI.WebControls.GridView.get_Rows():System.Web.UI.WebControls.GridViewRowCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SelectedDataKey" uniqueID="get_SelectedDataKey():System.Web.UI.WebControls.DataKey">
				<signature>System.Web.UI.WebControls.GridView.get_SelectedDataKey():System.Web.UI.WebControls.DataKey</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SelectedIndex" uniqueID="get_SelectedIndex():System.Int32">
				<signature>System.Web.UI.WebControls.GridView.get_SelectedIndex():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SelectedPersistedDataKey" uniqueID="get_SelectedPersistedDataKey():System.Web.UI.WebControls.DataKey">
				<signature>System.Web.UI.WebControls.GridView.get_SelectedPersistedDataKey():System.Web.UI.WebControls.DataKey</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SelectedRow" uniqueID="get_SelectedRow():System.Web.UI.WebControls.GridViewRow">
				<signature>System.Web.UI.WebControls.GridView.get_SelectedRow():System.Web.UI.WebControls.GridViewRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SelectedRowStyle" uniqueID="get_SelectedRowStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_SelectedRowStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SelectedValue" uniqueID="get_SelectedValue():System.Object">
				<signature>System.Web.UI.WebControls.GridView.get_SelectedValue():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ShowFooter" uniqueID="get_ShowFooter():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_ShowFooter():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ShowHeader" uniqueID="get_ShowHeader():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_ShowHeader():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ShowHeaderWhenEmpty" uniqueID="get_ShowHeaderWhenEmpty():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_ShowHeaderWhenEmpty():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SortDirection" uniqueID="get_SortDirection():System.Web.UI.WebControls.SortDirection">
				<signature>System.Web.UI.WebControls.GridView.get_SortDirection():System.Web.UI.WebControls.SortDirection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_SortDirectionInternal" uniqueID="get_SortDirectionInternal():System.Web.UI.WebControls.SortDirection">
				<signature>System.Web.UI.WebControls.GridView.get_SortDirectionInternal():System.Web.UI.WebControls.SortDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SortExpression" uniqueID="get_SortExpression():System.String">
				<signature>System.Web.UI.WebControls.GridView.get_SortExpression():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_SortExpressionInternal" uniqueID="get_SortExpressionInternal():System.String">
				<signature>System.Web.UI.WebControls.GridView.get_SortExpressionInternal():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SortedAscendingCellStyle" uniqueID="get_SortedAscendingCellStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_SortedAscendingCellStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SortedAscendingHeaderStyle" uniqueID="get_SortedAscendingHeaderStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_SortedAscendingHeaderStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SortedDescendingCellStyle" uniqueID="get_SortedDescendingCellStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_SortedDescendingCellStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SortedDescendingHeaderStyle" uniqueID="get_SortedDescendingHeaderStyle():System.Web.UI.WebControls.TableItemStyle">
				<signature>System.Web.UI.WebControls.GridView.get_SortedDescendingHeaderStyle():System.Web.UI.WebControls.TableItemStyle</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_StateFormatter" uniqueID="get_StateFormatter():System.Web.UI.IStateFormatter2">
				<signature>System.Web.UI.WebControls.GridView.get_StateFormatter():System.Web.UI.IStateFormatter2</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TagKey" uniqueID="get_TagKey():System.Web.UI.HtmlTextWriterTag">
				<signature>System.Web.UI.WebControls.GridView.get_TagKey():System.Web.UI.HtmlTextWriterTag</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TopPagerRow" uniqueID="get_TopPagerRow():System.Web.UI.WebControls.GridViewRow">
				<signature>System.Web.UI.WebControls.GridView.get_TopPagerRow():System.Web.UI.WebControls.GridViewRow</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UpdateMethod" uniqueID="get_UpdateMethod():System.String">
				<signature>System.Web.UI.WebControls.GridView.get_UpdateMethod():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UseAccessibleHeader" uniqueID="get_UseAccessibleHeader():System.Boolean">
				<signature>System.Web.UI.WebControls.GridView.get_UseAccessibleHeader():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_VirtualItemCount" uniqueID="get_VirtualItemCount():System.Int32">
				<signature>System.Web.UI.WebControls.GridView.get_VirtualItemCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PageIndexChanged" uniqueID="remove_PageIndexChanged(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_PageIndexChanged(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_PageIndexChanging" uniqueID="remove_PageIndexChanging(System.Web.UI.WebControls.GridViewPageEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_PageIndexChanging(System.Web.UI.WebControls.GridViewPageEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowCancelingEdit" uniqueID="remove_RowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_RowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowCommand" uniqueID="remove_RowCommand(System.Web.UI.WebControls.GridViewCommandEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_RowCommand(System.Web.UI.WebControls.GridViewCommandEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowCreated" uniqueID="remove_RowCreated(System.Web.UI.WebControls.GridViewRowEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_RowCreated(System.Web.UI.WebControls.GridViewRowEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowDataBound" uniqueID="remove_RowDataBound(System.Web.UI.WebControls.GridViewRowEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_RowDataBound(System.Web.UI.WebControls.GridViewRowEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowDeleted" uniqueID="remove_RowDeleted(System.Web.UI.WebControls.GridViewDeletedEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_RowDeleted(System.Web.UI.WebControls.GridViewDeletedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowDeleting" uniqueID="remove_RowDeleting(System.Web.UI.WebControls.GridViewDeleteEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_RowDeleting(System.Web.UI.WebControls.GridViewDeleteEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowEditing" uniqueID="remove_RowEditing(System.Web.UI.WebControls.GridViewEditEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_RowEditing(System.Web.UI.WebControls.GridViewEditEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowUpdated" uniqueID="remove_RowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_RowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_RowUpdating" uniqueID="remove_RowUpdating(System.Web.UI.WebControls.GridViewUpdateEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_RowUpdating(System.Web.UI.WebControls.GridViewUpdateEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_SelectedIndexChanged" uniqueID="remove_SelectedIndexChanged(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_SelectedIndexChanged(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_SelectedIndexChanging" uniqueID="remove_SelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_SelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Sorted" uniqueID="remove_Sorted(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_Sorted(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Sorting" uniqueID="remove_Sorting(System.Web.UI.WebControls.GridViewSortEventHandler):System.Void">
				<signature>System.Web.UI.WebControls.GridView.remove_Sorting(System.Web.UI.WebControls.GridViewSortEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowCustomPaging" uniqueID="set_AllowCustomPaging(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_AllowCustomPaging(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowPaging" uniqueID="set_AllowPaging(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_AllowPaging(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AllowSorting" uniqueID="set_AllowSorting(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_AllowSorting(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AutoGenerateColumns" uniqueID="set_AutoGenerateColumns(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_AutoGenerateColumns(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AutoGenerateDeleteButton" uniqueID="set_AutoGenerateDeleteButton(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_AutoGenerateDeleteButton(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AutoGenerateEditButton" uniqueID="set_AutoGenerateEditButton(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_AutoGenerateEditButton(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AutoGenerateSelectButton" uniqueID="set_AutoGenerateSelectButton(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_AutoGenerateSelectButton(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_BackImageUrl" uniqueID="set_BackImageUrl(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_BackImageUrl(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Caption" uniqueID="set_Caption(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_Caption(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CaptionAlign" uniqueID="set_CaptionAlign(System.Web.UI.WebControls.TableCaptionAlign):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_CaptionAlign(System.Web.UI.WebControls.TableCaptionAlign):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CellPadding" uniqueID="set_CellPadding(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_CellPadding(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CellSpacing" uniqueID="set_CellSpacing(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_CellSpacing(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ClientIDRowSuffix" uniqueID="set_ClientIDRowSuffix(System.String[]):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_ClientIDRowSuffix(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ColumnsGenerator" uniqueID="set_ColumnsGenerator(System.Web.UI.IAutoFieldGenerator):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_ColumnsGenerator(System.Web.UI.IAutoFieldGenerator):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DataKeyNames" uniqueID="set_DataKeyNames(System.String[]):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_DataKeyNames(System.String[]):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DeleteMethod" uniqueID="set_DeleteMethod(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_DeleteMethod(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EditIndex" uniqueID="set_EditIndex(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_EditIndex(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EmptyDataTemplate" uniqueID="set_EmptyDataTemplate(System.Web.UI.ITemplate):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_EmptyDataTemplate(System.Web.UI.ITemplate):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EmptyDataText" uniqueID="set_EmptyDataText(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_EmptyDataText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableModelValidation" uniqueID="set_EnableModelValidation(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_EnableModelValidation(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnablePersistedSelection" uniqueID="set_EnablePersistedSelection(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_EnablePersistedSelection(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableSortingAndPagingCallbacks" uniqueID="set_EnableSortingAndPagingCallbacks(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_EnableSortingAndPagingCallbacks(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_FirstDisplayedPageIndex" uniqueID="set_FirstDisplayedPageIndex(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_FirstDisplayedPageIndex(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_GridLines" uniqueID="set_GridLines(System.Web.UI.WebControls.GridLines):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_GridLines(System.Web.UI.WebControls.GridLines):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_HorizontalAlign" uniqueID="set_HorizontalAlign(System.Web.UI.WebControls.HorizontalAlign):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_HorizontalAlign(System.Web.UI.WebControls.HorizontalAlign):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PageIndex" uniqueID="set_PageIndex(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_PageIndex(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PageSize" uniqueID="set_PageSize(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_PageSize(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PagerTemplate" uniqueID="set_PagerTemplate(System.Web.UI.ITemplate):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_PagerTemplate(System.Web.UI.ITemplate):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RowHeaderColumn" uniqueID="set_RowHeaderColumn(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_RowHeaderColumn(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SelectedIndex" uniqueID="set_SelectedIndex(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_SelectedIndex(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SelectedPersistedDataKey" uniqueID="set_SelectedPersistedDataKey(System.Web.UI.WebControls.DataKey):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_SelectedPersistedDataKey(System.Web.UI.WebControls.DataKey):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ShowFooter" uniqueID="set_ShowFooter(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_ShowFooter(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ShowHeader" uniqueID="set_ShowHeader(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_ShowHeader(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ShowHeaderWhenEmpty" uniqueID="set_ShowHeaderWhenEmpty(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_ShowHeaderWhenEmpty(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_SortDirectionInternal" uniqueID="set_SortDirectionInternal(System.Web.UI.WebControls.SortDirection):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_SortDirectionInternal(System.Web.UI.WebControls.SortDirection):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="set_SortExpressionInternal" uniqueID="set_SortExpressionInternal(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_SortExpressionInternal(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UpdateMethod" uniqueID="set_UpdateMethod(System.String):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_UpdateMethod(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UseAccessibleHeader" uniqueID="set_UseAccessibleHeader(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_UseAccessibleHeader(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_VirtualItemCount" uniqueID="set_VirtualItemCount(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.GridView.set_VirtualItemCount(System.Int32):System.Void</signature>
			</method>
		</class>
		<class name="Login+LoginContainer" uniqueID="System.Web.UI.WebControls.Login+LoginContainer">
			<method accessibility="Public" methodKind="Member" name="Login+LoginContainer" uniqueID="Login+LoginContainer(System.Web.UI.WebControls.Login):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.Login+LoginContainer(System.Web.UI.WebControls.Login):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ConvertingToTemplate" uniqueID="get_ConvertingToTemplate():System.Boolean">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_ConvertingToTemplate():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CreateUserIcon" uniqueID="get_CreateUserIcon():System.Web.UI.WebControls.Image">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_CreateUserIcon():System.Web.UI.WebControls.Image</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CreateUserLink" uniqueID="get_CreateUserLink():System.Web.UI.WebControls.HyperLink">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_CreateUserLink():System.Web.UI.WebControls.HyperLink</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_CreateUserLinkSeparator" uniqueID="get_CreateUserLinkSeparator():System.Web.UI.LiteralControl">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_CreateUserLinkSeparator():System.Web.UI.LiteralControl</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_FailureTextLabel" uniqueID="get_FailureTextLabel():System.Web.UI.Control">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_FailureTextLabel():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HelpPageIcon" uniqueID="get_HelpPageIcon():System.Web.UI.WebControls.Image">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_HelpPageIcon():System.Web.UI.WebControls.Image</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HelpPageLink" uniqueID="get_HelpPageLink():System.Web.UI.WebControls.HyperLink">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_HelpPageLink():System.Web.UI.WebControls.HyperLink</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ImageButton" uniqueID="get_ImageButton():System.Web.UI.WebControls.ImageButton">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_ImageButton():System.Web.UI.WebControls.ImageButton</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Instruction" uniqueID="get_Instruction():System.Web.UI.WebControls.Literal">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_Instruction():System.Web.UI.WebControls.Literal</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LinkButton" uniqueID="get_LinkButton():System.Web.UI.WebControls.LinkButton">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_LinkButton():System.Web.UI.WebControls.LinkButton</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PasswordLabel" uniqueID="get_PasswordLabel():System.Web.UI.WebControls.LabelLiteral">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_PasswordLabel():System.Web.UI.WebControls.LabelLiteral</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PasswordRecoveryIcon" uniqueID="get_PasswordRecoveryIcon():System.Web.UI.WebControls.Image">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_PasswordRecoveryIcon():System.Web.UI.WebControls.Image</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PasswordRecoveryLink" uniqueID="get_PasswordRecoveryLink():System.Web.UI.WebControls.HyperLink">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_PasswordRecoveryLink():System.Web.UI.WebControls.HyperLink</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PasswordRecoveryLinkSeparator" uniqueID="get_PasswordRecoveryLinkSeparator():System.Web.UI.LiteralControl">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_PasswordRecoveryLinkSeparator():System.Web.UI.LiteralControl</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PasswordRequired" uniqueID="get_PasswordRequired():System.Web.UI.WebControls.RequiredFieldValidator">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_PasswordRequired():System.Web.UI.WebControls.RequiredFieldValidator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PasswordTextBox" uniqueID="get_PasswordTextBox():System.Web.UI.Control">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_PasswordTextBox():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_PushButton" uniqueID="get_PushButton():System.Web.UI.WebControls.Button">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_PushButton():System.Web.UI.WebControls.Button</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RememberMeCheckBox" uniqueID="get_RememberMeCheckBox():System.Web.UI.Control">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_RememberMeCheckBox():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Title" uniqueID="get_Title():System.Web.UI.WebControls.Literal">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_Title():System.Web.UI.WebControls.Literal</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UserNameLabel" uniqueID="get_UserNameLabel():System.Web.UI.WebControls.LabelLiteral">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_UserNameLabel():System.Web.UI.WebControls.LabelLiteral</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UserNameRequired" uniqueID="get_UserNameRequired():System.Web.UI.WebControls.RequiredFieldValidator">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_UserNameRequired():System.Web.UI.WebControls.RequiredFieldValidator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UserNameTextBox" uniqueID="get_UserNameTextBox():System.Web.UI.Control">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.get_UserNameTextBox():System.Web.UI.Control</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_CreateUserIcon" uniqueID="set_CreateUserIcon(System.Web.UI.WebControls.Image):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_CreateUserIcon(System.Web.UI.WebControls.Image):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_CreateUserLink" uniqueID="set_CreateUserLink(System.Web.UI.WebControls.HyperLink):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_CreateUserLink(System.Web.UI.WebControls.HyperLink):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_CreateUserLinkSeparator" uniqueID="set_CreateUserLinkSeparator(System.Web.UI.LiteralControl):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_CreateUserLinkSeparator(System.Web.UI.LiteralControl):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_FailureTextLabel" uniqueID="set_FailureTextLabel(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_FailureTextLabel(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_HelpPageIcon" uniqueID="set_HelpPageIcon(System.Web.UI.WebControls.Image):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_HelpPageIcon(System.Web.UI.WebControls.Image):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_HelpPageLink" uniqueID="set_HelpPageLink(System.Web.UI.WebControls.HyperLink):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_HelpPageLink(System.Web.UI.WebControls.HyperLink):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ImageButton" uniqueID="set_ImageButton(System.Web.UI.WebControls.ImageButton):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_ImageButton(System.Web.UI.WebControls.ImageButton):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Instruction" uniqueID="set_Instruction(System.Web.UI.WebControls.Literal):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_Instruction(System.Web.UI.WebControls.Literal):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_LinkButton" uniqueID="set_LinkButton(System.Web.UI.WebControls.LinkButton):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_LinkButton(System.Web.UI.WebControls.LinkButton):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_PasswordLabel" uniqueID="set_PasswordLabel(System.Web.UI.WebControls.LabelLiteral):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_PasswordLabel(System.Web.UI.WebControls.LabelLiteral):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_PasswordRecoveryIcon" uniqueID="set_PasswordRecoveryIcon(System.Web.UI.WebControls.Image):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_PasswordRecoveryIcon(System.Web.UI.WebControls.Image):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_PasswordRecoveryLink" uniqueID="set_PasswordRecoveryLink(System.Web.UI.WebControls.HyperLink):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_PasswordRecoveryLink(System.Web.UI.WebControls.HyperLink):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_PasswordRecoveryLinkSeparator" uniqueID="set_PasswordRecoveryLinkSeparator(System.Web.UI.LiteralControl):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_PasswordRecoveryLinkSeparator(System.Web.UI.LiteralControl):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_PasswordRequired" uniqueID="set_PasswordRequired(System.Web.UI.WebControls.RequiredFieldValidator):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_PasswordRequired(System.Web.UI.WebControls.RequiredFieldValidator):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_PasswordTextBox" uniqueID="set_PasswordTextBox(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_PasswordTextBox(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_PushButton" uniqueID="set_PushButton(System.Web.UI.WebControls.Button):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_PushButton(System.Web.UI.WebControls.Button):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_RememberMeCheckBox" uniqueID="set_RememberMeCheckBox(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_RememberMeCheckBox(System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Title" uniqueID="set_Title(System.Web.UI.WebControls.Literal):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_Title(System.Web.UI.WebControls.Literal):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_UserNameLabel" uniqueID="set_UserNameLabel(System.Web.UI.WebControls.LabelLiteral):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_UserNameLabel(System.Web.UI.WebControls.LabelLiteral):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_UserNameRequired" uniqueID="set_UserNameRequired(System.Web.UI.WebControls.RequiredFieldValidator):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_UserNameRequired(System.Web.UI.WebControls.RequiredFieldValidator):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_UserNameTextBox" uniqueID="set_UserNameTextBox(System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.WebControls.Login+LoginContainer.set_UserNameTextBox(System.Web.UI.Control):System.Void</signature>
			</method>
		</class>
		<class name="Label" uniqueID="System.Web.UI.WebControls.Label">
			<method accessibility="Protected" methodKind="Member" name="AddAttributesToRender" uniqueID="AddAttributesToRender(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.Label.AddAttributesToRender(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddParsedSubObject" uniqueID="AddParsedSubObject(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.Label.AddParsedSubObject(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Label" uniqueID="Label():System.Void">
				<signature>System.Web.UI.WebControls.Label.Label():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Label" uniqueID="Label(System.Web.UI.HtmlTextWriterTag):System.Void">
				<signature>System.Web.UI.WebControls.Label.Label(System.Web.UI.HtmlTextWriterTag):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadViewState" uniqueID="LoadViewState(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.Label.LoadViewState(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RenderContents" uniqueID="RenderContents(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.Label.RenderContents(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AssociatedControlID" uniqueID="get_AssociatedControlID():System.String">
				<signature>System.Web.UI.WebControls.Label.get_AssociatedControlID():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_AssociatedControlInControlTree" uniqueID="get_AssociatedControlInControlTree():System.Boolean">
				<signature>System.Web.UI.WebControls.Label.get_AssociatedControlInControlTree():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RequiresLegacyRendering" uniqueID="get_RequiresLegacyRendering():System.Boolean">
				<signature>System.Web.UI.WebControls.Label.get_RequiresLegacyRendering():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SupportsDisabledAttribute" uniqueID="get_SupportsDisabledAttribute():System.Boolean">
				<signature>System.Web.UI.WebControls.Label.get_SupportsDisabledAttribute():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TagKey" uniqueID="get_TagKey():System.Web.UI.HtmlTextWriterTag">
				<signature>System.Web.UI.WebControls.Label.get_TagKey():System.Web.UI.HtmlTextWriterTag</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Text" uniqueID="get_Text():System.String">
				<signature>System.Web.UI.WebControls.Label.get_Text():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AssociatedControlID" uniqueID="set_AssociatedControlID(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Label.set_AssociatedControlID(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_AssociatedControlInControlTree" uniqueID="set_AssociatedControlInControlTree(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.Label.set_AssociatedControlInControlTree(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Text" uniqueID="set_Text(System.String):System.Void">
				<signature>System.Web.UI.WebControls.Label.set_Text(System.String):System.Void</signature>
			</method>
		</class>
		<class name="LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;" uniqueID="System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;">
			<method accessibility="Private" methodKind="Static" name="RenderControls" uniqueID="RenderControls(System.Web.UI.HtmlTextWriter;System.Web.UI.ControlCollection):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.RenderControls(System.Web.UI.HtmlTextWriter;System.Web.UI.ControlCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Focus" uniqueID="Focus():System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.Focus():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;" uniqueID="LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;(System.Web.UI.WebControls.Login):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;(System.Web.UI.WebControls.Login):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ModifiedOuterTableStylePropertyName" uniqueID="ModifiedOuterTableStylePropertyName():System.String">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.ModifiedOuterTableStylePropertyName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Render" uniqueID="Render(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.Render(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RenderContentsInUnitTable" uniqueID="RenderContentsInUnitTable(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.RenderContentsInUnitTable(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_BorderPadding" uniqueID="get_BorderPadding():System.Int32">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.get_BorderPadding():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_BorderTable" uniqueID="get_BorderTable():System.Web.UI.WebControls.Table">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.get_BorderTable():System.Web.UI.WebControls.Table</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ConvertingToTemplate" uniqueID="get_ConvertingToTemplate():System.Boolean">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.get_ConvertingToTemplate():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LayoutTable" uniqueID="get_LayoutTable():System.Web.UI.WebControls.Table">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.get_LayoutTable():System.Web.UI.WebControls.Table</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Owner" uniqueID="get_Owner():System.Web.UI.WebControls.Login">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.get_Owner():System.Web.UI.WebControls.Login</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_RenderDesignerRegion" uniqueID="get_RenderDesignerRegion():System.Boolean">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.get_RenderDesignerRegion():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_RenderOuterTable" uniqueID="get_RenderOuterTable():System.Boolean">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.get_RenderOuterTable():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_UsingDefaultTemplate" uniqueID="get_UsingDefaultTemplate():System.Boolean">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.get_UsingDefaultTemplate():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_BorderTable" uniqueID="set_BorderTable(System.Web.UI.WebControls.Table):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.set_BorderTable(System.Web.UI.WebControls.Table):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_LayoutTable" uniqueID="set_LayoutTable(System.Web.UI.WebControls.Table):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.set_LayoutTable(System.Web.UI.WebControls.Table):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_RenderDesignerRegion" uniqueID="set_RenderDesignerRegion(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+GenericContainer&lt;System.Web.UI.WebControls.Login&gt;.set_RenderDesignerRegion(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="LoginUtil" uniqueID="System.Web.UI.WebControls.LoginUtil">
			<method accessibility="Protected" methodKind="Static" name="ApplyStyleToLiteral" uniqueID="ApplyStyleToLiteral(System.Web.UI.WebControls.Literal;System.String;System.Web.UI.WebControls.Style;System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil.ApplyStyleToLiteral(System.Web.UI.WebControls.Literal;System.String;System.Web.UI.WebControls.Style;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CopyBorderStyles" uniqueID="CopyBorderStyles(System.Web.UI.WebControls.WebControl;System.Web.UI.WebControls.Style):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil.CopyBorderStyles(System.Web.UI.WebControls.WebControl;System.Web.UI.WebControls.Style):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CopyStyleToInnerControl" uniqueID="CopyStyleToInnerControl(System.Web.UI.WebControls.WebControl;System.Web.UI.WebControls.Style):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil.CopyStyleToInnerControl(System.Web.UI.WebControls.WebControl;System.Web.UI.WebControls.Style):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CreateChildTable" uniqueID="CreateChildTable(System.Boolean):System.Web.UI.WebControls.Table">
				<signature>System.Web.UI.WebControls.LoginUtil.CreateChildTable(System.Boolean):System.Web.UI.WebControls.Table</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateMailMessage" uniqueID="CreateMailMessage(System.String;System.String;System.String;System.Web.UI.WebControls.MailDefinition;System.String;System.Web.UI.Control):System.Net.Mail.MailMessage">
				<signature>System.Web.UI.WebControls.LoginUtil.CreateMailMessage(System.String;System.String;System.String;System.Web.UI.WebControls.MailDefinition;System.String;System.Web.UI.Control):System.Net.Mail.MailMessage</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetProvider" uniqueID="GetProvider(System.String):System.Web.Security.MembershipProvider">
				<signature>System.Web.UI.WebControls.LoginUtil.GetProvider(System.String):System.Web.Security.MembershipProvider</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetUser" uniqueID="GetUser(System.Web.UI.Control):System.Security.Principal.IPrincipal">
				<signature>System.Web.UI.WebControls.LoginUtil.GetUser(System.Web.UI.Control):System.Security.Principal.IPrincipal</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetUserName" uniqueID="GetUserName(System.Web.UI.Control):System.String">
				<signature>System.Web.UI.WebControls.LoginUtil.GetUserName(System.Web.UI.Control):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ModifiedOuterTableBasicStylePropertyName" uniqueID="ModifiedOuterTableBasicStylePropertyName(System.Web.UI.WebControls.WebControl):System.String">
				<signature>System.Web.UI.WebControls.LoginUtil.ModifiedOuterTableBasicStylePropertyName(System.Web.UI.WebControls.WebControl):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SendPasswordMail" uniqueID="SendPasswordMail(System.String;System.String;System.String;System.Web.UI.WebControls.MailDefinition;System.String;System.String;System.Web.UI.WebControls.LoginUtil+OnSendingMailDelegate;System.Web.UI.WebControls.LoginUtil+OnSendMailErrorDelegate;System.Web.UI.Control):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil.SendPasswordMail(System.String;System.String;System.String;System.Web.UI.WebControls.MailDefinition;System.String;System.String;System.Web.UI.WebControls.LoginUtil+OnSendingMailDelegate;System.Web.UI.WebControls.LoginUtil+OnSendMailErrorDelegate;System.Web.UI.Control):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetTableCellStyle" uniqueID="SetTableCellStyle(System.Web.UI.Control;System.Web.UI.WebControls.Style):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil.SetTableCellStyle(System.Web.UI.Control;System.Web.UI.WebControls.Style):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetTableCellVisible" uniqueID="SetTableCellVisible(System.Web.UI.Control;System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil.SetTableCellVisible(System.Web.UI.Control;System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="LoginUtil+OnSendMailErrorDelegate" uniqueID="System.Web.UI.WebControls.LoginUtil+OnSendMailErrorDelegate">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.UI.WebControls.SendMailErrorEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.UI.WebControls.LoginUtil+OnSendMailErrorDelegate.BeginInvoke(System.Web.UI.WebControls.SendMailErrorEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+OnSendMailErrorDelegate.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.UI.WebControls.SendMailErrorEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+OnSendMailErrorDelegate.Invoke(System.Web.UI.WebControls.SendMailErrorEventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LoginUtil+OnSendMailErrorDelegate" uniqueID="LoginUtil+OnSendMailErrorDelegate(System.Object;System.IntPtr):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+OnSendMailErrorDelegate.LoginUtil+OnSendMailErrorDelegate(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="LoginUtil+OnSendingMailDelegate" uniqueID="System.Web.UI.WebControls.LoginUtil+OnSendingMailDelegate">
			<method accessibility="Public" methodKind="Member" name="BeginInvoke" uniqueID="BeginInvoke(System.Web.UI.WebControls.MailMessageEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult">
				<signature>System.Web.UI.WebControls.LoginUtil+OnSendingMailDelegate.BeginInvoke(System.Web.UI.WebControls.MailMessageEventArgs;System.AsyncCallback;System.Object):System.IAsyncResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EndInvoke" uniqueID="EndInvoke(System.IAsyncResult):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+OnSendingMailDelegate.EndInvoke(System.IAsyncResult):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Invoke" uniqueID="Invoke(System.Web.UI.WebControls.MailMessageEventArgs):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+OnSendingMailDelegate.Invoke(System.Web.UI.WebControls.MailMessageEventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LoginUtil+OnSendingMailDelegate" uniqueID="LoginUtil+OnSendingMailDelegate(System.Object;System.IntPtr):System.Void">
				<signature>System.Web.UI.WebControls.LoginUtil+OnSendingMailDelegate.LoginUtil+OnSendingMailDelegate(System.Object;System.IntPtr):System.Void</signature>
			</method>
		</class>
		<class name="TextBox" uniqueID="System.Web.UI.WebControls.TextBox">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Web.UI.WebControls.TextBox.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetTypeAttributeValue" uniqueID="GetTypeAttributeValue(System.Web.UI.WebControls.TextBoxMode):System.String">
				<signature>System.Web.UI.WebControls.TextBox.GetTypeAttributeValue(System.Web.UI.WebControls.TextBoxMode):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetVCardAttributeValue" uniqueID="GetVCardAttributeValue(System.Web.UI.WebControls.AutoCompleteType):System.String">
				<signature>System.Web.UI.WebControls.TextBox.GetVCardAttributeValue(System.Web.UI.WebControls.AutoCompleteType):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddAttributesToRender" uniqueID="AddAttributesToRender(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddParsedSubObject" uniqueID="AddParsedSubObject(System.Object):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.AddParsedSubObject(System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadPostData" uniqueID="LoadPostData(System.String;System.Collections.Specialized.NameValueCollection):System.Boolean">
				<signature>System.Web.UI.WebControls.TextBox.LoadPostData(System.String;System.Collections.Specialized.NameValueCollection):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnPreRender" uniqueID="OnPreRender(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.OnPreRender(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnTextChanged" uniqueID="OnTextChanged(System.EventArgs):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RaisePostDataChangedEvent" uniqueID="RaisePostDataChangedEvent():System.Void">
				<signature>System.Web.UI.WebControls.TextBox.RaisePostDataChangedEvent():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Render" uniqueID="Render(System.Web.UI.HtmlTextWriter):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.Render(System.Web.UI.HtmlTextWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SaveViewState" uniqueID="SaveViewState():System.Object">
				<signature>System.Web.UI.WebControls.TextBox.SaveViewState():System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IPostBackDataHandler.LoadPostData" uniqueID="System.Web.UI.IPostBackDataHandler.LoadPostData(System.String;System.Collections.Specialized.NameValueCollection):System.Boolean">
				<signature>System.Web.UI.WebControls.TextBox.System.Web.UI.IPostBackDataHandler.LoadPostData(System.String;System.Collections.Specialized.NameValueCollection):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" uniqueID="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent():System.Void">
				<signature>System.Web.UI.WebControls.TextBox.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="TextBox" uniqueID="TextBox():System.Void">
				<signature>System.Web.UI.WebControls.TextBox.TextBox():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_TextChanged" uniqueID="add_TextChanged(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.add_TextChanged(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AutoCompleteType" uniqueID="get_AutoCompleteType():System.Web.UI.WebControls.AutoCompleteType">
				<signature>System.Web.UI.WebControls.TextBox.get_AutoCompleteType():System.Web.UI.WebControls.AutoCompleteType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AutoPostBack" uniqueID="get_AutoPostBack():System.Boolean">
				<signature>System.Web.UI.WebControls.TextBox.get_AutoPostBack():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CausesValidation" uniqueID="get_CausesValidation():System.Boolean">
				<signature>System.Web.UI.WebControls.TextBox.get_CausesValidation():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Columns" uniqueID="get_Columns():System.Int32">
				<signature>System.Web.UI.WebControls.TextBox.get_Columns():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MaxLength" uniqueID="get_MaxLength():System.Int32">
				<signature>System.Web.UI.WebControls.TextBox.get_MaxLength():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReadOnly" uniqueID="get_ReadOnly():System.Boolean">
				<signature>System.Web.UI.WebControls.TextBox.get_ReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Rows" uniqueID="get_Rows():System.Int32">
				<signature>System.Web.UI.WebControls.TextBox.get_Rows():System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_SaveTextViewState" uniqueID="get_SaveTextViewState():System.Boolean">
				<signature>System.Web.UI.WebControls.TextBox.get_SaveTextViewState():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_SupportsVCard" uniqueID="get_SupportsVCard():System.Boolean">
				<signature>System.Web.UI.WebControls.TextBox.get_SupportsVCard():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_TagKey" uniqueID="get_TagKey():System.Web.UI.HtmlTextWriterTag">
				<signature>System.Web.UI.WebControls.TextBox.get_TagKey():System.Web.UI.HtmlTextWriterTag</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Text" uniqueID="get_Text():System.String">
				<signature>System.Web.UI.WebControls.TextBox.get_Text():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TextMode" uniqueID="get_TextMode():System.Web.UI.WebControls.TextBoxMode">
				<signature>System.Web.UI.WebControls.TextBox.get_TextMode():System.Web.UI.WebControls.TextBoxMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValidationGroup" uniqueID="get_ValidationGroup():System.String">
				<signature>System.Web.UI.WebControls.TextBox.get_ValidationGroup():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Wrap" uniqueID="get_Wrap():System.Boolean">
				<signature>System.Web.UI.WebControls.TextBox.get_Wrap():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_TextChanged" uniqueID="remove_TextChanged(System.EventHandler):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.remove_TextChanged(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AutoCompleteType" uniqueID="set_AutoCompleteType(System.Web.UI.WebControls.AutoCompleteType):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.set_AutoCompleteType(System.Web.UI.WebControls.AutoCompleteType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AutoPostBack" uniqueID="set_AutoPostBack(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.set_AutoPostBack(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CausesValidation" uniqueID="set_CausesValidation(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.set_CausesValidation(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Columns" uniqueID="set_Columns(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.set_Columns(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MaxLength" uniqueID="set_MaxLength(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.set_MaxLength(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ReadOnly" uniqueID="set_ReadOnly(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.set_ReadOnly(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Rows" uniqueID="set_Rows(System.Int32):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.set_Rows(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Text" uniqueID="set_Text(System.String):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.set_Text(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_TextMode" uniqueID="set_TextMode(System.Web.UI.WebControls.TextBoxMode):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.set_TextMode(System.Web.UI.WebControls.TextBoxMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ValidationGroup" uniqueID="set_ValidationGroup(System.String):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.set_ValidationGroup(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Wrap" uniqueID="set_Wrap(System.Boolean):System.Void">
				<signature>System.Web.UI.WebControls.TextBox.set_Wrap(System.Boolean):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Collections.Specialized">
		<class name="NameObjectCollectionBase" uniqueID="System.Collections.Specialized.NameObjectCollectionBase">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseAdd" uniqueID="BaseAdd(System.String;System.Object):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseClear" uniqueID="BaseClear():System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseClear():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGet" uniqueID="BaseGet(System.Int32):System.Object">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGet" uniqueID="BaseGet(System.String):System.Object">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGetAllKeys" uniqueID="BaseGetAllKeys():System.String[]">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys():System.String[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGetAllValues" uniqueID="BaseGetAllValues():System.Object[]">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues():System.Object[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGetAllValues" uniqueID="BaseGetAllValues(System.Type):System.Object[]">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type):System.Object[]</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseGetKey" uniqueID="BaseGetKey(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseHasKeys" uniqueID="BaseHasKeys():System.Boolean">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseRemove" uniqueID="BaseRemove(System.String):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseRemoveAt" uniqueID="BaseRemoveAt(System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseSet" uniqueID="BaseSet(System.Int32;System.Object):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseSet" uniqueID="BaseSet(System.String;System.Object):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="FindEntry" uniqueID="FindEntry(System.String):System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.FindEntry(System.String):System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObjectData" uniqueID="GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase():System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Collections.IEqualityComparer):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Collections.IEqualityComparer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.DBNull):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.DBNull):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Int32;System.Collections.IEqualityComparer):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32;System.Collections.IEqualityComparer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Int32;System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32;System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase" uniqueID="NameObjectCollectionBase(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OnDeserialization" uniqueID="OnDeserialization(System.Object):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Reset" uniqueID="Reset():System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.Reset():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Reset" uniqueID="Reset(System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.Reset(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Comparer" uniqueID="get_Comparer():System.Collections.IEqualityComparer">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.get_Comparer():System.Collections.IEqualityComparer</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.Specialized.NameObjectCollectionBase+KeysCollection">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.get_Keys():System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Comparer" uniqueID="set_Comparer(System.Collections.IEqualityComparer):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.set_Comparer(System.Collections.IEqualityComparer):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_IsReadOnly" uniqueID="set_IsReadOnly(System.Boolean):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase.set_IsReadOnly(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="NameObjectCollectionBase+KeysCollection" uniqueID="System.Collections.Specialized.NameObjectCollectionBase+KeysCollection">
			<method accessibility="Public" methodKind="Member" name="Get" uniqueID="Get(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.Get(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase+KeysCollection" uniqueID="NameObjectCollectionBase+KeysCollection(System.Collections.Specialized.NameObjectCollectionBase):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.NameObjectCollectionBase+KeysCollection(System.Collections.Specialized.NameObjectCollectionBase):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_IsSynchronized" uniqueID="System.Collections.ICollection.get_IsSynchronized():System.Boolean">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.System.Collections.ICollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.get_SyncRoot" uniqueID="System.Collections.ICollection.get_SyncRoot():System.Object">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.System.Collections.ICollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection.get_Item(System.Int32):System.String</signature>
			</method>
		</class>
		<class name="NameObjectCollectionBase+NameObjectEntry" uniqueID="System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry">
			<method accessibility="Protected" methodKind="Member" name="NameObjectCollectionBase+NameObjectEntry" uniqueID="NameObjectCollectionBase+NameObjectEntry(System.String;System.Object):System.Void">
				<signature>System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry.NameObjectCollectionBase+NameObjectEntry(System.String;System.Object):System.Void</signature>
			</method>
		</class>
		<class name="NameValueCollection" uniqueID="System.Collections.Specialized.NameValueCollection">
			<method accessibility="Private" methodKind="Static" name="GetAsOneString" uniqueID="GetAsOneString(System.Collections.ArrayList):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.GetAsOneString(System.Collections.ArrayList):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetAsStringArray" uniqueID="GetAsStringArray(System.Collections.ArrayList):System.String[]">
				<signature>System.Collections.Specialized.NameValueCollection.GetAsStringArray(System.Collections.ArrayList):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Collections.Specialized.NameValueCollection):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.String;System.String):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.Add(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Get" uniqueID="Get(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.Get(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Get" uniqueID="Get(System.String):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.Get(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetKey" uniqueID="GetKey(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.GetKey(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValues" uniqueID="GetValues(System.Int32):System.String[]">
				<signature>System.Collections.Specialized.NameValueCollection.GetValues(System.Int32):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValues" uniqueID="GetValues(System.String):System.String[]">
				<signature>System.Collections.Specialized.NameValueCollection.GetValues(System.String):System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="HasKeys" uniqueID="HasKeys():System.Boolean">
				<signature>System.Collections.Specialized.NameValueCollection.HasKeys():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InternalHasKeys" uniqueID="InternalHasKeys():System.Boolean">
				<signature>System.Collections.Specialized.NameValueCollection.InternalHasKeys():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="InvalidateCachedArrays" uniqueID="InvalidateCachedArrays():System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection():System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Collections.IEqualityComparer):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.IEqualityComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Collections.Specialized.NameValueCollection):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.Specialized.NameValueCollection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.DBNull):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.DBNull):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Int32):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Int32;System.Collections.IEqualityComparer):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32;System.Collections.IEqualityComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Int32;System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32;System.Collections.IHashCodeProvider;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Int32;System.Collections.Specialized.NameValueCollection):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32;System.Collections.Specialized.NameValueCollection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="NameValueCollection" uniqueID="NameValueCollection(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Runtime.Serialization.SerializationInfo;System.Runtime.Serialization.StreamingContext):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.Remove(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Set" uniqueID="Set(System.String;System.String):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.Set(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AllKeys" uniqueID="get_AllKeys():System.String[]">
				<signature>System.Collections.Specialized.NameValueCollection.get_AllKeys():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.get_Item(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.String">
				<signature>System.Collections.Specialized.NameValueCollection.get_Item(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.String):System.Void">
				<signature>System.Collections.Specialized.NameValueCollection.set_Item(System.String;System.String):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Diagnostics">
		<class name="Process" uniqueID="System.Diagnostics.Process">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Diagnostics.Process.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="BuildCommandLine" uniqueID="BuildCommandLine(System.String;System.String):System.Text.StringBuilder">
				<signature>System.Diagnostics.Process.BuildCommandLine(System.String;System.String):System.Text.StringBuilder</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreatePipeWithSecurityAttributes" uniqueID="CreatePipeWithSecurityAttributes(Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Int32):System.Void">
				<signature>System.Diagnostics.Process.CreatePipeWithSecurityAttributes(Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="EnterDebugMode" uniqueID="EnterDebugMode():System.Void">
				<signature>System.Diagnostics.Process.EnterDebugMode():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetCurrentProcess" uniqueID="GetCurrentProcess():System.Diagnostics.Process">
				<signature>System.Diagnostics.Process.GetCurrentProcess():System.Diagnostics.Process</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetProcessById" uniqueID="GetProcessById(System.Int32):System.Diagnostics.Process">
				<signature>System.Diagnostics.Process.GetProcessById(System.Int32):System.Diagnostics.Process</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetProcessById" uniqueID="GetProcessById(System.Int32;System.String):System.Diagnostics.Process">
				<signature>System.Diagnostics.Process.GetProcessById(System.Int32;System.String):System.Diagnostics.Process</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetProcesses" uniqueID="GetProcesses():System.Diagnostics.Process[]">
				<signature>System.Diagnostics.Process.GetProcesses():System.Diagnostics.Process[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetProcesses" uniqueID="GetProcesses(System.String):System.Diagnostics.Process[]">
				<signature>System.Diagnostics.Process.GetProcesses(System.String):System.Diagnostics.Process[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetProcessesByName" uniqueID="GetProcessesByName(System.String):System.Diagnostics.Process[]">
				<signature>System.Diagnostics.Process.GetProcessesByName(System.String):System.Diagnostics.Process[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetProcessesByName" uniqueID="GetProcessesByName(System.String;System.String):System.Diagnostics.Process[]">
				<signature>System.Diagnostics.Process.GetProcessesByName(System.String;System.String):System.Diagnostics.Process[]</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="LeaveDebugMode" uniqueID="LeaveDebugMode():System.Void">
				<signature>System.Diagnostics.Process.LeaveDebugMode():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="SetPrivilege" uniqueID="SetPrivilege(System.String;System.Int32):System.Void">
				<signature>System.Diagnostics.Process.SetPrivilege(System.String;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Start" uniqueID="Start(System.Diagnostics.ProcessStartInfo):System.Diagnostics.Process">
				<signature>System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo):System.Diagnostics.Process</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Start" uniqueID="Start(System.String):System.Diagnostics.Process">
				<signature>System.Diagnostics.Process.Start(System.String):System.Diagnostics.Process</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Start" uniqueID="Start(System.String;System.String):System.Diagnostics.Process">
				<signature>System.Diagnostics.Process.Start(System.String;System.String):System.Diagnostics.Process</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Start" uniqueID="Start(System.String;System.String;System.Security.SecureString;System.String):System.Diagnostics.Process">
				<signature>System.Diagnostics.Process.Start(System.String;System.String;System.Security.SecureString;System.String):System.Diagnostics.Process</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Start" uniqueID="Start(System.String;System.String;System.String;System.Security.SecureString;System.String):System.Diagnostics.Process">
				<signature>System.Diagnostics.Process.Start(System.String;System.String;System.String;System.Security.SecureString;System.String):System.Diagnostics.Process</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginErrorReadLine" uniqueID="BeginErrorReadLine():System.Void">
				<signature>System.Diagnostics.Process.BeginErrorReadLine():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginOutputReadLine" uniqueID="BeginOutputReadLine():System.Void">
				<signature>System.Diagnostics.Process.BeginOutputReadLine():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CancelErrorRead" uniqueID="CancelErrorRead():System.Void">
				<signature>System.Diagnostics.Process.CancelErrorRead():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CancelOutputRead" uniqueID="CancelOutputRead():System.Void">
				<signature>System.Diagnostics.Process.CancelOutputRead():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Diagnostics.Process.Close():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CloseMainWindow" uniqueID="CloseMainWindow():System.Boolean">
				<signature>System.Diagnostics.Process.CloseMainWindow():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CompletionCallback" uniqueID="CompletionCallback(System.Object;System.Boolean):System.Void">
				<signature>System.Diagnostics.Process.CompletionCallback(System.Object;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreatePipe" uniqueID="CreatePipe(Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.SafeHandles.SafeFileHandle;System.Boolean):System.Void">
				<signature>System.Diagnostics.Process.CreatePipe(Microsoft.Win32.SafeHandles.SafeFileHandle;Microsoft.Win32.SafeHandles.SafeFileHandle;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.Diagnostics.Process.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureState" uniqueID="EnsureState(System.Diagnostics.Process+State):System.Void">
				<signature>System.Diagnostics.Process.EnsureState(System.Diagnostics.Process+State):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureWatchingForExit" uniqueID="EnsureWatchingForExit():System.Void">
				<signature>System.Diagnostics.Process.EnsureWatchingForExit():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureWorkingSetLimits" uniqueID="EnsureWorkingSetLimits():System.Void">
				<signature>System.Diagnostics.Process.EnsureWorkingSetLimits():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ErrorReadNotifyUser" uniqueID="ErrorReadNotifyUser(System.String):System.Void">
				<signature>System.Diagnostics.Process.ErrorReadNotifyUser(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetProcessHandle" uniqueID="GetProcessHandle(System.Int32):Microsoft.Win32.SafeHandles.SafeProcessHandle">
				<signature>System.Diagnostics.Process.GetProcessHandle(System.Int32):Microsoft.Win32.SafeHandles.SafeProcessHandle</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetProcessHandle" uniqueID="GetProcessHandle(System.Int32;System.Boolean):Microsoft.Win32.SafeHandles.SafeProcessHandle">
				<signature>System.Diagnostics.Process.GetProcessHandle(System.Int32;System.Boolean):Microsoft.Win32.SafeHandles.SafeProcessHandle</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetProcessTimes" uniqueID="GetProcessTimes():System.Diagnostics.ProcessThreadTimes">
				<signature>System.Diagnostics.Process.GetProcessTimes():System.Diagnostics.ProcessThreadTimes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Kill" uniqueID="Kill():System.Void">
				<signature>System.Diagnostics.Process.Kill():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnExited" uniqueID="OnExited():System.Void">
				<signature>System.Diagnostics.Process.OnExited():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OpenProcessHandle" uniqueID="OpenProcessHandle():Microsoft.Win32.SafeHandles.SafeProcessHandle">
				<signature>System.Diagnostics.Process.OpenProcessHandle():Microsoft.Win32.SafeHandles.SafeProcessHandle</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="OpenProcessHandle" uniqueID="OpenProcessHandle(System.Int32):Microsoft.Win32.SafeHandles.SafeProcessHandle">
				<signature>System.Diagnostics.Process.OpenProcessHandle(System.Int32):Microsoft.Win32.SafeHandles.SafeProcessHandle</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OutputReadNotifyUser" uniqueID="OutputReadNotifyUser(System.String):System.Void">
				<signature>System.Diagnostics.Process.OutputReadNotifyUser(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Process" uniqueID="Process():System.Void">
				<signature>System.Diagnostics.Process.Process():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="Process" uniqueID="Process(System.String;System.Boolean;System.Int32;System.Diagnostics.ProcessInfo):System.Void">
				<signature>System.Diagnostics.Process.Process(System.String;System.Boolean;System.Int32;System.Diagnostics.ProcessInfo):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="RaiseOnExited" uniqueID="RaiseOnExited():System.Void">
				<signature>System.Diagnostics.Process.RaiseOnExited():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Refresh" uniqueID="Refresh():System.Void">
				<signature>System.Diagnostics.Process.Refresh():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ReleaseProcessHandle" uniqueID="ReleaseProcessHandle(Microsoft.Win32.SafeHandles.SafeProcessHandle):System.Void">
				<signature>System.Diagnostics.Process.ReleaseProcessHandle(Microsoft.Win32.SafeHandles.SafeProcessHandle):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetProcessHandle" uniqueID="SetProcessHandle(Microsoft.Win32.SafeHandles.SafeProcessHandle):System.Void">
				<signature>System.Diagnostics.Process.SetProcessHandle(Microsoft.Win32.SafeHandles.SafeProcessHandle):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetProcessId" uniqueID="SetProcessId(System.Int32):System.Void">
				<signature>System.Diagnostics.Process.SetProcessId(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetWorkingSetLimits" uniqueID="SetWorkingSetLimits(System.Object;System.Object):System.Void">
				<signature>System.Diagnostics.Process.SetWorkingSetLimits(System.Object;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Start" uniqueID="Start():System.Boolean">
				<signature>System.Diagnostics.Process.Start():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StartWithCreateProcess" uniqueID="StartWithCreateProcess(System.Diagnostics.ProcessStartInfo):System.Boolean">
				<signature>System.Diagnostics.Process.StartWithCreateProcess(System.Diagnostics.ProcessStartInfo):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StartWithShellExecuteEx" uniqueID="StartWithShellExecuteEx(System.Diagnostics.ProcessStartInfo):System.Boolean">
				<signature>System.Diagnostics.Process.StartWithShellExecuteEx(System.Diagnostics.ProcessStartInfo):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="StopWatchingForExit" uniqueID="StopWatchingForExit():System.Void">
				<signature>System.Diagnostics.Process.StopWatchingForExit():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Diagnostics.Process.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WaitForExit" uniqueID="WaitForExit():System.Void">
				<signature>System.Diagnostics.Process.WaitForExit():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WaitForExit" uniqueID="WaitForExit(System.Int32):System.Boolean">
				<signature>System.Diagnostics.Process.WaitForExit(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WaitForInputIdle" uniqueID="WaitForInputIdle():System.Boolean">
				<signature>System.Diagnostics.Process.WaitForInputIdle():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WaitForInputIdle" uniqueID="WaitForInputIdle(System.Int32):System.Boolean">
				<signature>System.Diagnostics.Process.WaitForInputIdle(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_ErrorDataReceived" uniqueID="add_ErrorDataReceived(System.Diagnostics.DataReceivedEventHandler):System.Void">
				<signature>System.Diagnostics.Process.add_ErrorDataReceived(System.Diagnostics.DataReceivedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_Exited" uniqueID="add_Exited(System.EventHandler):System.Void">
				<signature>System.Diagnostics.Process.add_Exited(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_OutputDataReceived" uniqueID="add_OutputDataReceived(System.Diagnostics.DataReceivedEventHandler):System.Void">
				<signature>System.Diagnostics.Process.add_OutputDataReceived(System.Diagnostics.DataReceivedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_Associated" uniqueID="get_Associated():System.Boolean">
				<signature>System.Diagnostics.Process.get_Associated():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BasePriority" uniqueID="get_BasePriority():System.Int32">
				<signature>System.Diagnostics.Process.get_BasePriority():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnableRaisingEvents" uniqueID="get_EnableRaisingEvents():System.Boolean">
				<signature>System.Diagnostics.Process.get_EnableRaisingEvents():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ExitCode" uniqueID="get_ExitCode():System.Int32">
				<signature>System.Diagnostics.Process.get_ExitCode():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ExitTime" uniqueID="get_ExitTime():System.DateTime">
				<signature>System.Diagnostics.Process.get_ExitTime():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Handle" uniqueID="get_Handle():System.IntPtr">
				<signature>System.Diagnostics.Process.get_Handle():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HandleCount" uniqueID="get_HandleCount():System.Int32">
				<signature>System.Diagnostics.Process.get_HandleCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasExited" uniqueID="get_HasExited():System.Boolean">
				<signature>System.Diagnostics.Process.get_HasExited():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Id" uniqueID="get_Id():System.Int32">
				<signature>System.Diagnostics.Process.get_Id():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MachineName" uniqueID="get_MachineName():System.String">
				<signature>System.Diagnostics.Process.get_MachineName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MainModule" uniqueID="get_MainModule():System.Diagnostics.ProcessModule">
				<signature>System.Diagnostics.Process.get_MainModule():System.Diagnostics.ProcessModule</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MainWindowHandle" uniqueID="get_MainWindowHandle():System.IntPtr">
				<signature>System.Diagnostics.Process.get_MainWindowHandle():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MainWindowTitle" uniqueID="get_MainWindowTitle():System.String">
				<signature>System.Diagnostics.Process.get_MainWindowTitle():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MaxWorkingSet" uniqueID="get_MaxWorkingSet():System.IntPtr">
				<signature>System.Diagnostics.Process.get_MaxWorkingSet():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_MinWorkingSet" uniqueID="get_MinWorkingSet():System.IntPtr">
				<signature>System.Diagnostics.Process.get_MinWorkingSet():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Modules" uniqueID="get_Modules():System.Diagnostics.ProcessModuleCollection">
				<signature>System.Diagnostics.Process.get_Modules():System.Diagnostics.ProcessModuleCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NonpagedSystemMemorySize" uniqueID="get_NonpagedSystemMemorySize():System.Int32">
				<signature>System.Diagnostics.Process.get_NonpagedSystemMemorySize():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NonpagedSystemMemorySize64" uniqueID="get_NonpagedSystemMemorySize64():System.Int64">
				<signature>System.Diagnostics.Process.get_NonpagedSystemMemorySize64():System.Int64</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_OperatingSystem" uniqueID="get_OperatingSystem():System.OperatingSystem">
				<signature>System.Diagnostics.Process.get_OperatingSystem():System.OperatingSystem</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PagedMemorySize" uniqueID="get_PagedMemorySize():System.Int32">
				<signature>System.Diagnostics.Process.get_PagedMemorySize():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PagedMemorySize64" uniqueID="get_PagedMemorySize64():System.Int64">
				<signature>System.Diagnostics.Process.get_PagedMemorySize64():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PagedSystemMemorySize" uniqueID="get_PagedSystemMemorySize():System.Int32">
				<signature>System.Diagnostics.Process.get_PagedSystemMemorySize():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PagedSystemMemorySize64" uniqueID="get_PagedSystemMemorySize64():System.Int64">
				<signature>System.Diagnostics.Process.get_PagedSystemMemorySize64():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PeakPagedMemorySize" uniqueID="get_PeakPagedMemorySize():System.Int32">
				<signature>System.Diagnostics.Process.get_PeakPagedMemorySize():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PeakPagedMemorySize64" uniqueID="get_PeakPagedMemorySize64():System.Int64">
				<signature>System.Diagnostics.Process.get_PeakPagedMemorySize64():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PeakVirtualMemorySize" uniqueID="get_PeakVirtualMemorySize():System.Int32">
				<signature>System.Diagnostics.Process.get_PeakVirtualMemorySize():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PeakVirtualMemorySize64" uniqueID="get_PeakVirtualMemorySize64():System.Int64">
				<signature>System.Diagnostics.Process.get_PeakVirtualMemorySize64():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PeakWorkingSet" uniqueID="get_PeakWorkingSet():System.Int32">
				<signature>System.Diagnostics.Process.get_PeakWorkingSet():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PeakWorkingSet64" uniqueID="get_PeakWorkingSet64():System.Int64">
				<signature>System.Diagnostics.Process.get_PeakWorkingSet64():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PriorityBoostEnabled" uniqueID="get_PriorityBoostEnabled():System.Boolean">
				<signature>System.Diagnostics.Process.get_PriorityBoostEnabled():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PriorityClass" uniqueID="get_PriorityClass():System.Diagnostics.ProcessPriorityClass">
				<signature>System.Diagnostics.Process.get_PriorityClass():System.Diagnostics.ProcessPriorityClass</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PrivateMemorySize" uniqueID="get_PrivateMemorySize():System.Int32">
				<signature>System.Diagnostics.Process.get_PrivateMemorySize():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PrivateMemorySize64" uniqueID="get_PrivateMemorySize64():System.Int64">
				<signature>System.Diagnostics.Process.get_PrivateMemorySize64():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_PrivilegedProcessorTime" uniqueID="get_PrivilegedProcessorTime():System.TimeSpan">
				<signature>System.Diagnostics.Process.get_PrivilegedProcessorTime():System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ProcessName" uniqueID="get_ProcessName():System.String">
				<signature>System.Diagnostics.Process.get_ProcessName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ProcessorAffinity" uniqueID="get_ProcessorAffinity():System.IntPtr">
				<signature>System.Diagnostics.Process.get_ProcessorAffinity():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Responding" uniqueID="get_Responding():System.Boolean">
				<signature>System.Diagnostics.Process.get_Responding():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SessionId" uniqueID="get_SessionId():System.Int32">
				<signature>System.Diagnostics.Process.get_SessionId():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StandardError" uniqueID="get_StandardError():System.IO.StreamReader">
				<signature>System.Diagnostics.Process.get_StandardError():System.IO.StreamReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StandardInput" uniqueID="get_StandardInput():System.IO.StreamWriter">
				<signature>System.Diagnostics.Process.get_StandardInput():System.IO.StreamWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StandardOutput" uniqueID="get_StandardOutput():System.IO.StreamReader">
				<signature>System.Diagnostics.Process.get_StandardOutput():System.IO.StreamReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StartInfo" uniqueID="get_StartInfo():System.Diagnostics.ProcessStartInfo">
				<signature>System.Diagnostics.Process.get_StartInfo():System.Diagnostics.ProcessStartInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StartTime" uniqueID="get_StartTime():System.DateTime">
				<signature>System.Diagnostics.Process.get_StartTime():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SynchronizingObject" uniqueID="get_SynchronizingObject():System.ComponentModel.ISynchronizeInvoke">
				<signature>System.Diagnostics.Process.get_SynchronizingObject():System.ComponentModel.ISynchronizeInvoke</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Threads" uniqueID="get_Threads():System.Diagnostics.ProcessThreadCollection">
				<signature>System.Diagnostics.Process.get_Threads():System.Diagnostics.ProcessThreadCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TotalProcessorTime" uniqueID="get_TotalProcessorTime():System.TimeSpan">
				<signature>System.Diagnostics.Process.get_TotalProcessorTime():System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserProcessorTime" uniqueID="get_UserProcessorTime():System.TimeSpan">
				<signature>System.Diagnostics.Process.get_UserProcessorTime():System.TimeSpan</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_VirtualMemorySize" uniqueID="get_VirtualMemorySize():System.Int32">
				<signature>System.Diagnostics.Process.get_VirtualMemorySize():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_VirtualMemorySize64" uniqueID="get_VirtualMemorySize64():System.Int64">
				<signature>System.Diagnostics.Process.get_VirtualMemorySize64():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_WorkingSet" uniqueID="get_WorkingSet():System.Int32">
				<signature>System.Diagnostics.Process.get_WorkingSet():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_WorkingSet64" uniqueID="get_WorkingSet64():System.Int64">
				<signature>System.Diagnostics.Process.get_WorkingSet64():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_ErrorDataReceived" uniqueID="remove_ErrorDataReceived(System.Diagnostics.DataReceivedEventHandler):System.Void">
				<signature>System.Diagnostics.Process.remove_ErrorDataReceived(System.Diagnostics.DataReceivedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_Exited" uniqueID="remove_Exited(System.EventHandler):System.Void">
				<signature>System.Diagnostics.Process.remove_Exited(System.EventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_OutputDataReceived" uniqueID="remove_OutputDataReceived(System.Diagnostics.DataReceivedEventHandler):System.Void">
				<signature>System.Diagnostics.Process.remove_OutputDataReceived(System.Diagnostics.DataReceivedEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EnableRaisingEvents" uniqueID="set_EnableRaisingEvents(System.Boolean):System.Void">
				<signature>System.Diagnostics.Process.set_EnableRaisingEvents(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MaxWorkingSet" uniqueID="set_MaxWorkingSet(System.IntPtr):System.Void">
				<signature>System.Diagnostics.Process.set_MaxWorkingSet(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_MinWorkingSet" uniqueID="set_MinWorkingSet(System.IntPtr):System.Void">
				<signature>System.Diagnostics.Process.set_MinWorkingSet(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PriorityBoostEnabled" uniqueID="set_PriorityBoostEnabled(System.Boolean):System.Void">
				<signature>System.Diagnostics.Process.set_PriorityBoostEnabled(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_PriorityClass" uniqueID="set_PriorityClass(System.Diagnostics.ProcessPriorityClass):System.Void">
				<signature>System.Diagnostics.Process.set_PriorityClass(System.Diagnostics.ProcessPriorityClass):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ProcessorAffinity" uniqueID="set_ProcessorAffinity(System.IntPtr):System.Void">
				<signature>System.Diagnostics.Process.set_ProcessorAffinity(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_StartInfo" uniqueID="set_StartInfo(System.Diagnostics.ProcessStartInfo):System.Void">
				<signature>System.Diagnostics.Process.set_StartInfo(System.Diagnostics.ProcessStartInfo):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SynchronizingObject" uniqueID="set_SynchronizingObject(System.ComponentModel.ISynchronizeInvoke):System.Void">
				<signature>System.Diagnostics.Process.set_SynchronizingObject(System.ComponentModel.ISynchronizeInvoke):System.Void</signature>
			</method>
		</class>
		<class name="ProcessStartInfo" uniqueID="System.Diagnostics.ProcessStartInfo">
			<method accessibility="Public" methodKind="Member" name="ProcessStartInfo" uniqueID="ProcessStartInfo():System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.ProcessStartInfo():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ProcessStartInfo" uniqueID="ProcessStartInfo(System.Diagnostics.Process):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.ProcessStartInfo(System.Diagnostics.Process):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ProcessStartInfo" uniqueID="ProcessStartInfo(System.String):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.ProcessStartInfo(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ProcessStartInfo" uniqueID="ProcessStartInfo(System.String;System.String):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.ProcessStartInfo(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Arguments" uniqueID="get_Arguments():System.String">
				<signature>System.Diagnostics.ProcessStartInfo.get_Arguments():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CreateNoWindow" uniqueID="get_CreateNoWindow():System.Boolean">
				<signature>System.Diagnostics.ProcessStartInfo.get_CreateNoWindow():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Domain" uniqueID="get_Domain():System.String">
				<signature>System.Diagnostics.ProcessStartInfo.get_Domain():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EnvironmentVariables" uniqueID="get_EnvironmentVariables():System.Collections.Specialized.StringDictionary">
				<signature>System.Diagnostics.ProcessStartInfo.get_EnvironmentVariables():System.Collections.Specialized.StringDictionary</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ErrorDialog" uniqueID="get_ErrorDialog():System.Boolean">
				<signature>System.Diagnostics.ProcessStartInfo.get_ErrorDialog():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ErrorDialogParentHandle" uniqueID="get_ErrorDialogParentHandle():System.IntPtr">
				<signature>System.Diagnostics.ProcessStartInfo.get_ErrorDialogParentHandle():System.IntPtr</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FileName" uniqueID="get_FileName():System.String">
				<signature>System.Diagnostics.ProcessStartInfo.get_FileName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LoadUserProfile" uniqueID="get_LoadUserProfile():System.Boolean">
				<signature>System.Diagnostics.ProcessStartInfo.get_LoadUserProfile():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Password" uniqueID="get_Password():System.Security.SecureString">
				<signature>System.Diagnostics.ProcessStartInfo.get_Password():System.Security.SecureString</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RedirectStandardError" uniqueID="get_RedirectStandardError():System.Boolean">
				<signature>System.Diagnostics.ProcessStartInfo.get_RedirectStandardError():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RedirectStandardInput" uniqueID="get_RedirectStandardInput():System.Boolean">
				<signature>System.Diagnostics.ProcessStartInfo.get_RedirectStandardInput():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RedirectStandardOutput" uniqueID="get_RedirectStandardOutput():System.Boolean">
				<signature>System.Diagnostics.ProcessStartInfo.get_RedirectStandardOutput():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StandardErrorEncoding" uniqueID="get_StandardErrorEncoding():System.Text.Encoding">
				<signature>System.Diagnostics.ProcessStartInfo.get_StandardErrorEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_StandardOutputEncoding" uniqueID="get_StandardOutputEncoding():System.Text.Encoding">
				<signature>System.Diagnostics.ProcessStartInfo.get_StandardOutputEncoding():System.Text.Encoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UseShellExecute" uniqueID="get_UseShellExecute():System.Boolean">
				<signature>System.Diagnostics.ProcessStartInfo.get_UseShellExecute():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UserName" uniqueID="get_UserName():System.String">
				<signature>System.Diagnostics.ProcessStartInfo.get_UserName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Verb" uniqueID="get_Verb():System.String">
				<signature>System.Diagnostics.ProcessStartInfo.get_Verb():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Verbs" uniqueID="get_Verbs():System.String[]">
				<signature>System.Diagnostics.ProcessStartInfo.get_Verbs():System.String[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_WindowStyle" uniqueID="get_WindowStyle():System.Diagnostics.ProcessWindowStyle">
				<signature>System.Diagnostics.ProcessStartInfo.get_WindowStyle():System.Diagnostics.ProcessWindowStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_WorkingDirectory" uniqueID="get_WorkingDirectory():System.String">
				<signature>System.Diagnostics.ProcessStartInfo.get_WorkingDirectory():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Arguments" uniqueID="set_Arguments(System.String):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_Arguments(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CreateNoWindow" uniqueID="set_CreateNoWindow(System.Boolean):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_CreateNoWindow(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Domain" uniqueID="set_Domain(System.String):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_Domain(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ErrorDialog" uniqueID="set_ErrorDialog(System.Boolean):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_ErrorDialog(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ErrorDialogParentHandle" uniqueID="set_ErrorDialogParentHandle(System.IntPtr):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_ErrorDialogParentHandle(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_FileName" uniqueID="set_FileName(System.String):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_FileName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LoadUserProfile" uniqueID="set_LoadUserProfile(System.Boolean):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_LoadUserProfile(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Password" uniqueID="set_Password(System.Security.SecureString):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_Password(System.Security.SecureString):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RedirectStandardError" uniqueID="set_RedirectStandardError(System.Boolean):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_RedirectStandardError(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RedirectStandardInput" uniqueID="set_RedirectStandardInput(System.Boolean):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_RedirectStandardInput(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RedirectStandardOutput" uniqueID="set_RedirectStandardOutput(System.Boolean):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_RedirectStandardOutput(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_StandardErrorEncoding" uniqueID="set_StandardErrorEncoding(System.Text.Encoding):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_StandardErrorEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_StandardOutputEncoding" uniqueID="set_StandardOutputEncoding(System.Text.Encoding):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_StandardOutputEncoding(System.Text.Encoding):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UseShellExecute" uniqueID="set_UseShellExecute(System.Boolean):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_UseShellExecute(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UserName" uniqueID="set_UserName(System.String):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_UserName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Verb" uniqueID="set_Verb(System.String):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_Verb(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_WindowStyle" uniqueID="set_WindowStyle(System.Diagnostics.ProcessWindowStyle):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_WindowStyle(System.Diagnostics.ProcessWindowStyle):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_WorkingDirectory" uniqueID="set_WorkingDirectory(System.String):System.Void">
				<signature>System.Diagnostics.ProcessStartInfo.set_WorkingDirectory(System.String):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Xml">
		<class name="IXmlNamespaceResolver" uniqueID="System.Xml.IXmlNamespaceResolver">
			<method accessibility="Public" methodKind="Member" name="GetNamespacesInScope" uniqueID="GetNamespacesInScope(System.Xml.XmlNamespaceScope):System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;">
				<signature>System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope):System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LookupNamespace" uniqueID="LookupNamespace(System.String):System.String">
				<signature>System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LookupPrefix" uniqueID="LookupPrefix(System.String):System.String">
				<signature>System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String):System.String</signature>
			</method>
		</class>
	</package>
	<package name="System.Xml.Serialization">
		<class name="IXmlSerializable" uniqueID="System.Xml.Serialization.IXmlSerializable">
			<method accessibility="Public" methodKind="Member" name="GetSchema" uniqueID="GetSchema():System.Xml.Schema.XmlSchema">
				<signature>System.Xml.Serialization.IXmlSerializable.GetSchema():System.Xml.Schema.XmlSchema</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadXml" uniqueID="ReadXml(System.Xml.XmlReader):System.Void">
				<signature>System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteXml" uniqueID="WriteXml(System.Xml.XmlWriter):System.Void">
				<signature>System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Xml.XPath">
		<class name="IXPathNavigable" uniqueID="System.Xml.XPath.IXPathNavigable">
			<method accessibility="Public" methodKind="Member" name="CreateNavigator" uniqueID="CreateNavigator():System.Xml.XPath.XPathNavigator">
				<signature>System.Xml.XPath.IXPathNavigable.CreateNavigator():System.Xml.XPath.XPathNavigator</signature>
			</method>
		</class>
		<class name="XPathDocument" uniqueID="System.Xml.XPath.XPathDocument">
			<method accessibility="Protected" methodKind="Member" name="AddIdElement" uniqueID="AddIdElement(System.String;MS.Internal.Xml.Cache.XPathNode[];System.Int32):System.Void">
				<signature>System.Xml.XPath.XPathDocument.AddIdElement(System.String;MS.Internal.Xml.Cache.XPathNode[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AddNamespace" uniqueID="AddNamespace(MS.Internal.Xml.Cache.XPathNode[];System.Int32;MS.Internal.Xml.Cache.XPathNode[];System.Int32):System.Void">
				<signature>System.Xml.XPath.XPathDocument.AddNamespace(MS.Internal.Xml.Cache.XPathNode[];System.Int32;MS.Internal.Xml.Cache.XPathNode[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateNavigator" uniqueID="CreateNavigator():System.Xml.XPath.XPathNavigator">
				<signature>System.Xml.XPath.XPathDocument.CreateNavigator():System.Xml.XPath.XPathNavigator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetCollapsedTextNode" uniqueID="GetCollapsedTextNode(MS.Internal.Xml.Cache.XPathNode[]):System.Int32">
				<signature>System.Xml.XPath.XPathDocument.GetCollapsedTextNode(MS.Internal.Xml.Cache.XPathNode[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetRootNode" uniqueID="GetRootNode(MS.Internal.Xml.Cache.XPathNode[]):System.Int32">
				<signature>System.Xml.XPath.XPathDocument.GetRootNode(MS.Internal.Xml.Cache.XPathNode[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetXmlNamespaceNode" uniqueID="GetXmlNamespaceNode(MS.Internal.Xml.Cache.XPathNode[]):System.Int32">
				<signature>System.Xml.XPath.XPathDocument.GetXmlNamespaceNode(MS.Internal.Xml.Cache.XPathNode[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadFromReader" uniqueID="LoadFromReader(System.Xml.XmlReader;System.Xml.XmlSpace):System.Void">
				<signature>System.Xml.XPath.XPathDocument.LoadFromReader(System.Xml.XmlReader;System.Xml.XmlSpace):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LoadFromWriter" uniqueID="LoadFromWriter(System.Xml.XPath.XPathDocument+LoadFlags;System.String):System.Xml.XmlRawWriter">
				<signature>System.Xml.XPath.XPathDocument.LoadFromWriter(System.Xml.XPath.XPathDocument+LoadFlags;System.String):System.Xml.XmlRawWriter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LookupIdElement" uniqueID="LookupIdElement(System.String;MS.Internal.Xml.Cache.XPathNode[]):System.Int32">
				<signature>System.Xml.XPath.XPathDocument.LookupIdElement(System.String;MS.Internal.Xml.Cache.XPathNode[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="LookupNamespaces" uniqueID="LookupNamespaces(MS.Internal.Xml.Cache.XPathNode[];System.Int32;MS.Internal.Xml.Cache.XPathNode[]):System.Int32">
				<signature>System.Xml.XPath.XPathDocument.LookupNamespaces(MS.Internal.Xml.Cache.XPathNode[];System.Int32;MS.Internal.Xml.Cache.XPathNode[]):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetCollapsedTextNode" uniqueID="SetCollapsedTextNode(MS.Internal.Xml.Cache.XPathNode[];System.Int32):System.Void">
				<signature>System.Xml.XPath.XPathDocument.SetCollapsedTextNode(MS.Internal.Xml.Cache.XPathNode[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetRootNode" uniqueID="SetRootNode(MS.Internal.Xml.Cache.XPathNode[];System.Int32):System.Void">
				<signature>System.Xml.XPath.XPathDocument.SetRootNode(MS.Internal.Xml.Cache.XPathNode[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetXmlNamespaceNode" uniqueID="SetXmlNamespaceNode(MS.Internal.Xml.Cache.XPathNode[];System.Int32):System.Void">
				<signature>System.Xml.XPath.XPathDocument.SetXmlNamespaceNode(MS.Internal.Xml.Cache.XPathNode[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SetupReader" uniqueID="SetupReader(System.Xml.XmlTextReaderImpl):System.Xml.XmlTextReaderImpl">
				<signature>System.Xml.XPath.XPathDocument.SetupReader(System.Xml.XmlTextReaderImpl):System.Xml.XmlTextReaderImpl</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="XPathDocument" uniqueID="XPathDocument():System.Void">
				<signature>System.Xml.XPath.XPathDocument.XPathDocument():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPathDocument" uniqueID="XPathDocument(System.IO.Stream):System.Void">
				<signature>System.Xml.XPath.XPathDocument.XPathDocument(System.IO.Stream):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPathDocument" uniqueID="XPathDocument(System.IO.TextReader):System.Void">
				<signature>System.Xml.XPath.XPathDocument.XPathDocument(System.IO.TextReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPathDocument" uniqueID="XPathDocument(System.String):System.Void">
				<signature>System.Xml.XPath.XPathDocument.XPathDocument(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPathDocument" uniqueID="XPathDocument(System.String;System.Xml.XmlSpace):System.Void">
				<signature>System.Xml.XPath.XPathDocument.XPathDocument(System.String;System.Xml.XmlSpace):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="XPathDocument" uniqueID="XPathDocument(System.Xml.XmlNameTable):System.Void">
				<signature>System.Xml.XPath.XPathDocument.XPathDocument(System.Xml.XmlNameTable):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPathDocument" uniqueID="XPathDocument(System.Xml.XmlReader):System.Void">
				<signature>System.Xml.XPath.XPathDocument.XPathDocument(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="XPathDocument" uniqueID="XPathDocument(System.Xml.XmlReader;System.Xml.XmlSpace):System.Void">
				<signature>System.Xml.XPath.XPathDocument.XPathDocument(System.Xml.XmlReader;System.Xml.XmlSpace):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasLineInfo" uniqueID="get_HasLineInfo():System.Boolean">
				<signature>System.Xml.XPath.XPathDocument.get_HasLineInfo():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_NameTable" uniqueID="get_NameTable():System.Xml.XmlNameTable">
				<signature>System.Xml.XPath.XPathDocument.get_NameTable():System.Xml.XmlNameTable</signature>
			</method>
		</class>
		<class name="XPathExpression" uniqueID="System.Xml.XPath.XPathExpression">
			<method accessibility="Public" methodKind="Static" name="Compile" uniqueID="Compile(System.String):System.Xml.XPath.XPathExpression">
				<signature>System.Xml.XPath.XPathExpression.Compile(System.String):System.Xml.XPath.XPathExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="Compile" uniqueID="Compile(System.String;System.Xml.IXmlNamespaceResolver):System.Xml.XPath.XPathExpression">
				<signature>System.Xml.XPath.XPathExpression.Compile(System.String;System.Xml.IXmlNamespaceResolver):System.Xml.XPath.XPathExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddSort" uniqueID="AddSort(System.Object;System.Collections.IComparer):System.Void">
				<signature>System.Xml.XPath.XPathExpression.AddSort(System.Object;System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddSort" uniqueID="AddSort(System.Object;System.Xml.XPath.XmlSortOrder;System.Xml.XPath.XmlCaseOrder;System.String;System.Xml.XPath.XmlDataType):System.Void">
				<signature>System.Xml.XPath.XPathExpression.AddSort(System.Object;System.Xml.XPath.XmlSortOrder;System.Xml.XPath.XmlCaseOrder;System.String;System.Xml.XPath.XmlDataType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Xml.XPath.XPathExpression">
				<signature>System.Xml.XPath.XPathExpression.Clone():System.Xml.XPath.XPathExpression</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="PrintQuery" uniqueID="PrintQuery(System.Xml.XmlWriter):System.Void">
				<signature>System.Xml.XPath.XPathExpression.PrintQuery(System.Xml.XmlWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetContext" uniqueID="SetContext(System.Xml.IXmlNamespaceResolver):System.Void">
				<signature>System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetContext" uniqueID="SetContext(System.Xml.XmlNamespaceManager):System.Void">
				<signature>System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="XPathExpression" uniqueID="XPathExpression():System.Void">
				<signature>System.Xml.XPath.XPathExpression.XPathExpression():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Expression" uniqueID="get_Expression():System.String">
				<signature>System.Xml.XPath.XPathExpression.get_Expression():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ReturnType" uniqueID="get_ReturnType():System.Xml.XPath.XPathResultType">
				<signature>System.Xml.XPath.XPathExpression.get_ReturnType():System.Xml.XPath.XPathResultType</signature>
			</method>
		</class>
		<class name="XPathItem" uniqueID="System.Xml.XPath.XPathItem">
			<method accessibility="Public" methodKind="Member" name="ValueAs" uniqueID="ValueAs(System.Type):System.Object">
				<signature>System.Xml.XPath.XPathItem.ValueAs(System.Type):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ValueAs" uniqueID="ValueAs(System.Type;System.Xml.IXmlNamespaceResolver):System.Object">
				<signature>System.Xml.XPath.XPathItem.ValueAs(System.Type;System.Xml.IXmlNamespaceResolver):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="XPathItem" uniqueID="XPathItem():System.Void">
				<signature>System.Xml.XPath.XPathItem.XPathItem():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNode" uniqueID="get_IsNode():System.Boolean">
				<signature>System.Xml.XPath.XPathItem.get_IsNode():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypedValue" uniqueID="get_TypedValue():System.Object">
				<signature>System.Xml.XPath.XPathItem.get_TypedValue():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.String">
				<signature>System.Xml.XPath.XPathItem.get_Value():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueAsBoolean" uniqueID="get_ValueAsBoolean():System.Boolean">
				<signature>System.Xml.XPath.XPathItem.get_ValueAsBoolean():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueAsDateTime" uniqueID="get_ValueAsDateTime():System.DateTime">
				<signature>System.Xml.XPath.XPathItem.get_ValueAsDateTime():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueAsDouble" uniqueID="get_ValueAsDouble():System.Double">
				<signature>System.Xml.XPath.XPathItem.get_ValueAsDouble():System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueAsInt" uniqueID="get_ValueAsInt():System.Int32">
				<signature>System.Xml.XPath.XPathItem.get_ValueAsInt():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueAsLong" uniqueID="get_ValueAsLong():System.Int64">
				<signature>System.Xml.XPath.XPathItem.get_ValueAsLong():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueType" uniqueID="get_ValueType():System.Type">
				<signature>System.Xml.XPath.XPathItem.get_ValueType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_XmlType" uniqueID="get_XmlType():System.Xml.Schema.XmlSchemaType">
				<signature>System.Xml.XPath.XPathItem.get_XmlType():System.Xml.Schema.XmlSchemaType</signature>
			</method>
		</class>
		<class name="XPathNavigator" uniqueID="System.Xml.XPath.XPathNavigator">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Xml.XPath.XPathNavigator.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompileMatchPattern" uniqueID="CompileMatchPattern(System.String):System.Xml.XPath.XPathExpression">
				<signature>System.Xml.XPath.XPathNavigator.CompileMatchPattern(System.String):System.Xml.XPath.XPathExpression</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetContentKindMask" uniqueID="GetContentKindMask(System.Xml.XPath.XPathNodeType):System.Int32">
				<signature>System.Xml.XPath.XPathNavigator.GetContentKindMask(System.Xml.XPath.XPathNodeType):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetDepth" uniqueID="GetDepth(System.Xml.XPath.XPathNavigator):System.Int32">
				<signature>System.Xml.XPath.XPathNavigator.GetDepth(System.Xml.XPath.XPathNavigator):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetKindMask" uniqueID="GetKindMask(System.Xml.XPath.XPathNodeType):System.Int32">
				<signature>System.Xml.XPath.XPathNavigator.GetKindMask(System.Xml.XPath.XPathNodeType):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetNamespaces" uniqueID="GetNamespaces(System.Xml.IXmlNamespaceResolver):System.Xml.XmlNamespaceManager">
				<signature>System.Xml.XPath.XPathNavigator.GetNamespaces(System.Xml.IXmlNamespaceResolver):System.Xml.XmlNamespaceManager</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsText" uniqueID="IsText(System.Xml.XPath.XPathNodeType):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.IsText(System.Xml.XPath.XPathNodeType):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_NavigatorComparer" uniqueID="get_NavigatorComparer():System.Collections.IEqualityComparer">
				<signature>System.Xml.XPath.XPathNavigator.get_NavigatorComparer():System.Collections.IEqualityComparer</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendChild" uniqueID="AppendChild():System.Xml.XmlWriter">
				<signature>System.Xml.XPath.XPathNavigator.AppendChild():System.Xml.XmlWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendChild" uniqueID="AppendChild(System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.AppendChild(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendChild" uniqueID="AppendChild(System.Xml.XPath.XPathNavigator):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendChild" uniqueID="AppendChild(System.Xml.XmlReader):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AppendChildElement" uniqueID="AppendChildElement(System.String;System.String;System.String;System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.AppendChildElement(System.String;System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BuildSubtree" uniqueID="BuildSubtree(System.Xml.XmlReader;System.Xml.XmlWriter):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.BuildSubtree(System.Xml.XmlReader;System.Xml.XmlWriter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CheckValidity" uniqueID="CheckValidity(System.Xml.Schema.XmlSchemaSet;System.Xml.Schema.ValidationEventHandler):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet;System.Xml.Schema.ValidationEventHandler):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clone" uniqueID="Clone():System.Xml.XPath.XPathNavigator">
				<signature>System.Xml.XPath.XPathNavigator.Clone():System.Xml.XPath.XPathNavigator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ComparePosition" uniqueID="ComparePosition(System.Xml.XPath.XPathNavigator):System.Xml.XmlNodeOrder">
				<signature>System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator):System.Xml.XmlNodeOrder</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CompareSiblings" uniqueID="CompareSiblings(System.Xml.XPath.XPathNavigator;System.Xml.XPath.XPathNavigator):System.Xml.XmlNodeOrder">
				<signature>System.Xml.XPath.XPathNavigator.CompareSiblings(System.Xml.XPath.XPathNavigator;System.Xml.XPath.XPathNavigator):System.Xml.XmlNodeOrder</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Compile" uniqueID="Compile(System.String):System.Xml.XPath.XPathExpression">
				<signature>System.Xml.XPath.XPathNavigator.Compile(System.String):System.Xml.XPath.XPathExpression</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateAttribute" uniqueID="CreateAttribute(System.String;System.String;System.String;System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.CreateAttribute(System.String;System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateAttributes" uniqueID="CreateAttributes():System.Xml.XmlWriter">
				<signature>System.Xml.XPath.XPathNavigator.CreateAttributes():System.Xml.XmlWriter</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateContextReader" uniqueID="CreateContextReader(System.String;System.Boolean):System.Xml.XmlReader">
				<signature>System.Xml.XPath.XPathNavigator.CreateContextReader(System.String;System.Boolean):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateNavigator" uniqueID="CreateNavigator():System.Xml.XPath.XPathNavigator">
				<signature>System.Xml.XPath.XPathNavigator.CreateNavigator():System.Xml.XPath.XPathNavigator</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CreateReader" uniqueID="CreateReader():System.Xml.XmlReader">
				<signature>System.Xml.XPath.XPathNavigator.CreateReader():System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DeleteRange" uniqueID="DeleteRange(System.Xml.XPath.XPathNavigator):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DeleteSelf" uniqueID="DeleteSelf():System.Void">
				<signature>System.Xml.XPath.XPathNavigator.DeleteSelf():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Evaluate" uniqueID="Evaluate(System.String):System.Object">
				<signature>System.Xml.XPath.XPathNavigator.Evaluate(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Evaluate" uniqueID="Evaluate(System.String;System.Xml.IXmlNamespaceResolver):System.Object">
				<signature>System.Xml.XPath.XPathNavigator.Evaluate(System.String;System.Xml.IXmlNamespaceResolver):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Evaluate" uniqueID="Evaluate(System.Xml.XPath.XPathExpression):System.Object">
				<signature>System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Evaluate" uniqueID="Evaluate(System.Xml.XPath.XPathExpression;System.Xml.XPath.XPathNodeIterator):System.Object">
				<signature>System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression;System.Xml.XPath.XPathNodeIterator):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetAttribute" uniqueID="GetAttribute(System.String;System.String):System.String">
				<signature>System.Xml.XPath.XPathNavigator.GetAttribute(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNamespace" uniqueID="GetNamespace(System.String):System.String">
				<signature>System.Xml.XPath.XPathNavigator.GetNamespace(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNamespacesInScope" uniqueID="GetNamespacesInScope(System.Xml.XmlNamespaceScope):System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;">
				<signature>System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope):System.Collections.Generic.IDictionary&lt;System.String;System.String&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="GetValidatingReader" uniqueID="GetValidatingReader(System.Xml.XmlReader;System.Xml.Schema.XmlSchemaSet;System.Xml.Schema.ValidationEventHandler;System.Xml.Schema.XmlSchemaType;System.Xml.Schema.XmlSchemaElement;System.Xml.Schema.XmlSchemaAttribute):System.Xml.XmlReader">
				<signature>System.Xml.XPath.XPathNavigator.GetValidatingReader(System.Xml.XmlReader;System.Xml.Schema.XmlSchemaSet;System.Xml.Schema.ValidationEventHandler;System.Xml.Schema.XmlSchemaType;System.Xml.Schema.XmlSchemaElement;System.Xml.Schema.XmlSchemaAttribute):System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertAfter" uniqueID="InsertAfter():System.Xml.XmlWriter">
				<signature>System.Xml.XPath.XPathNavigator.InsertAfter():System.Xml.XmlWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertAfter" uniqueID="InsertAfter(System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.InsertAfter(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertAfter" uniqueID="InsertAfter(System.Xml.XPath.XPathNavigator):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertAfter" uniqueID="InsertAfter(System.Xml.XmlReader):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertBefore" uniqueID="InsertBefore():System.Xml.XmlWriter">
				<signature>System.Xml.XPath.XPathNavigator.InsertBefore():System.Xml.XmlWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertBefore" uniqueID="InsertBefore(System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.InsertBefore(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertBefore" uniqueID="InsertBefore(System.Xml.XPath.XPathNavigator):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertBefore" uniqueID="InsertBefore(System.Xml.XmlReader):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertElementAfter" uniqueID="InsertElementAfter(System.String;System.String;System.String;System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String;System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InsertElementBefore" uniqueID="InsertElementBefore(System.String;System.String;System.String;System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String;System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDescendant" uniqueID="IsDescendant(System.Xml.XPath.XPathNavigator):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsSamePosition" uniqueID="IsSamePosition(System.Xml.XPath.XPathNavigator):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsValidChildType" uniqueID="IsValidChildType(System.Xml.XPath.XPathNodeType):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.IsValidChildType(System.Xml.XPath.XPathNodeType):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IsValidSiblingType" uniqueID="IsValidSiblingType(System.Xml.XPath.XPathNodeType):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.IsValidSiblingType(System.Xml.XPath.XPathNodeType):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LookupNamespace" uniqueID="LookupNamespace(System.String):System.String">
				<signature>System.Xml.XPath.XPathNavigator.LookupNamespace(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="LookupPrefix" uniqueID="LookupPrefix(System.String):System.String">
				<signature>System.Xml.XPath.XPathNavigator.LookupPrefix(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Matches" uniqueID="Matches(System.String):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.Matches(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Matches" uniqueID="Matches(System.Xml.XPath.XPathExpression):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveTo" uniqueID="MoveTo(System.Xml.XPath.XPathNavigator):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToAttribute" uniqueID="MoveToAttribute(System.String;System.String):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToChild" uniqueID="MoveToChild(System.String;System.String):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToChild(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToChild" uniqueID="MoveToChild(System.Xml.XPath.XPathNodeType):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToFirst" uniqueID="MoveToFirst():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToFirst():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToFirstAttribute" uniqueID="MoveToFirstAttribute():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToFirstAttribute():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToFirstChild" uniqueID="MoveToFirstChild():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToFirstChild():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToFirstNamespace" uniqueID="MoveToFirstNamespace():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToFirstNamespace():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToFirstNamespace" uniqueID="MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToFollowing" uniqueID="MoveToFollowing(System.String;System.String):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToFollowing" uniqueID="MoveToFollowing(System.String;System.String;System.Xml.XPath.XPathNavigator):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String;System.String;System.Xml.XPath.XPathNavigator):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToFollowing" uniqueID="MoveToFollowing(System.Xml.XPath.XPathNodeType):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToFollowing" uniqueID="MoveToFollowing(System.Xml.XPath.XPathNodeType;System.Xml.XPath.XPathNavigator):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType;System.Xml.XPath.XPathNavigator):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToId" uniqueID="MoveToId(System.String):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToId(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToNamespace" uniqueID="MoveToNamespace(System.String):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToNext" uniqueID="MoveToNext():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToNext():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToNext" uniqueID="MoveToNext(System.String;System.String):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToNext(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToNext" uniqueID="MoveToNext(System.Xml.XPath.XPathNodeType):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToNextAttribute" uniqueID="MoveToNextAttribute():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToNextAttribute():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToNextNamespace" uniqueID="MoveToNextNamespace():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToNextNamespace():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToNextNamespace" uniqueID="MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveToNonDescendant" uniqueID="MoveToNonDescendant():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToNonDescendant():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToParent" uniqueID="MoveToParent():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToParent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToPrevious" uniqueID="MoveToPrevious():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToPrevious():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveToPrevious" uniqueID="MoveToPrevious(System.String;System.String):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToPrevious(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MoveToPrevious" uniqueID="MoveToPrevious(System.Xml.XPath.XPathNodeType):System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.MoveToPrevious(System.Xml.XPath.XPathNodeType):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveToRoot" uniqueID="MoveToRoot():System.Void">
				<signature>System.Xml.XPath.XPathNavigator.MoveToRoot():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PrependChild" uniqueID="PrependChild():System.Xml.XmlWriter">
				<signature>System.Xml.XPath.XPathNavigator.PrependChild():System.Xml.XmlWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PrependChild" uniqueID="PrependChild(System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.PrependChild(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PrependChild" uniqueID="PrependChild(System.Xml.XPath.XPathNavigator):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PrependChild" uniqueID="PrependChild(System.Xml.XmlReader):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PrependChildElement" uniqueID="PrependChildElement(System.String;System.String;System.String;System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.PrependChildElement(System.String;System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadSubtree" uniqueID="ReadSubtree():System.Xml.XmlReader">
				<signature>System.Xml.XPath.XPathNavigator.ReadSubtree():System.Xml.XmlReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReplaceRange" uniqueID="ReplaceRange(System.Xml.XPath.XPathNavigator):System.Xml.XmlWriter">
				<signature>System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator):System.Xml.XmlWriter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReplaceSelf" uniqueID="ReplaceSelf(System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReplaceSelf" uniqueID="ReplaceSelf(System.Xml.XPath.XPathNavigator):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReplaceSelf" uniqueID="ReplaceSelf(System.Xml.XmlReader):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String):System.Xml.XPath.XPathNodeIterator">
				<signature>System.Xml.XPath.XPathNavigator.Select(System.String):System.Xml.XPath.XPathNodeIterator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.String;System.Xml.IXmlNamespaceResolver):System.Xml.XPath.XPathNodeIterator">
				<signature>System.Xml.XPath.XPathNavigator.Select(System.String;System.Xml.IXmlNamespaceResolver):System.Xml.XPath.XPathNodeIterator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Select" uniqueID="Select(System.Xml.XPath.XPathExpression):System.Xml.XPath.XPathNodeIterator">
				<signature>System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression):System.Xml.XPath.XPathNodeIterator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectAncestors" uniqueID="SelectAncestors(System.String;System.String;System.Boolean):System.Xml.XPath.XPathNodeIterator">
				<signature>System.Xml.XPath.XPathNavigator.SelectAncestors(System.String;System.String;System.Boolean):System.Xml.XPath.XPathNodeIterator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectAncestors" uniqueID="SelectAncestors(System.Xml.XPath.XPathNodeType;System.Boolean):System.Xml.XPath.XPathNodeIterator">
				<signature>System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType;System.Boolean):System.Xml.XPath.XPathNodeIterator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectChildren" uniqueID="SelectChildren(System.String;System.String):System.Xml.XPath.XPathNodeIterator">
				<signature>System.Xml.XPath.XPathNavigator.SelectChildren(System.String;System.String):System.Xml.XPath.XPathNodeIterator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectChildren" uniqueID="SelectChildren(System.Xml.XPath.XPathNodeType):System.Xml.XPath.XPathNodeIterator">
				<signature>System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType):System.Xml.XPath.XPathNodeIterator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectDescendants" uniqueID="SelectDescendants(System.String;System.String;System.Boolean):System.Xml.XPath.XPathNodeIterator">
				<signature>System.Xml.XPath.XPathNavigator.SelectDescendants(System.String;System.String;System.Boolean):System.Xml.XPath.XPathNodeIterator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectDescendants" uniqueID="SelectDescendants(System.Xml.XPath.XPathNodeType;System.Boolean):System.Xml.XPath.XPathNodeIterator">
				<signature>System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType;System.Boolean):System.Xml.XPath.XPathNodeIterator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectSingleNode" uniqueID="SelectSingleNode(System.String):System.Xml.XPath.XPathNavigator">
				<signature>System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String):System.Xml.XPath.XPathNavigator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectSingleNode" uniqueID="SelectSingleNode(System.String;System.Xml.IXmlNamespaceResolver):System.Xml.XPath.XPathNavigator">
				<signature>System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String;System.Xml.IXmlNamespaceResolver):System.Xml.XPath.XPathNavigator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SelectSingleNode" uniqueID="SelectSingleNode(System.Xml.XPath.XPathExpression):System.Xml.XPath.XPathNavigator">
				<signature>System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression):System.Xml.XPath.XPathNavigator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetTypedValue" uniqueID="SetTypedValue(System.Object):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetValue" uniqueID="SetValue(System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.SetValue(System.String):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.ICloneable.Clone" uniqueID="System.ICloneable.Clone():System.Object">
				<signature>System.Xml.XPath.XPathNavigator.System.ICloneable.Clone():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Xml.XPath.XPathNavigator.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ValueAs" uniqueID="ValueAs(System.Type;System.Xml.IXmlNamespaceResolver):System.Object">
				<signature>System.Xml.XPath.XPathNavigator.ValueAs(System.Type;System.Xml.IXmlNamespaceResolver):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="WriteSubtree" uniqueID="WriteSubtree(System.Xml.XmlWriter):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="XPathNavigator" uniqueID="XPathNavigator():System.Void">
				<signature>System.Xml.XPath.XPathNavigator.XPathNavigator():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_BaseURI" uniqueID="get_BaseURI():System.String">
				<signature>System.Xml.XPath.XPathNavigator.get_BaseURI():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CanEdit" uniqueID="get_CanEdit():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.get_CanEdit():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasAttributes" uniqueID="get_HasAttributes():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.get_HasAttributes():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasChildren" uniqueID="get_HasChildren():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.get_HasChildren():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_IndexInParent" uniqueID="get_IndexInParent():System.UInt32">
				<signature>System.Xml.XPath.XPathNavigator.get_IndexInParent():System.UInt32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_InnerXml" uniqueID="get_InnerXml():System.String">
				<signature>System.Xml.XPath.XPathNavigator.get_InnerXml():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsEmptyElement" uniqueID="get_IsEmptyElement():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.get_IsEmptyElement():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNode" uniqueID="get_IsNode():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.get_IsNode():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LocalName" uniqueID="get_LocalName():System.String">
				<signature>System.Xml.XPath.XPathNavigator.get_LocalName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Xml.XPath.XPathNavigator.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NameTable" uniqueID="get_NameTable():System.Xml.XmlNameTable">
				<signature>System.Xml.XPath.XPathNavigator.get_NameTable():System.Xml.XmlNameTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NamespaceURI" uniqueID="get_NamespaceURI():System.String">
				<signature>System.Xml.XPath.XPathNavigator.get_NamespaceURI():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_NodeType" uniqueID="get_NodeType():System.Xml.XPath.XPathNodeType">
				<signature>System.Xml.XPath.XPathNavigator.get_NodeType():System.Xml.XPath.XPathNodeType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_OuterXml" uniqueID="get_OuterXml():System.String">
				<signature>System.Xml.XPath.XPathNavigator.get_OuterXml():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Prefix" uniqueID="get_Prefix():System.String">
				<signature>System.Xml.XPath.XPathNavigator.get_Prefix():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SchemaInfo" uniqueID="get_SchemaInfo():System.Xml.Schema.IXmlSchemaInfo">
				<signature>System.Xml.XPath.XPathNavigator.get_SchemaInfo():System.Xml.Schema.IXmlSchemaInfo</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_TypedValue" uniqueID="get_TypedValue():System.Object">
				<signature>System.Xml.XPath.XPathNavigator.get_TypedValue():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UnderlyingObject" uniqueID="get_UnderlyingObject():System.Object">
				<signature>System.Xml.XPath.XPathNavigator.get_UnderlyingObject():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_UniqueId" uniqueID="get_UniqueId():System.String">
				<signature>System.Xml.XPath.XPathNavigator.get_UniqueId():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueAsBoolean" uniqueID="get_ValueAsBoolean():System.Boolean">
				<signature>System.Xml.XPath.XPathNavigator.get_ValueAsBoolean():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueAsDateTime" uniqueID="get_ValueAsDateTime():System.DateTime">
				<signature>System.Xml.XPath.XPathNavigator.get_ValueAsDateTime():System.DateTime</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueAsDouble" uniqueID="get_ValueAsDouble():System.Double">
				<signature>System.Xml.XPath.XPathNavigator.get_ValueAsDouble():System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueAsInt" uniqueID="get_ValueAsInt():System.Int32">
				<signature>System.Xml.XPath.XPathNavigator.get_ValueAsInt():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueAsLong" uniqueID="get_ValueAsLong():System.Int64">
				<signature>System.Xml.XPath.XPathNavigator.get_ValueAsLong():System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ValueType" uniqueID="get_ValueType():System.Type">
				<signature>System.Xml.XPath.XPathNavigator.get_ValueType():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_XmlLang" uniqueID="get_XmlLang():System.String">
				<signature>System.Xml.XPath.XPathNavigator.get_XmlLang():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_XmlType" uniqueID="get_XmlType():System.Xml.Schema.XmlSchemaType">
				<signature>System.Xml.XPath.XPathNavigator.get_XmlType():System.Xml.Schema.XmlSchemaType</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_debuggerDisplayProxy" uniqueID="get_debuggerDisplayProxy():System.Object">
				<signature>System.Xml.XPath.XPathNavigator.get_debuggerDisplayProxy():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_InnerXml" uniqueID="set_InnerXml(System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.set_InnerXml(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_OuterXml" uniqueID="set_OuterXml(System.String):System.Void">
				<signature>System.Xml.XPath.XPathNavigator.set_OuterXml(System.String):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="Microsoft.SqlServer.Server">
		<class name="SmiEventSink" uniqueID="Microsoft.SqlServer.Server.SmiEventSink">
			<method accessibility="Protected" methodKind="Member" name="BatchCompleted" uniqueID="BatchCompleted():System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.BatchCompleted():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DefaultDatabaseChanged" uniqueID="DefaultDatabaseChanged(System.String):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.DefaultDatabaseChanged(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MessagePosted" uniqueID="MessagePosted(System.Int32;System.Byte;System.Byte;System.String;System.String;System.String;System.Int32):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.MessagePosted(System.Int32;System.Byte;System.Byte;System.String;System.String;System.String;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MetaDataAvailable" uniqueID="MetaDataAvailable(Microsoft.SqlServer.Server.SmiQueryMetaData[];System.Boolean):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.MetaDataAvailable(Microsoft.SqlServer.Server.SmiQueryMetaData[];System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ParameterAvailable" uniqueID="ParameterAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData;Microsoft.SqlServer.Server.SmiTypedGetterSetter;System.Int32):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.ParameterAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData;Microsoft.SqlServer.Server.SmiTypedGetterSetter;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ParametersAvailable" uniqueID="ParametersAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData[];Microsoft.SqlServer.Server.ITypedGettersV3):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.ParametersAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData[];Microsoft.SqlServer.Server.ITypedGettersV3):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RowAvailable" uniqueID="RowAvailable(Microsoft.SqlServer.Server.ITypedGetters):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.RowAvailable(Microsoft.SqlServer.Server.ITypedGetters):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RowAvailable" uniqueID="RowAvailable(Microsoft.SqlServer.Server.ITypedGettersV3):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.RowAvailable(Microsoft.SqlServer.Server.ITypedGettersV3):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RowAvailable" uniqueID="RowAvailable(Microsoft.SqlServer.Server.SmiTypedGetterSetter):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.RowAvailable(Microsoft.SqlServer.Server.SmiTypedGetterSetter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SmiEventSink" uniqueID="SmiEventSink():System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.SmiEventSink():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StatementCompleted" uniqueID="StatementCompleted(System.Int32):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.StatementCompleted(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionCommitted" uniqueID="TransactionCommitted(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.TransactionCommitted(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionDefected" uniqueID="TransactionDefected(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.TransactionDefected(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionEnded" uniqueID="TransactionEnded(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.TransactionEnded(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionEnlisted" uniqueID="TransactionEnlisted(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.TransactionEnlisted(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionRolledBack" uniqueID="TransactionRolledBack(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.TransactionRolledBack(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionStarted" uniqueID="TransactionStarted(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink.TransactionStarted(System.Int64):System.Void</signature>
			</method>
		</class>
		<class name="SmiEventSink_Default" uniqueID="Microsoft.SqlServer.Server.SmiEventSink_Default">
			<method accessibility="Protected" methodKind="Member" name="BatchCompleted" uniqueID="BatchCompleted():System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.BatchCompleted():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CleanMessages" uniqueID="CleanMessages():System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.CleanMessages():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DefaultDatabaseChanged" uniqueID="DefaultDatabaseChanged(System.String):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.DefaultDatabaseChanged(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DispatchMessages" uniqueID="DispatchMessages(System.Boolean):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.DispatchMessages(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MessagePosted" uniqueID="MessagePosted(System.Int32;System.Byte;System.Byte;System.String;System.String;System.String;System.Int32):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.MessagePosted(System.Int32;System.Byte;System.Byte;System.String;System.String;System.String;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MetaDataAvailable" uniqueID="MetaDataAvailable(Microsoft.SqlServer.Server.SmiQueryMetaData[];System.Boolean):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.MetaDataAvailable(Microsoft.SqlServer.Server.SmiQueryMetaData[];System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ParameterAvailable" uniqueID="ParameterAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData;Microsoft.SqlServer.Server.SmiTypedGetterSetter;System.Int32):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.ParameterAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData;Microsoft.SqlServer.Server.SmiTypedGetterSetter;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ParametersAvailable" uniqueID="ParametersAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData[];Microsoft.SqlServer.Server.ITypedGettersV3):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.ParametersAvailable(Microsoft.SqlServer.Server.SmiParameterMetaData[];Microsoft.SqlServer.Server.ITypedGettersV3):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ProcessMessages" uniqueID="ProcessMessages(System.Boolean;System.Boolean):System.Data.SqlClient.SqlException">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.ProcessMessages(System.Boolean;System.Boolean):System.Data.SqlClient.SqlException</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ProcessMessagesAndThrow" uniqueID="ProcessMessagesAndThrow():System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.ProcessMessagesAndThrow():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ProcessMessagesAndThrow" uniqueID="ProcessMessagesAndThrow(System.Boolean):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.ProcessMessagesAndThrow(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RowAvailable" uniqueID="RowAvailable(Microsoft.SqlServer.Server.ITypedGetters):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.RowAvailable(Microsoft.SqlServer.Server.ITypedGetters):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RowAvailable" uniqueID="RowAvailable(Microsoft.SqlServer.Server.ITypedGettersV3):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.RowAvailable(Microsoft.SqlServer.Server.ITypedGettersV3):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SmiEventSink_Default" uniqueID="SmiEventSink_Default():System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.SmiEventSink_Default():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SmiEventSink_Default" uniqueID="SmiEventSink_Default(Microsoft.SqlServer.Server.SmiEventSink):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.SmiEventSink_Default(Microsoft.SqlServer.Server.SmiEventSink):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="StatementCompleted" uniqueID="StatementCompleted(System.Int32):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.StatementCompleted(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionCommitted" uniqueID="TransactionCommitted(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.TransactionCommitted(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionDefected" uniqueID="TransactionDefected(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.TransactionDefected(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionEnded" uniqueID="TransactionEnded(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.TransactionEnded(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionEnlisted" uniqueID="TransactionEnlisted(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.TransactionEnlisted(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionRolledBack" uniqueID="TransactionRolledBack(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.TransactionRolledBack(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="TransactionStarted" uniqueID="TransactionStarted(System.Int64):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.TransactionStarted(System.Int64):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_Errors" uniqueID="get_Errors():System.Data.SqlClient.SqlErrorCollection">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.get_Errors():System.Data.SqlClient.SqlErrorCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasMessages" uniqueID="get_HasMessages():System.Boolean">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.get_HasMessages():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Parent" uniqueID="get_Parent():Microsoft.SqlServer.Server.SmiEventSink">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.get_Parent():Microsoft.SqlServer.Server.SmiEventSink</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ServerVersion" uniqueID="get_ServerVersion():System.String">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.get_ServerVersion():System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_Warnings" uniqueID="get_Warnings():System.Data.SqlClient.SqlErrorCollection">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.get_Warnings():System.Data.SqlClient.SqlErrorCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_Parent" uniqueID="set_Parent(Microsoft.SqlServer.Server.SmiEventSink):System.Void">
				<signature>Microsoft.SqlServer.Server.SmiEventSink_Default.set_Parent(Microsoft.SqlServer.Server.SmiEventSink):System.Void</signature>
			</method>
		</class>
		<class name="SqlProcedureAttribute" uniqueID="Microsoft.SqlServer.Server.SqlProcedureAttribute">
			<method accessibility="Public" methodKind="Member" name="SqlProcedureAttribute" uniqueID="SqlProcedureAttribute():System.Void">
				<signature>Microsoft.SqlServer.Server.SqlProcedureAttribute.SqlProcedureAttribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>Microsoft.SqlServer.Server.SqlProcedureAttribute.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>Microsoft.SqlServer.Server.SqlProcedureAttribute.set_Name(System.String):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Data.Common">
		<class name="DbCommand" uniqueID="System.Data.Common.DbCommand">
			<method accessibility="Public" methodKind="Member" name="Cancel" uniqueID="Cancel():System.Void">
				<signature>System.Data.Common.DbCommand.Cancel():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CancelIgnoreFailure" uniqueID="CancelIgnoreFailure():System.Void">
				<signature>System.Data.Common.DbCommand.CancelIgnoreFailure():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateDbParameter" uniqueID="CreateDbParameter():System.Data.Common.DbParameter">
				<signature>System.Data.Common.DbCommand.CreateDbParameter():System.Data.Common.DbParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateParameter" uniqueID="CreateParameter():System.Data.Common.DbParameter">
				<signature>System.Data.Common.DbCommand.CreateParameter():System.Data.Common.DbParameter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbCommand" uniqueID="DbCommand():System.Void">
				<signature>System.Data.Common.DbCommand.DbCommand():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteDbDataReader" uniqueID="ExecuteDbDataReader(System.Data.CommandBehavior):System.Data.Common.DbDataReader">
				<signature>System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExecuteDbDataReaderAsync" uniqueID="ExecuteDbDataReaderAsync(System.Data.CommandBehavior;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteNonQuery" uniqueID="ExecuteNonQuery():System.Int32">
				<signature>System.Data.Common.DbCommand.ExecuteNonQuery():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteNonQueryAsync" uniqueID="ExecuteNonQueryAsync():System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Data.Common.DbCommand.ExecuteNonQueryAsync():System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteNonQueryAsync" uniqueID="ExecuteNonQueryAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;">
				<signature>System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Int32&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReader" uniqueID="ExecuteReader():System.Data.Common.DbDataReader">
				<signature>System.Data.Common.DbCommand.ExecuteReader():System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReader" uniqueID="ExecuteReader(System.Data.CommandBehavior):System.Data.Common.DbDataReader">
				<signature>System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReaderAsync" uniqueID="ExecuteReaderAsync():System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Data.Common.DbCommand.ExecuteReaderAsync():System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReaderAsync" uniqueID="ExecuteReaderAsync(System.Data.CommandBehavior):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReaderAsync" uniqueID="ExecuteReaderAsync(System.Data.CommandBehavior;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteReaderAsync" uniqueID="ExecuteReaderAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;">
				<signature>System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteScalar" uniqueID="ExecuteScalar():System.Object">
				<signature>System.Data.Common.DbCommand.ExecuteScalar():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteScalarAsync" uniqueID="ExecuteScalarAsync():System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Data.Common.DbCommand.ExecuteScalarAsync():System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteScalarAsync" uniqueID="ExecuteScalarAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;">
				<signature>System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Object&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Prepare" uniqueID="Prepare():System.Void">
				<signature>System.Data.Common.DbCommand.Prepare():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbCommand.CreateParameter" uniqueID="System.Data.IDbCommand.CreateParameter():System.Data.IDbDataParameter">
				<signature>System.Data.Common.DbCommand.System.Data.IDbCommand.CreateParameter():System.Data.IDbDataParameter</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbCommand.ExecuteReader" uniqueID="System.Data.IDbCommand.ExecuteReader():System.Data.IDataReader">
				<signature>System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader():System.Data.IDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbCommand.ExecuteReader" uniqueID="System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior):System.Data.IDataReader">
				<signature>System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior):System.Data.IDataReader</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbCommand.get_Connection" uniqueID="System.Data.IDbCommand.get_Connection():System.Data.IDbConnection">
				<signature>System.Data.Common.DbCommand.System.Data.IDbCommand.get_Connection():System.Data.IDbConnection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbCommand.get_Parameters" uniqueID="System.Data.IDbCommand.get_Parameters():System.Data.IDataParameterCollection">
				<signature>System.Data.Common.DbCommand.System.Data.IDbCommand.get_Parameters():System.Data.IDataParameterCollection</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbCommand.get_Transaction" uniqueID="System.Data.IDbCommand.get_Transaction():System.Data.IDbTransaction">
				<signature>System.Data.Common.DbCommand.System.Data.IDbCommand.get_Transaction():System.Data.IDbTransaction</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbCommand.set_Connection" uniqueID="System.Data.IDbCommand.set_Connection(System.Data.IDbConnection):System.Void">
				<signature>System.Data.Common.DbCommand.System.Data.IDbCommand.set_Connection(System.Data.IDbConnection):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbCommand.set_Transaction" uniqueID="System.Data.IDbCommand.set_Transaction(System.Data.IDbTransaction):System.Void">
				<signature>System.Data.Common.DbCommand.System.Data.IDbCommand.set_Transaction(System.Data.IDbTransaction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CommandText" uniqueID="get_CommandText():System.String">
				<signature>System.Data.Common.DbCommand.get_CommandText():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CommandTimeout" uniqueID="get_CommandTimeout():System.Int32">
				<signature>System.Data.Common.DbCommand.get_CommandTimeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CommandType" uniqueID="get_CommandType():System.Data.CommandType">
				<signature>System.Data.Common.DbCommand.get_CommandType():System.Data.CommandType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Connection" uniqueID="get_Connection():System.Data.Common.DbConnection">
				<signature>System.Data.Common.DbCommand.get_Connection():System.Data.Common.DbConnection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DbConnection" uniqueID="get_DbConnection():System.Data.Common.DbConnection">
				<signature>System.Data.Common.DbCommand.get_DbConnection():System.Data.Common.DbConnection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DbParameterCollection" uniqueID="get_DbParameterCollection():System.Data.Common.DbParameterCollection">
				<signature>System.Data.Common.DbCommand.get_DbParameterCollection():System.Data.Common.DbParameterCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DbTransaction" uniqueID="get_DbTransaction():System.Data.Common.DbTransaction">
				<signature>System.Data.Common.DbCommand.get_DbTransaction():System.Data.Common.DbTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DesignTimeVisible" uniqueID="get_DesignTimeVisible():System.Boolean">
				<signature>System.Data.Common.DbCommand.get_DesignTimeVisible():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Parameters" uniqueID="get_Parameters():System.Data.Common.DbParameterCollection">
				<signature>System.Data.Common.DbCommand.get_Parameters():System.Data.Common.DbParameterCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Transaction" uniqueID="get_Transaction():System.Data.Common.DbTransaction">
				<signature>System.Data.Common.DbCommand.get_Transaction():System.Data.Common.DbTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_UpdatedRowSource" uniqueID="get_UpdatedRowSource():System.Data.UpdateRowSource">
				<signature>System.Data.Common.DbCommand.get_UpdatedRowSource():System.Data.UpdateRowSource</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CommandText" uniqueID="set_CommandText(System.String):System.Void">
				<signature>System.Data.Common.DbCommand.set_CommandText(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CommandTimeout" uniqueID="set_CommandTimeout(System.Int32):System.Void">
				<signature>System.Data.Common.DbCommand.set_CommandTimeout(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CommandType" uniqueID="set_CommandType(System.Data.CommandType):System.Void">
				<signature>System.Data.Common.DbCommand.set_CommandType(System.Data.CommandType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Connection" uniqueID="set_Connection(System.Data.Common.DbConnection):System.Void">
				<signature>System.Data.Common.DbCommand.set_Connection(System.Data.Common.DbConnection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DbConnection" uniqueID="set_DbConnection(System.Data.Common.DbConnection):System.Void">
				<signature>System.Data.Common.DbCommand.set_DbConnection(System.Data.Common.DbConnection):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DbTransaction" uniqueID="set_DbTransaction(System.Data.Common.DbTransaction):System.Void">
				<signature>System.Data.Common.DbCommand.set_DbTransaction(System.Data.Common.DbTransaction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DesignTimeVisible" uniqueID="set_DesignTimeVisible(System.Boolean):System.Void">
				<signature>System.Data.Common.DbCommand.set_DesignTimeVisible(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Transaction" uniqueID="set_Transaction(System.Data.Common.DbTransaction):System.Void">
				<signature>System.Data.Common.DbCommand.set_Transaction(System.Data.Common.DbTransaction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_UpdatedRowSource" uniqueID="set_UpdatedRowSource(System.Data.UpdateRowSource):System.Void">
				<signature>System.Data.Common.DbCommand.set_UpdatedRowSource(System.Data.UpdateRowSource):System.Void</signature>
			</method>
		</class>
		<class name="DbParameter" uniqueID="System.Data.Common.DbParameter">
			<method accessibility="Protected" methodKind="Member" name="DbParameter" uniqueID="DbParameter():System.Void">
				<signature>System.Data.Common.DbParameter.DbParameter():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetDbType" uniqueID="ResetDbType():System.Void">
				<signature>System.Data.Common.DbParameter.ResetDbType():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbDataParameter.get_Precision" uniqueID="System.Data.IDbDataParameter.get_Precision():System.Byte">
				<signature>System.Data.Common.DbParameter.System.Data.IDbDataParameter.get_Precision():System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbDataParameter.get_Scale" uniqueID="System.Data.IDbDataParameter.get_Scale():System.Byte">
				<signature>System.Data.Common.DbParameter.System.Data.IDbDataParameter.get_Scale():System.Byte</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbDataParameter.set_Precision" uniqueID="System.Data.IDbDataParameter.set_Precision(System.Byte):System.Void">
				<signature>System.Data.Common.DbParameter.System.Data.IDbDataParameter.set_Precision(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbDataParameter.set_Scale" uniqueID="System.Data.IDbDataParameter.set_Scale(System.Byte):System.Void">
				<signature>System.Data.Common.DbParameter.System.Data.IDbDataParameter.set_Scale(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DbType" uniqueID="get_DbType():System.Data.DbType">
				<signature>System.Data.Common.DbParameter.get_DbType():System.Data.DbType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Direction" uniqueID="get_Direction():System.Data.ParameterDirection">
				<signature>System.Data.Common.DbParameter.get_Direction():System.Data.ParameterDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsNullable" uniqueID="get_IsNullable():System.Boolean">
				<signature>System.Data.Common.DbParameter.get_IsNullable():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ParameterName" uniqueID="get_ParameterName():System.String">
				<signature>System.Data.Common.DbParameter.get_ParameterName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Precision" uniqueID="get_Precision():System.Byte">
				<signature>System.Data.Common.DbParameter.get_Precision():System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Scale" uniqueID="get_Scale():System.Byte">
				<signature>System.Data.Common.DbParameter.get_Scale():System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Size" uniqueID="get_Size():System.Int32">
				<signature>System.Data.Common.DbParameter.get_Size():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SourceColumn" uniqueID="get_SourceColumn():System.String">
				<signature>System.Data.Common.DbParameter.get_SourceColumn():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SourceColumnNullMapping" uniqueID="get_SourceColumnNullMapping():System.Boolean">
				<signature>System.Data.Common.DbParameter.get_SourceColumnNullMapping():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SourceVersion" uniqueID="get_SourceVersion():System.Data.DataRowVersion">
				<signature>System.Data.Common.DbParameter.get_SourceVersion():System.Data.DataRowVersion</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Value" uniqueID="get_Value():System.Object">
				<signature>System.Data.Common.DbParameter.get_Value():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_DbType" uniqueID="set_DbType(System.Data.DbType):System.Void">
				<signature>System.Data.Common.DbParameter.set_DbType(System.Data.DbType):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Direction" uniqueID="set_Direction(System.Data.ParameterDirection):System.Void">
				<signature>System.Data.Common.DbParameter.set_Direction(System.Data.ParameterDirection):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_IsNullable" uniqueID="set_IsNullable(System.Boolean):System.Void">
				<signature>System.Data.Common.DbParameter.set_IsNullable(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ParameterName" uniqueID="set_ParameterName(System.String):System.Void">
				<signature>System.Data.Common.DbParameter.set_ParameterName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Precision" uniqueID="set_Precision(System.Byte):System.Void">
				<signature>System.Data.Common.DbParameter.set_Precision(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Scale" uniqueID="set_Scale(System.Byte):System.Void">
				<signature>System.Data.Common.DbParameter.set_Scale(System.Byte):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Size" uniqueID="set_Size(System.Int32):System.Void">
				<signature>System.Data.Common.DbParameter.set_Size(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SourceColumn" uniqueID="set_SourceColumn(System.String):System.Void">
				<signature>System.Data.Common.DbParameter.set_SourceColumn(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SourceColumnNullMapping" uniqueID="set_SourceColumnNullMapping(System.Boolean):System.Void">
				<signature>System.Data.Common.DbParameter.set_SourceColumnNullMapping(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SourceVersion" uniqueID="set_SourceVersion(System.Data.DataRowVersion):System.Void">
				<signature>System.Data.Common.DbParameter.set_SourceVersion(System.Data.DataRowVersion):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Value" uniqueID="set_Value(System.Object):System.Void">
				<signature>System.Data.Common.DbParameter.set_Value(System.Object):System.Void</signature>
			</method>
		</class>
		<class name="DbConnection" uniqueID="System.Data.Common.DbConnection">
			<method accessibility="Protected" methodKind="Member" name="BeginDbTransaction" uniqueID="BeginDbTransaction(System.Data.IsolationLevel):System.Data.Common.DbTransaction">
				<signature>System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel):System.Data.Common.DbTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginTransaction" uniqueID="BeginTransaction():System.Data.Common.DbTransaction">
				<signature>System.Data.Common.DbConnection.BeginTransaction():System.Data.Common.DbTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BeginTransaction" uniqueID="BeginTransaction(System.Data.IsolationLevel):System.Data.Common.DbTransaction">
				<signature>System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel):System.Data.Common.DbTransaction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ChangeDatabase" uniqueID="ChangeDatabase(System.String):System.Void">
				<signature>System.Data.Common.DbConnection.ChangeDatabase(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Data.Common.DbConnection.Close():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreateCommand" uniqueID="CreateCommand():System.Data.Common.DbCommand">
				<signature>System.Data.Common.DbConnection.CreateCommand():System.Data.Common.DbCommand</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateDbCommand" uniqueID="CreateDbCommand():System.Data.Common.DbCommand">
				<signature>System.Data.Common.DbConnection.CreateDbCommand():System.Data.Common.DbCommand</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbConnection" uniqueID="DbConnection():System.Void">
				<signature>System.Data.Common.DbConnection.DbConnection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="EnlistTransaction" uniqueID="EnlistTransaction(System.Transactions.Transaction):System.Void">
				<signature>System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSchema" uniqueID="GetSchema():System.Data.DataTable">
				<signature>System.Data.Common.DbConnection.GetSchema():System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSchema" uniqueID="GetSchema(System.String):System.Data.DataTable">
				<signature>System.Data.Common.DbConnection.GetSchema(System.String):System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSchema" uniqueID="GetSchema(System.String;System.String[]):System.Data.DataTable">
				<signature>System.Data.Common.DbConnection.GetSchema(System.String;System.String[]):System.Data.DataTable</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnStateChange" uniqueID="OnStateChange(System.Data.StateChangeEventArgs):System.Void">
				<signature>System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Open" uniqueID="Open():System.Void">
				<signature>System.Data.Common.DbConnection.Open():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OpenAsync" uniqueID="OpenAsync():System.Threading.Tasks.Task">
				<signature>System.Data.Common.DbConnection.OpenAsync():System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="OpenAsync" uniqueID="OpenAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task">
				<signature>System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbConnection.BeginTransaction" uniqueID="System.Data.IDbConnection.BeginTransaction():System.Data.IDbTransaction">
				<signature>System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction():System.Data.IDbTransaction</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbConnection.BeginTransaction" uniqueID="System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel):System.Data.IDbTransaction">
				<signature>System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel):System.Data.IDbTransaction</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDbConnection.CreateCommand" uniqueID="System.Data.IDbConnection.CreateCommand():System.Data.IDbCommand">
				<signature>System.Data.Common.DbConnection.System.Data.IDbConnection.CreateCommand():System.Data.IDbCommand</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="add_StateChange" uniqueID="add_StateChange(System.Data.StateChangeEventHandler):System.Void">
				<signature>System.Data.Common.DbConnection.add_StateChange(System.Data.StateChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ConnectionString" uniqueID="get_ConnectionString():System.String">
				<signature>System.Data.Common.DbConnection.get_ConnectionString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ConnectionTimeout" uniqueID="get_ConnectionTimeout():System.Int32">
				<signature>System.Data.Common.DbConnection.get_ConnectionTimeout():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_DataSource" uniqueID="get_DataSource():System.String">
				<signature>System.Data.Common.DbConnection.get_DataSource():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Database" uniqueID="get_Database():System.String">
				<signature>System.Data.Common.DbConnection.get_Database():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DbProviderFactory" uniqueID="get_DbProviderFactory():System.Data.Common.DbProviderFactory">
				<signature>System.Data.Common.DbConnection.get_DbProviderFactory():System.Data.Common.DbProviderFactory</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ForceNewConnection" uniqueID="get_ForceNewConnection():System.Boolean">
				<signature>System.Data.Common.DbConnection.get_ForceNewConnection():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ProviderFactory" uniqueID="get_ProviderFactory():System.Data.Common.DbProviderFactory">
				<signature>System.Data.Common.DbConnection.get_ProviderFactory():System.Data.Common.DbProviderFactory</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ServerVersion" uniqueID="get_ServerVersion():System.String">
				<signature>System.Data.Common.DbConnection.get_ServerVersion():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_State" uniqueID="get_State():System.Data.ConnectionState">
				<signature>System.Data.Common.DbConnection.get_State():System.Data.ConnectionState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="remove_StateChange" uniqueID="remove_StateChange(System.Data.StateChangeEventHandler):System.Void">
				<signature>System.Data.Common.DbConnection.remove_StateChange(System.Data.StateChangeEventHandler):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ConnectionString" uniqueID="set_ConnectionString(System.String):System.Void">
				<signature>System.Data.Common.DbConnection.set_ConnectionString(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ForceNewConnection" uniqueID="set_ForceNewConnection(System.Boolean):System.Void">
				<signature>System.Data.Common.DbConnection.set_ForceNewConnection(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="DbConnectionOptions" uniqueID="System.Data.Common.DbConnectionOptions">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Data.Common.DbConnectionOptions.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="AppendKeyValuePairBuilder" uniqueID="AppendKeyValuePairBuilder(System.Text.StringBuilder;System.String;System.String;System.Boolean):System.Void">
				<signature>System.Data.Common.DbConnectionOptions.AppendKeyValuePairBuilder(System.Text.StringBuilder;System.String;System.String;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CompareInsensitiveInvariant" uniqueID="CompareInsensitiveInvariant(System.String;System.String):System.Boolean">
				<signature>System.Data.Common.DbConnectionOptions.CompareInsensitiveInvariant(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ConvertToInt32Internal" uniqueID="ConvertToInt32Internal(System.String;System.String):System.Int32">
				<signature>System.Data.Common.DbConnectionOptions.ConvertToInt32Internal(System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ConvertValueToBooleanInternal" uniqueID="ConvertValueToBooleanInternal(System.String;System.String):System.Boolean">
				<signature>System.Data.Common.DbConnectionOptions.ConvertValueToBooleanInternal(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ExpandDataDirectory" uniqueID="ExpandDataDirectory(System.String;System.String;System.String):System.String">
				<signature>System.Data.Common.DbConnectionOptions.ExpandDataDirectory(System.String;System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetKeyName" uniqueID="GetKeyName(System.Text.StringBuilder):System.String">
				<signature>System.Data.Common.DbConnectionOptions.GetKeyName(System.Text.StringBuilder):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="GetKeyValue" uniqueID="GetKeyValue(System.Text.StringBuilder;System.Boolean):System.String">
				<signature>System.Data.Common.DbConnectionOptions.GetKeyValue(System.Text.StringBuilder;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="GetKeyValuePair" uniqueID="GetKeyValuePair(System.String;System.Int32;System.Text.StringBuilder;System.Boolean;System.String;System.String):System.Int32">
				<signature>System.Data.Common.DbConnectionOptions.GetKeyValuePair(System.String;System.Int32;System.Text.StringBuilder;System.Boolean;System.String;System.String):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsKeyNameValid" uniqueID="IsKeyNameValid(System.String):System.Boolean">
				<signature>System.Data.Common.DbConnectionOptions.IsKeyNameValid(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IsValueValidInternal" uniqueID="IsValueValidInternal(System.String):System.Boolean">
				<signature>System.Data.Common.DbConnectionOptions.IsValueValidInternal(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ParseInternal" uniqueID="ParseInternal(System.Collections.Hashtable;System.String;System.Boolean;System.Collections.Hashtable;System.Boolean):System.Data.Common.NameValuePair">
				<signature>System.Data.Common.DbConnectionOptions.ParseInternal(System.Collections.Hashtable;System.String;System.Boolean;System.Collections.Hashtable;System.Boolean):System.Data.Common.NameValuePair</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ValidateKeyValuePair" uniqueID="ValidateKeyValuePair(System.String;System.String):System.Void">
				<signature>System.Data.Common.DbConnectionOptions.ValidateKeyValuePair(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ContainsKey" uniqueID="ContainsKey(System.String):System.Boolean">
				<signature>System.Data.Common.DbConnectionOptions.ContainsKey(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConvertValueToBoolean" uniqueID="ConvertValueToBoolean(System.String;System.Boolean):System.Boolean">
				<signature>System.Data.Common.DbConnectionOptions.ConvertValueToBoolean(System.String;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConvertValueToInt32" uniqueID="ConvertValueToInt32(System.String;System.Int32):System.Int32">
				<signature>System.Data.Common.DbConnectionOptions.ConvertValueToInt32(System.String;System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConvertValueToIntegratedSecurity" uniqueID="ConvertValueToIntegratedSecurity():System.Boolean">
				<signature>System.Data.Common.DbConnectionOptions.ConvertValueToIntegratedSecurity():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConvertValueToIntegratedSecurityInternal" uniqueID="ConvertValueToIntegratedSecurityInternal(System.String):System.Boolean">
				<signature>System.Data.Common.DbConnectionOptions.ConvertValueToIntegratedSecurityInternal(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConvertValueToString" uniqueID="ConvertValueToString(System.String;System.String):System.String">
				<signature>System.Data.Common.DbConnectionOptions.ConvertValueToString(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CreatePermissionSet" uniqueID="CreatePermissionSet():System.Security.PermissionSet">
				<signature>System.Data.Common.DbConnectionOptions.CreatePermissionSet():System.Security.PermissionSet</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbConnectionOptions" uniqueID="DbConnectionOptions(System.Data.Common.DbConnectionOptions):System.Void">
				<signature>System.Data.Common.DbConnectionOptions.DbConnectionOptions(System.Data.Common.DbConnectionOptions):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DbConnectionOptions" uniqueID="DbConnectionOptions(System.String):System.Void">
				<signature>System.Data.Common.DbConnectionOptions.DbConnectionOptions(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DbConnectionOptions" uniqueID="DbConnectionOptions(System.String;System.Collections.Hashtable;System.Boolean):System.Void">
				<signature>System.Data.Common.DbConnectionOptions.DbConnectionOptions(System.String;System.Collections.Hashtable;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DemandPermission" uniqueID="DemandPermission():System.Void">
				<signature>System.Data.Common.DbConnectionOptions.DemandPermission():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Expand" uniqueID="Expand():System.String">
				<signature>System.Data.Common.DbConnectionOptions.Expand():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExpandDataDirectories" uniqueID="ExpandDataDirectories(System.String;System.Int32):System.String">
				<signature>System.Data.Common.DbConnectionOptions.ExpandDataDirectories(System.String;System.Int32):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ExpandKeyword" uniqueID="ExpandKeyword(System.String;System.String):System.String">
				<signature>System.Data.Common.DbConnectionOptions.ExpandKeyword(System.String;System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReplacePasswordPwd" uniqueID="ReplacePasswordPwd(System.String;System.Boolean):System.Data.Common.NameValuePair">
				<signature>System.Data.Common.DbConnectionOptions.ReplacePasswordPwd(System.String;System.Boolean):System.Data.Common.NameValuePair</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UsersConnectionString" uniqueID="UsersConnectionString(System.Boolean):System.String">
				<signature>System.Data.Common.DbConnectionOptions.UsersConnectionString(System.Boolean):System.String</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="UsersConnectionString" uniqueID="UsersConnectionString(System.Boolean;System.Boolean):System.String">
				<signature>System.Data.Common.DbConnectionOptions.UsersConnectionString(System.Boolean;System.Boolean):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UsersConnectionStringForTrace" uniqueID="UsersConnectionStringForTrace():System.String">
				<signature>System.Data.Common.DbConnectionOptions.UsersConnectionStringForTrace():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasBlankPassword" uniqueID="get_HasBlankPassword():System.Boolean">
				<signature>System.Data.Common.DbConnectionOptions.get_HasBlankPassword():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasPersistablePassword" uniqueID="get_HasPersistablePassword():System.Boolean">
				<signature>System.Data.Common.DbConnectionOptions.get_HasPersistablePassword():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsEmpty" uniqueID="get_IsEmpty():System.Boolean">
				<signature>System.Data.Common.DbConnectionOptions.get_IsEmpty():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.String">
				<signature>System.Data.Common.DbConnectionOptions.get_Item(System.String):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Keys" uniqueID="get_Keys():System.Collections.ICollection">
				<signature>System.Data.Common.DbConnectionOptions.get_Keys():System.Collections.ICollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Parsetable" uniqueID="get_Parsetable():System.Collections.Hashtable">
				<signature>System.Data.Common.DbConnectionOptions.get_Parsetable():System.Collections.Hashtable</signature>
			</method>
		</class>
		<class name="DbParameterCollection" uniqueID="System.Data.Common.DbParameterCollection">
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Object):System.Int32">
				<signature>System.Data.Common.DbParameterCollection.Add(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="AddRange" uniqueID="AddRange(System.Array):System.Void">
				<signature>System.Data.Common.DbParameterCollection.AddRange(System.Array):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Data.Common.DbParameterCollection.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.Object):System.Boolean">
				<signature>System.Data.Common.DbParameterCollection.Contains(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Contains" uniqueID="Contains(System.String):System.Boolean">
				<signature>System.Data.Common.DbParameterCollection.Contains(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Data.Common.DbParameterCollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbParameterCollection" uniqueID="DbParameterCollection():System.Void">
				<signature>System.Data.Common.DbParameterCollection.DbParameterCollection():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Common.DbParameterCollection.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetParameter" uniqueID="GetParameter(System.Int32):System.Data.Common.DbParameter">
				<signature>System.Data.Common.DbParameterCollection.GetParameter(System.Int32):System.Data.Common.DbParameter</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetParameter" uniqueID="GetParameter(System.String):System.Data.Common.DbParameter">
				<signature>System.Data.Common.DbParameterCollection.GetParameter(System.String):System.Data.Common.DbParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Object):System.Int32">
				<signature>System.Data.Common.DbParameterCollection.IndexOf(System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.String):System.Int32">
				<signature>System.Data.Common.DbParameterCollection.IndexOf(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Insert" uniqueID="Insert(System.Int32;System.Object):System.Void">
				<signature>System.Data.Common.DbParameterCollection.Insert(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Object):System.Void">
				<signature>System.Data.Common.DbParameterCollection.Remove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Data.Common.DbParameterCollection.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.String):System.Void">
				<signature>System.Data.Common.DbParameterCollection.RemoveAt(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetParameter" uniqueID="SetParameter(System.Int32;System.Data.Common.DbParameter):System.Void">
				<signature>System.Data.Common.DbParameterCollection.SetParameter(System.Int32;System.Data.Common.DbParameter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetParameter" uniqueID="SetParameter(System.String;System.Data.Common.DbParameter):System.Void">
				<signature>System.Data.Common.DbParameterCollection.SetParameter(System.String;System.Data.Common.DbParameter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.get_Item" uniqueID="System.Collections.IList.get_Item(System.Int32):System.Object">
				<signature>System.Data.Common.DbParameterCollection.System.Collections.IList.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.IList.set_Item" uniqueID="System.Collections.IList.set_Item(System.Int32;System.Object):System.Void">
				<signature>System.Data.Common.DbParameterCollection.System.Collections.IList.set_Item(System.Int32;System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDataParameterCollection.get_Item" uniqueID="System.Data.IDataParameterCollection.get_Item(System.String):System.Object">
				<signature>System.Data.Common.DbParameterCollection.System.Data.IDataParameterCollection.get_Item(System.String):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDataParameterCollection.set_Item" uniqueID="System.Data.IDataParameterCollection.set_Item(System.String;System.Object):System.Void">
				<signature>System.Data.Common.DbParameterCollection.System.Data.IDataParameterCollection.set_Item(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Data.Common.DbParameterCollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsFixedSize" uniqueID="get_IsFixedSize():System.Boolean">
				<signature>System.Data.Common.DbParameterCollection.get_IsFixedSize():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsReadOnly" uniqueID="get_IsReadOnly():System.Boolean">
				<signature>System.Data.Common.DbParameterCollection.get_IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Data.Common.DbParameterCollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Data.Common.DbParameter">
				<signature>System.Data.Common.DbParameterCollection.get_Item(System.Int32):System.Data.Common.DbParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Data.Common.DbParameter">
				<signature>System.Data.Common.DbParameterCollection.get_Item(System.String):System.Data.Common.DbParameter</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Data.Common.DbParameterCollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Data.Common.DbParameter):System.Void">
				<signature>System.Data.Common.DbParameterCollection.set_Item(System.Int32;System.Data.Common.DbParameter):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Data.Common.DbParameter):System.Void">
				<signature>System.Data.Common.DbParameterCollection.set_Item(System.String;System.Data.Common.DbParameter):System.Void</signature>
			</method>
		</class>
		<class name="DbDataReader" uniqueID="System.Data.Common.DbDataReader">
			<method accessibility="Public" methodKind="Member" name="Close" uniqueID="Close():System.Void">
				<signature>System.Data.Common.DbDataReader.Close():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="DbDataReader" uniqueID="DbDataReader():System.Void">
				<signature>System.Data.Common.DbDataReader.DbDataReader():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Dispose" uniqueID="Dispose():System.Void">
				<signature>System.Data.Common.DbDataReader.Dispose():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dispose" uniqueID="Dispose(System.Boolean):System.Void">
				<signature>System.Data.Common.DbDataReader.Dispose(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBoolean" uniqueID="GetBoolean(System.Int32):System.Boolean">
				<signature>System.Data.Common.DbDataReader.GetBoolean(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetByte" uniqueID="GetByte(System.Int32):System.Byte">
				<signature>System.Data.Common.DbDataReader.GetByte(System.Int32):System.Byte</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetBytes" uniqueID="GetBytes(System.Int32;System.Int64;System.Byte[];System.Int32;System.Int32):System.Int64">
				<signature>System.Data.Common.DbDataReader.GetBytes(System.Int32;System.Int64;System.Byte[];System.Int32;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChar" uniqueID="GetChar(System.Int32):System.Char">
				<signature>System.Data.Common.DbDataReader.GetChar(System.Int32):System.Char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetChars" uniqueID="GetChars(System.Int32;System.Int64;System.Char[];System.Int32;System.Int32):System.Int64">
				<signature>System.Data.Common.DbDataReader.GetChars(System.Int32;System.Int64;System.Char[];System.Int32;System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetData" uniqueID="GetData(System.Int32):System.Data.Common.DbDataReader">
				<signature>System.Data.Common.DbDataReader.GetData(System.Int32):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDataTypeName" uniqueID="GetDataTypeName(System.Int32):System.String">
				<signature>System.Data.Common.DbDataReader.GetDataTypeName(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDateTime" uniqueID="GetDateTime(System.Int32):System.DateTime">
				<signature>System.Data.Common.DbDataReader.GetDateTime(System.Int32):System.DateTime</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetDbDataReader" uniqueID="GetDbDataReader(System.Int32):System.Data.Common.DbDataReader">
				<signature>System.Data.Common.DbDataReader.GetDbDataReader(System.Int32):System.Data.Common.DbDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDecimal" uniqueID="GetDecimal(System.Int32):System.Decimal">
				<signature>System.Data.Common.DbDataReader.GetDecimal(System.Int32):System.Decimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetDouble" uniqueID="GetDouble(System.Int32):System.Double">
				<signature>System.Data.Common.DbDataReader.GetDouble(System.Int32):System.Double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Data.Common.DbDataReader.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFieldType" uniqueID="GetFieldType(System.Int32):System.Type">
				<signature>System.Data.Common.DbDataReader.GetFieldType(System.Int32):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFloat" uniqueID="GetFloat(System.Int32):System.Single">
				<signature>System.Data.Common.DbDataReader.GetFloat(System.Int32):System.Single</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetGuid" uniqueID="GetGuid(System.Int32):System.Guid">
				<signature>System.Data.Common.DbDataReader.GetGuid(System.Int32):System.Guid</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInt16" uniqueID="GetInt16(System.Int32):System.Int16">
				<signature>System.Data.Common.DbDataReader.GetInt16(System.Int32):System.Int16</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInt32" uniqueID="GetInt32(System.Int32):System.Int32">
				<signature>System.Data.Common.DbDataReader.GetInt32(System.Int32):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInt64" uniqueID="GetInt64(System.Int32):System.Int64">
				<signature>System.Data.Common.DbDataReader.GetInt64(System.Int32):System.Int64</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetName" uniqueID="GetName(System.Int32):System.String">
				<signature>System.Data.Common.DbDataReader.GetName(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetOrdinal" uniqueID="GetOrdinal(System.String):System.Int32">
				<signature>System.Data.Common.DbDataReader.GetOrdinal(System.String):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProviderSpecificFieldType" uniqueID="GetProviderSpecificFieldType(System.Int32):System.Type">
				<signature>System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32):System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProviderSpecificValue" uniqueID="GetProviderSpecificValue(System.Int32):System.Object">
				<signature>System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetProviderSpecificValues" uniqueID="GetProviderSpecificValues(System.Object[]):System.Int32">
				<signature>System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetSchemaTable" uniqueID="GetSchemaTable():System.Data.DataTable">
				<signature>System.Data.Common.DbDataReader.GetSchemaTable():System.Data.DataTable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetStream" uniqueID="GetStream(System.Int32):System.IO.Stream">
				<signature>System.Data.Common.DbDataReader.GetStream(System.Int32):System.IO.Stream</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetString" uniqueID="GetString(System.Int32):System.String">
				<signature>System.Data.Common.DbDataReader.GetString(System.Int32):System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetTextReader" uniqueID="GetTextReader(System.Int32):System.IO.TextReader">
				<signature>System.Data.Common.DbDataReader.GetTextReader(System.Int32):System.IO.TextReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValue" uniqueID="GetValue(System.Int32):System.Object">
				<signature>System.Data.Common.DbDataReader.GetValue(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetValues" uniqueID="GetValues(System.Object[]):System.Int32">
				<signature>System.Data.Common.DbDataReader.GetValues(System.Object[]):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDBNull" uniqueID="IsDBNull(System.Int32):System.Boolean">
				<signature>System.Data.Common.DbDataReader.IsDBNull(System.Int32):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDBNullAsync" uniqueID="IsDBNullAsync(System.Int32):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsDBNullAsync" uniqueID="IsDBNullAsync(System.Int32;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32;System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NextResult" uniqueID="NextResult():System.Boolean">
				<signature>System.Data.Common.DbDataReader.NextResult():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NextResultAsync" uniqueID="NextResultAsync():System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Data.Common.DbDataReader.NextResultAsync():System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="NextResultAsync" uniqueID="NextResultAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Read" uniqueID="Read():System.Boolean">
				<signature>System.Data.Common.DbDataReader.Read():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadAsync" uniqueID="ReadAsync():System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Data.Common.DbDataReader.ReadAsync():System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ReadAsync" uniqueID="ReadAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;">
				<signature>System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken):System.Threading.Tasks.Task&lt;System.Boolean&gt;</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Data.IDataRecord.GetData" uniqueID="System.Data.IDataRecord.GetData(System.Int32):System.Data.IDataReader">
				<signature>System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(System.Int32):System.Data.IDataReader</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Depth" uniqueID="get_Depth():System.Int32">
				<signature>System.Data.Common.DbDataReader.get_Depth():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_FieldCount" uniqueID="get_FieldCount():System.Int32">
				<signature>System.Data.Common.DbDataReader.get_FieldCount():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasRows" uniqueID="get_HasRows():System.Boolean">
				<signature>System.Data.Common.DbDataReader.get_HasRows():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsClosed" uniqueID="get_IsClosed():System.Boolean">
				<signature>System.Data.Common.DbDataReader.get_IsClosed():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Object">
				<signature>System.Data.Common.DbDataReader.get_Item(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Object">
				<signature>System.Data.Common.DbDataReader.get_Item(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RecordsAffected" uniqueID="get_RecordsAffected():System.Int32">
				<signature>System.Data.Common.DbDataReader.get_RecordsAffected():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_VisibleFieldCount" uniqueID="get_VisibleFieldCount():System.Int32">
				<signature>System.Data.Common.DbDataReader.get_VisibleFieldCount():System.Int32</signature>
			</method>
		</class>
	</package>
	<package name="System.DirectoryServices.Interop">
		<class name="UnsafeNativeMethods" uniqueID="System.DirectoryServices.Interop.UnsafeNativeMethods">
			<method accessibility="Public" methodKind="Static" name="ADsOpenObject" uniqueID="ADsOpenObject(System.String;System.String;System.String;System.Int32;System.Guid;System.Object):System.Int32">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods.ADsOpenObject(System.String;System.String;System.String;System.Int32;System.Guid;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="IntADsOpenObject" uniqueID="IntADsOpenObject(System.String;System.String;System.String;System.Int32;System.Guid;System.Object):System.Int32">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods.IntADsOpenObject(System.String;System.String;System.String;System.Int32;System.Guid;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="UnsafeNativeMethods" uniqueID="UnsafeNativeMethods():System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods.UnsafeNativeMethods():System.Void</signature>
			</method>
		</class>
		<class name="UnsafeNativeMethods+IAds" uniqueID="System.DirectoryServices.Interop.UnsafeNativeMethods+IAds">
			<method accessibility="Public" methodKind="Member" name="Get" uniqueID="Get(System.String):System.Object">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.Get(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEx" uniqueID="GetEx(System.String;System.Object):System.Int32">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.GetEx(System.String;System.Object):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInfo" uniqueID="GetInfo():System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.GetInfo():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetInfoEx" uniqueID="GetInfoEx(System.Object;System.Int32):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.GetInfoEx(System.Object;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Put" uniqueID="Put(System.String;System.Object):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.Put(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="PutEx" uniqueID="PutEx(System.Int32;System.String;System.Object):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.PutEx(System.Int32;System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetInfo" uniqueID="SetInfo():System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.SetInfo():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ADsPath" uniqueID="get_ADsPath():System.String">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.get_ADsPath():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Class" uniqueID="get_Class():System.String">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.get_Class():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_GUID" uniqueID="get_GUID():System.String">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.get_GUID():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Parent" uniqueID="get_Parent():System.String">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.get_Parent():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Schema" uniqueID="get_Schema():System.String">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAds.get_Schema():System.String</signature>
			</method>
		</class>
		<class name="UnsafeNativeMethods+IAdsContainer" uniqueID="System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer">
			<method accessibility="Public" methodKind="Member" name="CopyHere" uniqueID="CopyHere(System.String;System.String):System.Object">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer.CopyHere(System.String;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Create" uniqueID="Create(System.String;System.String):System.Object">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer.Create(System.String;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Delete" uniqueID="Delete(System.String;System.String):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer.Delete(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetObject" uniqueID="GetObject(System.String;System.String):System.Object">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer.GetObject(System.String;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="MoveHere" uniqueID="MoveHere(System.String;System.String):System.Object">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer.MoveHere(System.String;System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Filter" uniqueID="get_Filter():System.Object">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer.get_Filter():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Hints" uniqueID="get_Hints():System.Object">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer.get_Hints():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get__NewEnum" uniqueID="get__NewEnum():System.Object">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer.get__NewEnum():System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Filter" uniqueID="set_Filter(System.Object):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer.set_Filter(System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Hints" uniqueID="set_Hints(System.Object):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IAdsContainer.set_Hints(System.Object):System.Void</signature>
			</method>
		</class>
		<class name="UnsafeNativeMethods+IDirectorySearch" uniqueID="System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch">
			<method accessibility="Public" methodKind="Member" name="AbandonSearch" uniqueID="AbandonSearch(System.IntPtr):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch.AbandonSearch(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CloseSearchHandle" uniqueID="CloseSearchHandle(System.IntPtr):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch.CloseSearchHandle(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ExecuteSearch" uniqueID="ExecuteSearch(System.String;System.String[];System.Int32;System.IntPtr):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch.ExecuteSearch(System.String;System.String[];System.Int32;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="FreeColumn" uniqueID="FreeColumn(System.IntPtr):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch.FreeColumn(System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetColumn" uniqueID="GetColumn(System.IntPtr;System.IntPtr;System.IntPtr):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch.GetColumn(System.IntPtr;System.IntPtr;System.IntPtr):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetFirstRow" uniqueID="GetFirstRow(System.IntPtr):System.Int32">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch.GetFirstRow(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNextColumnName" uniqueID="GetNextColumnName(System.IntPtr;System.IntPtr):System.Int32">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch.GetNextColumnName(System.IntPtr;System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetNextRow" uniqueID="GetNextRow(System.IntPtr):System.Int32">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch.GetNextRow(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetPreviousRow" uniqueID="GetPreviousRow(System.IntPtr):System.Int32">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch.GetPreviousRow(System.IntPtr):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetSearchPreference" uniqueID="SetSearchPreference(System.IntPtr;System.Int32):System.Void">
				<signature>System.DirectoryServices.Interop.UnsafeNativeMethods+IDirectorySearch.SetSearchPreference(System.IntPtr;System.Int32):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.ServiceModel">
		<class name="ServiceContractAttribute" uniqueID="System.ServiceModel.ServiceContractAttribute">
			<method accessibility="Public" methodKind="Member" name="ServiceContractAttribute" uniqueID="ServiceContractAttribute():System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.ServiceContractAttribute():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CallbackContract" uniqueID="get_CallbackContract():System.Type">
				<signature>System.ServiceModel.ServiceContractAttribute.get_CallbackContract():System.Type</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ConfigurationName" uniqueID="get_ConfigurationName():System.String">
				<signature>System.ServiceModel.ServiceContractAttribute.get_ConfigurationName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_HasProtectionLevel" uniqueID="get_HasProtectionLevel():System.Boolean">
				<signature>System.ServiceModel.ServiceContractAttribute.get_HasProtectionLevel():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.ServiceModel.ServiceContractAttribute.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Namespace" uniqueID="get_Namespace():System.String">
				<signature>System.ServiceModel.ServiceContractAttribute.get_Namespace():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ProtectionLevel" uniqueID="get_ProtectionLevel():System.Net.Security.ProtectionLevel">
				<signature>System.ServiceModel.ServiceContractAttribute.get_ProtectionLevel():System.Net.Security.ProtectionLevel</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SessionMode" uniqueID="get_SessionMode():System.ServiceModel.SessionMode">
				<signature>System.ServiceModel.ServiceContractAttribute.get_SessionMode():System.ServiceModel.SessionMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_CallbackContract" uniqueID="set_CallbackContract(System.Type):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_CallbackContract(System.Type):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ConfigurationName" uniqueID="set_ConfigurationName(System.String):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_ConfigurationName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_Name(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Namespace" uniqueID="set_Namespace(System.String):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_Namespace(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ProtectionLevel" uniqueID="set_ProtectionLevel(System.Net.Security.ProtectionLevel):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_ProtectionLevel(System.Net.Security.ProtectionLevel):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_SessionMode" uniqueID="set_SessionMode(System.ServiceModel.SessionMode):System.Void">
				<signature>System.ServiceModel.ServiceContractAttribute.set_SessionMode(System.ServiceModel.SessionMode):System.Void</signature>
			</method>
		</class>
	</package>
	<package name="System.Configuration">
		<class name="ConfigurationElement" uniqueID="System.Configuration.ConfigurationElement">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Configuration.ConfigurationElement.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ApplyInstanceAttributes" uniqueID="ApplyInstanceAttributes(System.Object):System.Void">
				<signature>System.Configuration.ConfigurationElement.ApplyInstanceAttributes(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ApplyValidator" uniqueID="ApplyValidator(System.Configuration.ConfigurationElement):System.Void">
				<signature>System.Configuration.ConfigurationElement.ApplyValidator(System.Configuration.ConfigurationElement):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="ApplyValidatorsRecursive" uniqueID="ApplyValidatorsRecursive(System.Configuration.ConfigurationElement):System.Void">
				<signature>System.Configuration.ConfigurationElement.ApplyValidatorsRecursive(System.Configuration.ConfigurationElement):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CachePerTypeValidator" uniqueID="CachePerTypeValidator(System.Type;System.Configuration.ConfigurationValidatorBase):System.Void">
				<signature>System.Configuration.ConfigurationElement.CachePerTypeValidator(System.Type;System.Configuration.ConfigurationValidatorBase):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreateConfigurationPropertyFromAttributes" uniqueID="CreateConfigurationPropertyFromAttributes(System.Reflection.PropertyInfo):System.Configuration.ConfigurationProperty">
				<signature>System.Configuration.ConfigurationElement.CreateConfigurationPropertyFromAttributes(System.Reflection.PropertyInfo):System.Configuration.ConfigurationProperty</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="CreatePropertyBagFromType" uniqueID="CreatePropertyBagFromType(System.Type):System.Configuration.ConfigurationPropertyCollection">
				<signature>System.Configuration.ConfigurationElement.CreatePropertyBagFromType(System.Type):System.Configuration.ConfigurationPropertyCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="IsLockAttributeName" uniqueID="IsLockAttributeName(System.String):System.Boolean">
				<signature>System.Configuration.ConfigurationElement.IsLockAttributeName(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="PropertiesFromType" uniqueID="PropertiesFromType(System.Type;System.Configuration.ConfigurationPropertyCollection):System.Boolean">
				<signature>System.Configuration.ConfigurationElement.PropertiesFromType(System.Type;System.Configuration.ConfigurationPropertyCollection):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="ValidateElement" uniqueID="ValidateElement(System.Configuration.ConfigurationElement;System.Configuration.ConfigurationValidatorBase;System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElement.ValidateElement(System.Configuration.ConfigurationElement;System.Configuration.ConfigurationValidatorBase;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="AssociateContext" uniqueID="AssociateContext(System.Configuration.BaseConfigurationRecord):System.Void">
				<signature>System.Configuration.ConfigurationElement.AssociateContext(System.Configuration.BaseConfigurationRecord):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CallInit" uniqueID="CallInit():System.Void">
				<signature>System.Configuration.ConfigurationElement.CallInit():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CheckLockedElement" uniqueID="CheckLockedElement(System.String;System.Xml.XmlReader):System.Void">
				<signature>System.Configuration.ConfigurationElement.CheckLockedElement(System.String;System.Xml.XmlReader):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConfigurationElement" uniqueID="ConfigurationElement():System.Void">
				<signature>System.Configuration.ConfigurationElement.ConfigurationElement():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateElement" uniqueID="CreateElement(System.Type):System.Configuration.ConfigurationElement">
				<signature>System.Configuration.ConfigurationElement.CreateElement(System.Type):System.Configuration.ConfigurationElement</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="DeserializeElement" uniqueID="DeserializeElement(System.Xml.XmlReader;System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="DeserializePropertyValue" uniqueID="DeserializePropertyValue(System.Configuration.ConfigurationProperty;System.Xml.XmlReader):System.Object">
				<signature>System.Configuration.ConfigurationElement.DeserializePropertyValue(System.Configuration.ConfigurationProperty;System.Xml.XmlReader):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="Dump" uniqueID="Dump(System.IO.TextWriter):System.Void">
				<signature>System.Configuration.ConfigurationElement.Dump(System.IO.TextWriter):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="EnsureRequiredProperties" uniqueID="EnsureRequiredProperties(System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElement.EnsureRequiredProperties(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Configuration.ConfigurationElement.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetErrors" uniqueID="GetErrors():System.Configuration.ConfigurationErrorsException">
				<signature>System.Configuration.ConfigurationElement.GetErrors():System.Configuration.ConfigurationErrorsException</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetErrorsList" uniqueID="GetErrorsList():System.Collections.ArrayList">
				<signature>System.Configuration.ConfigurationElement.GetErrorsList():System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Configuration.ConfigurationElement.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTransformedAssemblyString" uniqueID="GetTransformedAssemblyString(System.String):System.String">
				<signature>System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetTransformedTypeString" uniqueID="GetTransformedTypeString(System.String):System.String">
				<signature>System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="HandleLockedAttributes" uniqueID="HandleLockedAttributes(System.Configuration.ConfigurationElement):System.Void">
				<signature>System.Configuration.ConfigurationElement.HandleLockedAttributes(System.Configuration.ConfigurationElement):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Init" uniqueID="Init():System.Void">
				<signature>System.Configuration.ConfigurationElement.Init():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="InitializeDefault" uniqueID="InitializeDefault():System.Void">
				<signature>System.Configuration.ConfigurationElement.InitializeDefault():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="IntersectLockCollections" uniqueID="IntersectLockCollections(System.Configuration.ConfigurationLockCollection;System.Configuration.ConfigurationLockCollection):System.Collections.Specialized.StringCollection">
				<signature>System.Configuration.ConfigurationElement.IntersectLockCollections(System.Configuration.ConfigurationLockCollection;System.Configuration.ConfigurationLockCollection):System.Collections.Specialized.StringCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsModified" uniqueID="IsModified():System.Boolean">
				<signature>System.Configuration.ConfigurationElement.IsModified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsReadOnly" uniqueID="IsReadOnly():System.Boolean">
				<signature>System.Configuration.ConfigurationElement.IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ListErrors" uniqueID="ListErrors(System.Collections.IList):System.Void">
				<signature>System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="MergeLocks" uniqueID="MergeLocks(System.Configuration.ConfigurationElement):System.Void">
				<signature>System.Configuration.ConfigurationElement.MergeLocks(System.Configuration.ConfigurationElement):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDeserializeUnrecognizedAttribute" uniqueID="OnDeserializeUnrecognizedAttribute(System.String;System.String):System.Boolean">
				<signature>System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDeserializeUnrecognizedElement" uniqueID="OnDeserializeUnrecognizedElement(System.String;System.Xml.XmlReader):System.Boolean">
				<signature>System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String;System.Xml.XmlReader):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnRequiredPropertyNotFound" uniqueID="OnRequiredPropertyNotFound(System.String):System.Object">
				<signature>System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String):System.Object</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="ParseLockedAttributes" uniqueID="ParseLockedAttributes(System.Configuration.ConfigurationValue;System.Configuration.ConfigurationLockCollectionType):System.Configuration.ConfigurationLockCollection">
				<signature>System.Configuration.ConfigurationElement.ParseLockedAttributes(System.Configuration.ConfigurationValue;System.Configuration.ConfigurationLockCollectionType):System.Configuration.ConfigurationLockCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PostDeserialize" uniqueID="PostDeserialize():System.Void">
				<signature>System.Configuration.ConfigurationElement.PostDeserialize():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PreSerialize" uniqueID="PreSerialize(System.Xml.XmlWriter):System.Void">
				<signature>System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PropertyFileName" uniqueID="PropertyFileName(System.String):System.String">
				<signature>System.Configuration.ConfigurationElement.PropertyFileName(System.String):System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PropertyInfoInternal" uniqueID="PropertyInfoInternal(System.String):System.Configuration.PropertySourceInfo">
				<signature>System.Configuration.ConfigurationElement.PropertyInfoInternal(System.String):System.Configuration.PropertySourceInfo</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="PropertyLineNumber" uniqueID="PropertyLineNumber(System.String):System.Int32">
				<signature>System.Configuration.ConfigurationElement.PropertyLineNumber(System.String):System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RemoveAllInheritedLocks" uniqueID="RemoveAllInheritedLocks():System.Void">
				<signature>System.Configuration.ConfigurationElement.RemoveAllInheritedLocks():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ReportInvalidLock" uniqueID="ReportInvalidLock(System.String;System.Configuration.ConfigurationLockCollectionType;System.Configuration.ConfigurationValue;System.String):System.Void">
				<signature>System.Configuration.ConfigurationElement.ReportInvalidLock(System.String;System.Configuration.ConfigurationLockCollectionType;System.Configuration.ConfigurationValue;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reset" uniqueID="Reset(System.Configuration.ConfigurationElement):System.Void">
				<signature>System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ResetLockLists" uniqueID="ResetLockLists(System.Configuration.ConfigurationElement):System.Void">
				<signature>System.Configuration.ConfigurationElement.ResetLockLists(System.Configuration.ConfigurationElement):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetModified" uniqueID="ResetModified():System.Void">
				<signature>System.Configuration.ConfigurationElement.ResetModified():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SerializeElement" uniqueID="SerializeElement(System.Xml.XmlWriter;System.Boolean):System.Boolean">
				<signature>System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="SerializeLockList" uniqueID="SerializeLockList(System.Configuration.ConfigurationLockCollection;System.String;System.Xml.XmlWriter):System.Boolean">
				<signature>System.Configuration.ConfigurationElement.SerializeLockList(System.Configuration.ConfigurationLockCollection;System.String;System.Xml.XmlWriter):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SerializeToXmlElement" uniqueID="SerializeToXmlElement(System.Xml.XmlWriter;System.String):System.Boolean">
				<signature>System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter;System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetLocked" uniqueID="SetLocked():System.Void">
				<signature>System.Configuration.ConfigurationElement.SetLocked():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="SetPropertyValue" uniqueID="SetPropertyValue(System.Configuration.ConfigurationProperty;System.Object;System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty;System.Object;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetReadOnly" uniqueID="SetReadOnly():System.Void">
				<signature>System.Configuration.ConfigurationElement.SetReadOnly():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="UnMergeLockList" uniqueID="UnMergeLockList(System.Configuration.ConfigurationLockCollection;System.Configuration.ConfigurationLockCollection;System.Configuration.ConfigurationSaveMode):System.Configuration.ConfigurationLockCollection">
				<signature>System.Configuration.ConfigurationElement.UnMergeLockList(System.Configuration.ConfigurationLockCollection;System.Configuration.ConfigurationLockCollection;System.Configuration.ConfigurationSaveMode):System.Configuration.ConfigurationLockCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Unmerge" uniqueID="Unmerge(System.Configuration.ConfigurationElement;System.Configuration.ConfigurationElement;System.Configuration.ConfigurationSaveMode):System.Void">
				<signature>System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement;System.Configuration.ConfigurationElement;System.Configuration.ConfigurationSaveMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CurrentConfiguration" uniqueID="get_CurrentConfiguration():System.Configuration.Configuration">
				<signature>System.Configuration.ConfigurationElement.get_CurrentConfiguration():System.Configuration.Configuration</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_DataToWriteInternal" uniqueID="get_DataToWriteInternal():System.Boolean">
				<signature>System.Configuration.ConfigurationElement.get_DataToWriteInternal():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementInformation" uniqueID="get_ElementInformation():System.Configuration.ElementInformation">
				<signature>System.Configuration.ConfigurationElement.get_ElementInformation():System.Configuration.ElementInformation</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ElementPresent" uniqueID="get_ElementPresent():System.Boolean">
				<signature>System.Configuration.ConfigurationElement.get_ElementPresent():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ElementProperty" uniqueID="get_ElementProperty():System.Configuration.ConfigurationElementProperty">
				<signature>System.Configuration.ConfigurationElement.get_ElementProperty():System.Configuration.ConfigurationElementProperty</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ElementTagName" uniqueID="get_ElementTagName():System.String">
				<signature>System.Configuration.ConfigurationElement.get_ElementTagName():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_EvaluationContext" uniqueID="get_EvaluationContext():System.Configuration.ContextInformation">
				<signature>System.Configuration.ConfigurationElement.get_EvaluationContext():System.Configuration.ContextInformation</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_HasContext" uniqueID="get_HasContext():System.Boolean">
				<signature>System.Configuration.ConfigurationElement.get_HasContext():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Configuration.ConfigurationProperty):System.Object">
				<signature>System.Configuration.ConfigurationElement.get_Item(System.Configuration.ConfigurationProperty):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Object">
				<signature>System.Configuration.ConfigurationElement.get_Item(System.String):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ItemLocked" uniqueID="get_ItemLocked():System.Configuration.ConfigurationValueFlags">
				<signature>System.Configuration.ConfigurationElement.get_ItemLocked():System.Configuration.ConfigurationValueFlags</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LockAllAttributesExcept" uniqueID="get_LockAllAttributesExcept():System.Configuration.ConfigurationLockCollection">
				<signature>System.Configuration.ConfigurationElement.get_LockAllAttributesExcept():System.Configuration.ConfigurationLockCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LockAllElementsExcept" uniqueID="get_LockAllElementsExcept():System.Configuration.ConfigurationLockCollection">
				<signature>System.Configuration.ConfigurationElement.get_LockAllElementsExcept():System.Configuration.ConfigurationLockCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LockAttributes" uniqueID="get_LockAttributes():System.Configuration.ConfigurationLockCollection">
				<signature>System.Configuration.ConfigurationElement.get_LockAttributes():System.Configuration.ConfigurationLockCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LockElements" uniqueID="get_LockElements():System.Configuration.ConfigurationLockCollection">
				<signature>System.Configuration.ConfigurationElement.get_LockElements():System.Configuration.ConfigurationLockCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_LockItem" uniqueID="get_LockItem():System.Boolean">
				<signature>System.Configuration.ConfigurationElement.get_LockItem():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LockedAllExceptAttributesList" uniqueID="get_LockedAllExceptAttributesList():System.Configuration.ConfigurationLockCollection">
				<signature>System.Configuration.ConfigurationElement.get_LockedAllExceptAttributesList():System.Configuration.ConfigurationLockCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LockedAttributesList" uniqueID="get_LockedAttributesList():System.Configuration.ConfigurationLockCollection">
				<signature>System.Configuration.ConfigurationElement.get_LockedAttributesList():System.Configuration.ConfigurationLockCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Properties" uniqueID="get_Properties():System.Configuration.ConfigurationPropertyCollection">
				<signature>System.Configuration.ConfigurationElement.get_Properties():System.Configuration.ConfigurationPropertyCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Values" uniqueID="get_Values():System.Configuration.ConfigurationValues">
				<signature>System.Configuration.ConfigurationElement.get_Values():System.Configuration.ConfigurationValues</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_DataToWriteInternal" uniqueID="set_DataToWriteInternal(System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElement.set_DataToWriteInternal(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="set_ElementPresent" uniqueID="set_ElementPresent(System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElement.set_ElementPresent(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Configuration.ConfigurationProperty;System.Object):System.Void">
				<signature>System.Configuration.ConfigurationElement.set_Item(System.Configuration.ConfigurationProperty;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.String;System.Object):System.Void">
				<signature>System.Configuration.ConfigurationElement.set_Item(System.String;System.Object):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_LockItem" uniqueID="set_LockItem(System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElement.set_LockItem(System.Boolean):System.Void</signature>
			</method>
		</class>
		<class name="ConfigurationManager" uniqueID="System.Configuration.ConfigurationManager">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Configuration.ConfigurationManager.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="CompleteConfigInit" uniqueID="CompleteConfigInit():System.Void">
				<signature>System.Configuration.ConfigurationManager.CompleteConfigInit():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="EnsureConfigurationSystem" uniqueID="EnsureConfigurationSystem():System.Void">
				<signature>System.Configuration.ConfigurationManager.EnsureConfigurationSystem():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="GetSection" uniqueID="GetSection(System.String):System.Object">
				<signature>System.Configuration.ConfigurationManager.GetSection(System.String):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenExeConfiguration" uniqueID="OpenExeConfiguration(System.Configuration.ConfigurationUserLevel):System.Configuration.Configuration">
				<signature>System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel):System.Configuration.Configuration</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenExeConfiguration" uniqueID="OpenExeConfiguration(System.String):System.Configuration.Configuration">
				<signature>System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String):System.Configuration.Configuration</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="OpenExeConfigurationImpl" uniqueID="OpenExeConfigurationImpl(System.Configuration.ConfigurationFileMap;System.Boolean;System.Configuration.ConfigurationUserLevel;System.String;System.Boolean):System.Configuration.Configuration">
				<signature>System.Configuration.ConfigurationManager.OpenExeConfigurationImpl(System.Configuration.ConfigurationFileMap;System.Boolean;System.Configuration.ConfigurationUserLevel;System.String;System.Boolean):System.Configuration.Configuration</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenMachineConfiguration" uniqueID="OpenMachineConfiguration():System.Configuration.Configuration">
				<signature>System.Configuration.ConfigurationManager.OpenMachineConfiguration():System.Configuration.Configuration</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenMappedExeConfiguration" uniqueID="OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap;System.Configuration.ConfigurationUserLevel):System.Configuration.Configuration">
				<signature>System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap;System.Configuration.ConfigurationUserLevel):System.Configuration.Configuration</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenMappedExeConfiguration" uniqueID="OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap;System.Configuration.ConfigurationUserLevel;System.Boolean):System.Configuration.Configuration">
				<signature>System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap;System.Configuration.ConfigurationUserLevel;System.Boolean):System.Configuration.Configuration</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="OpenMappedMachineConfiguration" uniqueID="OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap):System.Configuration.Configuration">
				<signature>System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap):System.Configuration.Configuration</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="PreloadConfiguration" uniqueID="PreloadConfiguration(System.Configuration.Configuration):System.Void">
				<signature>System.Configuration.ConfigurationManager.PreloadConfiguration(System.Configuration.Configuration):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="PreloadConfigurationSectionGroup" uniqueID="PreloadConfigurationSectionGroup(System.Configuration.ConfigurationSectionGroup):System.Void">
				<signature>System.Configuration.ConfigurationManager.PreloadConfigurationSectionGroup(System.Configuration.ConfigurationSectionGroup):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Static" name="PrepareConfigSystem" uniqueID="PrepareConfigSystem():System.Void">
				<signature>System.Configuration.ConfigurationManager.PrepareConfigSystem():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="RefreshSection" uniqueID="RefreshSection(System.String):System.Void">
				<signature>System.Configuration.ConfigurationManager.RefreshSection(System.String):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetConfigurationSystem" uniqueID="SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem;System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationManager.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="SetInitError" uniqueID="SetInitError(System.Exception):System.Void">
				<signature>System.Configuration.ConfigurationManager.SetInitError(System.Exception):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_AppSettings" uniqueID="get_AppSettings():System.Collections.Specialized.NameValueCollection">
				<signature>System.Configuration.ConfigurationManager.get_AppSettings():System.Collections.Specialized.NameValueCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Static" name="get_ConnectionStrings" uniqueID="get_ConnectionStrings():System.Configuration.ConnectionStringSettingsCollection">
				<signature>System.Configuration.ConfigurationManager.get_ConnectionStrings():System.Configuration.ConnectionStringSettingsCollection</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_SetConfigurationSystemInProgress" uniqueID="get_SetConfigurationSystemInProgress():System.Boolean">
				<signature>System.Configuration.ConfigurationManager.get_SetConfigurationSystemInProgress():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Static" name="get_SupportsUserConfig" uniqueID="get_SupportsUserConfig():System.Boolean">
				<signature>System.Configuration.ConfigurationManager.get_SupportsUserConfig():System.Boolean</signature>
			</method>
		</class>
		<class name="ConnectionStringSettings" uniqueID="System.Configuration.ConnectionStringSettings">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Configuration.ConnectionStringSettings.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConnectionStringSettings" uniqueID="ConnectionStringSettings():System.Void">
				<signature>System.Configuration.ConnectionStringSettings.ConnectionStringSettings():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConnectionStringSettings" uniqueID="ConnectionStringSettings(System.String;System.String):System.Void">
				<signature>System.Configuration.ConnectionStringSettings.ConnectionStringSettings(System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConnectionStringSettings" uniqueID="ConnectionStringSettings(System.String;System.String;System.String):System.Void">
				<signature>System.Configuration.ConnectionStringSettings.ConnectionStringSettings(System.String;System.String;System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ToString" uniqueID="ToString():System.String">
				<signature>System.Configuration.ConnectionStringSettings.ToString():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ConnectionString" uniqueID="get_ConnectionString():System.String">
				<signature>System.Configuration.ConnectionStringSettings.get_ConnectionString():System.String</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_Key" uniqueID="get_Key():System.String">
				<signature>System.Configuration.ConnectionStringSettings.get_Key():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Name" uniqueID="get_Name():System.String">
				<signature>System.Configuration.ConnectionStringSettings.get_Name():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Properties" uniqueID="get_Properties():System.Configuration.ConfigurationPropertyCollection">
				<signature>System.Configuration.ConnectionStringSettings.get_Properties():System.Configuration.ConfigurationPropertyCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ProviderName" uniqueID="get_ProviderName():System.String">
				<signature>System.Configuration.ConnectionStringSettings.get_ProviderName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ConnectionString" uniqueID="set_ConnectionString(System.String):System.Void">
				<signature>System.Configuration.ConnectionStringSettings.set_ConnectionString(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Name" uniqueID="set_Name(System.String):System.Void">
				<signature>System.Configuration.ConnectionStringSettings.set_Name(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ProviderName" uniqueID="set_ProviderName(System.String):System.Void">
				<signature>System.Configuration.ConnectionStringSettings.set_ProviderName(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ConfigurationElementCollection" uniqueID="System.Configuration.ConfigurationElementCollection">
			<method accessibility="Protected" methodKind="Member" name="AssociateContext" uniqueID="AssociateContext(System.Configuration.BaseConfigurationRecord):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.AssociateContext(System.Configuration.BaseConfigurationRecord):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseAdd" uniqueID="BaseAdd(System.Configuration.ConfigurationElement):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BaseAdd" uniqueID="BaseAdd(System.Configuration.ConfigurationElement;System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BaseAdd" uniqueID="BaseAdd(System.Configuration.ConfigurationElement;System.Boolean;System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseAdd" uniqueID="BaseAdd(System.Int32;System.Configuration.ConfigurationElement):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32;System.Configuration.ConfigurationElement):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BaseAdd" uniqueID="BaseAdd(System.Int32;System.Configuration.ConfigurationElement;System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32;System.Configuration.ConfigurationElement;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BaseAddInternal" uniqueID="BaseAddInternal(System.Int32;System.Configuration.ConfigurationElement;System.Boolean;System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.BaseAddInternal(System.Int32;System.Configuration.ConfigurationElement;System.Boolean;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BaseClear" uniqueID="BaseClear():System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.BaseClear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BaseGet" uniqueID="BaseGet(System.Int32):System.Configuration.ConfigurationElement">
				<signature>System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32):System.Configuration.ConfigurationElement</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BaseGet" uniqueID="BaseGet(System.Object):System.Configuration.ConfigurationElement">
				<signature>System.Configuration.ConfigurationElementCollection.BaseGet(System.Object):System.Configuration.ConfigurationElement</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BaseGetAllKeys" uniqueID="BaseGetAllKeys():System.Object[]">
				<signature>System.Configuration.ConfigurationElementCollection.BaseGetAllKeys():System.Object[]</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BaseGetKey" uniqueID="BaseGetKey(System.Int32):System.Object">
				<signature>System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseIndexOf" uniqueID="BaseIndexOf(System.Configuration.ConfigurationElement):System.Int32">
				<signature>System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BaseIsRemoved" uniqueID="BaseIsRemoved(System.Object):System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BaseRemove" uniqueID="BaseRemove(System.Object):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="BaseRemove" uniqueID="BaseRemove(System.Object;System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object;System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="BaseRemoveAt" uniqueID="BaseRemoveAt(System.Int32):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CallCreateNewElement" uniqueID="CallCreateNewElement():System.Configuration.ConfigurationElement">
				<signature>System.Configuration.ConfigurationElementCollection.CallCreateNewElement():System.Configuration.ConfigurationElement</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CallCreateNewElement" uniqueID="CallCreateNewElement(System.String):System.Configuration.ConfigurationElement">
				<signature>System.Configuration.ConfigurationElementCollection.CallCreateNewElement(System.String):System.Configuration.ConfigurationElement</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="CompareKeys" uniqueID="CompareKeys(System.Object;System.Object):System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.CompareKeys(System.Object;System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConfigurationElementCollection" uniqueID="ConfigurationElementCollection():System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="ConfigurationElementCollection" uniqueID="ConfigurationElementCollection(System.Collections.IComparer):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection(System.Collections.IComparer):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="CopyTo" uniqueID="CopyTo(System.Configuration.ConfigurationElement[];System.Int32):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[];System.Int32):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateNewElement" uniqueID="CreateNewElement():System.Configuration.ConfigurationElement">
				<signature>System.Configuration.ConfigurationElementCollection.CreateNewElement():System.Configuration.ConfigurationElement</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateNewElement" uniqueID="CreateNewElement(System.String):System.Configuration.ConfigurationElement">
				<signature>System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String):System.Configuration.ConfigurationElement</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Equals" uniqueID="Equals(System.Object):System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.Equals(System.Object):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetElementKey" uniqueID="GetElementKey(System.Configuration.ConfigurationElement):System.Object">
				<signature>System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetElementKeyInternal" uniqueID="GetElementKeyInternal(System.Configuration.ConfigurationElement):System.Object">
				<signature>System.Configuration.ConfigurationElementCollection.GetElementKeyInternal(System.Configuration.ConfigurationElement):System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetElementsEnumerator" uniqueID="GetElementsEnumerator():System.Collections.IEnumerator">
				<signature>System.Configuration.ConfigurationElementCollection.GetElementsEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetEnumerator" uniqueID="GetEnumerator():System.Collections.IEnumerator">
				<signature>System.Configuration.ConfigurationElementCollection.GetEnumerator():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetEnumeratorImpl" uniqueID="GetEnumeratorImpl():System.Collections.IEnumerator">
				<signature>System.Configuration.ConfigurationElementCollection.GetEnumeratorImpl():System.Collections.IEnumerator</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="GetHashCode" uniqueID="GetHashCode():System.Int32">
				<signature>System.Configuration.ConfigurationElementCollection.GetHashCode():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsElementName" uniqueID="IsElementName(System.String):System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.IsElementName(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsElementRemovable" uniqueID="IsElementRemovable(System.Configuration.ConfigurationElement):System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="IsLockableElement" uniqueID="IsLockableElement(System.String):System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.IsLockableElement(System.String):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsModified" uniqueID="IsModified():System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.IsModified():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IsReadOnly" uniqueID="IsReadOnly():System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.IsReadOnly():System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="OnDeserializeUnrecognizedElement" uniqueID="OnDeserializeUnrecognizedElement(System.String;System.Xml.XmlReader):System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String;System.Xml.XmlReader):System.Boolean</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="RealIndexOf" uniqueID="RealIndexOf(System.Configuration.ConfigurationElement):System.Int32">
				<signature>System.Configuration.ConfigurationElementCollection.RealIndexOf(System.Configuration.ConfigurationElement):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Reset" uniqueID="Reset(System.Configuration.ConfigurationElement):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ResetModified" uniqueID="ResetModified():System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.ResetModified():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SerializeElement" uniqueID="SerializeElement(System.Xml.XmlWriter;System.Boolean):System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter;System.Boolean):System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="SetReadOnly" uniqueID="SetReadOnly():System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.SetReadOnly():System.Void</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="System.Collections.ICollection.CopyTo" uniqueID="System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.System.Collections.ICollection.CopyTo(System.Array;System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Unmerge" uniqueID="Unmerge(System.Configuration.ConfigurationElement;System.Configuration.ConfigurationElement;System.Configuration.ConfigurationSaveMode):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement;System.Configuration.ConfigurationElement;System.Configuration.ConfigurationSaveMode):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_AddElementName" uniqueID="get_AddElementName():System.String">
				<signature>System.Configuration.ConfigurationElementCollection.get_AddElementName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_ClearElementName" uniqueID="get_ClearElementName():System.String">
				<signature>System.Configuration.ConfigurationElementCollection.get_ClearElementName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_CollectionType" uniqueID="get_CollectionType():System.Configuration.ConfigurationElementCollectionType">
				<signature>System.Configuration.ConfigurationElementCollection.get_CollectionType():System.Configuration.ConfigurationElementCollectionType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Count" uniqueID="get_Count():System.Int32">
				<signature>System.Configuration.ConfigurationElementCollection.get_Count():System.Int32</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ElementName" uniqueID="get_ElementName():System.String">
				<signature>System.Configuration.ConfigurationElementCollection.get_ElementName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_EmitClear" uniqueID="get_EmitClear():System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.get_EmitClear():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_IsSynchronized" uniqueID="get_IsSynchronized():System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.get_IsSynchronized():System.Boolean</signature>
			</method>
			<method accessibility="Private" methodKind="Member" name="get_Items" uniqueID="get_Items():System.Collections.ArrayList">
				<signature>System.Configuration.ConfigurationElementCollection.get_Items():System.Collections.ArrayList</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_LockableElements" uniqueID="get_LockableElements():System.String">
				<signature>System.Configuration.ConfigurationElementCollection.get_LockableElements():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_RemoveElementName" uniqueID="get_RemoveElementName():System.String">
				<signature>System.Configuration.ConfigurationElementCollection.get_RemoveElementName():System.String</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_SyncRoot" uniqueID="get_SyncRoot():System.Object">
				<signature>System.Configuration.ConfigurationElementCollection.get_SyncRoot():System.Object</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="get_ThrowOnDuplicate" uniqueID="get_ThrowOnDuplicate():System.Boolean">
				<signature>System.Configuration.ConfigurationElementCollection.get_ThrowOnDuplicate():System.Boolean</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_AddElementName" uniqueID="set_AddElementName(System.String):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.set_AddElementName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_ClearElementName" uniqueID="set_ClearElementName(System.String):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.set_ClearElementName(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_EmitClear" uniqueID="set_EmitClear(System.Boolean):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.set_EmitClear(System.Boolean):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_RemoveElementName" uniqueID="set_RemoveElementName(System.String):System.Void">
				<signature>System.Configuration.ConfigurationElementCollection.set_RemoveElementName(System.String):System.Void</signature>
			</method>
		</class>
		<class name="ConnectionStringSettingsCollection" uniqueID="System.Configuration.ConnectionStringSettingsCollection">
			<method accessibility="Private" methodKind="Static" name="&lt;cctor&gt;" uniqueID="&lt;cctor&gt;():System.Void">
				<signature>System.Configuration.ConnectionStringSettingsCollection.&lt;cctor&gt;():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Add" uniqueID="Add(System.Configuration.ConnectionStringSettings):System.Void">
				<signature>System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings):System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="BaseAdd" uniqueID="BaseAdd(System.Int32;System.Configuration.ConfigurationElement):System.Void">
				<signature>System.Configuration.ConnectionStringSettingsCollection.BaseAdd(System.Int32;System.Configuration.ConfigurationElement):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Clear" uniqueID="Clear():System.Void">
				<signature>System.Configuration.ConnectionStringSettingsCollection.Clear():System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="ConnectionStringSettingsCollection" uniqueID="ConnectionStringSettingsCollection():System.Void">
				<signature>System.Configuration.ConnectionStringSettingsCollection.ConnectionStringSettingsCollection():System.Void</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="CreateNewElement" uniqueID="CreateNewElement():System.Configuration.ConfigurationElement">
				<signature>System.Configuration.ConnectionStringSettingsCollection.CreateNewElement():System.Configuration.ConfigurationElement</signature>
			</method>
			<method accessibility="Protected" methodKind="Member" name="GetElementKey" uniqueID="GetElementKey(System.Configuration.ConfigurationElement):System.Object">
				<signature>System.Configuration.ConnectionStringSettingsCollection.GetElementKey(System.Configuration.ConfigurationElement):System.Object</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="IndexOf" uniqueID="IndexOf(System.Configuration.ConnectionStringSettings):System.Int32">
				<signature>System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings):System.Int32</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.Configuration.ConnectionStringSettings):System.Void">
				<signature>System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="Remove" uniqueID="Remove(System.String):System.Void">
				<signature>System.Configuration.ConnectionStringSettingsCollection.Remove(System.String):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="RemoveAt" uniqueID="RemoveAt(System.Int32):System.Void">
				<signature>System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32):System.Void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.Int32):System.Configuration.ConnectionStringSettings">
				<signature>System.Configuration.ConnectionStringSettingsCollection.get_Item(System.Int32):System.Configuration.ConnectionStringSettings</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Item" uniqueID="get_Item(System.String):System.Configuration.ConnectionStringSettings">
				<signature>System.Configuration.ConnectionStringSettingsCollection.get_Item(System.String):System.Configuration.ConnectionStringSettings</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="get_Properties" uniqueID="get_Properties():System.Configuration.ConfigurationPropertyCollection">
				<signature>System.Configuration.ConnectionStringSettingsCollection.get_Properties():System.Configuration.ConfigurationPropertyCollection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="set_Item" uniqueID="set_Item(System.Int32;System.Configuration.ConnectionStringSettings):System.Void">
				<signature>System.Configuration.ConnectionStringSettingsCollection.set_Item(System.Int32;System.Configuration.ConnectionStringSettings):System.Void</signature>
			</method>
		</class>
	</package>
</api_info>
